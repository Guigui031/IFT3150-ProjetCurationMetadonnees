	key	project	title	abstract	keywords	authors	venue	doi	references	pages	bibtex	screened_decision	final_decision	mode	inclusion_criteria	exclusion_criteria	reviewer_count	source	year	meta_title	link	publisher	metadata_missing
0		ModelGuidance	Infrastructure-as-Code for Data-Intensive Architectures: A Model-Driven Development Approach	As part of the DevOps tactics, Infrastructure-as-Code (IaC) provides the ability to create, configure, and manage complex infrastructures by means of executable code. Writing IaC, however, is not an easy task, since it requires blending different infrastructure programming languages and abstractions, each specialized on a particular aspect of infrastructure creation, configuration, and management. Moreover, the more the architectures become large and complex (e.g. Data-Intensive or Microservice-based architectures), the more dire the need of IaC becomes. The goal of this paper is to exploit Model-Driven Engineering (MDE) to create language-agnostic models that are then automatically transformed into IaC. We focus on the domain of Data-Intensive Applications as these typically exploit complex infrastructures which demand sophisticated and fine-grained configuration and re-configuration - we show that, through our approach, called DICER, it is possible to create complex IaC with significant amounts of time savings, both in IaC design as well as deployment and re-deployment times. © 2018 IEEE.		Artac, M.; Borovsak, T.; Di Nitto, E.; Guerriero, M.; Perez-Palacin, D.; Tamburri, D. A.	Proceedings - 2018 IEEE 15th International Conference on Software Architecture, ICSA 2018					ConflictExcluded	Excluded	new_screen			2		2018				
1		ModelGuidance	Context modeling with situation rules for industrial maintenance	Industrial maintenance requires not only experienced service personnel to carry out the tasks but also up-to-date information about the target equipment and its environment. Accessing information required to execute the tasks is a common challenge for maintenance personnel. This paper presents a knowledge modeling approach and a technical architecture of a gateway system developed to support maintenance personnel with information combined from legacy data sources as well as from context ontology augmented with situational knowledge. The novelty of the approach is its unified object oriented style of knowledge representation encapsulating predefined queries and rules into ontology classes. The approach utilizes standard Semantic Web technologies, especially SPARQL query language and SPARQL Inferencing Notation SPIN. Feasibility of the approach is demonstrated with a simple maintenance use case example executed in an experimental knowledge gateway system. © 2016 IEEE.		Aarnio, P.; Vyatkin, V.; Hastbacka, D.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					ConflictExcluded	Excluded	new_screen			2		2016				
2		ModelGuidance	Modeling and simulation of scalable Cloud computing environments and the CloudSim toolkit: Challenges and opportunities	Cloud computing aims to power the next generation data centers and enables application service providers to lease data center capabilities for deploying applications depending on user QoS (Quality of Service) requirements. Cloud applications have different composition, configuration, and deployment requirements. Quantifying the performance of resource allocation policies and application scheduling algorithms at finer details in Cloud computing environments for different application and service models under varying load, energy performance (power consumption, heat dissipation), and system size is a challenging problem to tackle. To simplify this process, in this paper we propose CloudSim: an extensible simulation toolkit that enables modelling and simulation of Cloud computing environments. The CloudSim toolkit supports modelling and creation of one or more virtual machines (VMs) on a simulated node of a Data Center, jobs, and their mapping to suitable VMs. It also allows simulation of multiple Data Centers to enable a study on federation and associated policies for migration of VMs for reliability and automatic scaling of applications.		Buyya, R.; Ranjan, R.; Calheiros, R. N.						ConflictExcluded	Excluded	new_screen			2		2009				
3		ModelGuidance	Introduction to information visualization (InfoVis) techniques for model-based systems engineering	One of the barriers to the success of Model-Based Systems Engineering (MBSE) efforts is realizing effective communication of the output diagrams-i.e., modeling views-that address the concerns of, and inform, a broad spectrum of customer stakeholders. Abstracting and implementing the visual presentation of views-as products of very complex system models-is nearly as important to the effectiveness of these efforts to inform decision-making as the technical competency and completeness of those models. However, the information visualization of data from complex system models is often treated second to the technical considerations. This paper introduces high-level guidelines for visual presentation of MBSE efforts. These insights are presented such that they conform to numerous system modeling languages/representation standards. The insights are drawn from best practices of Information Visualization as applied to aerospace-based applications. For example, the paper presents how modelers can take advantage of functionality in existing modeling notions and software tools that implement them, and also the importance of keeping in mind the final presentation media, presentation venues, and historically accepted viewpoint styles. The paper also presents a concept for how to move beyond traditionally static outputs; in turn, allowing users to dynamically manipulate the output views within the context of their real-time concerns to answer specific questions about the modeled system(s). © 2013 The authors. Published by Elsevier B.V.		Sindiy, O.; Litomisky, K.; Davidoff, S.; Dekens, F.	Procedia Computer Science					ConflictExcluded	Excluded	new_screen			2		2013				
4		ModelGuidance	Architecture-based software reliability modeling	Reliability is one of the essential quality requirements of software systems, especially for life critical ones. Software reliability modeling provides a means for estimating reliability of software, which facilitates effective decision making for quality control. Existing models either use a black-box approach that is based on test data of the whole system or a white-box approach that uses components' reliabilities and inter-component interactions. While the black-box approach is applicable to the late phases of software development, the white-box approach can support decisions on early component reuse and later component upgrades and updates. However, the white-box based models have traditionally considered only homogeneous software behaviors. For this reason, we extended the white-box to an architecture-based approach, utilizing the characteristics of architectural styles to capture design information and to realize non-uniform heterogeneous software behaviors. Adhered to the behaviors, a state machine of a discrete-time Markov model is constructed and employed to compute software reliability. Our approach allows reliability to be modeled at architectural design stage to decide components for reuse as well as later testing and maintenance phases for continuous software evolution. In contrast to the black-box approach, the model only needs to retest the influenced portions for a behavioral or structural change, instead of the complete system. This model yields a compelling result after being applied to an industrial real-time component-based financial system. We believe that this architecture-based modeling technique can have a great potential for use to effectively improve software quality. © 2005 Elsevier Inc. All rights reserved.		Wang, W.-L.; Pan, D.; Chen, M.-H.	Journal of Systems and Software					ConflictExcluded	Excluded	new_screen			2		2006				
5		ModelGuidance	Research on modeling and simulation of an adaptive combat agent infrastructure for network centric warfare	In order to shift from platform centric warfare to Network Centric Warfare (NCW) for the military simulation, a new adaptive combat agent model is designed that with some special sub-agent advisor. The sub-agent advisor can perform like a specialist to carry out the management of sensors, situational assessment, tactical decision-making, combat mission, and communication management. So we can demonstrate realistic and valid behaviors of military entities in a Computer Generated Forces (CGF) simulation. It provides an effective training environment to exhibit advanced coordination and cooperation capability of military units in NCW with high resolution simulation. © 2010 Springer-Verlag.		Zhang, Y.; Zhang, A.; Xia, Q.; Guo, F.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictIncluded	Excluded	new_screen			2		2010				
6		ModelGuidance	Reciprocal transaction modeling	Reciprocal transactions, in general, denote two groups of transactions, in which performing one group of transactions is in consideration of performing the other group of transactions. Seemingly simple situation is more complex because it covers reciprocal commitments and reciprocal fulfilment and can be also accompanied by quarrels and disputes between partaking parties during fulfilment of reciprocal transactions. The objective of the paper is to find and apply better methodology and its model that would provide better mechanism for handling reciprocal transactions and in this way better economic information systems. The DEMO Co-creation Co-production (CC-CP) model, which has its foundation in DEMO (Design Engineering Methodology for Organization) methodology is presented and applied on a simple example of a pizza shop. This simple application demonstrates possibilities and achievements of the reciprocal transaction modeling in the form of the CC-CP model. © 2019 Innovation and Transformation in a Digital World. All Rights Reserved		Huňka, F.; Žáček, J.; Matula, J.	IDIMT 2019: Innovation and Transformation in a Digital World - 27th Interdisciplinary Information Management Talks					ConflictExcluded	Excluded	new_screen			2		2019				
7		ModelGuidance	Cascading dialog modeling with UsiXML	This paper discusses multi-level dialog specifications for user interfaces of multi-target interactive systems and it proposes a step-wise method that combines a transformational approach for model-to-model derivation and an interactive editing of dialog models for tailoring the derived models. This method provides a synthesis of existing solutions for dialog modeling using a XML-based User Interface Description Language, UsiXML, along with State WebCharts notation for expressing the dialog at a high level of abstraction. Our aim is to push forward the design and reuse of dialog specifications throughout several levels of abstraction ranging from task and domain models until the final user interface thanks to a mechanism based on cascading style sheets. In this way, it is expected that the dialog properties are not only inherited from one level to another but also are made much more reusable than in the past. © 2008 Springer-Verlag Berlin Heidelberg.		Winckler, M.; Vanderdonckt, J.; Stanciulescu, A.; Trindade, F.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2008				
8		ModelGuidance	Modeling knowledge flows in software project management processes	Software development SMEs interested in launching a KM initiative or software project managers working on taking their KM initiative to the next level, need to assess what strategy will best fit their knowledge needs and which will be the most likely to succeed based on their social, cultural and technological aspects. Taking into account the social and cultural characteristics of Mexican software development SMEs, the Mexican Ministry of the Economy encouraged the creation and adoption of the NMX-I-059-NYCE-2005 Standard. The main goal of this standard is help SMEs become more competitive and reach higher maturity levels. However, SMEs adopting or implementing this standard sometimes experience difficulties and problems in their daily software activities. In this paper, we model ongoing knowledge flows as an adaptation to Choo's framework, applied to the project portfolio management process as defined in such standard. In addition, we present some strategies followed by Mexican software development SMEs while conducting a SPI program for maturity levels 1 and 2.		Rios, B. L. F.; Ramírez, S. L. G.; Rodríguez-Elias, O. M.	KMIS 2010 - Proceedings of the International Conference on Knowledge Management and Information Sharing					ConflictExcluded	Excluded	new_screen			2		2010				
9		ModelGuidance	Modelling Styles and Their Support in the CASM Environment	Much effort is currently being expended in the design and implementation of integrated software support environments for discrete event simulation modelling. What are the considerations underlying the development of such environments and how are efforts being directed? This paper discusses aspects of the background to current developments and relates this discussion to the context of one such environment namely that of the Computer Aided Simulation Modelling (CASM) group at the London School of Economics.		Balmer, David W.						ConflictExcluded	Excluded	new_screen			2		1987				
10		ModelGuidance	Context-specific quality evaluation of test cases	Software systems are continuously changed during maintenance and evolution. To ensure their quality, they have to be tested. But before starting testing a software system, the quality of the test cases themselves has to be evaluated. Due to the changes of the software system, they might have become obsolete or even erroneous. Furthermore, test cases created in an industrial setting are extensive and at some point of time, they might have become difficult to understand, unmanageable and inefficient. Therefore, by evaluating their quality, we can better understand, control and eventually improve the quality of test cases. We present the Test Case Quality Plan (TCQP) approach, which is based on the GQM (Goal-Question-Metric) approach and enables a systematic and efficient development of quality plans. They serve as a guideline for the quality evaluation of test cases, and emphasize the context of use of test cases as a major factor of influence for the whole quality evaluation. The TCQP approach has been applied and evaluated in an industrial case study. Copyright © 2018 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.		Jovanovikj, I.; Narasimhan, V.; Engels, G.; Sauer, S.	MODELSWARD 2018 - Proceedings of the 6th International Conference on Model-Driven Engineering and Software Development					ConflictExcluded	Excluded	new_screen			2		2018				
11		ModelGuidance	Polygon topology generation algorithm research based on 3d modeling	Arrange topological sequence of building surface feature vertex is a significant research field in 3d modeling field. We can get the wire frame model of building by arrange the topological sequence and do some related operation. But there is also lack of an algorithm that quick and suitable for established all of the polygon topological sequence. So this paper review the outstanding progress in generating topological structure on 3d modeling in recent years. Some typical algorithms are given its basic ideas and analysis specific algorithm. The advantages and disadvantages of each algorithm are analysis. Provide the guidelines for follow-up study. Its assist the researchers improve the existing algorithm and proposed better new algorithm.		Sa LiangKun; Zhang DeTong						ConflictExcluded	Excluded	new_screen			2		2011				
12		ModelGuidance	Code-First Model-Driven Engineering: On the Agile Adoption of MDE Tooling	Domain models are the most important asset in widely accepted software development approaches, like Domain-Driven Design (DDD), yet those models are still implicitly represented in programs. Model-Driven Engineering (MDE) regards those models as representable entities that are amenable to automated analysis and processing, facilitating quality assurance while increasing productivity in software development processes. Although this connection is not new, very few approaches facilitate adoption of MDE tooling without compromising existing value, their data. Moreover, switching to MDE tooling usually involves re-engineering core parts of an application, hindering backward compatibility and, thereby, continuous integration, while requiring an up-front investment in training in specialized modeling frameworks. In those approaches that overcome the previous problem, there is no clear indication - from a quantitative point of view - of the extent to which adopting state-of-the-art MDE practices and tooling is feasible or advantageous. In this work, we advocate a code-first approach to modeling through an approach for applying MDE techniques and tools to existing object-oriented software applications that fully preserves the semantics of the original application, which need not be modified. Our approach consists both of a semi-automated method for specifying explicit view models out of existing object-oriented applications and of a conservative extension mechanism that enables the use of such view models at run time, where view model queries are resolved on demand and view model updates are propagated incrementally to the original application. This mechanism enables an iterative, flexible application of MDE tooling to software applications, where metamodels and models do not exist explicitly. An evaluation of this extension mechanism, implemented for Java applications and for view models atop the Eclipse Modeling Framework (EMF), has been conducted with an industry-targeted benchmark for decision support systems, analyzing performance and scalability of the synchronization mechanism. Backward propagation of large updates over very large views is instant.		Boronat, A.						ConflictExcluded	Excluded	new_screen			2		2019				
13		ModelGuidance	On the modeling timing behavior of the system with UML(VR)	UML notation is assumed to be independent from any software modeling methodology. The existing methodologies support the creation of the final system model, but they do not care about the formal documentation of the reasoning process; the associations between the elements belonging to different types of UML diagrams are remembered either as informal documentation out-side the UML model or are forgotten. Described in the paper Vertical Relations try to fill this gap, and allow to look at the use of timing diagrams from the new, more complex, perspective. Usefulness of Virtual Relations in evaluation of the timing properties of the Data Warehouse Reporting systems is presented. © 2008 Springer-Verlag Berlin Heidelberg.		Kotulski, L.; Dymek, D.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2008				
14		ModelGuidance	Proposal for a multi-view modelling case study: Component-based software engineering with UML, plug-ins, and Java	During the design and development of complex systems, multiple modelling languages are often necessary in order to describe a system for specific tasks and users. The resulting models can show parts of the same system from different perspectives or views, which is described by the term multi-view modelling. The overlap between individual views presents fundamental challenges, e.g. for sustaining consistency among views or for the creation of new views. A common multi-view modelling case study that covers essential challenges and requirements can be used as a basis for the comparison of approaches that address these challenges. In this paper, we propose such a case study in the context of component-based software engineering with UML composite diagrams, Eclipse plug-ins, and Java code. We explain the overlap between the different views, propose new view types that aggregate information from several sources, and discuss essential challenges of multi-view modelling that are posed by this case study. These challenges are, for example, one-to-many and partial relations between elements of different views, and the constraint combination effects of different views. Our proposal contributes to the community effort that is required to obtain a common case study that enables an efficient comparison of multi-view modelling approaches. © 2014 ACM.		Kramer, M. E.; Langhammer, M.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2014				
15		ModelGuidance	Self-Adaptive systems driven by runtime models a systematic literature review of approaches	Model-Driven Software Engineering (MDSE) represents a promising research area with a variety of challenging issues open for discussion. Expanding the limits of the MDSE paradigm, runtime models keep abstract representations of the running system in order to trigger on-The-fly software reconfigurations. One of the most popular applications of runtime models are self-Adaptive systems, since abstractions can be finetuned not only in the development phases, but also in runtime. As this kind of system needs to modify its behavior during execution, this can be achieved by means of high-level model interventions. The objective of this article is to present relevant approaches of self-Adaptive systems driven by runtime models. This article can help practitioners to get an overall picture of current approaches, in terms of methods, techniques and tools. Researchers can also be inspired to create new or to extend current approaches, facing the challenges identified here. To that end, we conducted a rigorous Systematic Literature Review based on the guidelines proposed by Kitchenham. This paper provides answers for four research questions, based on 16 selected articles. In the conclusion, we present some considerations and challenges based on the results obtained from this review.		Thiry, M.; Schmidt, R. A.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					ConflictExcluded	Excluded	new_screen			2		2017				
16		ModelGuidance	Testing communication tasks in distributed control systems with SysML and Timed Colored Petri Nets model	Abstract Nowadays, Distributed Control Systems (DCSs) are commonly used and supersede stand-alone controllers in many industrial applications. Efficient communication is crucial for their proper operation. Unfortunately, there is a lack of appropriate methodologies and tools applicable to small- and medium-sized DCSs, especially for analysis and testing of communication tasks during early development stages. The paper proposes a flexible and efficient approach that fills this gap. It consists of the following steps. At the beginning, communication tasks and their parameters are specified using graphical diagrams from Systems Modeling Language (SysML). Then, the diagrams are used to automatically generate a model of communication subsystem in the Timed Colored Petri Nets (TCPNs) formalism. Finally, simulation of the TCPN model allows to estimate performance of a target system implementation and to predict its behavior in various cases. Thus, potential bottlenecks might be identified earlier and easier, as well as eliminated even before creation of a hardware prototype. The proposed approach has been introduced into the Control Program Developer (CPDev) engineering environment, which allows to program industrial controllers. Appropriate software tools, namely the editor for SysML communication model, the TCPN library with simulation engine, and the testing framework have been prepared. © 2015 Elsevier B.V.		Jamro, M.; Rzonca, D.; Rząsa, W.	Computers in Industry					ConflictExcluded	Excluded	new_screen			2		2015				
17		ModelGuidance	A Controlled Experiment on Coverage Maximization of Automated Model-Based Software Test Cases in the Automotive Industry	In the automotive industry, as the complexity of electronic control units (ECUs) increase, there is a need for the creation of models that facilitate early tests to ensure functionality, but there is little guidance on how to write these tests in order to achieve maximum coverage. Our prototype CANoe+, which builds on the CANoe and GraphWalker tools, was evaluated against CANoe with regard to coverage maximization of generated test cases from the viewpoint of both software developers and software testers. © 2017 IEEE.		Darwish, R.; Gwosuta, L. N.; Torkar, R.	Proceedings - 10th IEEE International Conference on Software Testing, Verification and Validation, ICST 2017					ConflictExcluded	Excluded	new_screen			2		2017				
18		ModelGuidance	Teaching and learning modeling and specification based on mobile devices and cloud	In this paper, and in the context of a course of 1st cycle in Informatics, and following the guidelines of the Information Systems courses provided by ACM/AIS, we propose the use of Google tools and Lucidchart modeling tool, aligned with Bloom's taxonomy in our model BML Context Oriented (BML-CO) in a Requirements Engineering course based on Unified Modelling Language (UML) to modeling and specify requirements to a software system. Teaching Requirements Engineering and, in particular modeling and specification requirements, at the higher education institutions is an arduous task according to the literature that the proposed approach wants contribute for filling this gap. © 2016 AISTI.		Moreira, F.; Ferreira, M. J.	Iberian Conference on Information Systems and Technologies, CISTI					ConflictExcluded	Excluded	new_screen			2		2016				
19		ModelGuidance	Improving Simulation Results with Static Models	Effective simulation models require robust development methodologies. Planning, design, data, and testing are integral to ensure valuable answers to the model's customers. This paper discusses how supporting static models provide guidelines and directional correctness to simulation models. Static models can also provide supplemental answers which allow the reduction in simulation model complexity.		Miller, Martin J.; Shahi, Niloo; Dias, Ashley N.						Excluded	Excluded	new_screen			2		2011				
20		ModelGuidance	Enhancing soft systems analysis with formal modelling	Broadly, the paper argues for a soft systems approach to initial requirements definition and for the use of formal techniques as a means of strengthening that approach. In detail, the paper looks specifically at the means and implications of combining Checkland and Wilson's Soft Systems Methodology (SSM) with formal specification in LOTOS (P.B. Checkland, 1981; B. Wilson, 1990). Formal descriptions give precise meaning to the largely informal SSM models and help establish a bridge to traditional computing oriented analysis techniques. The use of tools to support the development, linking and maintenance of SSM and LOTOS models is also examined. The discussion is illustrated with a simple book ordering data processing example. Overall, this work is part of a larger research effort into the development of RACE, a new requirements engineering method for software.		Bustard, D. W.; Lundy, P. J.						ConflictExcluded	Excluded	new_screen			2		1995				
21		ModelGuidance	Automatic Layout of UML Use Case Diagrams	Model-based and model-driven development will receive increased attention in future software production processes. Currently, UML and the related Model Driven Architecture attract lot of interest in this area, but so far most tools rely on manual visualization techniques and only few tools support automatic visualizations e.g. of intermediary transformation results to support the understanding and debugging of model-driven transformation processes. Aside from structural models or control flow specifications, in particular UML use case diagrams are frequently used to visualize high level views on system functionality and are also considered as source and target models in upcoming model-driven production chains. To support use case diagrams in future software development, in this paper we present guidelines for the layout of UML use case diagrams, a deterministic layout algorithm supporting these guidelines and a prototypical implementation of the algorithm.		Eichelberger, Holger						Excluded	Excluded	new_screen			2		2008				
22		ModelGuidance	State dependency diagram	The state dependency diagram (SDD) is presented as an improved model for entity life history states. Entity life histories (ELHs) are used in methods like SSADM and LSDM as a means of establishing the stages each entity occurrence goes through in its life, such as creation, deletion etc. However, ELHs are limited to describing states within one entity, whereas the state dependency diagram shows interdependencies between the states of different entities. Once drawn, the state dependency diagram becomes a model which can be used for subsequent analysis.		McDermid, D.	Software engineering journal					Excluded	Excluded	new_screen			2		1990				
23		ModelGuidance	A toolbox supporting agile modelling method engineering: ADOxx.org modelling method conceptualization environment	The importance of Modelling Method Engineering is equally rising with the importance of domain specific modelling methods and individual modelling approaches. In order to capture the most relevant semantic primitives that address domain specifics needs, it is necessary to involve both, method engineers as well as domain experts. Due to complexity of conceptualization of a modelling method and development of regarding modelling tool, there is a need of a guideline and corresponding tools supporting actors with different background along this complex process. Based on practical experience in business, more than twenty EU projects and other research initiatives, this paper introduces a toolbox to support the conceptualization of a modelling method. The realized toolbox is introduced and evaluated by two EU-funded research projects in the domain of e-learning and cloud computing as well as additionally by an in-house development project in the area of decision modelling extensions. The paper discusses the evaluation results and derived outlooks. © IFIP International Federation for Information Processing 2016.		Efendioglu, N.; Woitsch, R.; Utz, W.	Lecture Notes in Business Information Processing					ConflictExcluded	Excluded	new_screen			2		2016				
24		ModelGuidance	Improvement of Quality for Business Process Modeling Driven by Guidelines	The improvement of quality in business process models should be objective by applying measureS. However, an evaluation of measurement results is not a simple task. It also requires the identification of relevant threshold values and indicators, which make it possible to distinguish between different levels of quality for BP modelS. In this context, a prototype named BPMoQualAssess (Business Process Model Quality Assess) is described. This prototype is including useful metrics defining the syntactic aspect of BP models also their threshold valueS. The obtained results are guidelines containing recommendations that aim at improving an input model by modifying it in order to obtain a higher level of quality. © 2018 The Author(s).		Kahloun, F.; Ghannouchi, S. A.	Procedia Computer Science					ConflictExcluded	Excluded	new_screen			2		2018				
25		ModelGuidance	Crowd Sourcing the Creation of Personae Non Gratae for Requirements-Phase Threat Modeling	Security threats should be identified in the early phases of a project so that design solutions can be explored and mitigating requirements specified. In this paper, we present a crowd-sourcing approach for creating Personae non Gratae (PnGs), which model attack goals and techniques of unwanted, potentially malicious users. We present a proof of concept study that takes a diverse collection of potentially redundant PnGs and merges them into a single set. Our approach combines machine learning techniques and visualization. It is illustrated and evaluated using a collection of PnGs collected from undergraduate students for a drone-based rescue scenario. Lessons learned from the proof of concept study are discussed and lay the foundations for future work. © 2017 IEEE.		Mead, N.; Shull, F.; Spears, J.; Heibl, S.; Weber, S.; Cleland-Huang, J.	Proceedings - 2017 IEEE 25th International Requirements Engineering Conference, RE 2017					Excluded	Excluded	new_screen			2		2017				
26		ModelGuidance	Design pattern modeling with constraint relaxation	Metamodeling is a widely applied technique in the field of graphical language engineering. Environments supporting metamodeling aid rapid and flexible domain-specific modeling language (DSML) definition and utilization. In software engineering, design patterns are efficient solutions for recurring problems. With the proliferation of DSMLs, there is a need for domain-specific design patterns to offer solutions to problems recurring in different domains. The aim of this paper is to illustrate a concept that integrates modeling patterns into a metamodeling environment. The introduced approach utilizes the modeling functionalities of the environment; a visual design pattern metamodel, a system architectural metamodel extended with textual constraints are introduced. Furthermore, design patterns are validated against relaxed constraints defined in the metamodel to only allow the creation of patterns that can be extended to valid instance models. © Visual Formalisms for Patterns 2009.		Vajk, T.; Mészáros, T.; Levendovszky, T.	Electronic Communications of the EASST					Excluded	Excluded	new_screen			2		2009				
27		ModelGuidance	Modeling non-functional aspects in service oriented architecture	Service Oriented Architecture (SOA) is an architectural style to reuse and integrate subsystems in existing systems for designing new applications. Each application is designed in an implementation independent manner using abstract concepts: network services and connections between network services. In SOA, the non-functional aspects of services and connections should be described separately from their functional aspects because different applications use services and connections in different non-functional contexts. This paper proposes a UML profile to graphically design the non-functional aspects in SOA and maintain them in an implementation independent manner. This paper presents the design of the proposed UML profile and describes how it is used in service-oriented application development. © 2006 IEEE.		Wada, H.; Suzuki, J.; Oba, K.	Proceedings - 2006 IEEE International Conference on Services Computing, SCC 2006					Excluded	Excluded	new_screen			2		2006				
28		ModelGuidance	Translating platform-independent code into natural language texts	Understanding software artifacts is not only time-consuming, without the proper training and experience it can be impossible. From a model-driven perspective there are two benefits from translating platform-independent models into natural language texts: First, the non-functional properties of the solution have already been omitted meaning that the translations focus on describing the functional behaviour of the system. Second, the platform-independent models are reusable across platforms and so are the translations generated from them. As a proof-of-concept a platform-independent Action language is translated into natural language texts through the framework of model transformations.		Burden, H.; Heldal, R.	MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development					Excluded	Excluded	new_screen			2		2013				
29		ModelGuidance	Documenting Patterns with Business Process Models	The last years have seen a rise in the number of tools and methods developed to help developers and domain users communicate. One such method is Business Process Modeling. The Business Process Modeling Notation provides a graphical visualization and modeling tool for end-to-end business process documentation and thus excels in directness and ease of communication between non-expert users and technical people. The goal of this paper is to present the basis for a new process-oriented perspective into pattern design representation. We claim that this modeling technique can be effectively used as a representation format for most patterns, bridging across domains and styles. 		Monteiro, Pedro; Monteiro, Miguel Pessoa						ConflictExcluded	Excluded	new_screen			2		2012				
30		ModelGuidance	Evaluation of Jif and Joana as information flow analyzers in a model-driven approach	Checking for information leaks in real-world applications is a difficult task. IFlow is a model-driven approach which allows to develop information flow-secure applications using intuitive modeling guidelines. It supports the automatic generation of partial Java code while also providing the developer with the ability to formally verify complex information flow properties. To simplify the formal verification, we integrate an automatic Java application information flow analyzer, allowing to check simple noninterference properties. In this paper, we evaluate both Jif and Joana as such analyzers to determine the best suiting information flow control tool in the context of, but not limited to the IFlow approach. © 2013 Springer-Verlag.		Katkalov, K.; Fischer, P.; Stenzel, K.; Moebius, N.; Reif, W.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2013				
31		ModelGuidance	A Layered Reference Architecture for Metamodels to Tailor Quality Modeling and Analysis	Nearly all facets of our everyday life strongly depend on software-intensive systems. Besides correctness, highly relevant quality properties of these systems include performance, as directly perceived by the user, and maintainability, as an important decision factor for evolution. These quality properties strongly depend on architectural design decisions. Hence, to ensure high quality, research and practice is interested in approaches to analyze the system architecture for quality properties. Therefore, models of the system architecture are created and used for analysis. Many different languages (often defined by metamodels) exist to model the systems and reason on their quality. Such languages are mostly specific to quality properties, tools or development paradigms. Unfortunately, the creation of a specific model for any quality property of interest and any different tool used is simply infeasible. Current metamodels for quality modeling and analysis are often not designed to be extensible and reusable. Experience from generalizing and extending metamodels result in hard to evolve and overly complex metamodels. A systematic way of creating, extending and reusing metamodels for quality modeling and analysis, or parts of them, does not exist yet. When comparing metamodels for different quality properties, however, substantial parts show quite similar language features. This leads to our approach to define the first reference architecture for metamodels for quality modeling and analysis. A reference architecture in software engineering provides a general architecture for a given application domain. In this paper, we investigate the applicability of modularization concepts from object-oriented design and the idea of a reference architecture to metamodels for quality modeling and analysis to systematically create, extend and reuse metamodel parts. Thus, the reference architecture allows to tailor metamodels. Requirements on the reference architecture are gathered from a historically grown metamodel. We specify modularization concepts as a foundation of the reference architecture. Detailed application guidelines are described. We argue the reference architecture supports instance compatibility and non-intrusive, independent extension of metamodels. In four case studies, we refactor historically grown metamodels and compare them to the original metamodels. The study results show the reference architecture significantly improves evolvability as well as need-specific use and reuse of metamodels.		Heinrich, R.; Strittmatter, M.; Reussner, R. H.	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2019				
32		ModelGuidance	Rapid service creation using eXtreme Model Driven Design for real-time communications services on top of Next Generation Networks	Existing telecommunication networks and classical roles of operators are subject to fundamental change. Many network operators are currently seeking for new sources to generate revenue by exposing network capabilities to 3rd party service providers. At the same time we can observe that services on the World Wide Web (WWW) are becoming mature in terms of the definition of APIs that are offered towards other services. The combinations of those services are commonly referred to as Web 2.0 mash-ups. Rapid service design and creation becomes therefore important to meet the requirements in a changing technology and competitive market environment. This report describes our approach to enable a service creation environment based on model driven design paradigm for complex (orchestrated) real-time communications services through a service broker on top of Next Generation Networks (NGN) to combine the emerging Web/telecommunications service space.		Blum, N.; Magedanz, T.; Margaria, T.						Excluded	Excluded	new_screen			2		2009				
33		ModelGuidance	Improving the Model Development Process: Expanding Our Horizons in Verification, Validation, and Accreditation Research and Practice	Many different types of modeling and simulation (M&S) applications, consisting of a combination of software, hardware, and humanware, are used in dozens of disciplines under diverse objectives including acquisition, analysis, education, entertainment, research, and training. Certification of sufficient accuracy of an M&S application by conducting verification, validation, and accreditation (VV&A) requires multifaceted knowledge and experience, and poses substantial technical and managerial challenges for researchers, practitioners, and managers. The challenges can only be met by using a very broad spectrum of approaches and expanding our horizons in VV&A. This paper presents 13 strategic directions to meet those challenges. The strategic directions provide guidelines for successful VV&A research and practice.		Balci, Osman; Nance, Richard E.; Arthur, James D.; Ormsby, William F.						Excluded	Excluded	new_screen			2		2002				
34		ModelGuidance	A UML rule-based approach for describing and checking dynamic software architectures	In this paper we propose a UML based approach for describing and checking dynamic software architectures. In fact, the UML profile enables us to model dynamic software architectures by three aspects: the first one defines the architectural style of an application, the second describes a set of reconfiguration operations and the last, one specifies the coordination among the reconfiguration operations defined in the above aspect. The built models are automatically checked through a set of syntactical rules. These models are automatically transformed into formal Z specifications in order to prove architectural properties such as consistency and invariants preservation against reconfiguration. © 2008 IEEE.		Miladi, M. N.; Hadj Kacem, M.; Boukhris, A.; Jmaiel, M.; Drira, K.	AICCSA 08 - 6th IEEE/ACS International Conference on Computer Systems and Applications					Excluded	Excluded	new_screen			2		2008				
35		ModelGuidance	Framework for advanced design vehicle process development	The goal of this project is to reduce development time of such a complex product as a car design by using an iterative model that can perform many key analyses mainly related with homologation, occupant, mechanical packaging and ergonomic considerations. All these activities will be modeled and optimized with UML. This proposal describes a project for the development of a set of tools that automates many of the tasks associated with the feasibility process of an automobile in a CAD (Computer Aided Design) or CAS (Computer Aided Style) systems. This software tool will provide assistance to certify the vehicle for compliance with all governmental regulations and standards. It allows the users to access the ergonomic performance of the vehicle. All these tools will be written in the style of macro SCRIPT (Visual basic or c++), wizards and buttons will be created as well as the instructions to complete these, often very complex, tasks. Parameterization of the output geometry allows easily the update of the different vehicle parts. The developed software will be fully used in a parameterized CAD\CAS environment.		Ferreira, J.; Furini, F.; Silva, N.	Proceedings of the IASTED International Conference on Modelling, Identification, and Control, MIC					Excluded	Excluded	new_screen			2		2007				
36		ModelGuidance	On the notion of abstract platform in MDA development	Although platform-independence is a central property in MDA models, the study of platform-independence has been largely overlooked in MDA. As a consequence, there is a lack of guidelines to select abstraction criteria and modelling concepts for platform-independent design. In addition, there is little methodological support to distinguish between platform-independent and platform-specific concerns, which could be detrimental to the beneficial exploitation of the PIM-PSM separation-of-concerns adopted by MDA. This paper is an attempt towards clarifying the notion of platform-independent modelling in MDA development. We argue that each level of platform-independence must be accompanied by the identification of an abstract platform. An abstract platform is determined by the platform characteristics that are relevant for applications at a certain level of platform-independence, and must be established by balancing various design goals. We present some methodological principles for abstract platform design, which forms a basis for defining requirements for design languages intended to support platform-independent design. Since our methodological framework is based on the notion of abstract platform, we pay particular attention to the definition of abstract platforms and the language requirements to specify abstract platforms. We discuss how the concept of abstract platform relates to UML. © 2004 IEEE.		Almeida, J. P.; Dijkman, R.; Van Sinderen, M.; Pires, L. F.	Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOC					ConflictExcluded	Excluded	new_screen			2		2004				
37		ModelGuidance	Thresholds for error probability measures of business process models	The quality of conceptual business process models is highly relevant for the design of corresponding information systems. In particular, a precise measurement of model characteristics can be beneficial from a business perspective, helping to save costs thanks to early error detection. This is just as true from a software engineering point of view. In this latter case, models facilitate stakeholder communication and software system design. Research has investigated several proposals as regards measures for business process models, from a rather correlational perspective. This is helpful for understanding, for example size and complexity as general driving forces of error probability. Yet, design decisions usually have to build on thresholds, which can reliably indicate that a certain counter-action has to be taken. This cannot be achieved only by providing measures; it requires a systematic identification of effective and meaningful thresholds. In this paper, we derive thresholds for a set of structural measures for predicting errors in conceptual process models. To this end, we use a collection of 2000 business process models from practice as a means of determining thresholds, applying an adaptation of the {ROC} curve method. Furthermore, an extensive validation of the derived thresholds was conducted by using 429 {EPC} models from an Australian financial institution. Finally, significant thresholds were adapted to refine existing modeling guidelines in a quantitative way. (C) 2012 Elsevier Inc. All rights reserved.		Mendling, Jan; Sanchez-Gonzalez, Laura; Garcia, Felix; La Rosa, Marcello	{JOURNAL} {OF} {SYSTEMS} {AND} {SOFTWARE}					Excluded	Excluded	new_screen			2		2012				
38		ModelGuidance	Teaching software process modeling	Most university curricula consider software processes to be on the fringes of software engineering (SE). Students are told there exists a plethora of software processes ranging from RUP over V-shaped processes to agile methods. Furthermore, the usual students' programming tasks are of a size that either one student or a small group of students can manage the work. Comprehensive processes being essential for large companies in terms of reflecting the organization structure, coordinating teams, or interfaces to business processes such as contracting or sales, are complex and hard to teach in a lecture, and, therefore, often out of scope. We experienced tutorials on using Java or C\#, or on developing applications for the iPhone to gather more attention by students, simply speaking, as these are more fun for them. So, why should students spend their time in software processes? From our experiences and the discussions with a variety of industrial partners, we learned that students often face trouble when taking their first “real” jobs, even if the company is organized in a lean or agile shape. Therefore, we propose to include software processes more explicitly into the SE curricula. We designed and implemented a course at Master's level in which students learn why software processes are necessary, and how they can be analyzed, designed, implemented, and continuously improved. In this paper, we present our course's structure, its goals, and corresponding teaching methods. We evaluate the course and further discuss our experiences so that lecturers and researchers can directly use our lessons learned in their own curricula.		Kuhrmann, M.; Fernandez, D. M.; Münch, J.						Excluded	Excluded	new_screen			2		2013				
39		ModelGuidance	Assessing PSP effect in training disciplined software development: A Plan-Track-Review model	Context: In training disciplined software development, the {PSP} is said to result in such effect as increased estimation accuracy, better software quality, earlier defect detection, and improved productivity. But a systematic mechanism that can be easily adopted to assess and interpret {PSP} effect is scarce within the existing literature. Objective: The purpose of this study is to explore the possibility of devising a feasible assessment model that ties up critical software engineering values with the pertinent {PSP} metrics. Method: A systematic review of the literature was conducted to establish such an assessment model (we called a Plan-Track-Review model). Both mean and median approaches along with a set of simplified procedures were used to assess the commonly accepted {PSP} training effects. A set of statistical analyses further followed to increase understanding of the relationships among the {PSP} metrics and to help interpret the application results. Results: Based on the results of this study, {PSP} training effect on the controllability, manageability, and reliability of a software engineer is quite positive and largely consistent with the literature. However, its effect on one's predictability on project in general (and on project size in particular) is not implied as said in the literature. As for one's overall project efficiency, our results show a moderate improvement. Our initial finding also suggests that a prior stage {PSP} effect could have an impact on later stage training outcomes. Conclusion: It is concluded that this Plan-Track-Review model with the associated framework can be used to assess {PSP} effect regarding a disciplined software development. The generated summary report serves to provide useful feedback for both {PSP} instructors and students based on internal as well as external standards. (C) 2010 Elsevier B.V. All rights reserved.		Shen, Wen-Hsiang; Hsueh, Nien-Lin; Lee, Wei-Mann	{INFORMATION} {AND} {SOFTWARE} {TECHNOLOGY}					Excluded	Excluded	new_screen			2		2011				
40		ModelGuidance	Rubacon	Compliance frameworks, laws and regulations such as Sarbanes Oxley, Basel II, Solvency II, HIPAA etc. demand from companies in a more and more rigorous way to demonstrate that their organisation, processes and supporting IT landscape implement and follow a set of guidelines at differing levels of abstraction. The work presented in this paper aims to contribute to a software engineering process which is driven by security, risk and compliance management considerations. We concentrate on a part of this approach that focusses on the question how one can use software engineering methods and tools to enforce that the configuration of a system enforces the security policies that arise from business compliance regulations. We present tool support for model-based compliance engineering, i.e. for the model-based development and analysis of software configurations that ensures compliance with security policies. It allows one to check UML models of business applications and their configuration data for adherence to security policies and compliance requirements. The tool is based on standardized data formats, such as UML and XML, which makes its integration into existing business architectures as efficient as possible.		Höhn, S.; Jürjens, J.						Excluded	Excluded	new_screen			2		2008				
41		ModelGuidance	Layered modeling and generation of Pollock’s drip style	In this paper, we propose a layered approach to model Jackson Pollock’s dripping style of paintings. Having analyzed fractal-based algorithms and observed the details of Pollock’s paintings, we designed a layered modeling approach that divides Pollock’s artwork into four layers: from bottom up are background layer, irregular shape layer, line layer and water drop layer. The layers are drawn sequentially and independent, forming the desired Pollock style. We have developed a program using Processing to generate artworks of the dripping style. The parameters of our program can be randomly generated or tuned by the user, supporting high flexibility and effectiveness. Experimental results show that our layered modeling approach can systematically generate images resembling Pollock’s dripping style. © 2014, Springer-Verlag Berlin Heidelberg.		Zheng, Y.; Nie, X.; Meng, Z.; Feng, W.; Zhang, K.	Visual Computer					Excluded	Excluded	new_screen			2		2015				
42		ModelGuidance	TOWARDS THE AUTOMATIC-GENERATION OF SOFTWARE DIAGRAMS	Escalating manpower costs in developing systems have caused an increasing need for greater productivity in system development. This is particularly true in the analysis and design phases. Productivity in the system analysis phase can be increased with the use of computer-aided tools. For example, a structured analysis and documentation tool-the data flow diagram-allows an analyst to model and document a syste with relative ease. However, the manual production of a data flow diagram is a time consuming process. Combining the production of data flow diagrams with {SPSL}/{SPSA}, a system for specifying system requirements produces a synergistic effect on increases in productivity. As well, it ensures the use of standards and the completeness of the diagram. This paper formulates the criteria for drawing data flow diagrams and describes the placement and routing algorithms used in a system called {MONDRIAN}. A generalized approach to the question of software diagrams is then proposed based on our experience with {MONDRIAN} and a metasystem approach to the creation of {CASE} environments. A formal approach to the definition of software objects and their graphical representation is given. Finally, the use of location constraints as a basis for generalized layout algorithms is discussed.		PROTSKO, L. B.; SORENSON, P. G.; TREMBLAY, J. P.; SCHAEFER, D. A.	{IEEE} {TRANSACTIONS} {ON} {SOFTWARE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		1991				
43		ModelGuidance	Integrated process and control system model for product quality control - A soft-sensor based application	In the near future of chemical industry, communication between design, manufacturing, marketing and management should be centered on modeling and simulation, which could integrate the whole product and process development chains, process units and subdivisions of the company. Solutions to this topic often set aside one or more component from product, process and control models, hence as a novel know-how, an information system methodology was developed. Its structure integrates models of these components with process data warehouse where integration means information, location, application and time integrity. It supports complex engineering tasks related to analysis of system performance, process optimization, operator training systems (OTS), decision support systems (DSS), reverse engineering or software sensors (soft-sensors). The case study in this article presents the application of the proposed methodology for product quality soft-sensor application by on-line melt index prediction of an operating polymerization technology.		Balaskó, B.; Németh, S.; Abonyi, J.						Excluded	Excluded	new_screen			2		2009				
44		ModelGuidance	Context-based modeling: Introducing a novel modeling approach	Despite the fact that researchers agree on the importance of enterprise models to an organization's success, the knowledge about how to handle problems where models have to be compared or integrated is still fuzzy and vague, and there is little agreement regarding compositional facets. Highly interesting is the interaction between models in shared modeling projects - e. g. between requirement models and service implementations in a service-oriented architecture (SOA). This article highlights an approach that allows to prevent integration conflicts in conceptual models already during the modeling phase. The influence of this approach on conceptual modeling and its use in intra-organizational collaborations is investigated. We show the inherent complexities of model-mediated interactions between domain experts and IT-service developers. It is suggested that at an early stage of the modeling process the use of guidelines has an substantial benefit for avoiding integration conflicts in conceptual models. Furthermore, due to the way how the approach bridges the semantic gap, changes of business requirements as well as technical implementation restrictions influence each other. This results in an ongoing system development process that can be interpreted as a permanent management of application systems. Our results contribute to model-based management theories that have so far neglected the distributed construction of conceptual models.		Juhrisch, M.; Dietz, G.	Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)					ConflictIncluded	Included	new_screen			2		2010				
45		ModelGuidance	GLTM: A Global and Local Word Embedding-Based Topic Model for Short Texts	Short texts have become a kind of prevalent source of information, and discovering topical information from short text collections is valuable for many applications. Due to the length limitation, conventional topic models based on document-level word co-occurrence information often fail to distill semantically coherent topics from short text collections. On the other hand, word embeddings as a powerful tool have been successfully applied in natural language processing. Word embeddings trained on large corpus are encoded with general semantic and syntactic information of words, and hence they can be leveraged to guide topic modeling for short text collections as supplementary information for sparse co-occurrence patterns. However, word embeddings are trained on large external corpus and the encoded information is not necessarily suitable for training data set of topic models, which is ignored by most existing models. In this article, we propose a novel global and local word embedding-based topic model (GLTM) for short texts. In the GLTM, we train global word embeddings from large external corpus and employ the continuous skip-gram model with negative sampling (SGNS) to obtain local word embeddings. Utilizing both the global and local word embeddings, the GLTM can distill semantic relatedness information between words which can be further leveraged by Gibbs sampler in the inference process to strengthen semantic coherence of topics. Compared with five state-of-the-art short text topic models on four real-world short text collections, the proposed GLTM exhibits the superiority in most cases.		Liang, W.; Feng, R.; Liu, X.; Li, Y.; Zhang, X.	IEEE Access					Excluded	Excluded	new_screen			2		2018				
46		ModelGuidance	Applying of an ontology based modeling approach to cultural heritage systems	Any virtual environment (VE) built in a classical way is dedicated to a very specific domain. Its modification or even adaptation to another domain requires an expensive human intervention measured in time and money. This way, the product, that means the VE, returns at the first phases of the development process. In a previous work we proposed an approach that combines domain ontologies and conceptual modeling to construct more accurate VEs. Our method is based on the description of the domain knowledge in a standard format and the assisted creation (using these pieces of knowledge) of the VE. This permits the explanation within the virtual reality (VR) simulation of the semantic of the whole context and of each object. This knowledge may be then transferred to the public users. In this paper we prove the effectiveness of our method on the construction process of an VE that simulates the organization of a Greek-Roman colony situated on the Black Sea coast and the economic and social activities of its people. © 2011 AECE.		Popovici, D.-M.; Bogdan, C.-M.; Polceanu, M.; Querrec, R.	Advances in Electrical and Computer Engineering					Excluded	Excluded	new_screen			2		2011				
47		ModelGuidance	Progress and Quality Modeling of Requirements Analysis Based on Chaos	It is important and difficult for us to know the progress and quality of requirements analysis. We introduce chaos and software requirements complexity to the description of requirements decomposing, and get a method which can help us to evaluate the progress and quality. The model shows that requirements decomposing procedure has its own regular pattern which we can describe in a equation and track in a trajectory. The requirements analysis process of a software system can be taken as normal if its trajectory coincide with the model. We may be able to predict the time we need to finish all requirements decomposition in advance based on the model. We apply the method in the requirements analysis of home phone service management system, and the initial results show that the method is useful in the evaluation of requirements decomposition.		Ge, J.; Fang, Y.						Excluded	Excluded	new_screen			2		2009				
48		ModelGuidance	Functional verification of distributed automation systems: Assisting production line operators by an automated model composition	The demand of customer-specific products leads to a fundamental change to manufacturing facilities. To adapt the facilities to new product types, frequently occurring functionality changes in industrial automation systems are expected. Functionality changes are primarily implemented by software changes. These software changes within the operation phase can be implemented, for instance, by over-the-air software updates or ad hoc integration of new components. The effects of these changes are often difficult to estimate, especially in distributed automation systems. This mainly poses a challenge on production line operators, who are required to validate their automation systems after functionality changes have been executed. The goal of this contribution is to assist production line operators in the validation process of their automation systems after software changes. Formal verification methods can support the operators, due to its fully automated execution. However, the creation process of the behavior models needed for the formal verification is complex and error-prone. This is why formal verification is usually not used. Hence, a model-based technique is presented to automate this creation process. By means of this, the subsystem affected by the software change is automatically identified and subsequently a suitable input to a model-based verification tool is generated. The concept is based on the generation of a system model by composing the Petri net models of components within the automation system. In order to identify affected components, an impact analysis is performed, starting from the component in which a modification occurred. Followingly, a tailored subsystem is composed using the component models necessary for verification. This subsystem is applied to verify the system requirements for the affected components. To evaluate the applicability of the concept in the field of industrial automation, a distributed automation system was implemented. A service-oriented, OPC-UA-based, control network is thereby used to implement a technical process. Furthermore, a configuration interface enables change of the components at runtime. This emulates over-the-air updates and ad hoc networking. The concept is implemented with the demonstrator “TestIAS.” This test device detects software changes within the automation system and verifies them automatically according to the model-based approach presented. An empirical evaluation was performed with ten different reconfiguration scenarios showing functional changes. In addition, based on the time measurements of the time saving due to the impact analysis, the efficiency enhancement is substantiated. © 2019, Springer-Verlag London Ltd., part of Springer Nature.		Zeller, A.; Jazdi, N.; Weyrich, M.	International Journal of Advanced Manufacturing Technology					Excluded	Excluded	new_screen			2		2019				
49		ModelGuidance	Towards a Better Understanding of the Impact of Experimental Components on Defect Prediction Modelling	Defect prediction models are used to pinpoint risky software modules and understand past pitfalls that lead to defective modules. The predictions and insights that are derived from defect prediction models may not be accurate and reliable if researchers do not consider the impact of experimental components (e.g., datasets, metrics, and classifiers) of defect prediction modelling. Therefore, a lack of awareness and practical guidelines from previous research can lead to invalid predictions and unreliable insights. In this thesis, we investigate the impact that experimental components have on the predictions and insights of defect prediction models. Through case studies of systems that span both proprietary and open-source domains, we find that (1) noise in defect datasets; (2) parameter settings of classification techniques; and (3) model validation techniques have a large impact on the predictions and insights of defect prediction models, suggesting that researchers should carefully select experimental components in order to produce more accurate and reliable defect prediction models.		Tantithamthavorn, C.						Excluded	Excluded	new_screen			2		2016				
50		ModelGuidance	Testing as collecting of evidence: An integrated approach to test generation for finite state machines	A new method to generate tests for deterministic implementations of deterministic finite state machines is proposed. The method is generic, taking a wide class of testing strategies as a parameter, and able to support both transition-oriented and fault-model-driven testing. For a given specification machine, it builds a graph encoding the given strategy and then generates a test by solving on the graph a generalization of the Rural Postman Problem. Only the first phase is domain specific and therefore precisely described in the paper. The second phase is considered a responsibility of graph specialists, though we provide guidelines for solving the most commonly encountered special case. The strategy encoding produced in the first phase is such that the second phase automatically handles, in an integrated manner, the following optimization concerns: absolute avoidance of forbidden transitions, maximum avoidance of transitions which are for some reason considered undesirable, subtest choice, subtest ordering and subtest connection, possibly with overlapping. The method accepts multi-criteria transition cost functions. If both its phases are executed precisely, it generates a test optimal with respect to the adopted strategy, and a strategy for generating absolutely optimal tests is also given. For the cases where the complexity of the first phase or of the resulting graph is problematic, guidelines for systematically conducting the phase in an approximate way are provided. © The Author 2007.		Kapus-Kolar, M.	Computer Journal					Excluded	Excluded	new_screen			2		2007				
51		ModelGuidance	Modeling the input history of programs for improved instruction-memory performance	When a program is loaded into memory for execution the relative position of its basic blocks is crucial, since loading basic blocks that are unlikely to be executed first places them high in the instruction-memory hierarchy only to be dislodged as the execution goes on. In this paper, we study the use of Bayesian networks as models of the input history of a program. The main point is the creation of a probabilistic model that persists as the program is run on different inputs and at each new input refines its own parameters in order to reflect the program's input history more accurately. As the model is thus tuned, it causes basic blocks to be reordered so that, upon arrival of the next input for execution, loading the basic blocks into memory automatically takes into account the input history of the program. We report on extensive experiments, whose results demonstrate the efficacy of the overall approach in progressively lowering the execution times of a program on identical inputs placed randomly in a sequence of varied inputs. We provide results on selected SPEC CINT2000 programs and also evaluate our approach as compared with the gcc level-3 optimization and with Pettis-Hansen reordering. © 2006 Oxford University Press.		Assis, C. A. G.; Fernandes, E. S. T.; Barbosa, V. C.	Computer Journal					Excluded	Excluded	new_screen			2		2006				
52		ModelGuidance	KBMS: a knowledge-based system for modeling software system specifications	Recent research results in software engineering have shown that the process of formalizing and automating software specification activity is moving towards knowledge-based specification systems. A modeling approach and a knowledge-based system that assist in the requirement acquisition, development, and maintenance of such software system specifications are presented.{\textless}{\textgreater}		Zeroual, K.; Robillard, P.	IEEE Transactions on Knowledge and Data Engineering					Included	Excluded	new_screen			2		1992				
53		ModelGuidance	MIST: Modeling input space for testing tool	Dependencies among software input parameters make test case generation difficult. One possible solution is using an input space model, which allows the generation of all valid (satisfied all dependencies) and only valid test combinations. For large number of dependencies, automatic creation of the model is necessary. For this purpose, the paper presents MIST - a new tool for Modeling Input Space for Testing. MIST implements a new algorithm based on subgraph splitting and creates a software input space graphical model, where paths through the graph represent sets of valid test cases. The paper considers MIST design, implementation, and usage issues. MIST inputs and outputs are illustrated for a case study of a fragment of a nuclear power plant control system. Integration of MIST with other tools, in particular, the JUMBL tool, is addressed. This allows automatic test case generation for statistical testing.		Vilkomir, S. A.; Abdelfattah, K. A.; Gummadi, S.	Proceedings of the 13th IASTED International Conference on Software Engineering and Applications, SEA 2009					Excluded	Excluded	new_screen			2		2009				
54		ModelGuidance	A novel approach for scenario-based test case generation	Testing of software is a time-consuming activity which requires a great deal of planning and resources. Model-based testing is gaining importance as a research issue. In scenario-based testing, test scenarios are used for generating test cases, test drivers etc. UML is widely used to describe analysis and design specifications of software development. UML models are important source of information for test case design. UML activity diagrams describe the realization of the operation in design phase and also support description of parallel activities and synchronization aspects involved in different activities perfectly. In this paper we generate test scenarios from activity diagrams, which achieve test adequacy criteria perfectly. Finally we generate test cases by analyzing the respective sequence and class diagrams of each scenario, which achieves maximum path coverage criteria. Also in our approach, the cost of test model creation is reduced as design is reused. © 2008 IEEE.		Biswal, B. N.; Nanda, P.; Mohapatra, D. P.	Proceedings - 11th International Conference on Information Technology, ICIT 2008					Excluded	Excluded	new_screen			2		2008				
55		ModelGuidance	Architecture modeling and analysis of security in android systems	Software architecture modeling is important for analyzing system quality attributes, particularly security. However, such analyses often assume that the architecture is completely known in advance. In many modern domains, especially those that use plugin-based frameworks, it is not possible to have such a complete model because the software system continuously changes. The Android mobile operating system is one such framework, where users can install and uninstall apps at run time. We need ways to model and analyze such architectures that strike a balance between supporting the dynamism of the underlying platforms and enabling analysis, particularly throughout a system’s lifetime. In this paper, we describe a formal architecture style that captures the modifiable architectures of Android systems, and that supports security analysis as a system evolves. We illustrate the use of the style with two security analyses: a predicate-based approach defined over architectural structure that can detect some common security vulnerabilities, and inter-app permission leakage determined by model checking. We also show how the evolving architecture of an Android device can be obtained by analysis of the apps on a device, and provide some performance evaluation that indicates that the architecture can be amenable for use throughout the system’s lifetime. © Springer International Publishing AG 2016.		Schmerl, B.; Gennari, J.; Sadeghi, A.; Bagheri, H.; Malek, S.; Cámara, J.; Garlan, D.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2016				
56		ModelGuidance	Process mining for semantic business process modeling	Business processes are captured by models that serve as a basis for communication and training purposes, but this modeling is still a time consuming manual job. Semantic annotation of process models in combination with AI planning approaches can contribute to solve this drawback enabling an automatic creation of process models. But the semantic annotated process fragments necessary for starting the planning are often missing at all or not up-to-date anymore. Therefore, this work describes an approach for the semantic annotation and semantic-based planning of process models and introduces Cystid, an integration of Process Mining algorithms and semantic-based planning. ©2009 IEEE.		Lautenbacher, F.; Bauer, B.; Förg, S.	Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOC					Excluded	Excluded	new_screen			2		2009				
57		ModelGuidance	Enterprise modelling in the age of digital transformation	The digital transformation forces enterprises to change. In addition, the notion of economic exchange, core to the economy, has shifted from following a goods-dominant logic to a service-dominant logic, putting the focus on continuous value co-creation between providers and consumers. These trends drive enterprises to transform continuously. During enterprise transformations, coordination among the stakeholders involved is key. Shared understanding, agreement, and commitment, is needed on topics such as: the overall strategy of the enterprise, the current affairs of the enterprise and its context, as well as the ideal future affairs.Models, and ultimately enterprise modelling languages and frameworks, are generally seen as an effective way to enable such (informed) coordination. To this end, different languages and frameworks have been developed, including ArchiMate. ArchiMate, which has evolved to become a widely accepted industry standard, was developed at a time where the digital transformation was not yet that noticeable. At that the time, the focus was more on consolidation and optimisation. As such, it is logical to expect that the existing ArchiMate language may require some “updates” to be ready for digital transformations. The objective of this paper is therefore threefold: (1) posit, based on practical experiences and insights, key challenges which the digital transformation puts on enterprise (architecture) modelling languages, (2) assess to what extent ArchiMate meets these challenges, and (3) provide suggestions on how to possibly improve ArchiMate to better meet these challenges. © IFIP International Federation for Information Processing 2018.		van Gils, B.; Proper, H. A.	Lecture Notes in Business Information Processing					Excluded	Excluded	new_screen			2		2018				
58		ModelGuidance	From Business Process Models to Process-Oriented Software Systems	Several methods for enterprise systems analysis rely on flow-oriented representations of business operations, otherwise known as business process models. The Business Process Modeling Notation (BPMN) is a standard for capturing such models. BPMN models facilitate communication between domain experts and analysts and provide input to software development projects. Meanwhile, there is an emergence of methods for enterprise software development that rely on detailed process definitions that are executed by process engines. These process definitions refine their counterpart BPMN models by introducing data manipulation, application binding, and other implementation details. The de facto standard for defining executable processes is the Business Process Execution Language (BPEL). Accordingly, a standards-based method for developing process-oriented systems is to start with BPMN models and to translate these models into BPEL definitions for subsequent refinement. However, instrumenting this method is challenging because BPMN models and BPEL definitions are structurally very different. Existing techniques for translating BPMN to BPEL only work for limited classes of BPMN models. This article proposes a translation technique that does not impose structural restrictions on the source BPMN model. At the same time, the technique emphasizes the generation of readable (block-structured) BPEL code. An empirical evaluation conducted over a large collection of process models shows that the resulting BPEL definitions are largely block-structured. Beyond its direct relevance in the context of BPMN and BPEL, the technique presented in this article addresses issues that arise when translating from graph-oriented to block-structure flow definition languages.		Ouyang, Chun; Dumas, Marlon; Aalst, Wil M. P. Van Der; Hofstede, Arthur H. M. Ter; Mendling, Jan	ACM Trans. Softw. Eng. Methodol.					Excluded	Excluded	new_screen			2		2009				
59		ModelGuidance	Extensible executable models in the development of an ePortfolio	The ePortfolio have become a valuable tool applied in multiple contexts such as education and employment, with many of purposes and audiences. In the educational context the ePortfolios help to guide, motivate and track training processes and facilitate communication between participating agents. The IMS ePortfolio specification intends to standardize the structure of ePortfolios to enable the exchange and interoperability between applications that use them. This article proposes the application of extensible executable models to model the domain of features or attribute-value properties, and apply it to building a student ePortfolio. The context of use of the portfolio is defined by the projects Cumbia LD and cupi2, and takes into consideration the IMS ePortfolio specification for the design.		García, G. P.; Salcedo, J. A. V.						Excluded	Excluded	new_screen			2		2011				
60		ModelGuidance	Multi-Agent Modeling Toolkit - MAMT	Multi-agent system consists of two or more agents which cooperate/coordinate with each other in order to solve a complex problem which would be difficult or inappropriate if solved by single agent. Multi-agents are modeled using Agent Unified Modeling Language (AUML) as Unified Modeling Language (UML) notations do not fully express agent properties/behaviors. In this paper, we have proposed Multi-Agent Modeling Toolkit (MAMT) to help a designer in building rapid multi-agent based applications. The purpose of this toolkit is to create agent development environment where the developer can have various facilities like reusability of existing/developed agents, customize built-in agents, etc. MAMT provides the designer with built-in agents which are developed using Java Agent Development (JADE) framework, with the help of these designers can rapidly build multi-agent based applications. Creation and customization of built-in agents is based on the prototype inclusion design pattern and the designer can add or modify methods/behaviors according to their requirement(s); however the changes should be based on FIPA (Foundation of Intelligent Physical Agents) standards and compatible with JADE. MAMT has been evaluated on large number of sample applications; results were very promising and encourage the use of toolkit. © 2014 Elsevier B.V. All rights reserved.		Manzoor, U.; Zafar, B.	Simulation Modelling Practice and Theory					Excluded	Excluded	new_screen			2		2014				
61		ModelGuidance	Empirical investigation of the usefulness of gateway constructs in process models	Process modeling grammars are used to create scripts of a business domain that a process-aware information system is intended to support. A key grammatical construct of such grammars is known as a Gateway. A Gateway construct is used to describe scenarios in which the workflow of a process diverges or converges according to relevant conditions. Gateway constructs have been subjected to much academic discussion about their meaning, role and usefulness, and have been linked to both process-modeling errors and process-model understandability. This paper examines perceptual discriminability effects of Gateway constructs on an individual's abilities to interpret process models. We compare two ways of expressing two convergence and divergence patterns-Parallel Split and Simple Merge-implemented in a process modeling grammar. On the basis of an experiment with 98 students, we provide empirical evidence that Gateway constructs aid the interpretation of process models due to a perceptual discriminability effect, especially when models are complex. We discuss the emerging implications for research and practice, in terms of revisions to grammar specifications, guideline development and design choices in process modeling. © 2013 Operational Research Society Ltd. All rights reserved.		Recker, J.	European Journal of Information Systems					Excluded	Excluded	new_screen			2		2013				
62		ModelGuidance	A traceability and synchronization approach of the computational models of an enterprise architecture	An Enterprise Architecture (EA) represents the fundamental organization of the business process and Information Technology (IT) infrastructure, serving to capture the essentials of business, IT and its evolution, being relevant to protecting the business and maintaining the flexibility and adaptability of the organization. In the context of the enterprise architecture modeling, some problems were identified: (i) the lack of traceability of the elements present in the computational models or the visualization, in an understandable way, of the chain of elements that are related; and (ii) the absence of synchronization between the computational models of the strategic (strategic model), tactical (business process model) and operational IT levels, focusing on information systems (system requirements model). Among the negative impacts related to these problems are, for example, the obsolescence of models, the difficulty of carrying out impact analysis and decision making, in scenarios of organizational changes. Thus, in order to provide a reduction or elimination of the negative impacts caused by these problems, an approach is proposed to promote the traceability and synchronization of the computational models of an AE. The approach proposed in this work is composed of three layers that together provide: (i) a set of meta-models, representing the strategic, tactical and operational levels of the EA; (ii) a model traceability structure that supports change and configuration management through the use of COBIT, ITIL and ISO 20.000 recommendations and good practices; and (iii) a model synchronization structure that uses the techniques of model driven development (DDM) and allows automated (or semi) automated support to synchronize between the models produced. The purpose of this approach is to keep the computer models traceable and up-to-date, allowing: (i) the support for visualization and understanding of how a set of models (strategic, tactical and operational IT) and their elements relate; (ii) the support for impact analysis and decision-making in change scenarios; (iii) the necessary support to avoid the obsolescence of the models; and (iv) the creation and maintenance of the strategic alignment of the business with IT. © 2019 IEEE.		Moreira, J. R. P.; MacIel, R. S. P.	Proceedings - 21st IEEE Conference on Business Informatics, CBI 2019					Excluded	Excluded	new_screen			2		2019				
63		ModelGuidance	Co-Creating Platform Governance Models Using Boundary Resources: a Case Study from Dementia Care Services	Digital labor platforms are gaining in popularity in our societies. Information systems and software engineering disciplines have focused on organizational and technological aspects of these platforms, favoring the views of platform owners. At the same time, extensive knowledge of how workers use these platforms, and how they are affected by them, is emerging within computer-supported collaborative work and human-computer interaction disciplines. These two strands of research, one favoring the views of the platform owners and the other advocating the views of the platform users, are mainly developed in parallel and without influencing each other much. In this paper, we describe a case study of designing a digital labor platform for person-centered dementia care in a small company. Dementia care illustrates an extreme case of a complex type of work. This complexity helps us debate some of the benefits and shortcoming of current platforms and platform governance models. We analyze our case using an adaptation of the platform boundary resources model. This model helps us illustrate the tensions between platform owners and workers. A focus on platform governance models and how we co-create such models can hopefully lead to better designs for both views.		Farshchian, Babak A.; Thomassen, Hanne Ekran	{COMPUTER} {SUPPORTED} {COOPERATIVE} {WORK}-{THE} {JOURNAL} {OF} {COLLABORATIVE} {COMPUTING} {AND} {WORK} {PRACTICES}					Excluded	Excluded	new_screen			2		2019				
64		ModelGuidance	A multiparadigm approach to integrate gestures and sound in the modeling framework	"One of the essential means of supporting Human-Machine Interaction is a (software) language, exploited to input commands and receive corresponding outputs in a well-defined manner. In the past, language creation and customization used to be accessible to software developers only. But today, as software applications gain more ubiquity, these features tend to be more accessible to application users themselves. However, current language development techniques are still based on traditional concepts of human-machine interaction, i.e. manipulating text and/or diagrams by means of more or less sophisticated keypads (e.g. mouse and keyboard).
In this paper we propose to enhance the typical approach for dealing with language intensive applications by widening available human-machine interactions to multiple modalities, including sounds, gestures, and their combination. In particular, we adopt a Multi-Paradigm Modelling approach in which the forms of interaction can be specified by means of appropriate modelling techniques. The aim is to provide a more advanced human-machine interaction support for language intensive applications."		Amaral, V.; Cicchetti, A.; Deshayes, R.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2013				
65		ModelGuidance	Model driven security frameworks for addressing security problems of service oriented architecture	Service Oriented Architecture (SOA) based on Web Services technology gained popularity because business work flows can easily be executed as an orchestration of Web Services. These Web Services are independently developed and may be internal or external. With increase in connectivity among the Web Services, security risks rise exponentially. Moreover the security requirements are not defined at organizational level rather they left until the technical level. Many security problems related to SOA applications are highlighted by different authors which if not properly managed might have serious consequences. Various Model Driven Security Frameworks are presented by different research groups to overcome the security problems of SOA based applications. In this paper we have highlighted the security problems for SOA based applications and few Model Driven Security Frameworks are presented to develop secure software applications; their working style and security goals are also discussed in the course of paper. © 2010 IEEE.		Saleem, M. Q.; Jaafar, J.; Hassan, M. F.	Proceedings 2010 International Symposium on Information Technology - System Development and Application and Knowledge Society, ITSim'10					Excluded	Excluded	new_screen			2		2010				
66		ModelGuidance	CLIPS: experiments on model-driven engineering for production systems	The CLIPS project is a prospective approach of an implementation of a new type of automated production system. It aims to explore a range of academic and industrial promising propositions but not applied in the domain of industrial control system. For that it gathers industrials, R\&D companies specialized in the field of component-based framework and researchers to define a methodology to deal with this purpose, defining several steps and guidelines that may help companies specifying a new project, taking benefit from both the model-driven engineering and component-based approaches. After a brief overview of the CLIPS project context, we present in this paper the main stages of the methodology. The last part handles the material taxonomy and the deployments over execution platforms		Servat, D.; Chiron, F.; Kouiss, K.; Meurisse, T.; Souchet, G.						Excluded	Excluded	new_screen			2		2005				
67		ModelGuidance	Mistakes in UML Diagrams: Analysis of Student Projects in a Software Engineering Course	The Unified Modelling Language (UML) is being widely accepted as a modelling notation for visualizing software systems during design and development. UML has thus become part of many software engineering course curricula at universities worldwide, providing a recognized tool for practical training of students in understanding and visualizing software design. It is however common that students have difficulties in absorbing UML in its complexity, and often repeat the same mistakes that have been observed by course tutors in previous years. Having a catalogue of such mistakes could hence increase the effectiveness of both teaching and learning of UML diagrams. In this paper, we introduce such a catalogue, consisting of 146 types of mistakes in eight types of diagrams. As the main contribution of this study, we use this catalogue to guide the analysis of student projects within a software engineering course. In total, over 2,700 diagrams submitted over 12 weeks of a semester by 123 students were analysed to identify the frequency of mistakes (from the catalogue), correlations of the mistakes between different diagram types, correlation of the quality of student projects to exam results, student behaviour in terms of introducing and fixing the mistakes over time, and other interesting insights. The analysis is described together with its setup and execution, and all datasets and detailed guidebook to the catalogue of all mistakes is made available for download.		Chren, S.; Buhnova, B.; Macak, M.; Daubner, L.; Rossi, B.						Excluded	Excluded	new_screen			2		2019				
68		ModelGuidance	A multi-dimensional separation of concerns approach for model driven process framework modeling	Currently, model driven software development processes largely take the form of the integration of several developing approaches. However comparing, selecting, composing of developing approaches usually rely on experiences lacking systemic guidelines. In this paper, a multi-dimensional separation of concerns approach for process frameworks constructing is proposed. Taking abstraction, generality, behaviorism as meta concerns, developing approaches are compared. Incorporated with the expected evolving curves of these meta concerns, implementing frameworks of developing processes are constructed. This work will be beneficial to meet nonfunctional requirements on model driven development processes like improving efficiency, traceability and ensuring consistency.		Duan, Y.-C.; Gu, Y.-Q.	Ruan Jian Xue Bao/Journal of Software					Excluded	Excluded	new_screen			2		2006				
69		ModelGuidance	Model Driven Software Engineering in Education: A Multi-Case Study on Perception of Tools and UML	While several benefits of using models in software engineering have been observed in practice, the adoption of modeling remains low. Multiple challenges of using models, especially related to tools, have been reported both for industrial use and for education. However, there is a lack of systematic, empirical investigations of the challenges in modeling education and their relation to industrial challenges. Therefore, we conducted a multiple-case study with two cases, in the U.S and Sweden, focusing on students' perceptions towards tooling and UML in education. Our data collected from 369 student evaluation surveys, enriched with qualitative data, shows that the students' perception of modeling tools depends not only on the complexity of tools, but rather on multiple contextual factors, including tool characteristics, scope of course and project contents, nature of the required models, and the tools' role in generating executable artifacts. We conclude that there is a need for tailoring modeling tools for education beyond focusing on simplification and usability. Furthermore, due to the broad diversity within the modeling domain, there is a need for adapting the use of tools to the specific curriculum and course learning objectives.		Liebel, G.; Badreddin, O.; Heldal, R.						Excluded	Excluded	new_screen			2		2017				
70		ModelGuidance	Dynamic partitioning of complex process models	The E3 modeling language offers a set of mechanisms to support the modeling of complex business and engineering processes. The language is based on well-known object-oriented concepts, extended with specific process-related notions. The E3 language is supported by a modeling tool (called E3 p-draw) that offers mechanisms to support the dynamic partitioning of the process model, and enables the creation and the exploitation of multiple model slices. These mechanisms make it possible to master complex and large process models, since the process engineer can focus on specific factors and aspects of the process, ignoring those information that are irrelevant in a specific stage of the modeling activity. The language and the supporting tool have been applied to the modeling of real industrial processes.		Fuggetta, A.; Jaccheri, M. L.	Information and Software Technology					Excluded	Excluded	new_screen			2		2000				
71		ModelGuidance	Understanding driving behavior: Measurement, modeling and analysis	Human factors contribute in the manifestation of 95% of all accidents; recently there has been a research emphasis on driving behavior established as an outcome of individual actions as well as psychophysical values. This paper pursues the guidelines of systematic literature reviews to present an unbiased survey of the existing research on driving behavior in line with the psychophysical state as well as the behavioral operations of the driver and to develop unconventional taxonomies based upon the nature of the conducted study, measurement patterns and supervision motives underlying the detection and prediction models of driving behavior. A discussion on each classification is provided with a focus on the dominant mechanisms thought to be involved. The proposed overview gives insights into the scope of the problem and paves the way for grasping the major contributions and shortcomings in the state-of-the-art research. © 2019, Springer Nature Switzerland AG.		Elamrani Abou Elassad, Z.; Mousannif, H.	Advances in Intelligent Systems and Computing					Excluded	Excluded	new_screen			2		2019				
72		ModelGuidance	Coupling LaGrit unstructured mesh generation and model setup with TOUGH2 flow and transport: A case study	There are many applications in science and engineering modeling where an accurate representation of a complex model geometry in the form of a mesh is important. In applications of flow and transport in subsurface porous media, this is manifest in models that must capture complex geologic stratigraphy, structure (faults, folds, erosion, deposition) and infrastructure (tunnels, boreholes, excavations). Model setup, defined as the activities of geometry definition, mesh generation (creation, optimization, modification, refine, de-refine, smooth), assigning material properties, initial conditions and boundary conditions requires specialized software tools to automate and streamline the process. In addition, some model setup tools will provide more utility if they are designed to interface with and meet the needs of a particular flow and transport software suite. A control volume discretization that uses a two point flux approximation is for example most accurate when the underlying control volumes are 2D or 3D Voronoi tessellations. In this paper we will present the coupling of LaGriT, a mesh generation and model setup software suite and TOUGH2 (Pruess et al., 1999) to model subsurface flow problems and we show an example of how LaGriT can be used as a model setup tool for the generation of a Voronoi mesh for the simulation program TOUGH2. To generate the MESH file for TOUGH2 from the LaGriT output a standalone module Lagrit2Tough2 was developed, which is presented here and will be included in a future release of LaGriT. In this paper an alternative method to generate a Voronoi mesh for TOUGH2 with LaGriT is presented and thanks to the modular and command based structure of LaGriT this method is well suited to generating a mesh for complex models. © 2017 Elsevier Ltd		Sentís, M. L.; Gable, C. W.	Computers and Geosciences					Excluded	Excluded	new_screen			2		2017				
73		ModelGuidance	Inter-modelling with patterns	Inter-modelling is the activity of modelling relations between two or more modelling languages. The result of this activity is a model that describes the way in which model instances of these languages can be related. Many tasks in model-driven development can be classified as inter-modelling, for example designing model-to-model transformations, defining model matching and traceability relations, specifying model merging and model weaving, as well as describing mechanisms for inter-model consistency management and model synchronization. This paper presents our approach to inter-modelling in a declarative, relational, visual, and formal style. The approach relies on declarative patterns describing allowed or forbidden relations between two modelling languages. Such specification is then compiled into different operational mechanisms that are tailor-made for concrete inter-modelling scenarios. Up to now, we have used the approach to generate forward and backward transformations from a pattern specification. In this paper we demonstrate that the same specification can be used to derive mechanisms for other inter-modelling tasks, such as model matching and model traceability. In these scenarios the goals are generating the traces between two existing models, checking whether two models are correctly traced, and modifying the traces between two models if they are incorrect. © 2011 Springer-Verlag.		Guerra, E.; de Lara, J.; Orejas, F.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2013				
74		ModelGuidance	Modelling reactive multimedia: Design and authoring	Multimedia document authoring is a multifaceted activity, and authoring tools tend to concentrate on a restricted set of the activities involved in the creation of a multimedia artifact. In particular, a distinction may be drawn between the design and the implementation of a multimedia artifact. This paper presents a comparison of three different authoring paradigms, based on the common case study of a simple interactive animation. We present details of its implementation using the three different authoring tools, MCF, Fran and SMIL 2.0, and we discuss the conclusions that may be drawn from our comparison of the three approaches. © 2005 Springer Science + Business Media, Inc.		Thompson, S.; King, P.; Cameron, H.	Multimedia Tools and Applications					Excluded	Excluded	new_screen			2		2005				
75		ModelGuidance	Unified Modeling Language and Object-oriented Design Pattern based computer-aided welding fixture design system	Most of previous computer aided fixture design(CAFD) research has mainly concentrated on machining fixtures rather than welding fixtures, and how to face the challenges such as dynamic requirements, expansion, maintenance and management in the development of complicated computer aided welding fixture design(CAWFD) software system has received much less attention. Application of Unified Modeling Language (UML) and Object-oriented Design Pattern (OODP) for developing CAWFD software system has been discussed in this paper. CAWFD system functions like design phases, workflow and design subtasks in each design phase are introduced. How to employ UML fundamental elements such as use case diagram, class diagram and component diagram to model the CAWFD system has been demonstrated. Multiple-tier architecture of CAWFD and its benefits are also presented. OODP has been certified to be an effective and efficient method especially for class diagram creation and refinement which is the key point during system analysis and design. Due to the complexity of CAWFD, the class diagram for CAWFD is classified as conceptual class diagram and detailed class diagram. How to use Model-View-Control (M-V-C) design pattern in conceptual class diagram and the benefits of M-V-C application are discussed. For detailed class diagram, the techniques of applying Command, Observer, Factory and Template patterns to realize code reuse are articulated. As a result, the extension, reusability and maintainability of CAWFD system can be obtained by applying UML and OODP. Copyright © 2010 by ASME.		Li, H.; Rong, Y.	Proceedings of the ASME Design Engineering Technical Conference					Excluded	Excluded	new_screen			2		2010				
76		ModelGuidance	Gimt: A tool for ontology and goal modeling in BDI multi-agent design	Designing and developing BDI multi-agent systems would be facilitated by rising up the level of abstraction to use and by a methodological approach for managing it. To this aim it is common the integration of goal oriented analysis techniques with the design and implementation phases. In this fashion, our experience is that the use of an ontology in the early stages of the process is a great support for subsequent phases: goal modeling, agent design and implementation. However, we are aware that building and maintaining an ontology has to be supported by appropriate tools. This paper proposes GIMT (Goal Identification and Modeling Tool) as a further step towards the creation of a complete methodological approach for developing multi-agent systems to be implemented in the JACAMO framework. GIMT is a CASE tool for supporting ontology building and goal modeling. Besides the advantages offered by an automatic tool, the other novelty of this research is in the mapping between metamodeling based on Model Driven Engineering (MDE) and Domain Specific Modeling Languages (DSMLs) with the Eclipse plug-in development environment.		Cossentino, M.; Nogare, D. D.; Giancarlo, R.; Lodato, C.; Lopes, S.; Ribino, P.; Sabatucci, L.; Seidita, V.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2014				
77		ModelGuidance	Conceptual Modeling supported by Text Analysis	To think of society as a System is important. Conceptual modeling is a helpful method to analyze society as Systems. Flow charts, Entity-Relationship Diagrams and other modeling techniques in software engineering are useful for analyzing and designing society as Systems. As we human beings think/understand the universe and society using natural language, the use case and narrative sorties are effective ways to design society as Systems. This reSearch will discuss the creation of a conceptual model supported by the use of text analysiS. © 2018 The Author(s).		Kino, Y.	Procedia Computer Science					ConflictExcluded	Excluded	new_screen			2		2018				
78		ModelGuidance	Willingness to use electronic revenue collection system: Moderating effect of e-collection training on the extended technology acceptance model	The current study examines accounting staff willingness in state-owned tertiary institutions in Nigeria to use a e-revenue collection system. Specifically, e-collection training was employed as a moderating variable to explore its effect towards technology acceptance model (TAM). In accomplishing the above, a survey method was used by distributing a set of questionnaires to users of the e-collection system in nine state-owned tertiary institutions in Nigeria. The statistical results from the Partial Least Square-Structural Equation Modelling (PLS-SEM) analysis demonstrated that perceived usefulness, computer self-efficacy and attitude were all significant influences on the willingness to use. More so, e-collection training was found only to moderate the relationship between attitude and willingness to use. As such, it is recommended that the government needs to provide adequate training opportunities to encourage the use of technological devices among the accounting staff, most importantly, e-collection system training. © 2019, IGI Global.		Haruna, S.; Md Kassim, N.	International Journal of Enterprise Information Systems					Excluded	Excluded	new_screen			2		2019				
79		ModelGuidance	CoSBiLab LIME: A language interface for stochastic dynamical modelling in ecology	We present a simple language tool, CoSBiLab LIME, for building ecosystem models for stochastic dynamic simulation. The LIME language allows the user to give a biologically intuitive model description in a narrative style. After performing static analysis on the model structure, the software tool translates the model description into the BlenX programming language for stochastic dynamical simulation. These features facilitate the analysis of parallel, multiple ecological interactions in metacommunities. The software tool thus allows ecologists with no programming background to perform quite complicated, process-algebra-based simulations. © 2011 Elsevier Ltd.		Kahramanoĝullari, O.; Jordán, F.; Lynch, J.	Environmental Modelling and Software					Excluded	Excluded	new_screen			2		2011				
80		ModelGuidance	Digital business model effectuation: An agile approach	The radical changes in today's competitive environment created a “big bang” effect: companies and industries are being disrupted in an unprecedented short time. The challenge has shifted from predicting the unknown or conventional method of venture creation to agile actions, which is to act rapidly before the competition catches up and eliminate any advantage one may have, especially for entrepreneurs and small businesses with significant resource constraints. The objective of this research is to investigate alternative approaches under a time-constrained setting. A recent national open innovation initiative of Finland challenged practitioners and researchers to transform technologies into commercializable innovations in under six months. A high-tech case within the challenge piloted the agile effectuation of a business model with three parallel approaches: effectuation, causation and lean startup method, thus providing antecedent on how effectuation theory can be integrated with agile development and business model theory. © 2018 Elsevier Ltd		Xu, Y.; Koivumäki, T.	Computers in Human Behavior					Excluded	Excluded	new_screen			2		2019				
81		ModelGuidance	Modeling guidelines and usage analysis towards applying HiP-HOPS method to airborne electrical systems	Aircraft development process requires safety assessment to ensure aircraft continued airworthiness by guaranteeing that hazards related to aircraft functions are properly addressed. Safety analyses require increasingly more reliable and efficient solutions, particularly for complex and highly integrated aircraft systems. Fault Tree Analysis (FTA) is a safety technique broadly applied in aerospace industry. The generation of fault trees can be facilitated by using the HiP-HOPS method proposed by Dr. Yiannis Papadopoulos. HiP-HOPS supports semi-automatically generation of fault trees based on system architectural model and annotations regarding system failure modes. In this paper, we investigate the usage of HiP-HOPS method in airborne electrical systems. We propose modeling guidelines, in order to help engineers and analysts to build system models more suitable to the application of HiP-HOPS. We apply both HiP-HOPS and guidelines in a case study and evaluate HiP-HOPS applicability using criteria as acceptability, suitability and practicality. © Springer International Publishing Switzerland 2015.		Villela, C. D.; Sano, H. H.; Bezerra, J. M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2015				
82		ModelGuidance	Using macromodels to manage collections of related models	The creation and manipulation of multiple related models is common in software development, however there are few tools that help to manage such collections of models. We propose a framework in which different types of model relationships - such as submodelOfand refinementOf - can be formally defined and used with a new type of model, called a macromodel, to express the required relationships between models at a high-level of abstraction. Macromodels can be used to support the development, comprehension, consistency management and evolution of sets of related models. We illustrate the framework with a detailed example from the telecommunications industry and describe a prototype implementation. © 2009 Springer Berlin Heidelberg.		Salay, R.; Mylopoulos, J.; Easterbrook, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
83		ModelGuidance	Evolutionary Optimization of Software Quality Modeling with Multiple Repositories	A novel search-based approach to software quality modeling with multiple software project repositories is presented. Training a software quality model with only one software measurement and defect data set may not effectively encapsulate quality trends of the development organization. The inclusion of additional software projects during the training process can provide a cross-project perspective on software quality modeling and prediction. The genetic-programming-based approach includes three strategies for modeling with multiple software projects: Baseline Classifier, Validation Classifier, and Validation-and-Voting Classifier. The latter is shown to provide better generalization and more robust software quality models. This is based on a case study of software metrics and defect data from seven real-world systems. A second case study considers 17 different (nonevolutionary) machine learners for modeling with multiple software data sets. Both case studies use a similar majority-voting approach for predicting fault-proneness class of program modules. It is shown that the total cost of misclassification of the search-based software quality models is consistently lower than those of the non-search-based models. This study provides clear guidance to practitioners interested in exploiting their organization's software measurement data repositories for improved software quality modeling.		Liu, Y.; Khoshgoftaar, T. M.; Seliya, N.	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2010				
84		ModelGuidance	Experience from model and software reuse in aircraft simulator product line engineering	"Context: Reuse"" and ""Model Based Development"" are two prominent trends for improving industrial development efficiency. Product lines are used to reduce the time to create product variants by reusing components. The model based approach provides the opportunity to enhance knowledge capture for a system in the early stages in order to be reused throughout its lifecycle. This paper describes how these two trends are combined to support development and support of a simulator product line for the SAAB 39 Gripen fighter aircraft. Objective: The work aims at improving the support (in terms of efficiency and quality) when creating simulation model configurations. Software based simulators are flexible so variants and versions of included models may easily be exchanged. The objective is to increase the reuse when combining models for usage in a range of development and training simulators. Method: The research has been conducted with an interactive approach using prototyping and demonstrations"		Andersson, H.; Herzog, E.; Ölvander, J.	Information and Software Technology					Excluded	Excluded	new_screen			2		2013				
85		ModelGuidance	Case-based reasoning and system design: An integrated approach based on ontology and preference modeling	This paper addresses the fulfillment of requirements related to case-based reasoning (CBR) processes for system design. Considering that CBR processes are well suited for problem solving, the proposed method concerns the definition of an integrated CBR process in line with system engineering principles. After the definition of the requirements that the approach has to fulfill, an ontology is defined to capitalize knowledge about the design within concepts. Based on the ontology, models are provided for requirements and solutions representation. Next, a recursive CBR process, suitable for system design, is provided. Uncertainty and designer preferences as well as ontological guidelines are considered during the requirements definition, the compatible cases retrieval, and the solution definition steps. This approach is designed to give flexibility within the CBR process as well as to provide guidelines to the designer. Such questions as the following are conjointly treated: how to guide the designer to be sure that the requirements are correctly defined and suitable for the retrieval step, how to retrieve cases when there are no available similarity measures, and how to enlarge the research scope during the retrieval step to obtain a sufficient panel of solutions. Finally, an example of system engineering in the aeronautic domain illustrates the proposed method. A testbed has been developed and carried out to evaluate the performance of the retrieval algorithm and a software prototype has been developed in order to test the approach. The outcome of this work is a recursive CBR process suitable to engineering design and compatible with standards. Requirements are modeled by means of flexible constraints, where the designer preferences are used to express the flexibility. Similar solutions can be retrieved even if similarity measures between features are not available. Simultaneously, ontological guidelines are used to guide the process and to aid the designer to express her/his preferences. Copyright © 2014 Cambridge University Press.		Romero Bejarano, J. C.; Coudert, T.; Vareilles, E.; Geneste, L.; Aldanondo, M.; Abeille, J.	Artificial Intelligence for Engineering Design, Analysis and Manufacturing: AIEDAM					Excluded	Excluded	new_screen			2		2014				
86		ModelGuidance	From Programming to Modeling: Our Experience with a Distributed Software Engineering Course	Distributed Software Engineering (DSE) concepts in Computer Science (or Engineering) Degrees are commonly introduced using a hands-on approach mainly consisting of teaching a particular distributed and component-based technology platform (such as Java Enterprise Edition or Microsoft .NET) and proposing the students to develop a small distributed software application with it. Though this approach provides the students with some relevant practical knowledge, we believe that it is not the most appropriate way of teaching all the concepts and particularities of DSE. Thus, in this paper we report on our experience of redesigning an initial DSE course following a model-based approach. By raising the level of abstraction we gained modularity, separation of concerns and technology independence, while making the course evolve according to the latest trends in software development methods		Cabot, Jordi; Durán, Francisco; Moreno, Nathalie; Vallecillo, Antonio; Romero, José Raúl						Excluded	Excluded	new_screen			2		2008				
87		ModelGuidance	A lateral thinking framework for semantic modelling of emergencies in smart cities	Manual definition of models for emergency management scenarios is a demanding activity due to the huge number of different situations to be considered. It requires knowledge related to the crisis and emergency domains, to the context (e.g., a specific city and its current regulations) and to modelling techniques. In this paper, we propose to tackle this problem according to a lateral thinking perspective and, following this line, we present a framework supporting automatic creation of conceptual models concerning emergency management scenarios by means of semantic techniques. In particular, this framework relies on an ontology and on a set of semantic rules to manage, respectively, the domain and contextual knowledge, and on the design patterns approach to support the modelling activity. A software experimentation of the framework based on SPARQL and applied to emergency scenarios in smart cities is proposed to demonstrate the viability of the approach. © 2014 Springer International Publishing Switzerland.		De Nicola, A.; Melchiori, M.; Villani, M. L.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2014				
88		ModelGuidance	Building a software requirements specification and design for an avionics system: An experience report	As with many of the products and systems that pervade us, aircraft rely more and more on software for controlling the behaviour of their systems. In consequence, the field has seen increased work around more up-to-date, effective software engineering technologies for aiding avionics software providers in reducing software and development complexities and supporting them in their certification endeavours. However, there is a lack in the literature of reusable, comprehensive references about avionics software developments in conformance with DO-178C. Moreover, there is a need for a benchmark specification to support the evaluation of proposed engineering approaches in the field. This paper presents a software development case study of an avionics control software for a landing gear system. All the documentation for the software's requirements specification and design has been developed to conform with the DO-178C guideline and the applicable DO-331 and DO-332 supplements for model-based and object-oriented development, respectively. A requirements specification and design methodology is proposed and followed for the construction of the software in the case study. Furthermore, the paper discusses the observations, and challenges and issues experienced throughout the process. © 2018 ACM.		Paz, A.; Boussaidi, G. E.	Proceedings of the ACM Symposium on Applied Computing					Excluded	Excluded	new_screen			2		2018				
89		ModelGuidance	Model-based generation of self-adaptive cloud services	An important shift in software delivery is the definition of a cloud service as an independently deployable unit by following the microservices architectural style. Container virtualization facilitates development and deployment by ensuring independence from the runtime environment. Thus, cloud services are built as container-based systems - a set of containers that control the lifecycle of software and middleware components. However, using containers leads to a new paradigm for service development and operation: Self-service environments enable software developers to deploy and operate container-based systems on their own - you build it, you run it. Following this approach, more and more operational aspects are transferred towards the responsibility of software developers. In this work, we propose a concept for self-adaptive cloud services based on container virtualization in line with the microservices architectural style and present a model-based approach that assists software developers in building these services. Based on operational models specified by developers, the mechanisms required for self-adaptation are automatically generated. As a result, each container automatically adapts itself in a reactive, decentralized manner. We evaluate a prototype, which leverages the emerging TOSCA standard to specify operational behavior in a portable manner. © 2019, Springer Nature Switzerland AG.		Kehrer, S.; Blochinger, W.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2019				
90		ModelGuidance	How face the top MDE adoption problems	Model Driven Engineering (MDE) refers to the creation and manipulation of models in the end-to-end application lifecycle. When adopting a model-based development approach many challenges arise, some of these are related to the immaturity of the methods and tools that support this paradigm. This paper presents an exploratory case study developed to analyze how the renowned MDE technology solutions contribute to face the adoption problems. The case study consisted of developing a Web application for an incident management process based on ITIL (Information Technology Infrastructure Library) using tools from three different MDE approximations: MDA, MDSD, and BPM. As a result of our study, we suggest different strategies to help practitioners face the top MDE adoption problems.		Quintero, J.; Rucinque, P.; Anaya, R.; G. Piedrahita						Excluded	Excluded	new_screen			2		2012				
91		ModelGuidance	A Three-Stage Defect Prediction Model for Cross-Project Defect Prediction	Aiming at dealing with the problems of the data deficiency, data high dimensionality in software defect prediction (SDP), this paper proposes a novel three-stage defect prediction model. First we introduced the information flow algorithm (IFA) to do the causality analysis to choose the most representative feature subset. Then we utilized the nearest neighbor method in similarity measuring between the local dataset and the cross-project data, to construct a homogenous training dataset. Last we proposed a new Bayes classifier, which evolves the Naïve Bayes classifier with the vibration of string based diffusion function (VSDF).		Huang, S.; Wu, Y.; Ji, H.; Bai, C.						Excluded	Excluded	new_screen			2		2017				
92		ModelGuidance	Having Fun at Home: Interleaving Fieldwork and Goal Models	"We aim to make sense of a perplexing human experience (fun) as it occurs in a recently discovered place for socio-technical study (the home). Our toolkit includes technology probes, associated fieldwork and models from software engineering. We describe how we interleave the probes and models. As the work will please neither modeling nor fieldwork purists, we enunciate the benefits of our ambidextrous approach.
"		Pedell, Sonja; Miller, Tim; Vetere, Frank; Sterling, Leon; Howard, Steve; Paay, Jeni						Excluded	Excluded	new_screen			2		2009				
93		ModelGuidance	Merging models based on given correspondences	A model is a formal description of a complex application artifact, such as a database schema, an application interface, a UML model, an ontology, or a message format. The problem of merging such models lies at the core of many meta data applications, such as view integration, mediated schema creation for data integration, and ontology merging. This paper examines the problem of merging two models given correspondences between them. It presents requirements for conducting a merge and a specific algorithm that subsumes previous work.		Pottinger, R. A.; Bernstein, P. A.	Proceedings - 29th International Conference on Very Large Data Bases, VLDB 2003					Excluded	Excluded	new_screen			2		2003				
94		ModelGuidance	Scenario-based modeling in industrial information systems	This manuscript addresses the creation of scenario-based models to reason about the behavior of existing industrial information systems. In our approach the system behavior is modeled in two steps that gradually introduce detail and formality. This manuscript addresses the first step, where text-based descriptions, in the form of structured rules, are used to specify how the system is or should be regulated. Those rules can be used to create behavioral snapshots, which are collections of scenario-based descriptions that represent different instances of the system behavior. Snapshots are specified in an intuitive and graphical notation that considers the elements from the problem domain and permit designers to discuss and validate the externally observable behavior, together with the domain experts. In the second step (not fully covered in this manuscript), the system behavior is formalized with an executable model. This formal model, which in our approach is specified using the Colored Petri Net (CP-nets) language, allows the system internal behavior to be animated, simulated, and optimized. The insights gained by experimenting with the formal model can be subsequently used for reengineering the existing system. © IFIP International Federation for Information Processing 2010.		Machado, R. J.; Fernandes, J. M.; Barros, J. P.; Gomes, L.	IFIP Advances in Information and Communication Technology					Included	Included	new_screen			2		2010				
95		ModelGuidance	A discrete event simulation model in the case of managing a software project	The design and development of large-scale software projects is a complex endeavor, often facing problems like cost and schedule overruns as well as low quality. Over the last years the management of software development projects has been recognized as the cornerstone point of seeking improvement and solutions. Simulation modeling of the software project process is gaining interest among academics and practitioners, as a method to tackle the complex questions with which relevant enterprises are confronted. It offers support on several issues, such as defining software product development strategies, decision-making regarding process improvement and training, in a time span ranging from a short portion of the life cycle to long term product evolution, with organization-wide implications. The aim of this work is to implement a model simulating a core part of a software project process, enabling the estimation of several project development details such as delivery times and quality metrics. The purpose of the model is to assist project managers in control and monitoring, but also in identifying the best planning alternatives. The model scope covers a portion of the life cycle of an incremental software development venture. © 2006 Elsevier B.V. All rights reserved.		Kouskouras, K. G.; Georgiou, A. C.	European Journal of Operational Research					Excluded	Excluded	new_screen			2		2007				
96		ModelGuidance	A Data-Driven Generative Model for GPS Sensors for Autonomous Driving	Autonomous driving (AD) is envisioned to have a significant impact on people's life regarding safety and comfort. Positioning is one of the key challenges in realizing AD, where global navigation systems (GNSS) is traditionally used as an important source of information. The area of GNSS are well explored and the different sources of error are deeply investigated. However the existing modeling methods often have very comprehensive requirements for the training data where all affecting conditions such as ephemeris data should be well known. The main goal of this paper is to develop a solution to model GPS error that only requires information which is available in the vehicle without having access to detailed information about the conditions. We propose a statistical generative model using autoregression and Gaussian mixture models and develop a learning algorithm to estimate the parameters using the data collected in real traffic. The proposed model is evaluated by comparing the produced artificial data with the validation data collected at different traffic conditions and the results indicate that the model is successfully mimicking the sensor behavior.		Karlsson, E.; Mohammadiha, N.						ConflictIncluded	Excluded	new_screen			2		2018				
97		ModelGuidance	Modeling the reusable content of adaptive web-based applications using an ontology	Personalization becomes more common in Web-based applications. More and more adaptive Web-based applications that adapt information presentation (the content or navigation) employing goals and other characteristics of a user or context are developed. By increasing the number of existing adaptive applications the need for more effective creating and reusing the content among adaptive applications rises. In this chapter we present an approach to creating the content using ontological representation that is suitable for reusing. The ontology includes a domain model and domain dependent part of a user model, both specified on several levels of abstraction. We support the content transformation between several applications and its cross-system use that enables better use of best characteristics of each application without the need of manually creation of the content, which already exists. We evaluated the method using the domain ontology of teaching programming by examples. We claim that the content and structure of the adaptive application represented by the ontology is suitable for sharing and reusing when defining new applications. © 2008 Springer-Verlag Berlin Heidelberg.		Bieliková, M.; Moravčík, M.	Studies in Computational Intelligence					ConflictExcluded	Excluded	new_screen			2		2008				
98		ModelGuidance	A look into business process modeling guidelines through the lens of the technology acceptance model	"Business process modeling is one of the first steps towards achieving organizational goals in the requirements engineering phase. This is why business process modeling quality is an essential aspect for the development and technical support of any company. Modeling experts rely mainly on their personal experience, and the tacit knowledge. In order to help less experienced modelers, many authors have formulated modeling guidelines as a mean to achieve better model quality. Our research goal is to assess the acceptance of these guidelines for teaching purposes through a survey. To achieve this objective we investigate usefulness, ease of use and the intention to use of a collected set of pragmatic guidelines according to the technology acceptance model by means of a survey amongst Cuban PhD students. Results reveal the best"" and ""worst"" guidelines as perceived by novice modelers. We also witnessed that perceived ease of use has an important influence on the perceived usefulness"		de Oca, I. M.-M.; Snoeck, M.; Casas-Cardoso, G.	Lecture Notes in Business Information Processing					ConflictExcluded	Excluded	new_screen			2		2014				
99		ModelGuidance	ROKA: A Software Development Methodology for Industrial Automation	The industry invests great amounts of resources in automation and maintenance systems. To encourage more efficient systems a design of a methodology is needed, it must work for software development in industrial automation processes. To obtain guidelines to design such a methodology, a literature review was performed. As a result, a methodology was developed based on good practices and lessons learned from Software Engineering. It was made for the development of advanced structured software in industrial automation systems. Through user experiences analysis a positive validation was obtained, it confirms that a methodology for mechatronic and automation systems is necessary, also it is an almost unknown area, additionally, some observations about how to teach the methodology were also obtained.		Kawaminami-Garcia, I. R.; Rodríguez-Elias, O. M.; Meneces-Mendoza, S. R.; Velazquez-Mendoza, M. J.						ConflictExcluded	Excluded	new_screen			2		2018				
100		ModelGuidance	Deep Green: Modelling Time-Series of Software Energy Consumption	Inefficient mobile software kills battery life. Yet, developers lack the tools necessary to detect and solve energy bugs in software. In addition, developers are usually tasked with the creation of software features and triaging existing bugs. This means that most developers do not have the time or resources to research, build, or employ energy debugging tools. We present a new method for predicting software energy consumption to help debug software energy issues. Our approach enables developers to align traces of software behavior with traces of software energy consumption. This allows developers to match run-time energy hot spots to the corresponding execution. We accomplish this by applying recent neural network models to predict time series of energy consumption given a software's behavior. We compare our time series models to prior state-of-the-art models that only predict total software energy consumption. We found that machine learning based time series based models, and LSTM based time series based models, can often be more accurate at predicting instantaneous power use and total energy consumption.		Romansky, S.; Borle, N. C.; Chowdhury, S.; A. Hindle; Greiner, R.						ConflictExcluded	Excluded	new_screen			2		2017				
101		ModelGuidance	Designing business capability-aware configurable process models	Process Aware Information Systems manage processes within organisations on the basis of business process models. These models can be created either from scratch or by reusing exiting reference process models. Particular types of reference models are configurable process models that are created by merging multiple models into a single one that can be customized to the needs of the business experts. Using those models presents two main challenges: their creation and their configuration. In this paper, we focus on the first challenge and propose a novel algorithm for merging process models into a configurable process model. The difference in our work is the pre-annotated process models with their business capabilities that report on what actions each process element achieves. Our algorithm generates configurable models that are also annotated with their capabilities that can be used to face the second challenge of these models: the configuration phase. We tested our algorithm using real-world process models to evaluate the required creation time and resulting compression rate after merging the input models. The results show that the models can be created in few milliseconds and achieving a compression rate of 50%. We further carried out interviews with domain experts to assess the usefulness and the level of maturity of this work. The results show the importance of the automation of process merging using a tool support that we proposed. However, further adaptation efforts are required to integrate this work in the working environments of the interviewed experts. © 2017 Elsevier Ltd		Derguech, W.; Bhiri, S.; Curry, E.	Information Systems					ConflictExcluded	Excluded	new_screen			2		2017				
102		ModelGuidance	Modeling dynamic component interfaces	We adopt a component model based on object-oriented systems, introducing the concepts of components and their structure. A component consists of a dynamically changing set of connected objects. Only some of these objects are interface objects, and are thus accessible from the environment. During the component lifetime not only the number of objects, but also that of interface objects, and their connections change. To describe this situation, we introduce component interface diagrams (CIDs)-an adaption of UML diagrams-as a notation to characterize interfaces of components, their structure, and their navigability. We show how CIDs can be used to describe the in-house developed Open Editor Framework (OEF). Finally, we give guidelines that allow to map components described with CIDs directly to several component technologies, like ActiveX, CORBA, or Java Beans.		Huber, F.; Rausch, A.; Rumpe, B.						ConflictExcluded	Excluded	new_screen			2		1998				
103		ModelGuidance	Towards process-oriented modelling and creation of multi-agent systems	Different ways of integrating business processes and agents have been proposed, but using restricted process models or targeting only single agents, none of them is truly convincing. Nevertheless, business processes have many notions in common with agents and would be well suited for modelling complex multi-agent systems. In this paper, we combine concepts of two existing approaches to a mapping from business process diagrams to readily executable agent components. The results are well-structured and extensible, and at the same time account for nearly the entire expressiveness of the process modelling notation. © Springer International Publishing Switzerland 2014.		Kiister, T.; Heßler, A.; Albayrak, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2014				
104		ModelGuidance	A review of the seven modelling approaches for digital ecosystem architecture	A dynamic digital ecosystem is an interrelated network of organisations, people and/or entities that interact and collaborate for value co-creation. The challenge is how to effectively model the digital ecosystems operating in a highly complex and dynamic environment. There are several modelling approaches to choose from. There is a need to evaluate the existing modelling approaches to support the modelling of digital ecosystems. This paper evaluates the scope and coverage of the selected seven modelling approaches (Adaptive Enterprise Architecture, ArchiMate, TOGAF, FAML, ISO/IEC/IEEE 42010, SABSA, and ITIL) for modelling the digital ecosystems. Adaptive enterprise architecture is taken as a reference architecture for this review due to its higher relevance to digital ecosystem layers. The results of this review indicate that every modelling methodology is different in scope and coverage and demands the integration and tailoring of a context specific modelling approaches to provide the type of support needed for digital ecosystems. © 2019 IEEE.		Anwar, M. J.; Gill, A. Q.	Proceedings - 21st IEEE Conference on Business Informatics, CBI 2019					ConflictExcluded	Excluded	new_screen			2		2019				
105		ModelGuidance	Managing complexity of modeling industrial processes with P/T nets	Due to necessary specifications of manifold coordination for managing resources interdependencies and corresponding control data flows the design of Petri Nets (here is referred to P/T Nets) describing industrial processes tend to generate considerably high complexity itself. With regard to economic efficiency of process modeling and simulation studies it is essential to cope with this complexity on a systematic basis. The paper will take up this problem, which has rarely been regarded so far. Three major mutually dependent topics are focused on, and are applied in a case study: View-oriented phases of the model construction, the use of model components and the application of the Guidelines of Modeling (GoM).		Uthmann, Christoph V.; Becker, Joerg	Proceedings of the IEEE International Conference on Systems, Man and Cybernetics					ConflictExcluded	Excluded	new_screen			2		1998				
106		ModelGuidance	Empirical assessment of MDE in industry	This paper presents some initial results from a twelve-month empirical research study of model driven engineering (MDE). Using largely qualitative questionnaire and interview methods we investigate and document a range of technical, organizational and social factors that apparently influence organizational responses to MDE: specifically, its perception as a successful or unsuccessful organizational intervention. We then outline a range of lessons learned. Whilst, as with all qualitative research, these lessons should be interpreted with care, they should also be seen as providing a greater understanding of MDE practice in industry, as well as shedding light on the varied, and occasionally surprising, social, technical and organizational factors that affect success and failure. We conclude by suggesting how the next phase of the research will attempt to investigate some of these issues from a different angle and in greater depth.		Hutchinson, J.; Whittle, J.; Rouncefield, M.; S. Kristoffersen						ConflictExcluded	Excluded	new_screen			2		2011				
107		ModelGuidance	DESTINY: A model-driven process-aware requirements engineering methodology	"Today's enterprises, independently of their size, depend on the successful development of an auto-mated Information System (IS); this moves them to the software development world. The success of this move is often hindered by the difficulty in collecting the IS requirements to produce a software that is aligned with the business logic of the enterprise. This paper proposes an MDA-compliant method that helps the system analyst to generate the IS requirements - modelled through a use case diagram - from the enterprise's business process modelled in the standard notation BPMN. The pro-posed method has the merit of producing IS requirements that are aligned with the business process, accounting for the structural and semantic perspectives of the business process, and respecting best practice"" quality guidelines. Compared to existing requirements engineering methods"		Jammal, M. I.; Ayed, N. E. B.; Ben-Abdallah, H.	ICSOFT 2017 - Proceedings of the 12th International Conference on Software Technologies					ConflictExcluded	Excluded	new_screen			2		2017				
108		ModelGuidance	Domain modeling with object-process methodology	Domain engineering can simplify the development of software systems in specific domains. During domain analysis, the first step of domain engineering, the domain is modeled at an abstract level providing guidelines for application modeling within that domain. Most domain analysis approaches suffer from low accessibility and limited expressiveness. In this paper we utilize the application-based domain modelling (ADOM) approach and apply it to the Object-Process Methodology (OPM) modelling language. We do that by extending Object-Process Methodology (OPM) to support domain analysis. We also performed an experiment to verify that the proposed extension improves the model quality compared to quality arrived at without the extension. Our experimental results show that, when presented with a set of requirements, subjects that used OPM with the domain analysis extension arrived at a system model which is ten percents better than the system model arrived at by subjects that used OPM alone in terms of model correctness.		Sturm, A.; Dori, D.; Shehory, O.	ICEIS 2006 - 8th International Conference on Enterprise Information Systems, Proceedings					ConflictExcluded	Excluded	new_screen			2		2006				
109		ModelGuidance	Towards a model-driven approach to control identity management systems	Identity management systems require consolidating the diversity of many user repositories, the creation of roles and their assignment to the identity management software. To decrease administration costs we propose linking the identity management system to business process models which contain the organizational responsibilities. Therefore, we introduce a modeling grammar to model web-services that access existing enterprise models. We illustrate the usefulness of our approach with a pilot study conducted at the University of Muenster (Germany).		Juhrisch, M.; Weller, J.; Dietz, G.	PACIS 2007 - 11th Pacific Asia Conference on Information Systems: Managing Diversity in Digital Enterprises					ConflictExcluded	Excluded	new_screen			2		2007				
110		ModelGuidance	A UML-Based Methodology for Hypermedia Design	"We propose a methodology for hypermedia design which is based on a UML profile for the hypermedia domain. Starting with a use case analysis and a conceptual model of the application we first provide guidelines for modeling the navigation space. From the navigation space model we can derive, in a next step, a navigational structure model which shows how to navigate through the navigation space using access elements like indexes, guided tours, queries and menus. Finally, a presentation model is constructed that can be directly implemented by HTML frames. The different models of the design process are represented by using a hypermedia extension of UML.
"		Hennicker, Rolf; Koch, Nora						ConflictIncluded	Included	new_screen			2		2000				
111		ModelGuidance	Exploring a hybrid approach for modeling context awareness Using Analytic Hierarchy Process and simulation	Existing research on context and context awareness has broadly focused on the technical aspects of context acquisition and interpretation of users' surroundings, also called physical or sensor-based context. Such an approach is lack of reconciling the user's perception of real-world context and a context-aware system's interpretation of that context. Using Analytic Hierarchy Process (AHP), we propose a hybrid approach that accounts for both user and physical context in defining an overall context awareness value. The model is validated using a simulation approach, which is valuable in that it examines and helps reduce the uncertainty in AHP to some extent. The results suggest several preliminary guidelines to determine representative measures of user and physical context in the design and evaluation of context-aware systems. © 2010 IEEE.		Mowafi, Y.; Forgionne, G.; Zhang, D.	Proceedings - 3rd International Conference on Advances in Human-Oriented and Personalized Mechanisms, Technologies and Services, CENTRIC 2010					ConflictExcluded	Excluded	new_screen			2		2010				
112		ModelGuidance	Software ecosystem modeling	Increasingly, software producing organizations and their partners are organizing around extendable platforms, forming software ecosystems, a topic that is receiving increasing attention at the moment. Unfortunately, inadequate modeling guidelines exist currently for creating theoretical and visual models of software ecosystems, hampering advancements in this area. Even though, many different tools are available, these do not provide pointers and guidelines for performing correct and insightful modeling of software ecosystems. The aim of this PhD project is to create a modeling framework, consisting of tools, guidelines, and foundations for modeling software ecosystems. With such a framework, software ecosystem researchers, policy makers, and strategic managers of software producing organizations will gain insight into their ecosystems quicker and with higher fidelity. © Springer-Verlag Berlin Heidelberg 2013.		Handoyo, E.	Lecture Notes in Business Information Processing					ConflictIncluded	Excluded	new_screen			2		2013				
113		ModelGuidance	Flexible views for rapid model-driven development	Model-driven development processes that use severalmetamodels suffer from information spread across heterogeneous instances. Models can be managed with specialized partial views that aggregate the information from heterogeneous instances and offer the approprate kind of abstraction for developers. The creation and maintenance of such views requires, however, high manual effort. In this paper, we present the usage of exible views in the Vitruvius approach for view-centric engineering. Flexible views serve as custom, user-specific views which can be defined at development time using a textual domain-specific language. Developers can rapidly create specialized views instead of manually creating the appropriate metamodels and transformations, which is a time-consuming and error-prone task. The envisioned benefit of this approach is to improve software quality, to increase consistency between the various modeling artefacts in modeldriven software development, and to reduce the complexity for software developers. Copyright © 2013 ACM.		Burger, E.	Proceedings of the 1st Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling, VAO 2013					ConflictExcluded	Excluded	new_screen			2		2013				
114		ModelGuidance	Security Requirement Modeling Support System Using Software Security Knowledge Base	With the growing number of services on the Internet, the need for secure software development has increased. It is required for secure software development to consider security in the whole development life cycle. It is indispensable for secure software development to use various types of security knowledge. This study deals with security requirement analysis. Existing security requirements modeling systems do not provide a function to create an artifact while referring to security knowledge in an integrated manner. In this paper, the authors develop a modeling support system for a misuse case diagram that enables the association of knowledge with elements that constitute the diagram. The results of an experiment using the system show the system's usefulness in both the integration of the knowledge base with the artifact creation environment and the association of the knowledge with the elements of the diagram.		Hazeyama, A.; Tanaka, S.; Tanaka, T.; Hashiura, H.; Munetoh, S.; Okubo, T.; Kaiya, H.; Washizaki, H.; N. Yoshioka						ConflictExcluded	Excluded	new_screen			2		2018				
115		ModelGuidance	A unifying framework for homogeneous model composition	The growing use of models for separating concerns in complex systems has lead to a proliferation of model composition operators. These composition operators have traditionally been defined from scratch following various approaches differing in formality, level of detail, chosen paradigm, and styles. Due to the lack of proper foundations for defining model composition (concepts, abstractions, or frameworks), it is difficult to compare or reuse composition operators. In this paper, we stipulate the existence of a unifying framework that reduces all structural composition operators to structural merging, and all composition operators acting on discrete behaviors to event scheduling. We provide convincing evidence of this hypothesis by discussing how structural and behavioral homogeneous model composition operators (i.e., weavers) can be mapped onto this framework. Based on this discussion, we propose a conceptual model of the framework and identify a set of research challenges, which, if addressed, lead to the realization of this framework to support rigorous and efficient engineering of model composition operators for homogeneous and eventually heterogeneous modeling languages. © 2019, Springer-Verlag GmbH Germany, part of Springer Nature.		Kienzle, J.; Mussbacher, G.; Combemale, B.; Deantoni, J.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2019				
116		ModelGuidance	Constructive modelling of parallelized environmental models for structured testing of automated driving systems	In the automotive industry, current activities focus heavily on the development of automated driving systems (ADS). ADS process environmental data from different sensors [10], which are fused to generate a model of the surrounding world. Actors in the generated model are objects, which are e.g., classified as vehicles or pedestrians. The actors run in parallel, as in the real world actions from traffic participants can be taken independently and asynchronously from each other. For verification and validation of these systems a method is required, that allows for a realistic and hence parallel modeling of the system under test’s environment. Additionally, the method should allow for structured testing in compliance with international norms such as the ISO 26262 and the first international standard for software testing ISO/IEC/IEEE 29119, published in 2013. In this paper we present an approach for creating environmental models for structured testing of automated driving systems with a constructive method. One step is the enumeration of all possible sequences, but we first decompose the task into manageable units by input/output dependency analysis. The expected behavior is formalized in temporal logic [4,5]. In doing so, the effort for the creation of the model is feasible in industry. On the other hand, the test model guarantees the representation of all possible scenarios of use, making it a stable basis to derive significant test cases. We applied the method on an embedded system functionality in the automotive industry at AUDI. The system was architectured using the AUTOSAR 3.2 standard and implemented with Matlab Simulink. An existing, previously created test suite was available. This existing test suite served as a benchmark to assess the quality of the new test suite, derived from the environmental models. We compared the reachability of the test cases inside the implementation with code coverage measures and examined the variance of use imposed by the test suites. We present the promising results in this paper. © Springer International Publishing Switzerland 2015.		Siegl, S.; Russer, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictIncluded	Excluded	new_screen			2		2015				
117		ModelGuidance	Low-cost scene modeling using a density function improves segmentation performance	We propose a low cost and effective way to combine a free simulation software and free CAD models for modeling human-object interaction in order to improve human & object segmentation. It is intended for research scenarios related to safe human-robot collaboration (SHRC) and interaction (SHRI) in the industrial domain. The task of human and object modeling has been used for detecting activity, and for inferring and predicting actions, different from those works, we do human and object modeling in order to learn interactions in RGB-D data for improving segmentation. For this purpose, we define a novel density function to model a three dimensional (3D) scene in a virtual environment (VREP). This density function takes into account various possible configurations of human-object and object-object relationships and interactions governed by their affordances. Using this function, we synthesize a large, realistic and highly varied synthetic RGB-D dataset that we use for training. We train a random forest classifier, and the pixelwise predictions obtained is integrated as a unary term in a pairwise conditional random fields (CRF). Our evaluation shows that modeling these interactions improves segmentation performance by ∼7% in mean average precision and recall over state-of-the-art methods that ignore these interactions in real-world data. Our approach is computationally efficient, robust and can run real-time on consumer hardware. © 2016 IEEE.		Sharma, V.; Yildirim-Yayilgan, S.; Van Gool, L.	25th IEEE International Symposium on Robot and Human Interactive Communication, RO-MAN 2016					ConflictExcluded	Excluded	new_screen			2		2016				
118		ModelGuidance	Automated composition of sequence diagrams via alloy	Design of large systems often involves the creation of models that describe partial specifications. Model composition is the process of combining partial models to create a single coherent model. This paper presents an automatic composition technique for creating a sequence diagram from partial specifications captured in multiple sequence diagrams with the help of Alloy. Our contribution is twofold: a novel true-concurrent semantics for sequence diagram composition, and a model-driven transformation of sequence diagrams onto Alloy that preserves the semantics of composition defined. We have created a tool called SD2Alloy that implements the automated technique and works as follows: two given sequence diagrams are transformed in two Alloy models, and then combined according to a set of logical constraints, determined by our compositional semantics, into a final composed Alloy model. The technique can also be used to detect problems and inconsistencies in the composition of diagrams. Copyright © 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.		Alwanain, M.; Bordbar, B.; Bowles, J. K. F.	MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development					ConflictExcluded	Excluded	new_screen			2		2014				
119		ModelGuidance	Using Responsibilities for Early Identification of Hot Spots Reused in Frameworks Modeling	This paper illustrates the applicability of a responsibility-driven method for the car racing games domain. The method is a new approach for domain analysis that aims to identify hot spots from a set of concrete examples. Its purpose is to provide the reuse as much software artifacts as possible from the domain concrete examples, thus increasing the consistence at the framework modeling level. The proposed method also has a supporting tool.		Matos, S. N.; Fernandes, C. T.						ConflictExcluded	Excluded	new_screen			2		2008				
120		ModelGuidance	An approach for modeling real-time requirements with sysml and marte stereotypes	The specification, analysis and design of real-time systems (RTS) are activities that are highly dependent on an effective understanding of the application domain and on the thorough representation of their basic requirements. The use of model-based approaches for the development of RTS systems tends to contribute to minimizing the complexity of the system development. UML has been used intensely in recent years for modeling requirements of real-time software. However, UML alone does not completely represent the important features associated with these systems. UML is a language that has several extension capabilities enabling the creation of specific profiles. This article will explore the use of UML profiles SysML andMARTE for the modeling of RTS software requirements, with its main area of application being the control of urban traffic. The main objective is to demonstrate the application of SysML with MARTE stereotypes, which enables the modeling and tracing of individual software requirements.		Ribeiro, F. G. C.; Soares, M. S.	ICEIS 2013 - Proceedings of the 15th International Conference on Enterprise Information Systems					ConflictExcluded	Excluded	new_screen			2		2013				
121		ModelGuidance	Feature model driven Web Services composition approach and its support tool	Web Services are gradually becoming main platform-independent software components and will widely exist in the distributed environment, INTERNET. This kind of software developing method that the creation of new software systems will mainly depend on Web Services composition is attracting more and more researchers' attention. There is still not a systematic and mature approach for Web Services composition which can be used to instruct the whole composition process. This paper provides a 'feature model driven Web Service composition' approach, which makes Feature Model as the modeling tool to cross through the whole Web Services composition process and can be used to drive and direct all the phases in this process, including requirement analysis, business flow modeling, services composition, business flow deployment and execution. Then, combining with a concrete example, the basic idea, rationale and key steps of FWSC (feature model driven Web Services composition) solution are introduced. The work presented in this paper enhances the speed of modeling, development and quality of Web Services composition, and increases the abilities which can make the system dynamically adjust and quickly evolve when requirement changes.		Xing, Y.; Gu, F.; Mei, H.	Ruan Jian Xue Bao/Journal of Software					ConflictExcluded	Excluded	new_screen			2		2007				
122		ModelGuidance	Ontology-based feature modeling: An empirical study in changing scenarios	A software product line ({SPL}) is a set of software systems that have a particular set of common features and that satisfy the needs of a particular market segment or mission. Feature modeling is one of the key activities involved in the design of {SPLs}. The feature diagram produced in this activity captures the commonalities and variabilities of {SPLs}. In some complex domains (e.g., ubiquitous computing, autonomic systems and context-aware computing), it is difficult to foresee all functionalities and variabilities a specific {SPL} may require. Thus, Dynamic Software Product Lines ({DSPLs}) bind variation points at runtime to adapt to fluctuations in user needs as well as to adapt to changes in the environment. In this context, relying on formal representations of feature models is important to allow them to be automatically analyzed during system execution. Among the mechanisms used for representing and analyzing feature models, description logic ({DL}) based approaches demand to be better investigated in {DSPLs} since it provides capabilities, such as automated inconsistency detection, reasoning efficiency, scalability and expressivity. Ontology is the most common way to represent feature models knowledge based on {DL} reasoners. Previous works conceived ontologies for feature modeling either based on {OWL} classes and properties or based on {OWL} individuals. However, considering change or evolution scenarios of feature models, we need to compare whether a class-based or an individual-based feature modeling style is recommended to describe feature models to support {SPLs}, and especially its capabilities to deal with changes in feature models, as required by {DSPLs}. In this paper, we conduct a controlled experiment to empirically compare two approaches based on each one of these modeling styles in several changing scenarios (e.g., add/remove mandatory feature, add/remove optional feature and so on). We measure time to perform changes, structural impact of changes (flexibility) and correctness for performing changes in our experiment. Our results indicate that using {OWL} individuals requires less time to change and is more flexible than using {OWL} classes and properties. These results provide insightful assumptions towards the definition of an approach relying on reasoning capabilities of ontologies that can effectively support products reconfiguration in the context of {DSPL}. (C) 2015 Elsevier Ltd. All rights reserved.		Dermeval, Diego; Tenorio, Thyago; Bittencourt, Ig Ibert; Silva, Alan; Isotani, Seiji; Ribeiro, Marcio	{EXPERT} {SYSTEMS} {WITH} {APPLICATIONS}					ConflictIncluded	Excluded	new_screen			2		2015				
123		ModelGuidance	Towards Internal Modelling of the Information Systems Application Domain	Model-driven IS engineering methods invoke the IS application domain modelling methods to acquire essential characteristics of organizational systems (enterprises). Business modelling for value creation is a relatively separate area, meanwhile it correlates with the IS application domain modelling methodologies and gives new insights for enhancement of enterprise modelling, business process modelling and BP management modelling approaches. The IS application domain and the business domain modelling are not isolated and could be investigated using the same paradigm of modelling. Yet there is some uncertainty in model-driven approaches towards the understanding of the enterprise management activities. A problematic consistency of modelling approaches indicate a need for a systemic analysis of IS application domain modelling concepts. The internal modelling paradigm is used for analysis of an enterprise management activity as a self-managed system, and hereby the lack of the conceptual basis for domain modelling in IS engineering is determined. This approach is aimed to reveal hidden information transactions of the business management activities. The understanding of the IS application domain as a self-managed system allowed to redefine such concepts as management transaction, management function and enterprise process. The metastructure of management transaction is defined and illustrated for business management layer and IS development layer. © 2016 Vilnius University.		Gudas, S.; Lopata, A.	Informatica (Netherlands)					ConflictExcluded	Excluded	new_screen			2		2016				
124		ModelGuidance	Model-based database design	Many databases contain critical resources and data upon which important decisions rely and therefore their design requires a rig- orous, verifiable approach. Formal methods are mathematical and verifiable tools to specify and prove software specifications. While formal methods have been applied to database systems, there is a lack of a comprehensive, tool-supported methodology for formal development of practical database systems. This research tries to bridge the gap between the two areas by introducing an approach to rigorously design databases using the Event-B formal method. It follows a case study methodology and models this case gradually in a UML-like notation called UML-B which is translated to Event-B and verified in the Rodin platform. This PhD work presents general guidelines for modelling database applications in Event-B and proving their consistency, integrity and security considering different types of classes and relations. It provides translation method and tool to transform proved graphical models to efficient database systems.		Al-Brashdi, A.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2016				
125		ModelGuidance	Enhanced knowledge-leverage-based TSK fuzzy system modeling for inductive transfer learning	The knowledge-leverage-based Takagi–Sugeno–Kang fuzzy system (KL-TSK-FS) modeling method has shown promising performance for fuzzy modeling tasks where transfer learning is required. However, the knowledge-leverage mechanism of the KL-TSK-FS can be further improved. This is because available training data in the target domain are not utilized for the learning of antecedents and the knowledge transfer mechanism from a source domain to the target domain is still too simple for the learning of consequents when a Takagi–Sugeno–Kang fuzzy system (TSK-FS) model is trained in the target domain. The proposed method, that is, the enhanced KL-TSK-FS (EKL-TSK-FS), has two knowledge-leverage strategies for enhancing the parameter learning of the TSK-FS model for the target domain using available information from the source domain. One strategy is used for the learning of antecedent parameters, while the other is for consequent parameters. It is demonstrated that the proposed EKL-TSK-FS has higher transfer learning abilities than the KL-TSK-FS. In addition, the EKL-TSK-FS has been further extended for the scene of the multisource domain. © 2016 ACM.		Deng, Z.; Jiang, Y.; Ishibuchi, H.; Choi, K.-S.; Wang, S.	ACM Transactions on Intelligent Systems and Technology					ConflictExcluded	Excluded	new_screen			2		2016				
126		ModelGuidance	Teaching Pragmatic Model-Driven Software Development	Model-driven software development is surrounded by numerous myths and misunderstandings that hamper its adoption. For long, our students were victims of these myths and considered {MDSD} impractical and only applied in academy. In this paper we discuss these myths and present our experience with devising an {MDSD} course that challenges them and motivates students to understand {MDSD} principles. The main contribution of this work is a set of {MDSD} teaching guidelines that can make the course pragmatic in the eyes of students programmers. These guidelines introduce {MDSD} from the viewpoint of a programmer as a pragmatic tool for solving concrete problems in the development process. In our {MDSD} course we implemented the presented guidelines. The course shows several techniques and principles of model-driven development in multiple incremental iterations instead of concentrating on a single tool. At the same time we unite these techniques by using a dynamic visualisation tool that shows to the students the whole infrastructure in the big picture. The course is implemented as an iterative incremental {MDSD} case study. The paper concludes with a survey performed with our students that indicates positive results of the approach.		Porubaen, Jaroslav; Bacikova, Michaela; Chodarev, Sergej; Nosal, Milan	{COMPUTER} {SCIENCE} {AND} {INFORMATION} {SYSTEMS}					ConflictExcluded	Excluded	new_screen			2		2015				
127		ModelGuidance	A formal semantics for UML interactions	The UML abstract syntax and semantics specification distinguishes between the statics and the dynamics of collaborations: the rôle context and interactions. We propose a formal semantics of interactions based on the abstract syntax and directly reflecting the specification. The semantics is both parametric in the notion of context and in semantic details that are intentionally left open by the specification, but resolves true inconsistencies. The formalisation uses temporal logic formulae in the style of Manna and Pnueli. We illustrate the flexibility of our semantics by discussing instantiations for a running example; its intuitiveness is substantiated by proving that the temporal formulae give rise to partial orders that also directly can be inferred from interactions. © Springer-Verlag Berlin Heidelberg 1999.		Knapp, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		1999				
128		ModelGuidance	Modelling of mobile agent systems using dynpla approach	In this paper the mobile agent systems modeling method, based on dynPLA approach, is presented. The dynPLA is an extension of Piece Linear Aggregates (PLA) model, including dynamic features, which allow the modeling of systems with structural changes in time. In mobile agent systems, separate agents can migrate between different network locations, that cause structural changes of the whole system model. Abstract Data Types (ADT) are included in dynPLA model for describing structural changes. In mobile agent systems ADT are used for describing the processes of agents migration, creation, deletion and cloning. We illustrate this modeling approach by presenting both specification and simulation of mobile agent-based e-commerce system model. The obtained simulation results enabled comparing different agent migration patterns in e-commerce environment.		Pranevičius, H.; Paulauskait-Tarasevičien, A.	Proceedings of the 9th Joint Conference on Knowledge-Based Software Engineering, JCKBSE 2010					ConflictExcluded	Excluded	new_screen			2		2010				
129		ModelGuidance	Digitization Driven Design – A Guideline to Initialize Digital Business Model Creation	As a megatrend, the so-called Digital Transformation describes the entire potential of new technologies in economy. Thereby new approaches are needed to reveal this potential for companies. Looking at the literature a structured guideline is missing to reveal this potential by developing new digital business models (DBM) from the scratch. Therefore, this paper develops a structured framework to create ideas for DBMs. It contributes to business research by improving the initiation of digital reengineering. The resulting framework is called the Digitization Driven Design model (=D3 model). The application of this approach is described with a consulting-company use case. Initial evaluations show the first promising expert feedbacks and possibilities for future research. © Springer International Publishing AG, part of Springer Nature 2018.		Greff, T.; Neu, C.; Johann, D.; Werth, D.	Lecture Notes in Business Information Processing					ConflictExcluded	Excluded	new_screen			2		2018				
130		ModelGuidance	Model Based Approach to Assist Test Case Creation, Execution, and Maintenance for Test Automation	"Applications, once developed, need to be maintained and tested as they undergo frequent changes. Test automation plays a significant role in testing activity, as it saves time and provides better utilization of resources. Test automation itself comes with many challenges such as mapping of user specifications to test-cases, test-case generation, maintenance of test-cases and test-scripts. In this paper, we propose a model-driven approach for test automation to provide end-to-end assistance in test case generation and automation, with focus on re-usability and maintainability. Functional specifications of system are mapped to test-cases for traceability which ensures better test automation process. Functional specifications of system are used as an input to design process models, which are used for automatic generation of test-cases. Process models consist of flows of different tasks in specified sequence. By recording the individual tasks, test-scripts for all the test-cases are generated. The test-cases and test-scripts can be modified and maintained using user friendly user-interface (UI) to provide better control to test designer and ease the load of tester. In this paper, we also present a case study performed on JBilling application [18] to evaluate our approach.
"		Gupta, Priya; Surve, Prafullakumar						ConflictExcluded	Excluded	new_screen			2		2011				
131		ModelGuidance	Modeling and Extracting Load Intensity Profiles	Today's system developers and operators face the challenge of creating software systems that make efficient use of dynamically allocated resources under highly variable and dynamic load profiles, while at the same time delivering reliable performance. Benchmarking of systems under these constraints is difficult, as state-of-the-art benchmarking frameworks provide only limited support for emulating such dynamic and highly variable load profiles for the creation of realistic workload scenarios. Industrial benchmarks typically confine themselves to workloads with constant or stepwise increasing loads. Alternatively, they support replaying of recorded load traces. Statistical load intensity descriptions also do not sufficiently capture concrete pattern load profile variations over time. To address these issues, we present the Descartes Load Intensity Model (DLIM). DLIM provides a modeling formalism for describing load intensity variations over time. A DLIM instance can be used as a compact representation of a recorded load intensity trace, providing a powerful tool for benchmarking and performance analysis. As manually obtaining DLIM instances can be time consuming, we present three different automated extraction methods, which also help to enable autonomous system analysis for self-adaptive systems. Model expressiveness is validated using the presented extraction methods. Extracted DLIM instances exhibit a median modeling error of 12.4\% on average over nine different real-world traces covering between two weeks and seven months. Additionally, extraction methods perform orders of magnitude faster than existing time series decomposition approaches.		Kistowski, J. v; Herbst, N.; Zoller, D.; S. Kounev; Hotho, A.						ConflictExcluded	Excluded	new_screen			2		2015				
132		ModelGuidance	Measuring the performance characteristics of MBSE Techniques with BIM for the construction industry	Simulations and Modeling allows for integrating disciplines to make key decisions involving trade-offs based on resilience, cost systems engineering, cost effectiveness analysis and affordability trade space throughout the system life cycle. The methodology of this paper is to focus on measuring the performance characteristics of Model-Based System Engineering (MBSE) techniques with Building Information Modeling (BIM) for the construction industry. The paper will showcase the types of 'education and training environment' required for using MBSE as a form of adaptive engineering. The support elements of the presented systems will highlight the strategy, and implantation actions that identify, develop, and acquire Training AIDS, Devices, Simulators, and Simulations (TADSS) to maximize value and effectiveness. © 2018 IEEE.		Redmond, A. M.	Proceedings - International Conference on Developments in eSystems Engineering, DeSE					ConflictExcluded	Excluded	new_screen			2		2019				
133		ModelGuidance	A multi-paradigm modeling foundation for collaborative multi-view model/system development	The complexity of current engineered systems has increased drastically over the last decades. Due to this complexity, these systems are typically developed in collaborative settings with stakeholders from different domains involved. A pertinent example is engineering of cyber-physical systems (CPS). Such collaborative endeavours are severely hindered by inconsistencies that arise due to semantic overlaps between different models. Additionally, since the involved domain-specific languages of stakeholders may be very disparate, inconsistencies often do not manifest on the linguistic level. To cope with this problem, we propose an approach that enables better understanding how inconsistencies arise, evolve and how they should be managed. The core of our approach is a rich process modeling formalism that allows modeling multiple aspects of the development workflow in accordance with the guidelines of multiparadigm modeling (MPM). We support our approach with an open-source prototype tool for designing engineering processes, defining inconsistency patterns and their respective management alternatives, and with the ability to optimize the original process for various optimality criteria, such as consistency and costs. © 2016, CEUR-WS. All rights reserved.		Dávid, I.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2016				
134		ModelGuidance	Model-based user interface engineering with design patterns	The main idea surrounding model-based {UI} (User Interface) development is to identify useful abstractions that highlight the core aspects and properties of an interactive system and its design. These abstractions are instantiated and iteratively transformed at different level to create a concrete user interface. However, certain limitations prevent {UI} developers from adopting model-based approaches for {UI} engineering. One such limitation is the lack of reusability of best design practices and knowledge within such approaches. With a view to fostering reuse in the instantiation and transformation of models, we introduce patterns as building blocks, which can be first used to construct different models and then instantiated into concrete {UI} artefacts. In particular, we will demonstrate how different kinds of patterns can be used as modules for establishing task, dialog, presentation and layout models. Starting from an outline of the general process of pattern application, an interface for combining patterns and a possible formalization are suggested. The Task Pattern Wizard, an {XML}/{XUL}-based tool for selecting, adapting and applying patterns to task models, will be presented. In addition, an extended example will illustrate the intimate complicity of several patterns and the proposed model-driven approach. (C) 2006 Elsevier Inc. All rights reserved.		Ahmed, Seffah; Ashraf, Gaffar	{JOURNAL} {OF} {SYSTEMS} {AND} {SOFTWARE}					ConflictExcluded	Excluded	new_screen			2		2007				
135		ModelGuidance	Supporting UML sequence diagrams using a processor net model	This paper describes how UML sequence diagrams can be supported using an executable processor net. Distributed real time transaction processing systems require validation, verification and performance analysis. A method for doing this is presented creating a processor net for a flight reservation. Some advantages of this approach are the creation of executable models, schemas, formalization and performance analysis. Other issues are discussed. © 2007 IEEE.		Staines, T. S.	Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems					ConflictExcluded	Excluded	new_screen			2		2007				
136		ModelGuidance	Quality Assessment, Verification, and Validation of Modeling and Simulation Applications	"Many different types of modeling and simulation (M&S) applications are used in dozens of disciplines under diverse objectives including acquisition, analysis, education, entertainment, research, and training. M&S application verification and validation (V&V) are conducted to assess mainly the accuracy, which is one of many indicators affecting the M&S application quality. Much higher confidence can be achieved in accuracy if a quality-centered approach is used. This paper presents a quality model for assessing the quality of large-scale complex M&S applications as integrated with V&V. The guidelines provided herein should be useful for assessing the overall quality of an M&S application.
"		Balci, Osman						ConflictExcluded	Excluded	new_screen			2		2004				
137		ModelGuidance	How Humans Merge UML-Models	So far, research on model merging has mostly focused on algorithmic problems. But, there are various situations when software engineers have to compare and merge different models manually or at least make important decisions. In this paper, we provide insights into the process of how users compare and merge visual models. To this end, we observed people's activities when manually merging UML class diagrams and analyzed the recorded data following the Grounded Theory approach. To illustrate the usefulness of our results we derived some guidelines for tool design.		Lutz, R.; Wurfel, D.; Diehl, S.						ConflictExcluded	Excluded	new_screen			2		2011				
138		ModelGuidance	Applying MDA and OMG robotic specification for developing robotic systems	Robotics systems have special needs often related with their real-time nature and environmental properties. Often, control and communication paths within the system are tightly coupled to the actual physical configuration of the robot. As a consequence, these robots can only be assembled, configured, and programmed by robot experts. Traditional approaches, based on mainly writing the code without using software engineering techniques, are still used in the development process of these systems. Even when these robotic systems are successfully used, several problems can be identified and it is widely accepted that new approaches should be explored. The contribution of this research consists in delineating guidelines for the construction of robotic software systems, taking advantage of the application of the OMG standard robotic specifications which adhere to the model-driven approach MDA. Thereby the expert knowledge is captured in standard abstract models that can then be reused by other less experienced developers. In addition part of the code is automatically generated, reducing costs and improving quality. © Springer International Publishing AG 2016.		Pons, C.; Pérez, G.; Giandini, R.; Baum, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2016				
139		ModelGuidance	sNets: A first generation model engineering platform	As we are currently improving AMMA (the ATLAS Model Management Architecture), a second generation model engineering platform installed on top of the Eclipse Modeling Framework (EMF), we borrow inspiration from a previous work undertaken fifteen years ago at the University of Nantes. This initial model-engineering platform named sNets (for Semantic Networks) included several functional blocks like the sMachine, the sBrowser, the sQuery, the sActlon system, etc. Several parts of these tools are still in use today. At a time when we are defining the main architectural style of the new platform, it may be helpful to come back on the initial learning of this project. This paper describes the sNets project and summarizes some lessons learnt in the course of the design and utilization of this first generation modeling framework. © Springer-Verlag Berlin Heidelberg 2006.		Bézivin, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2006				
140		ModelGuidance	Panini: A concurrent programming model for solving pervasive and oblivious interference	Modular reasoning about concurrent programs is complicated by the possibility of interferences happening between any two instructions of a task (pervasive interference), and these interferences not giving out any information about the behaviors of potentially interfering concurrent tasks (oblivious interference). Reasoning about a concurrent program would be easier if a programmer modularly and statically (1) knows precisely the program points at which interferences may happen (sparse interference), and (2) has some insights into behaviors of potentially interfering tasks at these points (cognizant interference). In this work we present Panini, a core concurrent calculus which guarantees sparse interference, by controlling sharing among concurrent tasks, and cognizant interference, by controlling dynamic name bindings and accessibility of states of tasks. Panini promotes capsule-oriented programming whose concurrently running capsules own their states, communicate by asynchronous invocations of their procedures and dynamically transfer ownership. Panini limits sharing among two capsules to other capsules and futures, limits accessibility of a capsule states to only through its procedures and dispatches a procedure invocation on the static type of its receiver capsule. We formalize Panini, present its semantics and illustrate how its interference model, using behavioral contracts, enables Hoare-style modular reasoning about concurrent programs with interference. Copyright 2015 ACM.		Bagherzadeh, M.; Rajan, H.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2015				
141		ModelGuidance	Rapid performance modeling by transforming use case maps to Palladio component models	Complex information flows in the domain of industrial software systems complicate the creation of performance models to validate the challenging performance requirements. Performance models using annotated UML diagrams or mathematical notations are difficult to discuss with stakeholders from the industrial automation domain, who often have a limited software engineering background. We introduce a novel model transformation from Use Case Maps (UCM) to the Palladio Component Model (PCM), which enables performance modeling based on an intuitive notation for complex information flows. The resulting models can be solved using existing simulators or analytical solvers. We validated the correctness of the transformation with three case study models, and performed a user study. The results showed a performance prediction deviation of less than 10 percent compared to a reference model in most cases. © 2013 ACM.		Vogel, C.; Koziolek, H.; Goldschmidt, T.; Burger, E.	ICPE 2013 - Proceedings of the 2013 ACM/SPEC International Conference on Performance Engineering					ConflictExcluded	Excluded	new_screen			2		2013				
142		ModelGuidance	An experimental investigation of UML modeling conventions	Modelers tend to exploit the various degrees of freedom provided by the UML. The lack of uniformity and the large amount of defects contained in UML models result in miscommunication between different readers. To prevent these problems we propose modeling conventions, analogue to coding conventions for programming. This work reports on a controlled experiment to explore the effect of modeling conventions on defect density and modeling effort. 106 masters' students participated over a six-weeks period. Our results indicate that decreased defect density is attainable at the cost of increased effort when using modeling conventions, and moreover, that this trade-off is increased if tool-support is provided. Additionally we report observations on the subjects' adherence to and attitude towards modeling conventions. Our observations indicate that efficient integration of convention support in the modeling process, e.g. through training and seamless tool integration, forms a promising direction towards preventing defects. © Springer-Verlag Berlin Heidelberg 2006.		Lange, C. F. J.; DuBois, B.; Chaudron, M. R. V.; Demeyer, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2006				
143		ModelGuidance	Probabilistic modelling for software quality control	As is clear to any user of software, quality control of software has not reached the same levels of sophistication as it has with traditional manufacturing. In this paper we argue that this is because insufficient thought is being given to the methods of reasoning under uncertainty that are appropriate to this domain. We then describe how we have built a large-scale Bayesian network to overcome the difficulties that have so far been met in software quality control. This exploits a number of recent advances in tool support for constructing large networks. We end the paper by describing how the network was validated and illustrate the range of reasoning styles that can be modelled with this tool. © Springer-Verlag Berlin Heidelberg 2001.		Fenton, N.; Krause, P.; Neil, M.	Lecture Notes in Artificial Intelligence (Subseries of Lecture Notes in Computer Science)					ConflictExcluded	Excluded	new_screen			2		2001				
144		ModelGuidance	Object-oriented modeling method for algebraic specifications in CafeOBJ	A scenario-based object-oriented modeling method for algebraic specifications is proposed. The method is based on the integration of a new algebraic specification language, CafeOBJ, and a multiparadigm design notation, GILO-2 (Generic Interaction Language for Objects). CafeOBJ is a successor of the algebraic specification language OBJ and supports object-oriented formal specifications based on hidden order sorted rewriting logic. GILO-2 provides collaborations as well as classes of objects to capture behavioral aspects of scenarios in object-oriented modeling. Given a problem description of the system to develop, the proposed method provides guidelines for decomposing the problem into executable CafeOBJ specification modules through scenario-based object-oriented design in GILO-2; the decomposition reflects the structure of the problem domain. The proposal also indicates how formal executable specification in CafeOBJ can be systematically obtained from the design in GILO-2.		Nakajima, Shin; Futatsugi, Kokichi	Proceedings - International Conference on Software Engineering					ConflictExcluded	Excluded	new_screen			2		1997				
145		ModelGuidance	Functional languages in design of coloured petri nets models	Coloured Petri nets are a formal method that allows to create sophisticated event-driven models. In addition, there exists a software tool, called CPN Tools, which provides a support for creation, simulation and state space-based verification of CPN models. An interesting feature of CPN Tools is that it uses CPN ML, a slightly modified version of the SML functional language, for data manipulation. In this chapter we describe basic concepts of Coloured Petri nets (CPN), SML and CPN ML and by means of an example illustrate how CPN ML can be used to build a concrete, timed CPN model from an abstract, low-level Petri net model in such a way that the structure of the abstract model is preserved. We also explore possibilities of already existing SML code utilization in CPN models. © 2019, Springer Nature Switzerland AG.		Korečko, Š.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2019				
146		ModelGuidance	Function modeling using the system state flow diagram	This paper introduces a rigorous framework for function modeling of complex multidisciplinary systems based on the system state flow diagram (SSFD). The work addresses the need for a consistent methodology to support solution-neutral function-based system decomposition analysis, facilitating the design, modeling, and analysis of complex systems architectures. A rigorous basis for the SSFD is established by defining conventions for states and function definitions and a representation scheme, underpinned by a critical review of existing literature. A set of heuristics are introduced to support the function decomposition analysis and to facilitate the deployment of the methodology with strong practitioner guidelines. The SSFD heuristics extend the existing framework of Otto and Wood (2001) by introducing a conditional fork node heuristic, to facilitate analysis and aggregation of function models across multiple modes of operation of the system. The empirical validation of the SSFD function modeling framework is discussed in relation to its application to two case studies: a benchmark problem (glue gun) set for the engineering design community; and an industrial case study of an electric vehicle powertrain. Based on the evidence from the two case studies presented in the paper, a critical evaluation of the SSFD function modeling methodology is discussed based on the function benchmarking framework established by Summers et al. (2013), considering the representation, modeling, cognitive, and reasoning characteristics. The significance of this paper is that it establishes a rigorous reference framework for the SSFD function representation and a consistent methodology to guide the practitioner with its deployment, facilitating its impact to industrial practice. © Copyright Cambridge University Press 2017.		Yildirim, U.; Campean, F.; Williams, H.	Artificial Intelligence for Engineering Design, Analysis and Manufacturing: AIEDAM					ConflictExcluded	Excluded	new_screen			2		2017				
147		ModelGuidance	Impact Analysis of Model-Based Development in Avionics Software Production	"Normally, the development of avionics software as part of embedded systems follows guidelines defined by the industry that defines objectives and activities that are critical for enabling and approval for operation. The DO-331 is one out of these guidelines recently published that refers to the usage of model-based development. This article presents a survey, done with 79 specialists working in the area, in international level, looking forward to gather perceptions about the impact of model-based development in avionics software production. The results points out that using the methodology normally is beneficial, especially in some development steps, where these might be augmented or diminished according to how it is applied by the organization.
"		Mottin, Gustavo Giroletti; Porto, Josiane Brietzke						ConflictExcluded	Excluded	new_screen			2		2019				
148		ModelGuidance	Towards requirements elicitation in service-oriented business networks using value and goal modelling	Due to the contemporary trends towards increased focus on core competences and outsourcing of non-core activities, enterprises are forming strategic alliances and building business networks. This often requires cross enterprise interoperability and integration of their information systems, leading to widespread adoption of Service Oriented Architectures (SOA). In this paper we present an approach to guide the development and evolution of service-oriented business networks. Our approach combines value models and goal models, where the former are used to represent and analyse the economic sustainability of a business network and the latter are used to represent and analyse the goals of the participants within the business network. Systematic guidelines are proposed to derive a goal model from a value model. In addition, a preliminary discussion is presented on how to refine goals and operationalize goals as services rooted in a SOA. The approach is illustrated using an example of a business network in the electricity sector.		Pessoa, R. M.; Van Sinderen, M.; Quartel, D.	ICSOFT 2009 - 4th International Conference on Software and Data Technologies, Proceedings					ConflictExcluded	Excluded	new_screen			2		2009				
149		ModelGuidance	Conceptual modeling for XML: A survey	Recently XML is the standard format used for the exchange of data between information systems and is also frequently applied as a logical database model. If we use XML as a logical database model we need a conceptual model for the description of its semantics. However, XML as a logical database model has some special characteristics which makes existing conceptual models as E-R or UML unsuitable. In this paper, the current approaches to the conceptual modeling of XML data are described in an uniform style. A list of requirements for XML conceptual models is presented and described approaches are compared on the base of the requirements.		Nečaský, M.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2006				
150		ModelGuidance	Structuring automotive product lines and feature models: an exploratory study at Opel	Automotive systems are highly complex and customized systems containing a vast amount of variability. Feature modeling plays a key role in customization. Empirical evidence through industry application, and in particular methodological guidance of how to structure automotive product lines and their feature models is needed. The overall aim of this work is to provide guidance to practitioners how to structure automotive product lines and their feature models, understanding strengths and weaknesses of alternative structures. The research was conducted in three phases. In the first phase, the context situation was understood using interviews and workshops. In the second phase, possible structures of product lines and feature models were evaluated based on industry feedback collected in workshops. In the third phase, the structures were implemented in the tool GEARS and practitioner feedback was collected. One key challenge was the unavailability of structuring guidelines, which was the focus of this research. The structures considered most suitable for the automotive product line were multiple product lines with modular decomposition. The structures most suitable for the feature model were functional decomposition, using context variability, models corresponding to assets, and feature categories. Other structures have been discarded, and the rationales have been presented. It was possible to support the most suitable structures with the commercial tool GEARS. The implementation in GEARS and the feedback from the practitioners provide early indications for the potential usefulness of the structures and the tool implementation. © 2015, Springer-Verlag London.		Oliinyk, O.; Petersen, K.; Schoelzke, M.; Becker, M.; Schneickert, S.	Requirements Engineering					ConflictExcluded	Excluded	new_screen			2		2017				
151		ModelGuidance	Modeling MAS properties with MAS-ML dynamic diagrams	A crucial part of a multi-agent system (MAS) design is the specification of agency properties. Traditional approaches to agent systems modeling use diagrams that focus on defining the set of structural and interactive elements such as agents, organizations, actions and messages. Such approaches do not exhibit a proper notation to show agent behavioral properties such as adaptation, mobility and concurrency. The MAS-ML approach to designing agent systems proposed an extension to UML 2.0 to provide a proper notation to model structural and dynamic characteristics of a MAS. In this paper we enhance MAS-ML dynamic diagrams, the extended sequence and activity diagrams, to describe the basic guidelines to model behavioral properties and we show some examples of how these diagrams support the behavioral properties specification, allowing a flexible and easier modeling of agency characteristics. © 2008 Springer-Verlag Berlin Heidelberg.		Torres Da Silva, V.; Choren, R.; De Lucena, C. J. P.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2008				
152		ModelGuidance	WiSDom: A model-driven solitary death prevention system based on WiFi signals and real-time supervised training	A primary concern of many elders is 'solitary death,' being found as a rancid corpse long after they had passed away. In numerous cases, bodies are left unattended for days, months, or even years. These unfortunate cases have increased every year and have become a major social problem in many nations. Current warning systems utilize sensors or smartwatches, which are often costly, ineffective, and uncomfortable. This paper proposes WiSDom, a model-driven solitary death prevention system based on WiFi signals and real-time supervised training. The proposed methodology utilizes WiFi's Channel State Information (CSI) for the primary activity identification estimation, represents the system by a discrete event state transition model, maps the estimated activities into the external events of the model, validates its estimation with the forthcoming events, and labels the validated samples for the supervised training of its clustering algorithm in real-time closed-loop. Through the experimental results, we show that the system effectively warns emergency cases and swiftly detects fatal situations. © 2017 IEEE.		Kim, S.; Ryoo, J.	2017 14th IEEE Annual Consumer Communications and Networking Conference, CCNC 2017					ConflictExcluded	Excluded	new_screen			2		2017				
153		ModelGuidance	Improving device-aware Web services and their mobile clients through an aspect-oriented, model-driven approach	Context: Mobile devices have become an essential element in our daily lives, even for connecting to the Internet. Consequently, Web services have become extremely important when offering services through the Internet. However, current Web services are very inflexible as regards their invocation from different types of device, especially if we consider the need for them to be adaptable when being invoked from mobile devices. Objective: In this paper, we provide an approach for the creation of flexible Web services which can be invoked transparently from different device types and which return subsequent responses, as well as providing the client's adaptation as a result of the particular device characteristics and end-user preferences in a completely decoupled way. Method: Aspect-Oriented Programming and model-driven development have been used to reduce both the impact of service and client code adaptation for multiple devices as well as to facilitate the developer's task. Results: A model-driven methodology can be followed from system models to code, providing the Web service developer with the option of marking which services should be adapted to mobile devices in the UML models, and obtaining the decoupled adaptation code automatically from the models. Conclusion: We can conclude that the approach presented in this paper provides us with the possibility of following the development of mobile-aware Web services in an integrated platform, benefiting from the use of aspect-oriented techniques not only for maintaining device-related code completely decoupled from the main functionality one, but also allowing a modularized non-intrusive adaptation of mobile clients to the specific device characteristics as well as to final user preferences. © 2010 Elsevier B.V. All rights reserved.		Ortiz, G.; Prado, A. G. D.	Information and Software Technology					ConflictExcluded	Excluded	new_screen			2		2010				
154		ModelGuidance	Development of the Process Information Modelling in the construction project: A case study of the zero-plus project	The conventional Building Information Models (BIM) does not contain knowledge about the relation between different pieces of information. To be able to understand the information the recipient must have sufficient knowledge within the given domain. When information cannot reach to the relevant party in real time or in advance, that will cause miscommunication and delays. At this point, the Process Information Modelling (PIM), which is a process-oriented modelling approach, provides a collaborative way of planning, designing, producing, assembling, and managing the repeatable deployment process. The main objective of PIM is to formulate a process oriented database platform that allows smooth data transfer, exchange, as well as promoting seamless and constant data sharing. Digital documentation, simulation, graphical and non-graphical data are produced progressively to support the decision-making process throughout the PIM application development stage. Thus, PIM embraces real-time data processing that helps to identify issues in advance, predict malfunction, reduce production time, and influence production cost. At the moment, PIM is developed through three main phases which include design, production, and on-site assembly phase and represents a conceptual tool that provides a platform where stakeholders can access information in real-time and to make vital decisions in advance. By using a real scenario in the on-going EU Horizon 2020 research project ZERO-PLUS, the first application of the PIM concept could be demonstrated on the Freescoo HVAC system, which will not only help the project team to structure detailed guidelines within the current project but will also lay a foundation for developing a fully functional PIM application in the future.		Pan, W.; Langosch, K.; Bock, T.	ISARC 2017 - Proceedings of the 34th International Symposium on Automation and Robotics in Construction					ConflictExcluded	Excluded	new_screen			2		2017				
155		ModelGuidance	Model driven approach to service oriented enterprise architecture	Enterprise Architecture (EA) has become an important means to acquire and maintain knowledge about the structure and behavior of the enterprises and to develop the required IT systems. Two main goals in architecture - high flexibility and low complexity- are addressed in a new architectural style called Service Oriented Architecture (SOA). In this paper, we discuss approaches to have SOA models in the enterprise architecture framework. Based on an analysis of these approaches, we propose an extension to the Zachman Framework called SOEAF, in order to provide the framework with the capability to include service-oriented artifacts representing services aspect of the enterprise. Then we will propose a Model Driven Approach (MDA) to Service Oriented Enterprise Architecture (SOEA), in which, MDA concepts, standards and tools help us achieve a semi-automated service-based analysis and design of the enterprise IT systems. The proposed approach can be very beneficial for increasing efficiency to reach enterprise-wide goals. ©2009 IEEE.		Khoshnevis, S.; Aliee, F. S.; Jamshidi, P.	2009 IEEE Asia-Pacific Services Computing Conference, APSCC 2009					ConflictExcluded	Excluded	new_screen			2		2009				
156		ModelGuidance	Empirical assessment of UML class diagram layouts based on architectural importance	The paper presents a family of experiments that investigate the effectiveness of different layout techniques for class diagrams in the Unified Modeling Language (UML). Three different layout schemes are examined based on architectural importance of class stereotypes. The premise is that layout techniques for UML class diagrams significantly impact comprehension. Both traditional questionnaire-based studies as well as eye-tracking studies are done to quantitatively measure the performance of subjects solving specific software maintenance tasks. The main contribution is the detailed empirical validation of a set of layout techniques with respect to a variety of software maintenance tasks. Results indicate that layout plays a significant role in the comprehension of UML class diagrams. In particular, there is a significant improvement in accuracy, time, and visual effort for one particular layout scheme, namely multi-cluster. The end goal is to determine effective ways to adjust the layout of existing UML class diagrams to support program comprehension during maintenance. © 2011 IEEE.		Sharif, B.	IEEE International Conference on Software Maintenance, ICSM					ConflictExcluded	Excluded	new_screen			2		2011				
157		ModelGuidance	An MDE-based method for bridging different design notations	Different communities have developed plenty of design notations for software engineering in support of practical (via UML) and rigorous (via formal methods) approaches. Hence the problem of bridging these notations rises. Model-driven engineering (MDE) is a new paradigm in software engineering, which treats models and model transformations as first class citizens. Furthermore, it is seen as a promising method for bridging heterogeneous platforms. In this paper, we provide an MDE-based approach to build bridges between informal, semi-formal and formal notations: Firstly, different notations are viewed as different domain specification languages (DSLs) and introduced into MDE, especially into the ATLASModel Management Architecture (AMMA) platform, by metamodeling. Then, ATL transformation rules are built for semantics mapping. At last, TCSbased model-to-text syntax rules are developed, allowing one to map models to programs. Consequently, different design notations in both graphical style and grammatical style are bridged.Acase study of bridgingOMGSysML™ to LOTOS is also illustrated showing the validity and practicability of our approach. © Springer-Verlag London Limited 2008.		Zhang, T.; Jouault, F.; Bézivin, J.; Li, X.	Innovations in Systems and Software Engineering					ConflictExcluded	Excluded	new_screen			2		2008				
158		ModelGuidance	Improving model-based collaboration by social media integration	Software engineering is inherently a collection of collaborative tasks, such as customer interviews to collect requirements, discussions about software architecture and design, collective code ownership and the interaction between developers, customers and testers to ensure software quality. Open source development communities are a particularly good example of a worldwide collaboration in software engineering. This position paper describes our opinion about the use of collaboration techniques in software engineering education. We discuss the benefits of model-based collaboration techniques as well as social media platforms. In a practical example, we show that the integration of both techniques can significantly improve the collaboration in software engineering courses.		Gaar, W.; Teiniker, E.						ConflictExcluded	Excluded	new_screen			2		2014				
159		ModelGuidance	UML/MDA Reality Check: Heterogenous Architecture Style	"This talk looks at the OMG’s Model-Driven Architecture initiative and at UML from the perspective of an innovative approach to engineering software for space missions at NASA’s Jet Propulsion Laboratory (JPL). The Mission Data System (MDS) project at JPL breaks the conventional mold of space möission software blending two heterogenous software architecture styles: state analysis (the idea that ""state"", operations involving state and expressions of intent about state are at the core of all space-based systems and therefore must form the central basis for engineering such systems) and explicit software architecture (the idea that component architecture establishes the elements of software design and of their coherent integration.) From a modeling perspective, state analysis is a domain-specific software architecture style just like component architecture is an engineering-specific software architecture style. The heterogenous composition of multiple styles in MDS is an example of extreme architecture engineering. This talk will describe how this approach stretches in many ways the current state of practice and tool support in UML and MDA into the realm of bleeding edge software engineering research.
"		Rouquette, N. F.	LECTURE NOTES IN COMPUTER SCIENCE					ConflictExcluded	Excluded	new_screen			2		2003				
160		ModelGuidance	Co-Creation of Models and Metamodels for Enterprise Architecture Projects	"The linguistic conformance and the ontological conformance between models and metamodels are two different aspects that are frequently mixed. Particularly, this situation occurs in the EMF framework and it has resulted in some well known problems. The most relevant to us is the incapability to load metamodels at runtime, or even to modify the metamodels already in use. In this paper we present a strategy to solve this problem by separating the ontological and the linguistic aspects of a metamodel and a metamodeling framework. The strategy has been implemented in a graphical editor and is motivated in the context of Enterprise Architecture Projects.
"		Gómez, Paola; Sánchez, Mario; Florez, Hector; Villalobos, Jorge						ConflictExcluded	Excluded	new_screen			2		2012				
161		ModelGuidance	A Modeling Paradigm for Integrated Modular Avionics Design	This paper presents the modeling paradigm for integrated modular avionics design MIMAD V0, which is an extensible component-oriented framework that enables high level models of systems designed on integrated modular avionics architectures. MlMAD relies on the generic modeling environment (GME), a configurable object-oriented toolkit that supports the creation of domain-specific modeling and program synthesis environments. MIMAD is built upon a library of components within the POLYCHRONY platform, dedicated to the design of avionic applications. Its descriptions can be therefore transformed into POLYCHRONY's models in order to access the available formal tools and techniques for validation. Users do not need to be experts of formal methods (in particular, of the synchronous approach) to be able to manipulate the proposed concepts. This contributes to satisfying the present industrial demand on the use of general-purpose modeling formalisms for system design		Gamati, A.; Brunette, C.; Delamare, R.; Gautier, T.; Talpin, J.						ConflictExcluded	Excluded	new_screen			2		2006				
162		ModelGuidance	Bridging the tool gap for model-based design from flight control function design in Simulink to software design in SCADE	Development processes of software for safety critical, complex aircraft systems, for example flight control systems, are very demanding. In the context of an aircraft certification, strict process guidelines and objectives from the Radio Technical Commission for Aeronautics according to the Development Assurance Level of the Software have to be complied to. Efficiency and compliance are important goals when defining processes from these requirements. Our approach to gain efficiency is, to reuse models from function design for code generation, and to use qualified tools. In control engineering, MATLAB, Simulink and Stateflow are widely used tools to build such models. The code generator Embedded Coder of the MathWorks tool chain is not available as qualifiable tool. Hence, it is common in the avionics domain to use SCADE Suite and its qualifiable code generator KCG for software design. To enable reuse of Simulink/Stateflow models for code generation with KCG it is necessary to translate them to Scade. In the project CERTT-FBW231 a feasibility study of the automatic translation from Simulink/Stateflow to Scade using the SCADE Suite Gateway for Simulink was performed. An existing control law model of an automatic flight control system was used as example. Due to its size and functionality it is a demanding and suitable example. To enable the translation of Simulink/Stateflow models, modeling guidelines were derived in the project MCAS2. We motivate our approach and show how it can be used effectively by automatic guideline checking and model repair. Our tool chain, the translation and configuration management processes are presented after briefly introducing the example model. A selection of guidelines and repair algorithms are shown, that helped to increase the translatability of our example.		Walde, G.; Luckner, R.						ConflictExcluded	Excluded	new_screen			2		2016				
163		ModelGuidance	Meaning of cause-And-effect relations of the topological functioning model in the UML analysis model	Topological Functioning Model specifies functional and structural characteristics of a system in the holistic manner. Cause-And-effect relations link cause and effect functional characteristics of the system, illustrating causality in it. The Unified Modelling Language (UML) provides its own relationship kinds among elements. Traditionally, a use of UML relationships depends on analyst's experience in UML and knowledge about the system. However, after TFM transformation meaning of cause-And-effect relations in UML model is not always clear. The paper summarizes research results on this matter and provides mapping guidelines from TFM causal relations to often used UML relationships. These guidelines can be applied in further (m anual or automated) refinement of UML diagrams. © 2017 by SCITEPRESS - Science and Technology Publications, Lda. All Rights Reserved.		Nazaruka, E.	ENASE 2017 - Proceedings of the 12th International Conference on Evaluation of Novel Approaches to Software Engineering					ConflictExcluded	Excluded	new_screen			2		2017				
164		ModelGuidance	Model based testing of system requirements using UML use case models	Demonstrating test coverage of requirements is important in regulated business such as health care. Effective test coverage requires not only a well organized testing effort, but also requires testable requirements. Requirements are often reported as not suitable for testing, because they are, for instance, incomplete or too ambiguous. We describe experience with an approach for creating system test cases using UML use case models and to argue for early steps in requirements engineering to ensure the testability of requirements. We describe a technique that we used to migrate to model based testing by reverse engineering use case models from existing test cases and then regenerating the same test cases back from a use case model. We describe tool support for this approach (TDE/UML) that allows efficient use of this approach for creation of system tests and our experiences with a Siemens Medical project. © 2008 IEEE.		Hasling, B.; Goetz, H.; Beetz, K.	Proceedings of the 1st International Conference on Software Testing, Verification and Validation, ICST 2008					ConflictExcluded	Excluded	new_screen			2		2008				
165		ModelGuidance	Business apps with MAML: A model-driven approach to process-oriented mobile app development	Business apps support the digitalization of business operations by utilizing the potential of ubiquitous mobile devices. Whereas many frameworks for programming cross-platform apps exist, few modeling approaches focus on platformagnostic representations of mobile apps. In addition, development is mainly executed by software developers, while domain experts are rarely involved in the actual app creation. The MAML framework is proposed as model-driven approach also targeting non-technical users. Data, views, business logic, and user interactions are jointly modeled from a process perspective using a graphical domain-specific language. An inference mechanism is presented to merge partial data models into a global specification. Through model transformations, apps are then automatically generated for multiple platforms without writing code manually. © 2017 Copyright held by the owner/author(s).		Rieger, C.	Proceedings of the ACM Symposium on Applied Computing					ConflictExcluded	Excluded	new_screen			2		2017				
166		ModelGuidance	Dynamic languages as modeling notations in model driven engineering	There has been a gradual but steady convergence of dynamic programming languages with modeling languages. Modern dynamic languages such as Groovy and Ruby provide for the creation of domain-specific languages that can provide a level of abstraction comparable to that of modeling languages such as UML. This convergence makes dynamic languages suitable as modeling languages but with benefits that traditional modeling languages do not provide. One area that can benefit from this convergence is model driven engineering. By using a dynamic language as an augmentation to MDE's traditional UML notation, it is possible to create models that are executable, exhibit flexible type checking, and which provide a smaller cognitive gap between business users, modelers and developers.		Jia, X.; Jones, C.	ICSOFT 2011 - Proceedings of the 6th International Conference on Software and Database Technologies					ConflictExcluded	Excluded	new_screen			2		2011				
167		ModelGuidance	Model driven support for the Service Oriented Architecture modeling language	Service Oriented Architecture (SOA) is an architectural style that is widely used in distributed and dynamic systems. The Service oriented architecture Modeling Language (SoaML) is an OMG standard for modelling SOA independent of a technology. This paper presents a tool for modelling SOA using SoaML and generating OSGi Declarative Services Models from SoaML models. SoaML metamodel has been implemented as an Ecore model using the Eclipse Modeling Framework (EMF). An Eclipse plug-in that allows architects to graphically design SoaML models has been developed using the Graphical Modeling Framework (GMF). We have also implemented a model transformation using ATLAS Transformation Language (ATL) in order to partially generate Declarative Services models. The generated model is used as a Declarative Services Component Description XML specification which is needed to execute code on the OSGi service oriented platform. In this way, we provide SoaML with Model Driven Architecture support. © 2010 ACM.		Ali, N.; Nellipaiappan, R.; Chandran, R.; Babar, M. A.	Proceedings - International Conference on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2010				
168		ModelGuidance	A Model to Guide Dynamic Adaptation Planning in Self-Adaptive Systems	Self-adaptive enterprise applications have the ability to continuously reconfigure themselves according to changes in their execution contexts or user requirements. The infrastructure managing such systems is based on IBM's MAPE-K reference model: a Monitor and an Analyzer to sense and interpret context data, a Planner and an Executor to create and apply structural adaptation plans, and a Knowledge manager to share relevant information. In this paper we present a formal model, built on the principles of constraint satisfaction, to address dynamic adaptation planning for self-adaptive enterprise applications. We formalize, modify and extend the approach presented in [H. Arboleda, J. F. Díaz, V. Vargas, and J.-C. Royer, Automated reasoning for derivation of modeldriven spls		Paz, A.; Arboleda, H.	Electronic Notes in Theoretical Computer Science					ConflictExcluded	Excluded	new_screen			2		2016				
169		ModelGuidance	Features of integrated model-based co-modelling and co-simulation technology	Given the considerable ongoing research interest in collaborative multidisciplinary modelling and co-simulation, it is worth considering the features of model-based techniques and tools that deliver benefits to cyber-physical systems developers. The European project “Integrated Tool Chain for Model-based Design of Cyber-Physical Systems” (INTO-CPS) has developed a well-founded tool chain for CPS design, based on the Functional Mock-up Interface standard, and supported by methodological guidance. The focus of the project has been on the delivery of a sound foundation, an open chain of compatible and usable tools, and a set of accessible guidelines that help users adapt the technology to their development needs. © Springer International Publishing AG 2018.		Larsen, P. G.; Fitzgerald, J.; Woodcock, J.; Gamble, C.; Payne, R.; Pierce, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2018				
170		ModelGuidance	Understanding technology changes for ICT4D projects through modelling	ICT4D involves the study of design and development of ICT technology to the community. Based on our experience, most of the ICT4D projects are happening in one off solution. The projects will deliver with off the shelf products or services and hand over to the community upon the deployment and training. There is neither plan nor development to deal with changes. Hence, it may lead to the failure and unsustainable projects. We believe that dealing with technology changes is essential for sustaining the ICT4D projects. However, how to handle the changes in technology on ICT projects? This paper introduces a preliminary study on technique to handle the changes of technology through modelling. From the modelling, it showcases how the requirements have led to the technology change and how the business models affect the decision in designing the technology or solution for ICT4D projects. We adopt actor network theory to study the technology changes on ICT4D projects. We extend the actor network theory with networked actor modelling to study the actors’ needs and the impact of cost (e.g. business models) to deal with the technology adoption, translation and development for ICT4D projects. The agent oriented modelling is introduced as the modelling process for actor network theory. The agent modelling consists of models based on the integration of agent models and e3Value model. In order to evaluate the work, we demonstrate how the model can understand the technology changes (e.g. adoption and adaptation) for an electronic health record system (EHR).		WaiShiang, C.; Jali, N.; Khairuddin, M. A.; Sharbini, H.	Journal of Telecommunication, Electronic and Computer Engineering					ConflictExcluded	Excluded	new_screen			2		2017				
171		ModelGuidance	Conceptual modeling of natural language functional requirements	Requirements analysts consider a conceptual model to be an important artifact created during the requirements analysis phase of a software development life cycle (SDLC). A conceptual, or domain model is a visual model of the requirements domain in focus. Owing to its visual nature, the model serves as a platform for the deliberation of requirements by stakeholders and enables requirements analysts to further refine the functional requirements. Conceptual models may evolve into class diagrams during the design and execution phases of the software project. Even a partially automated conceptual model can save significant time during the requirements phase, by quickening the process of graphical communication and visualization. This paper presents a system to create a conceptual model from functional specifications, written in natural language in an automated manner. Classes and relationships are automatically identified from the functional specifications. This identification is based on the analysis of the grammatical constructs of sentences, and on Object Oriented principles of design. Extended entity-relationship (EER) notations are incorporated into the class relationships. Optimizations are applied to the identified entities during a post-processing stage, and the final conceptual model is rendered. The use of typed dependencies, combined with rules to derive class relationships offers a granular approach to the extraction of the design elements in the model. The paper illustrates the model creation process using a standard case study, and concludes with an evaluation of the usefulness of this approach for the requirements analysis. The analysis is conducted against both standard published models and conceptual models created by humans, for various evaluation parameters. © 2013 Elsevier Inc. All rights reserved.		Vidya Sagar, V. B. R.; Abirami, S.	Journal of Systems and Software					ConflictIncluded	Excluded	new_screen			2		2014				
172		ModelGuidance	Modelling the world of a smart room for robotic co-working	Robots come out of the cage. Soon, it will be possible to interact with free-standing robots along an assembly line or in a manufacturing workshop (robotic co-working). New sensitive robot arms have appeared on the market [1] that slow down or stop when humans enter their context, which creates rich opportunities for collaboration between human and robots. But how to program them? This paper contributes an architectural design pattern to engineer software for robotic co-working with world-oriented modelling (WOM). We argue that robotic co-working always has to take place in smart rooms tracking the movements of humans carefully, so that the robotic system can automatically adapt to their actions. Because robotic co-working should be safe for humans, robots, and their work items, the robots should enter safe states before harmful encounters happen. Based on the safety automata in the style of [1], we suggest to engineer software for the smart rooms of human-robotic co-working with an explicit world model, an automaton of the world’s states, and a software variant space, a software variant family, which are related by a total activation mapping. This construction has the advantage that the world model is split off the software system to make its construction simpler, avoiding if-bloated code. Also, proofs about the entire smart system can be split into a proof about the world model and a proof obligation for the software variant space. Therefore, we claim that world-oriented modelling (WOM) simplifies the development of robotic co-working applications, leveraging the principle of separation of concerns for improved maintainability and quality assurance. © Springer International Publishing AG, part of Springer Nature 2018.		Aßmann, U.; Piechnick, C.; Püschel, G.; Piechnick, M.; Falkenberg, J.; Werner, S.	Communications in Computer and Information Science					ConflictExcluded	Excluded	new_screen			2		2018				
173		ModelGuidance	Modeling submit/response style systems with form charts and dialogue constraints	Form-Oriented Analysis is an approach tailored to the modeling of systems with form-based, submit/response style interfaces, a distinct and ubiquitous class of software systems. Form-Oriented Analysis models the system interface with a bipartite finite state machine and relates it to a layered data model. The paper explains the main visual artifact of our technique, the form chart, and introduces dialogue constraint writing. Model decomposition is explained. The analysis technique is firmly based on existing well-understood analysis notions and techniques, and consequently extends these methods. © Springer-Verlag Berlin Heidelberg 2003.		Draheim, D.; Weber, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2003				
174		ModelGuidance	Extending UML sequence diagrams to model agent mobility	This paper presents a proposal for modeling agent mobility with UML sequence diagrams. The notations used to model agent mobility are focused on capturing agent creation, mobility paths and current agent location. Four approaches are described and compared according to their clarity, the space needed for graphics and their expression of mobility. In a case study, the most suitable solution of the proposed notations for the given scenario is elaborated. © Springer-Verlag Berlin Heidelberg 2007.		Kusek, M.; Jezic, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictIncluded	Excluded	new_screen			2		2007				
175		ModelGuidance	Modeling and managing the variability of Web service-based systems	Web service-based systems are built orchestrating loosely coupled, standardized, and internetworked programs. If on the one hand, Web services address the interoperability issues of modern information systems, on the other hand, they enable the development of software systems on the basis of reuse, greatly limiting the necessity for reimplementation. Techniques and methodologies to gain the maximum from this emerging computing paradigm are in great need. In particular, a way to explicitly model and manage variability would greatly facilitate the creation and customization of Web service-based systems. By variability we mean the ability of a software system to be extended, changed, customized or configured for use in a specific context. We present a framework and related tool suite for modeling and managing the variability of Web service-based systems for design and run-time, respectively. It is an extension of the {COVAMOF} framework for the variability management of software product families, which was developed at the University of Groningen. Among the novelties and advantages of the approach are the full modeling of variability via {UML} diagrams, the run-time support, and the low involvement of the user. All of which leads to a great deal of automation in the management of all kinds of variability. (C) 2009 Elsevier Inc. All rights reserved.		Sun, Chang-ai; Rossing, Rowan; Sinnema, Marco; Bulanov, Pavel; Aiello, Marco	{JOURNAL} {OF} {SYSTEMS} {AND} {SOFTWARE}					ConflictExcluded	Excluded	new_screen			2		2010				
176		ModelGuidance	Modeling UAS swarm system using conceptual and dynamic architectural modeling concepts	In this paper, three conceptual architectures for modeling of control architectures for UAS swarms are evaluated according to the criteria of reliability, availability, performance, and adaptability. The digital pheromone conceptual control architecture is proposed as optimal solution satisfying the above criteria. The conceptual architecture for the digital pheromone control architecture could be implemented using dynamic three-tier software architecture. The three-tier architectural style provides a context in which quality attributes such as reliability, availability, performance, and adaptability can be realized. The proposed three-tier software architecture is then specified in the Darwin architecture description language. © 2011 Springer-Verlag.		Reza, H.; Ogaard, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2011				
177		ModelGuidance	Models and guidelines for the design of progressive access in Web-based Information Systems	Because of the large amount of information managed by Web-based Information Systems (WIS), their users often experience some disorientation and cognitive overload syndromes. In order to attenuate this negative effect, we introduce the concept of Progressive Access which aims at giving WIS users a flexible and personalized access to data. First, information considered as essential regarding the user's needs is provided, and then, additional information, if needed, becomes gradually available. Progressive access requires to stratify the information space. These stratifications are described through a central model called the Progressive Access Model (PAM). We present here the PAM and its connections to four other models (data model, functional model, hypermedia model, user model). We show how these five models are linked and exploited during the design of the WIS. Instantiating these models leads to the generation of WIS which integrate the progressive access approach. © Springer-Verlag Berlin Heidelberg 2003.		Villanova-Oliver, M.; Gensel, J.; Martin, H.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2003				
178		ModelGuidance	A framework for verification-oriented user-friendly network function modeling	Network virtualization and softwarization will serve as a new way to implement new services, increases network functionality and flexibility. However, the increasing complexity of the services and the management of very large scale environments drastically complicate detecting alerts and configuration errors of the network components. Nowadays, misconfigurations can be identified using formal analysis of network components for compliance with network requirements. Unfortunately, formal specification of network services requires familiarity with discrete mathematical modeling languages of verification tools, which requires extensive training for network engineers to have the essential knowledge. This paper addresses the above-mentioned problem by presenting a framework designed for automatically extracting verification models starting from an abstract representation of a given network function. Using guidelines provided in this paper, vendors can describe the forwarding behavior of their network function in developer-friendly, high-level languages, which can be then translated into formal verification models of different verification tools. © 2019 IEEE.		Marchetto, G.; Sisto, R.; Valenza, F.; Yusupov, J.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2019				
179		ModelGuidance	Aircrew Manpower Supply Modeling under Change: An Agent-Based Discrete Event Simulation Approach	"This paper deals with manpower planning using a dynamic and interactive simulation system that is agile and adaptive to robustly accommodate change - without requiring a complete rewrite. The simulation architecture extends the current hybrid modelling paradigm which integrates agent based (AB) constraints and controls with a discrete event simulation (DES) methodology. This allows for a more expressive, authentic representation of both process flows and agent policies that captures the advantage of system dynamics (SD) modelling by integrating agile controls with response feedback. This approach is inspired by the need to develop an aircrew training pipeline simulation for the Australian Defence Force (ADF) that supports the real needs for strategic manpower planning in a context of policy and requirements change management. A case study is provided to illustrate the challenges and approach.

"		Nguyen, Vivian; Novak, Ana; Shokr, Mina; Pash, Kristan						ConflictExcluded	Excluded	new_screen			2		2017				
180		ModelGuidance	Teaching UML using umple: Applying model-oriented programming in the classroom	We show how a technology called Umple can be used to improve teaching UML and modeling. Umple allows UML to be viewed both textually and graphically, with updates to one view reflected in the other. It allows UML concepts to be added to programming languages, plus web-based code generation from UML to those languages. We have used Umple in student laboratories and assignments for two years, and also live in the classroom. In a survey, students showed enthusiasm about Umple, and indicated they believe it helps them understand UML better. Improvements in their grades also support our approach.		Lethbridge, T. C.; Mussbacher, G.; Forward, A.; O. Badreddin						ConflictExcluded	Excluded	new_screen			2		2011				
181		ModelGuidance	On the design and architecture of deployment pipelines in cloud-and service-based computing-a model-based qualitative study	DevOps and Continuous Delivery (CD) are becoming the de-facto standard for software deployment in the cloud. Deployment pipelines are a core artefact in such practices, but so far their design is largely discussed informally, and existing sources on DevOps and CD practices are often inconsistent or incomplete. The lack of a generic, complete, tool-agnostic, and application-independent treatment of deployment pipeline design and architecture impedes their understanding by human designers and the creation of generic tools that work across different technologies and applications. To alleviate this problem, we have performed a qualitative, in-depth study of 25 deployment practice descriptions by practitioners containing informal deployment pipeline models. From our study we derived a precisely specified model of deployment pipeline architectures. We can show that the formal model substantially increases the precision of the modelling compared to the informally modelled pipelines in the original sources. © 2019 IEEE.		Zdun, U.; Ntentos, E.; Plakidas, K.; El Malki, A.; Schall, D.; Li, F.	Proceedings - 2019 IEEE International Conference on Services Computing, SCC 2019 - Part of the 2019 IEEE World Congress on Services					ConflictExcluded	Excluded	new_screen			2		2019				
182		ModelGuidance	An empirical study to validate the use of ontological guidelines in the creation of i∗ models	I∗ is a well known goal modeling framework, developed by a large and geographically dispersed research community. Currently, i∗ users tend to ascribe different and conflicting meanings to its constructs, leading to a nonuniform use of the language, and consequently undermining its adoption. In previous works, we proposed ontological guidelines to support the creation of i∗ models, in an attempt to provide a solution to this problem. In this paper, we present an empirical study, to evaluate these ontological guidelines. Results show that for more experienced conceptual modelers, the ontological guidelines indeed support i∗ modeling. However, results are not as positive for non-experienced conceptual modelers.		Gomes, R.C., Jr.; Guizzardi, R. S. S.; Franch, X.; Guizzardi, G.; Wieringa, R.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2015				
183		ModelGuidance	A model-driven method for gesture-based interface requirements specification	Currently there are several software development suites that include tools for user interface design and implementation (mainly by programming source code). Some of the tools are multi-platform and multi-style; that is, al-lowing the specification of devices, e.g. computer, notebook, smartphone, and user interaction styles, e.g. based on gestures, voice, mouse and keyboard. Among the styles, gesture-based interaction is neglected, despite the proliferation of gesture-recognizing devices. Given the variety of styles of human-computer interaction currently available, it is necessary to include information on these styles in software requirements specification to obtain a complete spec-ification prior to code generation. In this paper, we propose the design of a model-driven method and tool that allows specifying gesture-based interactions and then generates gesture-based interface requirements specification. We in-tend to our proposal be interoperable with existing methods and tools. The re-search method follows design science and we plan to validate our proposals by means of technical action-research. Copyright © 2014 for the individual papers by the papers' authors.		González, O. P.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2014				
184		ModelGuidance	Dynamic Non-functional Requirements Based Model-Driven Agent Development	The Belief-Desire-Intention (BDI) agent model is one of the more favoured models used to develop various agents due to both its flexibility and conceptual adaptability. This is mainly with regards to its ability to distinguish between a series of plans through a tailored plan selection function such that the plan most suitable to the current situation is selected. Since BDI agents were first proposed however, their creation process has mainly been entirely functional. This means that in order to properly implement them, specific expertise and knowledge is required. In sight of this, we propose in this paper an entirely model-driven approach based on the Extended Non-Functional Requirements framework. This approach allows agents to be directly derived from an accompanying extended NFR-framework model. The developer therefore only requires knowledge and expertise in this specific framework, which is significantly easier to understand. This derived agent can then select plans from the model's entities with respect to their hierarchy, and influenced by any contributions that they may make, selecting plans which exhibit the highest benefit to the overall system. This model-driven approach is focused on operating within a dynamic environment, which to our knowledge, is the first of its kind. This approach is evaluated experimentally.		Goncalves, J.; Krishna, A.						ConflictExcluded	Excluded	new_screen			2		2015				
185		ModelGuidance	Modelling and simulation of tactical team behaviour	Realistic military simulations are needed for analysis, planning, and training. Intelligent agent technology is a valuable software concept with the potential of being widely used in military simulation applications. They provide a powerful abstraction mechanism required for designing simulations of complex and dynamic battlefields. Their ability to model the tactical decision-making behaviour of simulated battlefield entities gives them an edge over other techniques. During battlefield simulation, these entities generally represent individualistic behaviour, taking operational order from higher control and executing relevant plans. However, since a complex battlefield scenario typically involves thousands of entities, their coordinated team behaviour should also be considered to make the simulation more realistic. This paper demonstrates the use of intelligent agent-based team behaviour modelling concepts in simulating the armoured tanks in a tactical masking scenario. © 2007, DESIDOC.		Bisht, S.; Malhotra, A.; Taneja, S. B.	Defence Science Journal					ConflictExcluded	Excluded	new_screen			2		2007				
186		ModelGuidance	Specifying safety-critical embedded systems with statecharts and Z: A case study	In this paper we introduce a formal approach for the specification of safety-critical embedded systems. The specification formalisms Z and statecharts are integrated under a suitable structural model. The combined approach uses the advantages of the formalisms while avoiding their disadvantages. The different formalisms yield different, compatible views on the system: the functional view describing data and data-transformation, the reactive view, describing the system's reaction upon external stimuli, and the structural view, describing the components of the system and their interaction. The combination is discussed presenting parts of a case study: a traffic light control system. The case study is oriented at original planning documents. Besides its safety- and real-time-aspects, the case study is particularly interesting because structuring and reuse is of considerable importance in this example.		Bussow, R.; Geisler, R.; Klar, M.						ConflictExcluded	Excluded	new_screen			2		1998				
187		ModelGuidance	Trust-based Modelling of Multi-criteria Crowdsourced Data	As a recommendation technique based on historical user information, collaborative filtering typically predicts the classification of items using a single criterion for a given user. However, many application domains can benefit from the analysis of multiple criteria, e.g. tourists usually rate attractions (hotels, attractions, restaurants, etc.) using multiple criteria. In this paper, we argue that the personalised combination of multi-criteria data together with the creation and application of trust models should not only refine the tourist profile, but also improve the quality of the collaborative recommendations. The main contributions of this work are: (1) a novel profiling approach which takes advantage of the multi-criteria crowdsourced data and builds pairwise trust models and (2) the k-NN prediction of user ratings using trust-based neighbour selection. Significant experimental work has been performed using crowdsourced datasets from the Expedia and TripAdvisor platforms. © 2017, The Author(s).		Leal, F.; Malheiro, B.; González-Vélez, H.; Burguillo, J. C.	Data Science and Engineering					ConflictExcluded	Excluded	new_screen			2		2017				
188		ModelGuidance	Smart business object a new approach to model business objects for web applications	At present, there is a growing need to accelerate the development of web applications and to support continuous evolution of web applications due to evolving business needs. The object persistence capability and web interface generation capability in contemporary MVC (Model View Controller) web application development frameworks and model-to-code generation capability in Model-Driven Development tools has simplified the modelling of business objects for developing web applications. However, there is still a mismatch between the current technologies and the essential support for high-level, semantic-rich modelling of web-ready business objects for rapid development of modern web applications. Therefore, we propose a novel concept called Smart Business Object (SBO) to solve the above-mentioned problem. In essence, SBOs are web-ready business objects. SBOs have high-level, web-oriented attributes such as email, URL, video, image, document, etc. This allows SBO to be modelled at a higher-level of abstraction than traditional modelling approaches. A lightweight, near-English modelling language called SBOML (Smart Business Object Modelling Language) is proposed to model SBOs. We have created a toolkit to streamline the creation (modelling) and consumption (execution) of SBOs. With these tools, we are able to build fully functional web applications in a very short time without any coding.		Liang, X.; Ginige, A.	ICSOFT 2006 - 1st International Conference on Software and Data Technologies, Proceedings					ConflictExcluded	Excluded	new_screen			2		2006				
189		ModelGuidance	Modeling holonic systems with an organizational approach	Complex Systems often exhibit hierarchical structures and multiple levels of abstraction, and MultiAgent Systems, even if they have proved their adequacy to model such systems, still remains in their larger part at one or two abstraction levels. It seems uncertain in this context that MAS will be able to catch efficiently the whole complexity of such systems. Holonic Multi-Agent Systems and their intrinsic hierarchical structure appears as a natural alternative. In this paper we propose a generic framework for HMAS modeling based upon an organizational approach. The means to model a compound holon using organizations and how to conciliate in a generic way the holonic structure with problem-dependent behaviors, are detailed. Different aspects related to the holon dynamics: holon creation, members integration and self-organization are also studied.		Rodriguez, S.; Gaud, N.; Hilaire, V.; Koukam, A.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2006				
190		ModelGuidance	Design and Evaluation of an Educational Software Process Simulation Environment and Associated Model	Simulation is an educational tool that is commonly used to teach processes that are infeasible to practice in the real world. Software process education is a domain that has not yet taken full advantage of the benefits of simulation. To address this, we have developed SimSE, an educational, interactive, graphical environment for building and simulating software engineering processes in a game-like setting. We detail the design of SimSE, present an initial simulation model of a waterfall process that we developed, and describe an experiment that we conducted to evaluate the educational potential of SimSE and its initial model		Navarro, E. O.; Hoek, A. v d						ConflictExcluded	Excluded	new_screen			2		2005				
191		ModelGuidance	Model-based testing of probabilistic systems	This paper presents a model-based testing framework for probabilistic systems. We provide algorithms to generate, execute and evaluate test cases from a probabilistic requirements model. In doing so, we connect ioco-theory for model-based testing and statistical hypothesis testing: our ioco-style algorithms handle the functional aspects, while statistical methods, using χ2 tests and fitting functions, assess if the frequencies observed during test execution correspond to the probabilities specified in the requirements. Key results of our paper are the classical soundness and completeness properties, establishing the mathematical correctness of our framework; Soundness states that each test case is assigned the right verdict. Completeness states that the framework is powerful enough to discover each probabilistic deviation from the specification, with arbitrary precision. We illustrate the use of our framework via two case studies. © Springer-Verlag Berlin Heidelberg 2016.		Gerhold, M.; Stoelinga, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2016				
192		ModelGuidance	Integrating Requirements Specification and Model-Based Testing in Agile Development	In agile development, Requirements Engineering (RE) and testing have to cope with a number of challenges such as continuous requirement changes and the need for minimal and manageable documentation. In this sense, extensive research has been conducted to automatically generate test cases from (structured) natural language documents using Model-Based Testing (MBT). However, the imposed structure may impair agile practices or test case generation. In this paper, inspired by cooperation with industry partners, we propose CLARET, a notation that allows the creation of use case specifications using natural language to be used as central artifacts for both RE and MBT practices. A tool set supports CLARET specification by checking syntax of use cases structure as well as providing visualization of flows for use case revisions. We also present exploratory studies on the use of CLARET to create RE documents as well as on their use as part of a system testing process based on MBT. Results show that, with CLARET, we can document use cases in a cost-effective way. Moreover, a survey with professional developers shows that CLARET use cases are easy to read and write. Furthermore, CLARET has been successfully applied during specification, development and testing of industrial applications.		Jorge, D. N.; Machado, P. D. L.; Alves, E. L. G.; Andrade, W. L.						ConflictExcluded	Excluded	new_screen			2		2018				
193		ModelGuidance	MinimUML: A Minimalist Approach to UML Diagramming for Early Computer Science Education	"In introductory computer science courses, the Unified Modeling Language (UML) is commonly used to teach basic object-oriented design. However, there appears to be a lack of suitable software to support this task. Many of the available programs that support UML focus on developing code and not on enhancing learning. Programs designed for educational use sometimes have poor interfaces or are missing common and important features such as multiple selection and undo/redo. Hence the need for software that is tailored to an instructional environment and that has all the useful and needed functionality for that specific task. This is the purpose of minimUML. It provides a minimum amount of UML, just what is commonly used in beginning programming classes, and a simple, usable interface. In particular, minimUML is designed to support abstract design while supplying features for exploratory learning and error avoidance. It supports functionality that includes multiple selection, undo/redo, flexible printing, cut and paste, and drag and drop. In addition, it allows for the annotation of diagrams, through text or free-form drawings, so students can receive feedback on their work. minimUML was developed with the goals of supporting ease of use, of supporting novice students, and of requiring no prior training for its use. This article presents the rationale behind the minimUML design, a description of the tool, and the results of usability evaluations and student feedback on the use of the tool.
"		Turner, Scott A.; Pérez-Quiñones, Manuel A.; Edwards, Stephen H.	J. Educ. Resour. Comput.					ConflictExcluded	Excluded	new_screen			2		2005				
194		ModelGuidance	Modeling AutomationML: Semantic Web technologies vs. Model-Driven Engineering	Modeling engineering knowledge explicitly and representing it by means of standardized modeling languages and in machine-understandable form enables advanced engineering processes in industrial and factory automation. This affects positively both process and product quality. In this paper we explore how the AutomationML format, an emerging data exchange standard, that supports the Industry 4.0 vision, can be represented by means of two established modeling approaches - Model-Driven Engineering (MDE) and Semantic Web. We report observed differences w.r.t. resulting model features and model creation process and, additionally, present the application possibilities of the developed models for engineering process improvement in a production system engineering context.		Kovalenko, O.; Wimmer, M.; Sabou, M.; Lüder, A.; Ekaputra, F. J.; Biffl, S.						ConflictExcluded	Excluded	new_screen			2		2015				
195		ModelGuidance	Towards a new generation of software design environments: Supporting the use of informal and formal notations with OctoUML	Software architects seek efficient support for planning and designing models. Many software design tools lack flexibility in combining informal and formal design. In this paper, we present OctoUML, a proof of a concept of a new generation software design environment that supports an effective software design process. The system provides options for collaborative software design and different input methods for creation of software models at various levels of formality. The design and architecture of OctoUML are also presented. The evaluation shows that OctoUML provides a user-friendly environment and has the potential to effectively support the activities of the designers. © 2016, CEUR-WS. All rights reserved.		Jolak, R.; Vesin, B.; Isaksson, M.; Chaudron, M. R. V.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2016				
196		ModelGuidance	UMM: An operational memory model specification framework with integrated model checking capability	Given the complicated nature of modern shared memory systems, it is vital to have a systematic approach to specifying and analyzing memory consistency requirements. In this paper, we present the UMM specification framework, which integrates two key features to support memory model verification: (i) it employs a simple and generic memory abstraction that can capture a large collection of memory models as guarded commands with a uniform notation, and (ii) it provides built-in model checking capability to enable formal reasoning about thread behaviors. Using this framework, memory models can be specified in a parameterized style - designers can simply redefine a few bypassing rules and visibility ordering rules to obtain an executable specification of another memory model. We formalize several classical memory models, including Sequential Consistency, Coherence, and PRAM, to illustrate the general techniques of applying this framework. We then provide an alternative specification of the Java memory model, based on a proposal from Manson and Pugh, and demonstrate how to analyze Java thread semantics using model checking. We also compare our operational specification style with axiomatic specification styles and explore a mechanism that converts a memory model definition from one style to the other. Copyright © 2005 John Wiley & Sons, Ltd.		Yang, Y.; Gopalakrishnan, G.; Lindstrom, G.	Concurrency Computation Practice and Experience					ConflictExcluded	Excluded	new_screen			2		2005				
197		ModelGuidance	AN INTEGRATED GUI-BUSINESS COMPONENT MODELING METHOD FOR THE MDD- AND MVC-BASED HIERARCHICAL DESIGNS	Due to complex applications, such as the reactive system, the importance of graphic user interface ({GUI}) component modeling has increased. The existing {GUI} modeling methods, however, do not focus on hierarchical {GUI} and business component modeling based on the {MDD} and {MVC} patterns. Furthermore, there is a lack of systematic component-mapping mechanisms integrating {GUI} and business/{DB} component modeling, which consequently makes it difficult to establish a {GUI} component modeling process integrated with business tasks and ultimately deteriorates the reusability of {GUI}-business application models. This paper proposes a layered metamodel and an integrated modeling process that can hierarchically build a {GUI}-business component model based on {MDD} and {MVC}. Towards this end, the {GUI} metamodel and the component metamodel hierarchically established based on the {PIM}/{PSM} ({MDD}) and {MVC} styles are first defined. Then a {GUI}-business component modeling process is constructed based on these metamodels, in three modeling phases. Finally, the result of a case study in which the proposed method is applied to an {ISMS} system is discussed. With the use of the modeling elements and modeling process of the well-defined metamodels based on {MDD} and {MVC}, it is hoped that it can be shown that a systematic and layered {GUI}-business component model can be established, and that the reusability of the constructed {GUI}-business model can be maximized.		Song, Cheeyang; Cho, Eunsook; Kim, Chuljin	{INTERNATIONAL} {JOURNAL} {OF} {SOFTWARE} {ENGINEERING} {AND} {KNOWLEDGE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		2011				
198		ModelGuidance	On using colors in UML models	Using colors has been recognized by Software Engineering research as helpful to make graphical software models more comprehensible. However, guidelines of where and how to use colors have been only little investigated yet. In this paper, we give two simple examples and propose some guidelines of where and how to use colors in UML models efficiently. Our guidelines may provide valuable help to use colors as a visual aid of software models and thus reduce the cognitive load of software developers in Model Driven Engineering. Copyright © 2017 by SCITEPRESS-Science and Technology Publications, Lda. All rights reserved.		Zhang, G.	MODELSWARD 2017 - Proceedings of the 5th International Conference on Model-Driven Engineering and Software Development					ConflictExcluded	Excluded	new_screen			2		2017				
199		ModelGuidance	Toward the interoperable software design models: Quartet of UML, XML, DOM and CORBA	Unified Modeling Language (UML) has been widely accepted as an object-oriented analysis/design methodology in the software engineering community, and is in the process of revised standardization at OMG (Object Management Group). One of the current major enhancements is SMIF (Stream-based Model interchange Format) specification, which aims to interchange UML models in a standard based way. It is expected to be based on XML (eXtensible Markup language) standard and used in various development tools such as CASE tools, automatic documentation tools and repositories. This paper addresses a standard-based UML model interchange and presents our effort to make UML interoperable. We developed a XML-based exchange format called UXF (UML eXchange Format) and a distributed model management system for UML. The system leverages the team development reuse of design models and tool interoperability by interchanging the model information with XML through the Document Object Model (DOM) interface that is implemented on top of CORBA (Common Object Request Broker Architecture). DOM provides a platform and programming language neutral interface to manipulate the content, structure and style of documents. Our work shows a practical application of some key standards in terms of the software model interchange. It provides multiple levels of interoperability for UML, thereby UML models can be highly interoperable. © 1999 IEEE.		Suzuki, J.; Yamamoto, Y.	Proceedings - 4th IEEE International Symposium and Forum on Software Engineering Standards, ISESS 1999					ConflictExcluded	Excluded	new_screen			2		1999				
200		ModelGuidance	Modeling Quality Attributes with Aspect-Oriented Architectural Templates	The quality attributes of a software system are, to a large extent, determined by the decisions taken early in the development process. Best practices in software engineering recommend the identification of important quality attributes during the requirements elicitation process, and the specification of software architectures to satisfy these requirements. Over the years the software engineering community has studied the relationship between quality attributes and the use of particular architectural styles and patterns. In this paper we study the relationship between quality attributes and Aspect-Oriented Software Architectures - which apply the principles of Aspect-Oriented Software Development ({AOSD}) at the architectural level. {AOSD} focuses on identifying, modeling and composing crosscutting concerns - i.e. concerns that are tangled and/or scattered with other concerns of the application. In this paper we propose to use {AO}-{ADL}, an aspect-oriented architectural description language, to specify quality attributes by means of parameterizable, and thus reusable, architectural patterns. We particularly focus on quality attributes that: (1) have major implications on software functionality, requiring the incorporation of explicit functionality at the architectural level; (2) are complex enough as to be modeled by a set of related concerns and the compositions among them, and (3) crosscut domain specific functionality and are related to more than one component in the architecture. We illustrate our approach for usability, a critical quality attribute that satisfies the previous constraints and that requires special attention at the requirements and the architecture design stages.		Pinto, Monica; Fuentes, Lidia	{JOURNAL} {OF} {UNIVERSAL} {COMPUTER} {SCIENCE}					ConflictExcluded	Excluded	new_screen			2		2011				
201		ModelGuidance	Autonomic Configuration Adaptation Based on Simulation-Generated State-Transition Models	Configuration management is a complex task, even for experienced system administrators, which makes self-managing systems a particularly desirable solution. This paper describes a novel contribution to self-managing systems, including an autonomic configuration self-optimization methodology. Our solution involves a systematic simulation method that develops a state-transition model of the behavior of a service-oriented system in terms of its configuration and performance. At run time, the system's behavior is monitored and classified in one of the model states. If this state may lead to futures that violate service level agreements, the system configuration is changed toward a safer future state. Similarly, a satisfactory state that is over-provisioned may be transitioned to a more economical satisfactory state. Aside from the typical benefits of self-optimization, our approach includes an intuitive, explainable decision model, the ability to predict the future with some accuracy avoiding trial-and-error, offline training, and the ability to improve the model at run-time. We demonstrate this methodology in an experiment where Amazon EC2 instances are added and removed to handle changing request volumes to a real service-oriented application. We show that a knowledge base generated entirely in simulation can be used to make accurate changes to a real-world application.		Smit, M.; Stroulia, E.						ConflictExcluded	Excluded	new_screen			2		2011				
202		ModelGuidance	A Comparison of the Model-Based \& Algebraic Styles of Specification as a Basis for Test Specification	"The use of formal specifications as a basis for specifying functional tests has been discussed by a numbers of researchers with most work focusing on one style of specification or another separately. But is any single style an adequate basis for writing functional tests? The strengths, weaknesses and complementary nature of two popular styles of software specification, model-based and algebraic, are examined as a basis for functional test specification.

"		Denney, Richard	SIGSOFT Softw. Eng. Notes					ConflictExcluded	Excluded	new_screen			2		1996				
203		ModelGuidance	Near real-time collaborative conceptual modeling on the web	Collaboration during the creation of conceptual models is an integral pillar of design processes in many disciplines. Synchronous collaboration, in particular, has received little attention in the conceptual modeling literature so far. There are many modeling and meta-modeling tools available, however most of these do not support synchronous collaboration, are offered under restrictive licenses, or build on proprietary libraries and technologies. To close this gap, this paper introduces the lightweight meta-modeling framework SyncMeta, which supports near real-time collaborative modeling, meta-modeling and generation of model editors in the Web browser. It employs well-proven Operational Transformation algorithms in a peer-to-peer architecture to resolve conflicts occurring during concurrent user edits. SyncMeta was successfully used to create meta-models of various conceptual modeling languages. An enduser evaluation showed that the editing tools of SyncMeta are considered usable and useful by collaborative modelers. © Springer International Publishing Switzerland 2015.		Derntl, M.; Nicolaescu, P.; Erdtmann, S.; Klamma, R.; Jarke, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2015				
204		ModelGuidance	Test Case Creation from UML Sequence Diagram: A Soft Computing Approach	Unified modeling language (UML) is used to design the tests in various levels of testing. To create the test cases from the source code using traditional methods is becoming very difficult and cumbersome in cluster levels. UML artifacts provide a lot of facts which help the user to navigate through the flaws from the designed documents. In this work, we propose a method for creating the test cases using sequence diagram of UML models. As the testing can be started from the design process at the beginning phase, we preferred this approach. We proposed a model to generate a sequence flow chart (SFC) from sequence diagram and then tried to convert it to message control flow graph (MCFG). By using message sequence path coverage criterion, we traversed the MCFG and the test paths are generated. The test cases from these paths are created subsequently. Finally, genetic algorithm has been applied to generate test cases and also to optimize them. The model is implemented on a case study of ATM withdrawal system. © Springer India 2015.		Jena, A. K.; Swain, S. K.; Mohapatra, D. P.	Advances in Intelligent Systems and Computing					ConflictExcluded	Excluded	new_screen			2		2015				
205		ModelGuidance	A MDA based approach for multi-platform mobile application development	In order to improve application development efficiency for multiple mobile operating system platforms, a MDA based approach named MAMDA (Mobile Application Model Driven Approach) is proposed. In MAMDA, a PMI (Platform Independent Model) is established, which includes both state and class models and is represented by UML. The PIM can be transformed into DSPF (Domain Specific Plan File) file which is in XML style. In DSPF, embedded Ruby scripts are used to enhance action semantics. With the help of specific transform template according to different platforms, the DSPF files will be transformed into corresponding PSMs (Platform Specific Models) and then generate source codes. This paper introduces the process of MAMDA and describes the key techniques about application modeling and model transformation. An example case of mobile application development for multi-platform with MAMDA approach was given in the last. © 2011 International Information Institute.		Wu, M.; Chen, Z.; Ying, J.	Information					ConflictIncluded	Excluded	new_screen			2		2011				
206		ModelGuidance	A Semantic Modeling Approach for Image Retrieval by Content	"We introduce a semantic data model to capture the hierarchical, spatial, temporal, and evolutionary semantics of images in pictorial databases. This model mimics the user's conceptual view of the image content, providing the framework and guidelines for preprocessing to extract image features. Based on the model constructs, a spatial evolutionary query language (SEQL), which provides direct image object manipulation capabilities, is presented. With semantic information captured in the model, spatial evolutionary queries are answered efficiently. Using an object-oriented platform, a prototype medical-image management system was implemented at UCLA to demonstrate the feasibility of the proposed approach.

"		Chu, Wesley W.; Ieong, Ion T.; Taira, Ricky K.	The VLDB Journal					ConflictExcluded	Excluded	new_screen			2		1994				
207		ModelGuidance	Role of software process modeling in planning industrial measurement programs	Measurement is a necessary prerequisite for software process improvement. However, few guidelines exist for systematic planning of measurement programs within software projects. We advocate beginning with goal-oriented measurement as expressed in the GQM paradigm. When applying GQM, meaningful refinement of measurement goals requires a deep understanding of the organization's software development processes. Software process modeling can act as a means to gain this understanding. We provide guidelines that state how software processes should be modeled in order to support the introduction of measurement in a software project. The process models are used to derive non-intrusive data collection procedures that satisfy the needs of multiple measurement goals and thereby minimize the data collection overhead. Finally, we present the lessons learned from jointly applying software process modeling and measurement technologies in two industrial software projects.		Broeckers, Alfred; Differding, Christiane; Threin, Guenter	International Software Metrics Symposium, Proceedings					ConflictExcluded	Excluded	new_screen			2		1996				
208		ModelGuidance	A double comparative study: Process models and student skills	We report on a recent experience in our Software Engineering laboratory course. More than one hundred students, from two different degrees, were divided in teams grouping diverse competences and skills, and had to develop four software products using a process model chosen among Waterfall, Spiral, and Extreme Programming. The two degrees involved were Computer Science and Informatics for Management. The former students have a standard, strong, background in programming, systems, and algorithms, while the latter students have a weaker training in programming compensated by some courses in Economics and Management. This situation allowed us to perform a double comparative study: on one hand, analyzing the laboratory results we obtained a comparison of the process models, which reproduced some results already known in literature. On the other hand we could compare “on the field” the different skills of students following different curricula, especially with respect to the requirements of the different process models. We discuss the results of this experience.		Ciancarini, P.; Dos, C.; Zuppiroli, S.						ConflictExcluded	Excluded	new_screen			2		2013				
209		ModelGuidance	Manual test case derivation from UML activity diagrams and state machines: A controlled experiment	Context It is a difficult and challenging task to fully automatize model-based testing because this demands complete and unambiguous system models as input. Therefore, in practice, test cases, especially on the system level, are still derived manually from behavioral models like UML activity diagrams or state machines. But this kind of manual test case derivation is error-prone and knowing these errors makes it possible to provide guidelines to reduce them. Objective The objective of the study presented in this paper therefore is to examine which errors are possible and actually made when manually deriving test cases from UML activity diagrams or state machines and whether there are differences between these diagram types. Method We investigate the errors made when deriving test cases manually in a controlled student experiment. The experiment was performed and internally replicated with overall 84 participants divided into three groups at two institutions. Results As a result of our experiment, we provide a taxonomy of errors made and their frequencies. In addition, our experiment provides evidence that activity diagrams have a higher perceived comprehensibility but also a higher error-proneness than state machines with regard to manual test case derivation. This information helps to develop guidelines for manual test case derivation from UML activity diagrams and state machines. Conclusion Most errors observed were due to missing test steps, conditions or results, or content was written into the wrong field. As activity diagrams have a higher perceived comprehensibility, but also more error-prone than state machines, both diagram types are useful for manual test case derivation. Their application depends on the context and should be complemented with clear rules on how to derive test cases. © 2015 Elsevier B.V. All rights reserved.		Felderer, M.; Herrmann, A.	Information and Software Technology					ConflictExcluded	Excluded	new_screen			2		2015				
210		ModelGuidance	Modeling of Discrete Event Systems: A Holistic and Incremental Approach Using Petri Nets	"In this article, the authors provide an alternative view on Petri nets modeling of discrete event systems. The proposed modeling procedure follows the Systems Specification guidelines underlying the well-known DEVS modeling formalism. The authors' endeavour is towards perfecting the design of reusable Petri nets-based models by searching for a good primitive for a modular model construction and the introduction of coupling templates as standardised means to couple building block components. Assuming that the real-world system to be modeled has been analyzed in depth beforehand through a suitable system analysis method (which itself is beyond the scope of the article), we present a systematic step-by-step approach to construct a model in the Petri nets domain together with its experimental frame. The construction adheres to well-defined rules, which enable computer-based model construction. The input for this systematic bottom-up construction of Petri nets-models is information (about, e.g., primitive system components, entity flows, routing constructs) gathered from the top-down system analysis. In the article, attention is also paid to the algebraic backgrounds underlying the proposed model construction. These provide the basis for formal correctness proofs, mapping Petri nets onto DEVS-models, and complexity reduction of the found Petri nets-models. By offering to the model builder the possibility to handle multiple abstraction levels and by addressing important issues related to the interfacing question of coupled models and model components described in Petri nets and DEVS formalism, the authors' work addresses two of the main research directions of Computer Automated Multi-Paradigm Modeling ([Mosterman and Vangheluwe 2002]): model abstraction and multiformalism modeling. The article concludes with an illustrative application example.
"		Bobeanu, Carmen-Veronica; Kerckhoffs, Eugene J. H.; Landeghem, Hendrik Van	ACM Trans. Model. Comput. Simul.					ConflictIncluded	Excluded	new_screen			2		2004				
211		ModelGuidance	Extending Unbounded Systems Thinking with agent-oriented modeling: Conceptualizing a multiple perspective decision-making support system	Organizations today face complex decision-making environments in which multiple perspectives must be considered. Mitroff and Linstone [The Unbounded Mind: Breaking the Chains of Traditional Business Thinking (1993) Oxford University Press, New York] developed Unbounded Systems Thinking (UST), of which multiple perspectives are an integral part. They suggest that, while the theory of applying multiple perspectives to decision-making and knowledge creation is sound and well researched, the implementation of multiple perspectives is difficult. It is maintained here that agent-oriented modeling can be used to design a system supporting multiple perspectives and to extend UST. This paper applies the Belief-Desire-Intention (BDI) model of agents to UST to demonstrate the use of agent-oriented modeling to facilitate multiple perspective decision support. © 2004 Elsevier B.V. All rights reserved.		Hall, D.; Guo, Y.; Davis, R. A.; Cegielski, C.	Decision Support Systems					ConflictExcluded	Excluded	new_screen			2		2005				
212		ModelGuidance	Towards Modeling Guidelines for Capturing the Cost of Improving Software Product Quality in Release Planning	Quality requirements complement functional requirements with information on the target quality levels of software functions or emergent system quality aspects. In release planning the allocation of development effort in further investments into product enhancements, new or enhanced functions are competing with quality improvements for limited resources. When setting balanced quality targets for development of coming releases, the estimated costs of improved software quality is needed as a basis for decisions. In this paper, we present initial results from an industrial evaluation of modeling guidelines for the Cost View in the QUality PERformance (QUPER) model. The initial results indicate the feasibility of the proposed modeling approach to cost estimation of quality requirements in QUPER, but further validation is needed.		Svensson, Richard Berntsson; Regnell, Björn; Aurum, Aybuke						ConflictExcluded	Excluded	new_screen			2		2010				
213		ModelGuidance	Pcanel: a model driven component framework	Modern embedded systems tend to be heterogeneous in the sense that components in a system have diverse interaction styles. Composition of subsystems with very different characteristic complicates embedded software development and challenges understandability, composability, and scalability of models. The paper describes a model driven component framework, Pcanel, to solve this problem. It proposes a hierarchical model structure and semantic framework that supports heterogeneous components. Pcanel drives component execution by models of computation, allowing the formal analysis, verification and validation of the embedded software. Models explicitly represent the designer's understanding of the system, and capture the requirements and the design of the application. The paper presents the principles and techniques of Pcanel in details. Examples in terms of real systems are given that illustrate how Pcanel addresses the heterogeneity nature and the assurance issues of embedded software composition.		Cheng Xie; Wenzhi Chen; Jiaoyin Shi						ConflictExcluded	Excluded	new_screen			2		2004				
214		ModelGuidance	Modelling form-based interfaces with bipartite state machines	This article presents the concept of form storyboarding, a new modelling method for eliciting, specifying and communicating functional requirements of applications with form-based interfaces. We identify two-staged interaction as the abstract concept behind form-based interfaces. The method encompasses a visual language for the documents to be created and a set of proposals for the activities involved in that. The method fits to different and ubiquitous types of submit/response style interfaces, i.e. mainframe terminals as well as web-based interfaces. The method yields an abstract interface model based on bipartite state machines. The model is executable and can be used for automatic prototype generation. Form storyboarding is first and foremost a feature-driven approach. The whole form storyboard can be obtained by collecting single system features. Crucial for this approach is the fact that diagrams can be combined in an easy operation, by building the union of both diagrams and identifying nodes and edges with the same name. © 2005 Elsevier B.V. All rights reserved.		Draheim, D.; Weber, G.	Interacting with Computers					ConflictExcluded	Excluded	new_screen			2		2005				
215		ModelGuidance	A partial multi stealing scheduling model for divide and Conquer Problems	Work-Stealing technique has proven itself to be one of the successful multithreaded scheduling techniques that are designed to balance work-load in multicore environments. As the number of cores in multicore-based products increases, new developments have to be made for this technique to cope with this continuous challenge in the hardware side. In this paper, we present a multicore model that is designed to deal with Divide and Conquer Problems. The model is based on designing two types of schedulers: The High-Level Scheduler (HLS) and Low-Level Scheduler (LLS). The HLS has the duty of balancing threads distribution among the modelled cores. In this scheduler, we present a new policy, Partial Multi Stealing Policy that extends the principle of work stealing in managing threads distribution. The policy is scalable and general for dealing with any kind of Divide and Conquer Problems. For the LLS, we introduce a new method for threads creation and management for the Matrix Multiplication problem. The model has been designed using Coloured Petri Nets (CPN) as the modelling language, and simulated by CPN-Tool as the modelling tool. The results of the simulation show a high level of concurrency between the elements of the model which reduces the execution time as the number of cores increases in the model.		Al-Obaidi, A. M.; Lee, S. P.						ConflictExcluded	Excluded	new_screen			2		2012				
216		ModelGuidance	Semantic modeling of Virtual Environments using MASCARET	Many Virtual Reality (VR) applications, such as Virtual Learning Environments or Interactive Virtual Tours, are based on a rich semantic description of the environment and tasks that users have to perform. These applications are built upon Virtual Environments (VEs) in which artificial agents act autonomously while interacting in realtime with users. Semantic modelling of a VR environment makes it possible the knowledge-driven access from the description of VEs that simplifies the development of VR applications. It eases the development of these types of applications. Semantic modelling should provide a consistent representation of the following aspects: 1) The simulated world, its structure and the behavior of its entities, 2) Interactions and tasks, that users and agents can perform in the environment, 3) Knowledge items, that autonomous agents can use for decision-making or for communication with users. This paper presents MASCARET, a model-based approach, for the design of semantic VR environments. This approach is based on the Unified Modeling Language (UML). In this approach, UML is used to provide a knowledge-driven access to the semantic contents of the VE and not for code generation, as in classical software development process. Interests of a UML-based approach are that its metamodel covers different views of the semantic modelling: ontology, structure, behaviors, interactions, activities. It is also an extensible language that can be specialized to provide formal operational semantics. We also present how MASCARET can be used to develop content-rich interactive applications that can be deployed over various VR platforms. Finally, we discuss the benefits of such a metamodel-based approach and show how the multi-layer semantic model can be used in different VR applications, in which adaptive behaviors of artificial agents acting within complex environments have to be simulated.		Chevaillier, P.; Trinh, T.; Barange, M.; Loor, P. De; Devillers, F.; Soler, J.; Querrec, R.						ConflictExcluded	Excluded	new_screen			2		2012				
217		ModelGuidance	Disciplined heterogeneous modeling: Invited paper	Complex systems demand diversity in the modeling mechanisms. One way to deal with a diversity of requirements is to create flexible modeling frameworks that can be adapted to cover the field of interest. The downside of this approach is a weakening of the semantics of the modeling frameworks that compromises interoperability, understandability, and analyzability of the models. An alternative approach is to embrace heterogeneity and to provide mechanisms for a diversity of models to interact. This paper reviews an approach that achieves such interaction between diverse models using an abstract semantics, which is a deliberately incomplete semantics that cannot by itself define a useful modeling framework. It instead focuses on the interactions between diverse models, reducing the nature of those interactions to a minimum that achieves a well-defined composition. An example of such an abstract semantics is the actor semantics, which can handle many heterogeneous models that are built today, and some that are not common today. The actor abstract semantics and many concrete semantics have been implemented in Ptolemy II, an open-source software framework distributed under a BSD-style license. © 2010 Springer-Verlag.		Lee, E. A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2010				
218		ModelGuidance	A Model-Based Architecture for Testing Medical Cyber-Physical Systems	"Understanding the human body dynamics in response to any medical treatment makes automated decision support systems for healthcare quite complex. In this paper, we present an architecture for Medical Cyber-Physical Systems to help developers to generate test cases for their applications using models already validated. It is based on component models to simulate the operation of medical devices and patient data. Medical guidelines and a clinical database have been used together with statistical techniques to create regression models that simulate vital signs. A controlled experiment of a clinical scenario has been developed to validate the proposed architecture components. The results of this study indicate that models for the healthcare domain are a promising alternative to test their applications.
"		Silva, Lenardo C.; Perkusich, Mirko; Bublitz, Frederico M.; Almeida, Hyggo O.; Perkusich, Angelo						ConflictExcluded	Excluded	new_screen			2		2014				
219		ModelGuidance	How model based systems engineering streamlines the development of complex systems	The challenges of a market affected by an economic climate in stagnation, if not exactly in a real recession crisis like the one today, require systems construction times extremely short even with innovative and complex products. In addition, engineering teams can only rely on limited budgets to ensuring the right level of quality of manufactured product. The Systems Engineering discipline should not be considered as a mere technical activity in the systems development life-cycle, rather as an approach capable to determine the economic-industrial sustainability of the entire project; today, innovators leverage Model-Based Systems Engineering for addressing these challenges. This article describes the Best Practices for the implementation of the Model Based Systems Engineering as a result of the experience and its application in the complex system's design. These Best Practices, using UML/SysML as an independent modeling language paradigm, support analysis, design, development, verification, and validation phases through the implementation of executable models. However SysML modeling alone doesn't represent a definitive solution. SysML is commonly perceived as a complex language by Systems Engineering communities, with many semantic elements which if used all together can lead to an entropic effect of not manageable relations, instead of providing an effective synthesis. The key for a correct adoption of MBSE paradigm is the definition of a reference workflow that will serve as a guideline through a set of essential language elements. It allows Systems Engineers to focus on the definition of specifications and architecture to be delivered to engineering specialists for hardware, software and testing. This article describes an example of a workflow for requirements analysis, functional analysis and design phases including main activities to be performed, artifacts to be produced and Best Practices supported. Collaborative aspects of Systems Engineering life cycle emerging from requirements and change management process areas are addressed too. Copyright © held by the authors.		Mancin, E.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2014				
220		ModelGuidance	Smart business objects for web applications: A new approach to model business objects	At present, there is a growing need to accelerate the development of web applications and to support continuous evolution of web applications due to evolving business needs. The object persistence capability and web interface generation capability in contemporary MVC (Model View Controller) web application development frameworks and model-to-code generation capability in Model-Driven Development tools has simplified the modelling of business objects for developing web applications. However, there is still a mismatch between the current technologies and the essential support for high-level, semantic-rich modelling of web-ready business objects for rapid development of modern web applications. Therefore, we propose a novel concept called Smart Business Object (SBO) to solve the above-mentioned problem. In essence, SBOs are web-ready business objects. SBOs have high-level, web-oriented attributes such as email, URL, video, image, document, etc. This allows SBO to be modelled at a higher-level of abstraction than traditional modelling approaches. A lightweight, near-English modelling language called SBOML (Smart Business Object Modelling Language) is proposed to model SBOs. We have created a toolkit to streamline the creation (modelling) and consumption (execution) of SBOs. With these tools, we are able to build fully functional web applications in a very short time without any coding. © Springer-Verlag Berlin Heidelberg 2008.		Danny Liang, X.; Ginige, A.	Communications in Computer and Information Science					ConflictExcluded	Excluded	new_screen			2		2008				
221		ModelGuidance	A stratification and sampling model for bellwether moving window	An effective method for finding the relevant number (window size) and the elapsed time (window age) of recently completed projects has proven elusive in software effort estimation. Although these two parameters significantly affect the prediction accuracy, there is no effective method to stratify and sample chronological projects to improve prediction performance of software effort estimation models. Exemplary projects (Bellwether) representing the training set have been empirically validated to improve the prediction accuracy in the domain of software defect prediction. However, the concept of Bellwether and its effect have not been empirically proven in software effort estimation as a method of selecting exemplary/relevant projects with defined window size and age. In view of this, we introduce a novel method for selecting relevant and recently completed projects referred to as Bellwether moving window for improving the software effort prediction accuracy. We first sort and cluster a pool of N projects and apply statistical stratification based on Markov chain modeling to select the Bellwether moving window. We evaluate the proposed approach using the baseline Automatically Transformed Linear Model on the ISBSG dataset. Results show that (1) Bellwether effect exist in software effort estimation dataset, (2) the Bellwether moving window with a window size of 82 to 84 projects and window age of 1.5 to 2 years resulted in an improved prediction accuracy than the traditional approach.		Mensah, S.; Keung, J.; Bosu, M.; Bennin, K.; Kudjo, P. K.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					ConflictExcluded	Excluded	new_screen			2		2017				
222		ModelGuidance	Mobile-IDM: A design method for modeling the new interaction style of mobile applications	Mobile applications (apps) offer designers the opportunity to experiment with novel interaction grammars (e.g., gestures, context-aware events), whose implications for conceptual modeling still need to be fully understood. The research panorama only proposes a few design methods for apps, which are mainly released as extensions of existing ones. This, in addition to the short lifecycle that characterizes apps, leads to the risk of inappropriate modeling techniques being adopted. To bridge this gap, we propose a new design method, named Mobile-IDM, to model the interaction between the user and the app from a logical point of view. As it is based upon IDM and Rich-IDM, from which it inherits its design semantics, Mobile-IDM exploits the dialog metaphor to facilitate the establishment of a common ground between designers and web engineers to obtain good usability of the interaction. We demonstrate through a case study the simplicity and other advantages of our approach. © Springer International Publishing Switzerland 2015.		Coppola, G.; Fiore, A.; Mainetti, L.; Pandurino, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2015				
223		ModelGuidance	Model-driven modernisation of Java programs with JaMoPP	The history of all programming languages exposes the introduction of new language features. In the case of Java- a widespread general purpose language-multiple language extensions were applied over the last years and new ones are planned for the future. Often, such language extensions provide means to replace complex constructs with more compact ones. To benefit from new language extensions for large bodies of existing source code, a technique is required that performs the modernisation of existing source code automatically. In this paper we demonstrate, how Java programs can be automatically migrated to new versions of the Java language. Using JaMoPP, a tool that can create models from Java source code, we enable the application of model transformations to perform model-driven modernisation of Java programs. Our approach is evaluated by applying two concrete transformations to large open source projects. First, we migrate classical for loops to the new for-each style (introduced in Java 5). Second, we convert anonymous classes to closures (planned for Java 8). Furthermore, we discuss how tracing transformations allows to quantify the impact of planned extensions.		Heidenreich, F.; Johannes, J.; Reimann, J.; Seifert, M.; Wende, C.; Werner, C.; Wilke, C.; Assmann, U.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2011				
224		ModelGuidance	Modeling Agents for real environment	This work presents Modeling Agents for Real Environments, a framework to build predefined behavior agents and insert then into real environments to run in real time. Coded in Lua, MARE departs from a formal definition of agents and join games techniques such as A* algorithm, finite state machines, terrain tiles and others to build a fully customizable tool for games or simulation creation.		De Oliveira Lyrio, G. H. S.; De Beauclair Seixas, R.	3rd International North-American Conference on Intelligent Games and Simulation, Game-On 'NA 2007					ConflictExcluded	Excluded	new_screen			2		2007				
225		ModelGuidance	A UML profile for dependability analysis of real-time embedded systems	"In this paper, we aim at giving a contribution toward the definition of a UML profile supporting the dependability analysis of real-time and embedded systems (RTES) that conforms to the upcoming profile named Modeling and Analysis of Real-Time and Embedded Systems"" (MARTE)"		Bernardi, S.; Merseguer, J.	Proceedings of the 6th International Workshop on Software and Performance, WOPS'07					ConflictExcluded	Excluded	new_screen			2		2007				
226		ModelGuidance	Implementation strategies for the model component in a modelviewcontroller architectural style				Balisage Series on Markup Technologies					ConflictExcluded	Excluded	new_screen			2		2017				
227		ModelGuidance	Modeling users on the World Wide Web based on cognitive factors, navigation behavior and clustering techniques	This paper focuses on modeling users' cognitive styles based on a set of Web usage mining techniques on user navigation patterns and clickstream data. Main aim is to investigate whether specific clustering techniques can group users of particular cognitive style using measures obtained from psychometric tests and content navigation behavior. Three navigation metrics are proposed and utilized to find identifiable groups of users that have similar navigation patterns in relation to their cognitive style. The proposed work has been evaluated with two user studies which entail a psychometric-based survey for extracting the users' cognitive styles, combined with a real usage scenario of users navigating in a controlled Web 2.0 environment. A total of 106 participants of age between 17 and 25 participated in the study providing interesting insights with respect to cognitive styles and navigation behavior of users. Studies like the reported one can be useful for modeling users and assist adaptive Web 2.0 environments to organize and present information and functionalities in an adaptive format to diverse user groups. © 2013 Elsevier Inc. All rights reserved.		Belk, M.; Papatheocharous, E.; Germanakos, P.; Samaras, G.	Journal of Systems and Software					ConflictExcluded	Excluded	new_screen			2		2013				
228		ModelGuidance	Model driven ontology: A new methodology for ontology development	Semantic technology is becoming a preferable alternative for enterprise-wide applications intertwined with interoperable information sharing, due to the distributed nature of this technology. Ontology is the cornerstone of semantic technology; therefore, a major challenge for the project team is to build a complete and consistent ontology data model that represents the correct business domain. Effective collaboration among customer and team members is essential for the creation of the correct ontology model. Equally necessary is a mechanism to automatically transform this model into ontology script. Within today's leading organizations using semantic technology, a significant factor in business success rests solely in the hands of the ontologists. It is they alone who are responsible for building the correct ontology data model. Having no other members on the project team capable of verifying and validating the created ontologies may put the entire business at risk. This paper describes a new methodology, Model Driven Ontology		Keshk, M.; Chambless, S.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2009				
229		ModelGuidance	Evaluating the Use of AOP and MDA in Web Service Development	Model-driven architecture (MDA) is introduced to shorten the software development time, produce better quality of code and promote the reuse of software artifacts. On the other hand, aspect-oriented programming (AOP) is motivated by the need to create decoupled systems, which are easier to maintain. As a result, it can be argued that adopting AOP and MDA side-by-side will provide advantages from both sets of techniques. However, adapting a new technology often entails extra cost and effort, including cost associated with training and support for the software tool. Therefore, it is crucial to evaluate the usefulness of applying such techniques. This paper presents a quantitative approach to evaluate the use of MDA and AOP in service-oriented environments. We shall start by presenting an outline of a method of implementation and maintenance of Web services, based on both MDA and AOP. Then, with the help of a case study we shall evaluate the advantages and disadvantages of applying the method, achieved by comparing two implementations of a prototype University Administration system; the first implementation is based on ad-hoc methods of Web service development, whereas the second implementation is carried out by applying MDA and AOP. We shall use various metrics to report on the maintainability, performance, percentage of generated and reused code resulting from the use of MDA and AOP.		Ortiz, G.; Bordbar, B.; Hernández, J.						ConflictExcluded	Excluded	new_screen			2		2008				
230		ModelGuidance	Assessing the effectiveness of Precise Activity Diagrams in the Context of Business Process Modeling	UML activity diagrams are a commonly used notation for modeling business processes. In this paper, we present a novel precise style for this notation and a controlled experiment to assess its effective- ness. The context of the experiment is constituted of master students in Computer Science at the Free University of Bolzano-Bozen in Italy. The results indicate that the subjects achieved a significantly better com- prehension level when business processes are modeled using the precise style with respect to a lighter variant, with no significant impact on the effort to accomplish the comprehension tasks.		Di Cerbo, F.; Dodero, G.; Reggio, G.; Ricca, F.; Scanniello, G.	SEBD 2011 - Proceedings of the 19th Italian Symposium on Advanced Database Systems					ConflictExcluded	Excluded	new_screen			2		2011				
231		ModelGuidance	RETRACTED ARTICLE: Translation from UML to Markov model: A performance modeling framework for managing behavior of multiple collaborative sessions and instances	Performance evaluation of distributed system is always an intricate undertaking where system behavior is normally distributed among several components those are physically distributed. Bearing this concept in mind, we delineate a performance modeling framework for a distributed system that proposes a translation process from high level UML notation to Markov model and solves the model for relevant performance metrics. To capture the system dynamics through our proposed framework we outline a specification style that focuses on UML collaboration and activity as reusable specification building blocks. To present the UML specification style we focus on how to coordinate explicitly multiple collaborative sessions occurring at the same time. Design alternatives of system architecture are considered to generate the performance model to show how these design alternatives thus affect the system performance under different work load. The proposed performance modeling framework provides prediction result of a system such as mean response time and resource utilization. The applicability of our proposed framework is demonstrated in the context of performance modeling of a distributed system. © 2010 IEEE.		Khan, R. H.; Heegaard, P. E.	Proceedings - 2010 3rd IEEE International Conference on Computer Science and Information Technology, ICCSIT 2010					ConflictExcluded	Excluded	new_screen			2		2010				
232		ModelGuidance	A UML-based object-oriented framework development methodology	Recently, object-oriented (OO) frameworks have been known to be highly effective and practical for software reuse; as shown in San Francisco project, a large-scaled industry project for framework development. However, systematic development process and detailed instructions for building OO frameworks have not been studied enough. In addition, it has not been clearly defined how to apply OMG's Unified Modeling Language (UML) in building OO frameworks. In this paper, we propose a practical OO development process that extends UML notations and semantics. The proposed process consists of four typical software development phases; analysis, design, implementation and testing, and each phase is defined as a logical sequence of development tasks. In order to help the seamless migration from one task to subsequent tasks, we provide instructions for carrying out tasks. Since the proposed process is based on UML diagrams and the basic objectory process, we believe that OO frameworks can be more efficiently developed by utilizing the proposed process, and higher quality OO frameworks can be produced. In order to show the applicability and effectiveness of the process, we present a case study of electronic commerce application.		Young Joon Yang; Soon Yong Kim; Gui Ja Choi; Eun Sook Cho; Chul Jin Kim; Soo Dong Kim						ConflictExcluded	Excluded	new_screen			2		1998				
233		ModelGuidance	Bank loan processes modelling using BPMN	The development of products and IT services in bank sector, including the number and the complexity of processes required to operate efficiently, have had important improvements. The work that is presented in this paper is focused on the modelling of business processes that a banking organization follows, during the procedures of a loan request. These activities are modeled with the aim to trace time-consuming processes, which cause delays to the total procedure. The methodology that is used for the Bank loan processes is the Business Process Modelling Notation (BPMN). Objectives of this work are: reduction in the duration of implementation of enterprising process, reduction of implementation time, reduction of cost, improvement of quality. Through the application of BPM and the use of process-oriented IT systems (BPM systems using BPEL code) bank performance of loan processes could be increased substantially. The proposed system will help in the synchronized selection and effective correlation of all information, so as to result in the creation of a centralized knowledge base, through the dynamic depiction of important Key Performance Indicator networks. Furthermore, for modelling and assessment of loan process effectiveness purposes and in order to model in the best way the analyzed simulation results, some specific KPIs are proposed in order to measure and assess BPMN-based processes. © 2010 IEEE.		Mpardis, G.; Kotsilieris, T.	Proceedings - 3rd International Conference on Developments in eSystems Engineering, DeSE 2010					ConflictExcluded	Excluded	new_screen			2		2010				
234		ModelGuidance	Problems in modeling the software development process as an adventure game	SESAM (Software Engineering Simulation by Animated Models) is a simulator for practicing the role of a software project manager. Its long term goal is to provide a tool for training CS students. As a research project, SESAM calls for an integrated model of the software development process, reflecting and quantifying many phenomena observed in real software projects. We are currently using the second prototype, which can already demonstrate some rational behaviour. More important, however, were our observations in the process of constructing SESAM. They shed light on the current state of software engineering, and on the applicability of metrics. SESAM is being developed in an evolutionary style by the Software Engineering Department (Lehrstuhl) at Stuttgart University; it is implemented in Smalltalk-80 on Unix-Workstations. This paper concentrates on the fundamental questions raised by the work on SESAM. A more complete description of our work has been published before (Ludewig et al., 1992). © Springer-Verlag Berlin Heidelberg 1993.		Ludewig, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		1993				
235		ModelGuidance	Model-Based performance prediction with the palladio component model	One aim of component-based software engineering (CBSE) is to enable the prediction of extra-functional properties, such as performance and reliability, utilising a well-defined composition theory. Nowadays, such theories and their accompanying prediction methods are still in a maturation stage. Several factors influencing extra-functional properties need additional research to be understood. A special problem in CBSE stems from its specific development process: Software components should be specified and implemented independent from their later context to enable reuse. Thus, extra-functional properties of components need to be specified in a parametric way to take different influence factors like the hardware platform or the usage profile into account. In our approach, we use the Palladio Component Model (PCM) to specify component-based software architectures in a parametric way. This model offers direct support of the CBSE development process by dividing the model creation among the developer roles. In this paper, we present our model and a simulation tool based on it, which is capable of making performance predictions. Within a case study, we show that the resulting prediction accuracy can be sufficient to support the evaluation of architectural design decisions. Copyright 2007 ACM.		Becker, S.; Koziolek, H.; Reussner, R.	Proceedings of the 6th International Workshop on Software and Performance, WOPS'07					ConflictExcluded	Excluded	new_screen			2		2007				
236		ModelGuidance	Modeling and transformation of 3D human motion	Applying different styles of motion such as those related to gender, age and energy of the performer, are important themes in creating realistic animation. While typically different sets of motion sequences must be created for different styles, in this paper we present a technique for transferring motion styles across different sequences. This allows transforming the style of a motion while preserving the primary action class of the original motion. A mathematical model capable of defining both the action class and the style class is proposed and based on the model, the conversion data are computed. A series of piece-wise time warping procedures are conducted prior to employing the defined transformation function. Using this technique, there would be no need for a new set of motion data to be captured or keyframed as the original motion data can be altered to show the desired style.		Etemad, S. A.; Arya, A.	GRAPP 2010 - Proceedings of the International Conference on Computer Graphics Theory and Applications					ConflictExcluded	Excluded	new_screen			2		2010				
237		ModelGuidance	Incremental UML for Agile Development: Embedding UML Class Models in Source Code	"Agile methods favor working software over comprehensive documentation."" The latter presumably includes Unified Modeling Language. UML is expensive to maintain"		Braude, E.						ConflictExcluded	Excluded	new_screen			2		2017				
238		ModelGuidance	Applying story driven modeling to the Paderborn shuttle system case study	Story Driven Modeling (SDM) is a technical software development process employing UML-based modeling in all project phases, including implementation and test. SDM may be considered as a simple version of Model Driven Software Development as proposed by the OMG. SDM uses scenarios in analysis and test phases and provides practical guidelines for the synthesis of statecharts and method behavior specifications. SDM proposes object games for refining textual use case scenarios into so called story boards, i.e. sequences of UML interaction diagrams. From these story boards the modeler derives class diagrams, UML-based, operational behavior specifications and UML-based JUnit tests. The code generators of the Fujaba CASE tool turn this automatically in a Java implementation and run the JUnit tests. This paper is a case study applying SDM to the Paderborn shuttle system. This case study exemplifies how applications that deal with complex object structures may be modeled using SDM. © Springer-Verlag Berlin Heidelberg 2005.		Diethelm, I.; Geiger, L.; Zündorf, A.	Lecture Notes in Computer Science					ConflictExcluded	Excluded	new_screen			2		2005				
239		ModelGuidance	A model for style change detection at a glance: Notebook for PAN at CLEF 2018	This year's PAN Author Identification sub-task for style change detection deals with a single question, whether or not a document has multiple authors? To answer this simple question, a simple straightforward and fast approach is proposed in this document. Some basic stylometry analysis techniques e.g. word frequencies (for stop-words and other POS words), punctuations, word pair frequencies and POS pair frequencies. In order to make fast comparison among word windows, a fast comparison model is built that can produce results in a glance. This model showed 65.1% accuracy over evaluation dataset and 63.83% accuracy over training dataset.		Khan, J. A.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2018				
240		ModelGuidance	Extensible Model-Based Approach for Supporting Automatic Enterprise Analysis	A critical activity in Enterprise Architecture (EA) projects is building models for communicating a consolidated enterprise structure. This is achieved by modeling elements belonging in a plurality of domains (e.g., business, processes, technology, information) and making explicit the relationships existing between them. After models are completed, they are used to support the analysis of the enterprise. However, the increasing size and complexity of these models has made this a difficult task for humans alone, and has fostered the research around automatic analysis methods. The problem is that usability concerns that are very important for modeling languages usually go against automation requirements. One example of this is ArchiMate, a widely used language for creating and visualizing EA models. On the one hand, ArchiMate has a low number of elements compared to the domains it addresses. This makes the language simple and easy to learn, but seriously limits the kinds of analysis that can be performed. On the other hand, ArchiMate does not include mandatory attributes in any element, which makes the modeling task easier, but also hinders the quality of the analyses. The hypotheses that we have studied are that to provide automatic analysis methods it is necessary to: 1) have the possibility of extending any metamodel with specialized and typed concepts and relations, with the level of granularity that the analysis requires, 2) and to force the presence of attributes that depend entirely on the selected analysis method. To study this, we have created a model-based tool for analyzing ArchiMate models called iArchiMate. This tool makes it possible to create and run analysis functions, and also to extend the ArchiMate metamodel with the elements that specific analysis require. This paper discusses and illustrates the motivations and requirements for supporting automatic model analysis, the requirements of analysis methods, and the core characteristics of iArchiMate.		Florez, H.; Sánchez, M.; Villalobos, J.						ConflictExcluded	Excluded	new_screen			2		2014				
241		ModelGuidance	Defining reference models for modelling qualities: How requirements engineering techniques can help	The acceptance of a software system by its users crucially depends on the system's ability to meet its quality requirements. In this context, the relevant quality factors as well as their importance differ between domains, between organizations, and even between development projects within an organization. The UML QoS-Profile proposes a flexible framework for modelling quality requirements with the UML. However, the QoS-Profile does not offer guidelines on how to derive relevant quality factors that can be used for modelling quality requirements with the UML. Even though reference modelling techniques (e.g. domain engineering) provide an appropriate solution if sufficient resources are available - they lack in scalability if this is not the case. In this position paper we sketch a scalable approach for defining QoS reference models that is based on well-established requirements engineering techniques. © Springer-Verlag Berlin Heidelberg 2007.		Rinke, T.; Weyer, T.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2007				
242		ModelGuidance	Automated formal analysis of networks: FDR models of arbitrary topologies and flow-control mechanisms	We present new techniques for formally modeling arbitrary network topologies and control-flow schemes, applicable to high-speed networks. A novel induction technique suitable for process algebraic, finite-state machine techniques is described which can be used to verify end-to-end properties of certain arbitrarily configured networks. We also present a formal model of an algorithm for regulating burstiness of network traffic, which incorporates discrete timing constraints. Our models are presented in {CSP} with automatic verification by {FDR}.		Reed, J. N.; Jackson, D. M.; Deianov, B.; Reed, G. M.						ConflictExcluded	Excluded	new_screen			2		1998				
243		ModelGuidance	Securing Android App Markets via Modeling and Predicting Malware Spread between Markets	The Android ecosystem has recently dominated mobile devices. Android app markets, including official Google Play and other third party markets, are becoming hotbeds, where malware originates and spreads. Android malware has been observed to both propagate within markets and spread between markets. If the spread of Android malware between markets can be predicted, market administrators can take appropriate measures to prevent the outbreak of malware and minimize the damages caused by malware. In this paper, we make the first attempt to protect the Android ecosystem by modeling and predicting the spread of Android malware between markets. To this end, we study the social behaviors that affect the spread of malware, model these spread behaviors with multiple epidemic models, and predict the infection time and order among markets for well-known malware families. To achieve an accurate prediction of malware spread, we model spread behaviors in the following fashion: 1) for a single market, we model the within-market malware growth by considering both the creation and removal of malware; 2) for multiple markets, we determine market relevance by calculating the mutual information among them; and 3) based on the previous two steps, we simulate a susceptible infected model stochastically for spread among markets. The model inference is performed using a publicly available well-labeled dataset AndRadar. To conduct extensive experiments to evaluate our approach, we collected a large number (334,782) of malware samples from 25 Android markets around the world. The experimental results show our approach can depict and simulate the growth of Android malware on a large scale, and predict the infection time and order among markets with 0.89 and 0.66 precision, respectively. © 2005-2012 IEEE.		Meng, G.; Patrick, M.; Xue, Y.; Liu, Y.; Zhang, J.	IEEE Transactions on Information Forensics and Security					ConflictExcluded	Excluded	new_screen			2		2019				
244		ModelGuidance	A Structure-Driven Method for Information Retrieval-Based Software Change Impact Analysis	An important application of information retrieval technology is software change impact analysis. Existing information retrieval-based change impact analysis methods select a single method to transform the source code corpus into vectors in a process known as indexing. The single method is chosen from two primary methods, known as the bag-of-words and word embedding models, each having their specific advantages and disadvantages. The bag-of-words model records every word in the source code but ignores contextual information in the corpus. The word embedding model records the contextual information but loses detail for individual words. To address this problem, we propose a structure-driven method for information retrieval-based change impact analysis (named {SDM}-{CIA}). {SDM}-{CIA} integrates the bag-of-words and word embedding models based on the software's structure. Our experiments using a standard benchmark shows that when compared with the existing methods, {SDM}-{CIA} improves on precision performance, recall performance, F-score performance, and {MRR} performance by an average of 3.65\%, 3.82\%, 3.6\%, and 10.28\%, respectively. Our experiments confirm the effectiveness of {SDM}-{CIA}.		He, Yun; Li, Tong; Wang, Wei; Lan, Wei; Li, Xiang	{SCIENTIFIC} {PROGRAMMING}					ConflictExcluded	Excluded	new_screen			2		2018				
245		ModelGuidance	Model-driven development and the future of software engineering education	This paper argues that the research area of model-driven development is likely to lead before long to tools being produced that will automate most of the construction activity within software development processes. It therefore discusses the impact that such developments would have on the software engineering curriculum, in terms of both the body of knowledge and the structures of courses, drawing on analogies with the impact during the 1960s of the development of problem-oriented programming languages and compilers for them.		Cowling, T.						ConflictExcluded	Excluded	new_screen			2		2013				
246		ModelGuidance	Towards interactive compilation models	A chain of model-to-model transformations prescribes a particular work process, while executing such a chain generates a concrete instance of this process. Modeling the entire development process itself on a meta-model level extends the possibilities of the model-based approach to guide the developer. Besides refining tools for model creation, this kind of meta-modeling also facilitates debugging, optimization, and prototyping of new compilations. A compiler is such a process system. In this paper, we share the experiences gathered while we worked on the model-based reference compiler of the kieler SCCharts project and ideas towards a unified view on similar prescribed processes. © Springer Nature Switzerland AG 2018.		Smyth, S.; Schulz-Rosengarten, A.; von Hanxleden, R.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2018				
247		ModelGuidance	Comprehension and quality of analysis specifications - a comparison of FOOM and OPM methodologies	{FOOM}-Functional and Object Oriented Methodology-combines two essential software-engineering paradigms: the functional (or process-oriented) approach and the object-oriented (00) approach. The two main products of the analysis phase of {FOOM} are an initial class diagram and {OO}-{DFDs} (dataflow diagrams including data classes rather than traditional data-stores). We evaluated these analysis products by comparing them with the analysis products of {OPM}-Object-Process Methodology-which also combines the functional and object-oriented approaches, using a unified diagrammatic notation. {FOOM} and {OPM} were compared in two controlled experiments from two main points of view: users and analysts. From the point of view of users we compared mainly comprehension of analysis specifications in each methodology. From the point of view of analysts we compared mainly quality, namely correctness of specifications created by analysts who utilized the two methodologies. The main results of the experiments are that {FOOM} specifications are more comprehensible and prefer-red by users, and that analysts create more correct specifications when using {FOOM} methodology. (C) 2004 Elsevier B.V. All rights reserved.		Kabeli, J.; Shoval, P.	{INFORMATION} {AND} {SOFTWARE} {TECHNOLOGY}					ConflictExcluded	Excluded	new_screen			2		2005				
248		ModelGuidance	Building insightful simulation models using formal approaches — A case study on Petri Nets	In recent years development of formal approaches for modeling and simulation of manufacturing systems received significant attention. Approaches building on alternative Petri Nets formalisms show essential strengths in accurately capturing both a system's static structure and its dynamics, availability of mathematical analysis methods, and graphical representation. However, models of realistic systems are often perceived as too large and complex to understand by project stakeholders. This hinders their participation in modeling, and solution finding, and may influence their perception of model credibility. In this article we address this issue by considering a structured approach for embodying high-level manufacturing concepts. The approach aims at creating more insightful simulation models by building on sound and explicit conceptualization, i.e., the choice of manufacturing concepts, and clear rules for their formalization, i.e., their mapping on elementary model components. We adopted the Petri Nets based tool ExSpectTM to illustrate and evaluate our approach.		Zee, D. van der						ConflictExcluded	Excluded	new_screen			2		2009				
249		ModelGuidance	Wand and Weber's decomposition model in the context of business process modeling	"Whereas the benefits of decomposing process models are obvious, the question what actually characterizes a “good” decomposition of a business process model has been given little attention to date. In addition, the process of decomposition itself is considered as being an “art” in literature. Our approach for achieving a “good” decomposition is Wand and Weber’s decomposition model for information systems. As a first step in our investigation we aim to explore in how far the decomposition model can be adapted for business process modeling at all. The potential this model might bear for evaluating decompositions of process models has been promoted in literature quite often, while a corresponding investigation is still missing. We address this gap by the following research. In the long term, we intend to establish guidelines for decomposing business process models in a structured way.
"		Johannsen, F.; Leist, S.	Business and Information Systems Engineering					ConflictExcluded	Excluded	new_screen			2		2012				
250		ModelGuidance	Modeling presentation layers of web applications for testing	Web software applications have become complex, sophisticated programs that are based on novel computing technologies. Their most essential characteristic is that they represent a different kind of software deployment-most of the software is never delivered to customers' computers, but remains on servers, allowing customers to run the software across the web. Although powerful, this deployment model brings new challenges to developers and testers. Checking static {HTML} links is no longer sufficient; web applications must be evaluated as complex software products. This paper focuses on three aspects of web applications that are unique to this type of deployment: (1) an extremely loose form of coupling that features distributed integration, (2) the ability that users have to directly change the potential flow of execution, and (3) the dynamic creation of {HTML} forms. Taken together, these aspects allow the potential control flow to vary with each execution, thus the possible control flows cannot be determined statically, prohibiting several standard analysis techniques that are fundamental to many software engineering activities. This paper presents a new way to model web applications, based on software couplings that are new to web applications, dynamic flow of control, distributed integration, and partial dynamic web application development. This model is based on the notion of atomic sections, which allow analysis tools to build the analog of a control flow graph for web applications. The atomic section model has numerous applications in web applications; this paper applies the model to the problem of testing web applications.		Offutt, Jeff; Wu, Ye	{SOFTWARE} {AND} {SYSTEMS} {MODELING}					ConflictExcluded	Excluded	new_screen			2		2010				
251		ModelGuidance	Contextual and Relational Role-Based Modeling Framework	Model-driven Software Development (MDSD) approaches struggle when modeling context-dependent and dynamic systems, as their underlying metamodels cannot capture context-dependent concepts and relations. By contrast, role-based modeling has been studied for more than 35 years as a promising paradigm to model context-dependent and dynamic systems. Although some approaches have considered the application of roles on the metamodel level, no approach employed a contextual and relational role-based metamodel as the basis of a modeling framework. To remedy this, we employ the Compartment Role Object Model (CROM) which is a contextual and relational role-based modeling language, as the underlying metamodel of a novel Role-based Modeling Framework (RMF). In particular, our framework is able to generate inter-operable Java source code that permits the programmatic creation, manipulation, and persistence of role-based models. We illustrate the applicability of RMF by modeling a small system with context-dependent concepts and relations, generating corresponding Java source code, and employing it to load, manipulate, and store role-based models.		Kühn, T.; Werner, C.; Schön, H.; Zhenxi, Z.; U. Aßmann						ConflictExcluded	Excluded	new_screen			2		2019				
252		ModelGuidance	Finding factors impacting productivity in software development project using structured equation modelling	"The size of international software industry is over $1000bn. Total revenue earned by the Indian software industry in year 2005 was $30bn and which is expected to grow. The price quoted by vendors to its customers and the rate of the customer service is dependent on the productivity of the project. Given the fact that software development complexity is on an ever-increasing curve, it becomes critical to tackle the issues that influence the productivity levels of the project teams involved. Identification of factors as either aiding or hindering productivity enables management to take steps to encourage the positive influences and to eliminate the negative ones. Hence it is important to understand the factors affecting productivity and how these factors affect productivity when they are present in tandem. Hence this report aims to develop a model using structured equation modelling to find important factors affecting productivity and their impact on productivity. This paper is a further improvement on the paper Maximizing Productivity by Controlling Influencing Factors and Commercial Software Development"""		Mohapatra, S.; Gupta, D. K.	International Journal of Information Processing and Management					ConflictExcluded	Excluded	new_screen			2		2011				
253		ModelGuidance	A conceptual model for characterizing the problem domain	Defining characteristics of a problem domain continues to challenge developers of visualization software although it is essential for designing both tools and resulting visualizations. Additionally, effectiveness of a visualization software tool often depends on the context of systems and actors within the domain problem. The nested blocks and guidelines model is a useful template for informing design and evaluation criteria for visualization software development because it aligns design to need. Characterizing the outermost block of the nested model-the domain problem-is challenging, mainly due to the nature of contemporary domain problems, which are dynamic and by definition difficult to problematize. We offer here our emerging conceptual model, based on the central question in our research study-what visualization works for whom and in which situation-to characterize the outermost block, the domain problem, of the nested model. We apply examples from a 3-year case study of visualization software design and development to demonstrate how the conceptual model might be used to create evaluation criteria affecting design and development of a visualization tool. © The Author(s) 2015.		Winters, K. M.; Lach, D.; Cushing, J. B.	Information Visualization					ConflictExcluded	Excluded	new_screen			2		2016				
254		ModelGuidance	Customer knowledge transfer challenges in a co-creation value network: Toward a reference model	In today's interconnected global marketplace, where customers have become increasingly knowledgeable and empowered, a customer-centric view is becoming a prominent differentiating strategy for firms. Accordingly, firms with the aim of delivering a seamless customer experience strive to offer integrated solutions. This quite often relies on inter-organizational collaboration in the context of a value network In this context, customer-related knowledge is regarded as one of the primary sources in the provisioning process of integrated solutions. This, in turn, implies the importance of effective sharing of customer knowledge among actors of a value network. Customer knowledge transfer is difficult due to some recognizable challenges such as a lack of trust. Because of the added complexity of a value network, achieving a shared understanding among actors about customer knowledge transfer challenges in a value network setting (VN-CKTC) might be more difficult. A systematic and comprehensive overview of the VN-CKTC (in the form of a reference model) might support this by providing additional structure. Although scholars have long studied knowledge transfer challenges within business network settings, they are usually limited in scope and their resulting challenges differ widely. Therefore, they provide insufficient coverage of the possible challenges. A more comprehensive view is thus needed. Our research aims at designing and validating a reference model that provides a systematic and wider spectrum of possible VN-CKTC. To this end, a design science research approach is followed. In the design phase, by conducting a systematic literature review followed by a structured classification, a reference model of VN-CKTC is designed. In the evaluation phase, the validation of this designed artifact is evaluated in a value network setting by conducting multiple case studies. The results of this study give us both theoretically and context-speciﬁc descriptions of the significant relevant of these challenges. The proposed reference model provides a rich picture of VN-CKTC. Decision makers of value networks can use this reference model as a means to achieve a shared understanding about customer knowledge transfer challenges and to come to an agreement on these challenges. They can also apply it to be aware of which challenges to focus on, so they are provided with a much stronger basis to make better-informed decisions to address and mitigate these challenges. © 2019 Elsevier Ltd		Bagheri, S.; Kusters, R. J.; Trienekens, J. J. M.	International Journal of Information Management					ConflictExcluded	Excluded	new_screen			2		2019				
255		ModelGuidance	Modeling software effort estimation using hybrid PSO-ANFIS	Accurate estimating software development effort is essential in effective project management processes such as budgeting, project planning and control. To achieve an accurate estimate some algorithmic estimation techniques proposed to eliminate or reduce inaccuracies estimation. COCOMO is a parametric model used to estimate software effort. However, so far no model has proven successful to effectively and consistently predict software effort. Parametric models are considered vulnerable when faced with the problem of non-linearity of the complex in the parameters. In recent years, some estimation technique appears using intelligent systems to predict software effort. This study uses a model Neuro-fuzzy optimized with PSO to get the right model to improve the estimation effort at NASA dataset software project. Parameter cost driver, consisting of 17 feature COCOMO will then be optimized using PSO techniques to get a better prediction accuracy. Furthermore, the results of the optimization will be trained in using the algorithm to get a prediction Neuro-fuzzy effort. The performance of the proposed estimation model will be evaluated with some other intelligent system model parameters to evaluate several criteria such as Mean Standard Error (MSE), Mean Magnitude of Relative Error (MMER), and Level Prediction (Pred). The model that best shows the error rate MSE and MMER lowest to highest Pred.		Suharjito; Nanda, S.; Soewito, B.						ConflictExcluded	Excluded	new_screen			2		2016				
256		ModelGuidance	To create DDA by the approach of ANN from UCT-created data	Dynamic Difficulty Adjustment (DDA) can adjust game difficulty level dynamically; so it generates a tailor-made experience for each gamer. If a game is too easy, the gamer will feel bored; if it is too hard, the gamer will become frustrated. DDA is a mechanism to overcome this dilemma and augment the entertainment of a game by dynamically adjusting the parameters, scenarios and behaviors in the game in real-time based on the gamer's personal ability. We use Upper Confidence bound for Trees (UCT) to create the training data, and then train the Artificial Neural Networks (ANN) off-line with that data. Finally, we derive DDA from ANN approach. In this paper, the prey and predator game genre of Pac-Man is utilized as a test-bed, the procedure of training ANN is shown, and the feasibility of applying DDA to game artificial intelligence (AI) development is demonstrated.		Xinyu Li; Suoju He; Yue Dong; Qing Liu; Xiao Liu; Yiwen Fu; Zhiyuan Shi; Wan Huang						ConflictExcluded	Excluded	new_screen			2		2010				
257		ModelGuidance	OntoProg: An ontology-based model for implementing Prognostics Health Management in mechanical machines	Trends in Prognostics Health Management (PHM) have been introduced into mechanical items of manufacturing systems to predict Remaining Useful Life (RUL). PHM as an estimate of the RUL allows Condition-based Maintenance (CBM) before a functional failure occurs, avoiding corrective maintenance that generates unnecessary costs on production lines. An important factor for the implementation of PHM is the correct data collection for monitoring a machine's health, in order to evaluate its reliability. Data collection, besides providing information about the state of degradation of the machine, also assists in the analysis of failures for intelligent interventions. Thus, the present work proposes the construction of an ontological model for future applications such as expert system in the support in the correct decision-making, besides assisting in the implementation of the PHM in several manufacturing scenarios, to be used in the future by web semantics tools focused on intelligent manufacturing, standardizing its concepts, terms, and the form of collection and processing of data. The methodological approach Design Science Research (DSR) is used to guide the development of this study. The model construction is achieved using the ontology development 101 procedure. The main result is the creation of the ontological model called OntoProg, which presents: a generic ontology addressing by international standards, capable of being used in several types of mechanical machines, of different types of manufacturing, the possibility of storing the knowledge contained in events of real activities that allow through consultations in SPARQL for decision-making which enable timely interventions of maintenance in the equipment of a real industry. The limitation of the work is that said model can be implemented only by specialists who have knowledge in ontology. © 2018 Elsevier Ltd		Nuñez, D. L.; Borsato, M.	Advanced Engineering Informatics					ConflictExcluded	Excluded	new_screen			2		2018				
258		ModelGuidance	Composing and deploying grid middleware web services using model driven architecture	Rapid advances in networking, hardware, and middleware technologies are facilitating the development and deployment of complex grid applications, such as large-scale distributed collaborative scientific simulation, analysis of experiments in elementary particle physics, distributed mission training and virtual surgery for medical instruction. These predominantly collaborative applications are characterized by their very high demand for computing, storage and network bandwidth requirements. Grid applications require secure, controlled, reliable, and guaranteed access to different types of resources, such as network bandwidth, computing power, and storage capabilities, available from multiple service providers. Moreover, they demand multiple, simultaneous end-to-end quality of service (QoS) properties, such as delay guarantees, jitter guarantees, security, scalability, reliability and availability guarantees, and bandwidth and throughput guarantees, for their effective operation. Existing grid infrastructure middleware, such as Globus, ICENI, and Legion, offer simplified application programming interfaces (APIs) for deploying grid applications. However, grid applications using these APIs become tightly coupled to their respective middleware infrastructure creating an impediment to interoperability, portability, maintenance and extensibility. Moreover, existing grid infrastructure middleware offer only the means and not the solutions for reserving and securely accessing resources. Thus, the onus of actually reserving and provisioning these different resources while also ensuring end-to-end QoS still lies on the grid applications. These low-level concerns increase the accidental complexities incurred developing complex grid applications. A promising solution to remedy these problems is to use the Model-Integrated Computing (MIC) paradigm to model the resource and QoS requirements of grid applications and integrate it with grid component middleware. MIC tools can perform feasibility analysis of the application's resource and QoS requirements and determine the right resource provisioning strategies. The MIC tools can subsequently synthesize, assemble and deploy QoS-enabled grid middleware components configured with the resource reservation and service provisioning strategies tailored to the needs of the grid application, while also delivering end-to-end QoS. Moreover, MIC tools can also be used to expose the deployed grid middleware as a Web service thereby decoupling grid applications from any particular middleware API. The paper provides three contributions to the study of a model-driven approach to assembling and deploying QoS-enabled grid middleware capable of provisioning resources and delivering QoS end-to-end to grid applications. First, we describe our Grid component middleware called GriT, which is based on the Object Management Group's (OMG) CORBA Component Model (CCM). Second, we explain how we are using the OMG Model Driven Architecture (MDA), which is a standardization of the MIC technology, to develop a tool called CoSMIC. CoSMIC is used to simplify composition of semantically compatible components of GriT to provide end-to-end QoS and resource guarantees to grid applications. Third, we show how the CoSMIC tools expose the deployed GriT middleware as a Web service that enables grid applications to use ubiquitous web protocols, such as Session Initiation Protocol (SIP) to create, join, or leave collaborative grid applications. © Springer-Verlag Berlin Heidelberg 2002.		Gokhale, A.; Natarajan, B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2002				
259		ModelGuidance	Modeling with Recursive Use Cases	This research makes a significant contribution to modeling Use Cases, most particularly in those proceedings in which the Use Case is unique as part of an event stream of the computer application. This particular Use Cases were called Recursive Use Cases (RUC), and can be detected in multimedia applications, specifically those relating to 3D modeling. It is concluded that the Recursive Use Cases can be implemented to model the analysis phase of 3D multimedia applications, therefore, it is created an extension of the traditional nomenclature of tool use case UML (Unified Modeling Language), through the creation of various stereotypes.		Benigni, G.; Zabala, S.; Gaviria, M.						ConflictExcluded	Excluded	new_screen			2		2012				
260		ModelGuidance	Structural Model: Architecture for Software Designers	A structural model is the architectural map for a large software system or family of systems (domain). The structural model used in a domain represents the point of convergence for trade-offs between maintainability and performance, quality and efficiency. As such, different domains will likely have different structural models. The idea of a structural model evolved out of the Ada Simulator Validation Program (ASVP), which established the efficacy of Ada for real-time training simulation. In the years since this program, a great deal of work has been done toward defining architectures and structural models in the air vehicle training system (flight simulation) domain. This is evidenced by recent initiatives such as the SEI's Structural Modeling, Mod Sim, STARS, DIS, ARPA's DSSA, etc. This paper discusses the concept of structural modeling within a software design methodology, the generic description of a structural model, and the structural model developed by Boeing Defense & Space Group, the Domain Architecture for Reuse in Training Systems (DARTS).		Crispen, Robert G.; Stuckey, Lynn D.						ConflictIncluded	Excluded	new_screen			2		1994				
261		ModelGuidance	A reference model-based user requirements elicitation process: Toward operational business-IT alignment in a co-creation value network	Context: To improve operational business-IT alignment (BITA), the development of IT-based systems should be derived from business requirements. However, the requirements elicitation process is challenging and encounters several problems which might lead to acquiring low-quality user requirements and failure of systems development projects. Many of elicitation problems are also identified as being relevant in the BITA literature. We focus on one category of well-known elicitation problems, such as communication flaws. Until now, the majority of requirements elicitation studies with the aim of addressing operational BITA are based on an asking strategy. This elicitation strategy is suitable for relatively stable situations. To compensate for the limitation of this strategy in a more complex situation, e.g., a co-creation value network (VN) setting, using it in conjunction with other elicitation strategies is more likely to yield satisfactory results. Objective: To contribute to operational BITA improvement in a VN setting by addressing one category of elicitation problems. For this purpose, we design and evaluate a reference model-based approach to facilitate the user requirements elicitation process. Method: Two-phase research according to the design science approach is followed. In the design phase, a reference model-based user requirements elicitation process is designed. Also, as a proof of concept, two instances of this artifact are designed. Two reference models, respectively, describing customer knowledge management processes and customer knowledge management challenges in a VN setting are used separately in designing these two instances. In the evaluation phase, the applicability and usefulness of these instances are evaluated in two separate studies. Results: A reference model supports asking-based user requirements elicitation process via a Delphi method in a complex context of a VN. It improves the user requirements elicitation process by addressing a set of recognized elicitation problems. Conclusions: The reference model-based approach, by addressing the elicitation problems, contributes to user requirements elicitation process improvement in general and to a better operational BITA in the complex situation of a VN in particular. © 2019 Elsevier B.V.		Bagheri, S.; Kusters, R. J.; Trienekens, J. J. M.; Grefen, P. W. P. J.	Information and Software Technology					ConflictExcluded	Excluded	new_screen			2		2019				
262		ModelGuidance	Applicative modelling with RAISE	In this chapter we provide an introduction to the RAISE Specification Language and to the RAISE method. We concentrate on the applicative style of RAISE, the style most commonly used initially in development. We also describe two examples. The first is a simple communication system that allows the transmission of messages with the possibility of higher priority messages overtaking others. The example illustrates the use of abstract initial specification to capture vital properties, and of more detailed concrete specification to describe a model having those properties. The second example is a control system of a lift, and illustrates the use of model checking to gain confidence in a RAISE model. © Springer-Verlag Berlin Heidelberg 2007.		George, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2007				
263		ModelGuidance	Descriptive software process modeling - How to deal with sensitive process information	Descriptive software process models are important assets in software process improvement. The accuracy of the model, i.e., the degree to which it reflects the process as it is actually performed, is a key to the success of process improvement programs. To develop such a process model, a Process Engineer collects available process information, which is subsequently summarized in a process model. The information needed to develop an accurate description of the process is often sensitive, regarding, for instance, work practices that are not followed as described in the official process documentation. Revealing this sensitive information to other people within the software organization can be harmful for the information providers. Therefore, dealing with this type of information imposes ethical responsibilities to the Process Engineer and can put Process Engineers into an awkward situation. This paper lists experience from descriptive process modeling cases in industry where sensitive information was provided and provides guidelines on how to deal with such information.		Becker-Kornstaedt, U.	Empirical Software Engineering					ConflictExcluded	Excluded	new_screen			2		2001				
264		ModelGuidance	Extending UPPAAL for the modeling and verification of dynamic real-time systems	Dynamic real-time systems, where the number of processes is not constant and new processes can be created on the fly like in object-based systems and ad-hoc networks, are still lacking a formal framework enabling their verification. Different toolboxes like Uppaal [21], Tina [10], Red [28] and Kronos [29] have been designed to deal with the modeling and analysis of real-time systems. Nevertheless, a shortcoming of these tools is that they can only describe static topologies. Other tools like Spin [18] allow the dynamic creation of processes, but do not consider time aspects. This paper presents a formal framework for modeling and verifying dynamic real-time systems. We introduce callable timed automata as a simple but powerful extension of standard timed automata in which processes may call each other. We show that the semantics of each call event can be interpreted either as an activation of the existing instance of the corresponding automaton (static instantiation), or a creation of a new concurrent instance (dynamic instantiation). We explore both semantical interpretations, static and dynamic, and give for each one the motivation and benefits with illustrating examples. Finally, we report on experiments with a prototype tool, which translates (a subset of) callable timed automata to UPPAAL systems. © 2013 IFIP International Federation for Information Processing.		Boudjadar, A.; Vaandrager, F.; Bodeveix, J.-P.; Filali, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2013				
265		ModelGuidance	Recommendation-Based Conceptual Modeling and Ontology Evolution Framework (CMOE+)	Within an enterprise, various stakeholders create different conceptual models, such as process, data, and requirements models. These models are fundamentally based on similar underlying enterprise (domain) concepts, but they differ in focus, use different modeling languages, take different viewpoints, utilize different terminology, and are used to develop different enterprise artifacts; as such, they typically lack consistency and interoperability. This issue can be solved by enterprise-specific ontologies, which serve as a reference during the conceptual model creation. Using such a shared semantic repository makes conceptual models interoperable and facilitates model integration. The challenge to accomplish this is twofold: on the one hand, an up-to-date enterprise-specific ontology needs to be created and maintained, and on the other hand, different modelers also need to be supported in their use of the enterprise-specific ontology. The authors propose to tackle these challenges by means of a recommendation-based conceptual modeling and an ontology evolution framework, and we focus in particular on ontology-based modeling support. To this end, the authors present a framework for Business Process Modeling Notation (BPMN) as a conceptual modeling language, and focus on how modelers can be assisted during the modeling process and how this impacts the semantic quality of the resulting models. Subsequently, a first, large-scale explorative experiment is presented involving 140 business students to evaluate the BPMN instantiation of our framework. The experiments show promising results with regard to incurred overheads, intention of use and model interoperability. © 2017, Springer Fachmedien Wiesbaden GmbH.		Gailly, F.; Alkhaldi, N.; Casteleyn, S.; Verbeke, W.	Business and Information Systems Engineering					ConflictExcluded	Excluded	new_screen			2		2017				
266		ModelGuidance	Model-based design of IoT systems with the BIP component framework	The design of software for networked systems with nodes running an Internet of things operating system faces important challenges due to the heterogeneity of interacting things and the constraints stemming from the often limited amount of available resources. In this context, it is hard to build confidence that a design solution fulfills the application's requirements. This paper introduces a design flow for web service applications of the representational state transfer style that is based on a formal modeling language, the behaviour, interaction, priority (BIP) component framework. The proposed flow applies the principles of separation of concerns in a component-based design process that supports the modular design and reuse of model artifacts. The BIP tools for state-space exploration allow verifying qualitative properties for service responsiveness, ie, the timely handling of events. Moreover, essential quantitative properties are validated through statistical model checking of a stochastic BIP model. All properties are preserved in actual implementation by ensuring that the deployed code is consistent with the validated model. We illustrate the design of a representational state transfer sense-compute-control application for a Wireless Personal Area Network architecture with nodes running the Contiki operating system. The results validate qualitative and quantitative properties for the system and include the study of error behaviours. Copyright © 2018 John Wiley & Sons, Ltd.		Lekidis, A.; Stachtiari, E.; Katsaros, P.; Bozga, M.; Georgiadis, C. K.	Software - Practice and Experience					ConflictExcluded	Excluded	new_screen			2		2018				
267		ModelGuidance	A DDL-based software architecture model	Dynamic Description Logic (DDL) can support both the static and dynamic knowledge representation, thus this paper introduces a kind of Software Architecture (SA) Model based on DDL, the purpose of which is to facilitate the description of each part of SA as well as the constraints between them. In addition, the model also supports the detection of the consistency problems existed in dynamic architecture. In the end, the mapping from SA to DLL is discussed, and an example of a complete architecture model of Pipeline-Filter style is described. © Springer-Verlag Berlin Heidelberg 2006.		Wang, M.; Liu, L.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2006				
268		ModelGuidance	Model interoperability via Model Driven Development	Among the factors that contribute to the inherent complexity of the software development process is the gap between the design and the formal analysis domains. Software design is often considered a human oriented task while the analysis phase draws on formal representation and mathematical foundations. An example of this dichotomy is the use of UML for the software design phase and Petri Nets for the analysis; a separation of concerns that leads to the creation of heterogeneous models. Although UML is widely accepted as a language that can be used to model the structural and behavioural aspects of a system, its lack of mathematical foundations is seen as a serious impediment to rigorous analysis. Petri Nets on the other hand have a strong mathematical basis that are well suited for formal analysis; they lack however the appeal and the ease-of-use of UML. A pressing concern for software developers is how to bridge the gap between these domains and allow for model interoperability and the integration of different toolsets across them, and thus reduce the complexity of the software development process. The aim of this paper is to present a Model Driven Development (MDD) model transformation which supports a seamless transition between UML and Petri Nets. This is achieved by model interoperability from UML Sequence Diagrams to Petri Nets and supported by tool integration. The model transformation framework allows a software system to be designed in terms of UML Sequence Diagrams and subjected to formal analysis by taking advantage of the strong mathematical framework of Petri Nets. The behaviour of a Personal Area Network will be used to illustrate the proposed approach and to highlight model interoperability and tool integration through the design, the transformation and the analysis phases. © 2010 Elsevier Inc.		Ameedeen, M. A.; Bordbar, B.; Anane, R.	Journal of Computer and System Sciences					ConflictExcluded	Excluded	new_screen			2		2011				
269		ModelGuidance	On Model-Driven Development of Mobile Business Processes	Web services are becoming an integral part of service and workflow systems even within mobile devices. A mobile business process is a special case of a business process where most of the human interaction is performed using mobile devices. Mobile business processes should be adaptable to different mobile devices and to support user interaction with different client applications. Requirements coming from mobility of devices addresses new challenges and interaction models to business process modeling and development. A proper tool support for process development is needed. Furthermore, while mobile business processes emphasize user interaction, a development process should support also creation of user interfaces based on process descriptions. In this paper, we identify characteristics of mobile business processes and propose a model-driven development (MDD) approach, which allows customization of user interfaces.		Ruokonen, A.; Pajunen, L.; Systa, T.						ConflictExcluded	Excluded	new_screen			2		2008				
270		ModelGuidance	Example-driven modeling: on effects of using examples on structural model comprehension, what makes them useful, and how to create them	We present a controlled experiment for the empirical evaluation of example-driven modeling ({EDM}), an approach that systematically uses examples for model comprehension and domain knowledge transfer. We conducted the experiment with 26 graduate (Masters and Ph.D. level) and undergraduate (Bachelor level) students from electrical and computer engineering, computer science, and software engineering programs at the University of Waterloo. The experiment involves a domain model, with {UML} class diagrams representing the domain abstractions and {UML} object diagrams representing examples of using these abstractions. The goal is to provide empirical evidence of the effects of suitable examples on model comprehension, compared to having model abstractions only, by having the participants perform model comprehension tasks. Our results show that {EDM} is superior to having model abstractions only, with an improvement of 39\% for diagram completeness, 33\% for questions completeness, 71\% for efficiency, and a reduction in the number of mistakes by 80\%. We provide qualitative results showing that participants receiving model abstractions augmented with examples experienced lower perceived difficulty in performing the comprehension tasks, higher perceived confidence in their tasks' solutions, and asked 90\% fewer clarifying domain questions. We also present participants' feedback regarding the usefulness of the provided examples, their number and types, as well as the use of partial examples. We present a taxonomy of the different types of examples, explain their significance, and propose guidelines for manual and automatic creation of useful examples.		Zayan, Dina; Sarkar, Atrisha; Antkiewicz, Michal; Pitangueira Maciel, Rita Suzana; Czarnecki, Krzysztof	{SOFTWARE} {AND} {SYSTEMS} {MODELING}					ConflictExcluded	Excluded	new_screen			2		2019				
271		ModelGuidance	Concepts of modeling architectural module views for compliance checks based on architectural styles	Software systems tend to diverge from their intended architecture. This architectural decay reduces software quality, like understandability, changeability and maintainability. Furthermore, non-functional properties provided by the intended architecture are no longer guaranteed to hold for the system. To ensure architectural compliance, regular checks are essential. We examined the architecture of eight software systems. Supported by the software architects, the architectural prescriptions for the module views were collected to automatically check compliance of the systems with the intended architecture. We used three tools that support architectural compliance checks: Sotograph, SonarJ and Lattix. Though these tools were helpful, it turned out that they could not adequately check all aspects of the intended architecture. We identified three concepts that could not be fully modeled and checked. This paper describes these concepts and substantiates them with examples from the eight software systems. The given concepts can be utilized in several ways, e.g., for extending existing check approaches and tools, and as a means for architectural modeling.		Becker-Pechau, P.; Bennicke, M.	Proceedings of the 11th IASTED International Conference on Software Engineering and Applications, SEA 2007					ConflictExcluded	Excluded	new_screen			2		2007				
272		ModelGuidance	Modeling and utilizing quality properties in the development of composite web mashups	Ubiquitous Web resources and their manifold combinability are causing app development with current Web mashup platforms to be a challenging task, especially for low-skilled Web users. Hence, mashup composition demands for expressing quality requirements to facilitate selection and customization processes. Existing quality metamodels only provide guidelines or abstract categories, but neglect mashup-specific measuring directives and machine-readable representations. Therefore, we present a tailored quality property metamodel for composite Web mashups. We show, how it supports different settings of mashup development and execution. Finally, we demonstrate the metamodel's deployment in a mashup infrastructure and its utilization in different use cases. © Springer International Publishing 2013.		Rümpel, A.; Tietz, V.; Wagner, A.; Meinßer, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2013				
273		ModelGuidance	Modeling an ontology on accessible evacuation routes for emergencies	Providing alert communication in emergency situations is vital to reduce the number of victims. However, this is a challenging goal for researchers and professionals due to the diverse pool of prospective users, e.g. people with disabilities as well as other vulnerable groups. Moreover, in the event of an emergency situation, many people could become vulnerable because of exceptional circumstances such as stress, an unknown environment or even visual impairment (e.g. fire causing smoke). Within this scope, a crucial activity is to notify affected people about safe places and available evacuation routes. In order to address this need, we propose to extend an ontology, called SEMA4A (Simple EMergency Alert 4 [for] All), developed in a previous work for managing knowledge about accessibility guidelines, emergency situations and communication technologies. In this paper, we introduce a semi-automatic technique for knowledge acquisition and modeling on accessible evacuation routes. We introduce a use case to show applications of the ontology and conclude with an evaluation involving several experts in evacuation procedures. © 2014 Elsevier Ltd. All rights reserved.		Onorati, T.; Malizia, A.; Diaz, P.; Aedo, I.	Expert Systems with Applications					ConflictExcluded	Excluded	new_screen			2		2014				
274		ModelGuidance	Model based analysis and formal verification of WEDA architectural style	In this paper, the Weda (Web-event-driven-architecture) is modeled as a network of timed automata that communicate via message passing after successfull handshaking. This results in a compact and intuitively appealing specification. © 2013 IEEE.		Hübnerová, J.	2013 2nd International Conference on Informatics and Applications, ICIA 2013					ConflictExcluded	Excluded	new_screen			2		2013				
275		ModelGuidance	Conceptual modeling of inventory management processes as a Thinging Machine	A control model is typically classified into three forms: conceptual, mathematical and simulation (computer). This paper analyzes a conceptual modeling application with respect to an inventory management system. Today, most organizations utilize computer systems for inventory control that provide protection when interruptions or breakdowns occur within work processes. Modeling the inventory processes is an active area of research that utilizes many diagrammatic techniques, including data flow diagrams, Universal Modeling Language (UML) diagrams and Integration DEFinition (IDEF). We claim that current conceptual modeling frameworks lack uniform notions and have inability to appeal to designers and analysts. We propose modeling an inventory system as an abstract machine, called a Thinging Machine (TM), with five operations: creation, processing, receiving, releasing and transferring. The paper provides side-by-side contrasts of some existing examples of conceptual modeling methodologies that apply to TM. Additionally, TM is applied in a case study of an actual inventory system that uses IBM Maximo. The resulting conceptual depictions point to the viability of FM as a valuable tool for developing a high-level representation of inventory processes. © 2018 International Journal of Advanced Computer Science and Applications.		Al-Fedaghi, S.; Al-Huwais, N.	International Journal of Advanced Computer Science and Applications					ConflictExcluded	Excluded	new_screen			2		2018				
276		ModelGuidance	Linking Model-Driven Development and Software Architecture: A Case Study	A basic premise of model driven development (MDD) is to capture all important design information in a set of formal or semi-formal models which are then automatically kept consistent by tools. The concept however is still relatively immature and there is little by way of empirically validated guidelines. In this paper we report on the use of MDD on a significant real-world project over several years. Our research found the MDD approach to be deficient in terms of modelling architectural design rules. Furthermore, the current body of literature does not offer a satisfactory solution as to how architectural design rules should be modelled. As a result developers have to rely on time-consuming and error-prone manual practices to keep a system consistent with its architecture. To realise the full benefits of MDD it is important to find ways of formalizing architectural design rules which then allow automatic enforcement of the architecture on the system model. Without this, architectural enforcement will remain a bottleneck in large MDD projects.		Mattsson, A.; Lundell, B.; Lings, B.; Fitzgerald, B.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2009				
277		ModelGuidance	Organization modeling and simulation using BORM approach	This paper presents the BORM approach in the organizational modeling and simulation. The first part of this paper presents the BORM analysis and design methodology, which has proved to be effective in the development of business systems. The second part of this paper shows an example from our regional management project concerning the analysis of the legislation and local officials' knowledge. The project has been related to the processes and agendas of the urban planning of the landscape areas and small settlements with regards to the new housing and building law and regional management trends in the European Union. Our methodology presents necessary aspects of the relevant organizational model without need of deep prior training. Our models were simulated, verified and validated in order to help the officials (especially from the smallest settlements) to improve their knowledge. © 2010 Springer-Verlag.		Brožek, J.; Merunka, V.; Merunková, I.	Lecture Notes in Business Information Processing					ConflictExcluded	Excluded	new_screen			2		2010				
278		ModelGuidance	Towards creating assistive software by employing human behavior models	Assistive software becomes more and more important part of our everyday life. As it is not straightforward to create such a system, the engineering of assistive systems is a topic of current research with different applications in healthcare, education and industry. In this paper we introduce three contributions to this field of research. Whereas most assistive systems use approaches for intention recognition based on training data applicable to specific environments and applications, we introduce a training-free approach. We do that by showing that it is possible to generate probabilistic inference systems from causal models for human behavior. Additionally, we collect a list of requirements for context aware assistive software and human behavior modeling for intention recognition and showed that our system satisfies them. We then introduce a software architecture for assistive systems that provides support for this kind of modeling. In addition to introducing the modeling approach and the architecture we show in an experimental way that our approach is suited for smart environments. The collected list of requirements could help a software engineer create a robust and easily adaptable to changes in the environment assistive software. © 2012 - IOS Press and the authors. All rights reserved.		Krüger, F.; Yordanova, K.; Burghardt, C.; Kirste, T.	Journal of Ambient Intelligence and Smart Environments					ConflictIncluded	Excluded	new_screen			2		2012				
279		ModelGuidance	Modeling Distributed Signal Processing Applications	Wireless sensor networks in general and body sensor networks in particular enable sophisticated applications in pervasive healthcare, sports training and other domains, where interconnected nodes work together. Their main goal is to derive context from raw sensor data with feature extraction and classification algorithms. Body sensor networks not only comprise a single sensor type or family but demand different hardware platforms, e.g., sensors to measure acceleration or blood-pressure, or tiny mobile devices to communicate with the user. The problem arises how to efficiently deal with these heterogeneous platforms and programming languages. This paper presents a distributed signal processing framework based on TinyOS and nesC. The framework forms the basis for a model-driven software development approach. By raising the level of abstraction formal models hide implementation specifics of the framework in a platform specific model. A platform independent model further lifts modeling to functional and non-functional requirements independent from platforms. Thereby we promote cooperation between domain experts and software engineers and facilitate reusability of applications across different platforms.		Kurschl, W.; Mitsch, S.; Schoenboeck, J.						ConflictExcluded	Excluded	new_screen			2		2009				
280		ModelGuidance	A Methodological Framework for SysML: a Problem Frames-based Approach	Recently, SysML has been adopted by the object management group as a modelling language for systems engineering. SysML is a UML profile that represents a subset of UML 2 with extensions. A wide adoption of the language could be hindered by the lack of a methodology that drives the modelling activities. Problem frames (PFs) are a rigorous approach to requirements modelling that has the potential to improve the software development process. Unfortunately, PFs are not supported by an intuitive notation and easy to use tools. As a consequence, their adoption in industry is limited. This paper explores the possibility of exploiting the PFs ideas in the context of SysML models. The goal is to provide model-based development processes using SysML with a set of concepts and guidelines that are sound and have already been used and validated.		Colombo, P.; Bianco, V. Del; Lavazza, L.; A. Coen-Porisini						ConflictExcluded	Excluded	new_screen			2		2007				
281		ModelGuidance	Scope-aware code completion with discriminative modeling	Code completion is a traditional popular feature for API access in integrated development environments (IDEs). It not only frees programmers from remembering specific details about an API but also saves keystrokes and corrects typographical errors. Existing methods for code completion usually suggest APIs based on statistics in code bases described by language models. However, they neglect the fact that the user’s input is also very useful for ranking, as the underlying patterns can be used to improve the accuracy of predictions of intended APIs. In this paper, we propose a novel method to improve the quality of code completion by incorporating the users’ acronym-like input conventions and the APIs’ scope context into a discriminative model. The users’ input conventions are learned using a logistic regression model by extracting features from collected training data. The weights in the discriminative model are learned using a support vector machine (SVM). To improve the real-time efficiency of code completion, we employ a trie to index and store the scope context information. An efficient top-k algorithm is developed. Experiments show that our proposed method outperforms the baseline methods in terms of both effectiveness and efficiency. © 2019 Information Processing Society of Japan.		Hu, S.; Xiao, C.; Ishikawa, Y.	Journal of Information Processing					ConflictExcluded	Excluded	new_screen			2		2019				
282		ModelGuidance	A model-driven deployment approach for scaling distributed software architectures on a cloud computing platform	Software architecture aims to satisfy the software requirements from different points of view. It is represented by models which are the reference for understanding the structure and behavior of the software. In this way, one of the biggest challenges is to ensure that a software system can improve its performance through the use of scalability tactics, especially to support larger number of concurrent users. This paper presents a model-driven deployment approach to design models of distributed software architectures. In particular, models for web-based software systems in order to support its automatic implementation and its dynamic deployment on a cloud computing platform, using the horizontal scaling tactic. In addition, we design and propose Sarch to build the models, a domain-specific language based on the specification of a set of architectural styles and its representation as architectural views.		Vergara-Vargas, J.; Umaña-Acosta, H.						ConflictIncluded	Excluded	new_screen			2		2017				
283		ModelGuidance	Modeling with the Micro Saint simulation package	Micro Saint is a discrete-event simulation software package for building models that simulate real-life processes. With Micro Saint models, users can gain useful information about processes that might be too expensive or time-consuming to test in the real world. Some common application areas for simulation modeling include the following: Modeling manufacturing processes, such as production lines, to examine resource utilization, efficiency, and cost. Modeling transportation systems to examine issues such as scheduling and resource requirements. Modeling service systems to optimize procedures, staffing and other logistical considerations. Modeling training systems and their effectiveness over time. Modeling human operator performance and interaction under changing conditions. Simulation is a cost-effective way to help show decision-makers the most cost-efficient alternatives to any problem.		Schunk, Daniel	Winter Simulation Conference Proceedings					ConflictExcluded	Excluded	new_screen			2		2000				
284		ModelGuidance	Architecture modeling for translative model-driven development	This paper proposes a technique to model the architecture (platform) of software systems particularly the ones which are developed under a translative model-driven development (MDD). Our technique adapts the Object-Oriented Analysis and Recursive Design (OOA/RD) method as the framework to model the architecture. We propose six steps to model the architecture, i.e., select an architecture style and patterns, define architecture structural elements and rules, specify data structures, specify structural units, specify mechanisms to support state models and timers, and eventually build the architecture model. © 2008 IEEE.		Fatwanto, A.; Boughton, C.	Proceedings - International Symposium on Information Technology 2008, ITSim					ConflictIncluded	Included	new_screen			2		2008				
285		ModelGuidance	An Experimental Evaluation of the Impact of System Sequence Diagrams and System Operation Contracts on the Quality of the Domain Model	The Unified Modeling Language (UML) is an object-oriented analysis and design language widely used to created artifacts during the software system lifecycle. UML being a standard notation, without specific guidelines as to how to use it, it must be applied in the context of a specific software development process. The Unified Process (UP) is one such process, extensively used by the object-oriented community, which delivers software best practices via guidelines for all software lifecycle activities. The UP suggests many artifacts to be produced during the software lifecycle. But many practitioners are reluctant to use those artifacts as they question their benefits. System Sequence Diagrams and System Operation Contracts are artifacts, suggested by Larman in his well-known methodology, to complement standard UP artifacts with the intent of better understanding the input and output events related to the system being designed. This paper presents the results of controlled experiments that investigate the impact of using these artifacts during software development. One way to do that is to study the extent to which those artifacts improve the quality of the Domain Model or reduce the effort necessary to complete this Domain Model. Results show that the use of those artifacts mildly improves the quality of the Domain Model, as long as sufficient training is provided. On the other hand, there is no noticeable evidence that those two artifacts reduce the time to produce the Domain Model.		Briand, L.; Labiche, Y.; Madrazo-Rivera, R.						ConflictExcluded	Excluded	new_screen			2		2011				
286		ModelGuidance	Procedural model of requirements elicitation techniques	Software requirement elicitation is one of the most sensitive phases in software requirements knowledge area; it extracts useful requirement and help software engineers to select the right elicitation techniques. This paper presents a proposed elicitation model to facilitate the selection requirement elicitation techniques on the basis of the previous published work in academia, including the combination of situational characteristics, in addition technique characteristics, project characteristic and use guidelines to avoid misunderstanding of the requirements. © 2015 ACM.		Al-Zawahreh, H.; Almakadmeh, K.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2015				
287		ModelGuidance	Hammer or tongs: How best to build agent-based models?	Agent-based modeling has been widely applied to solve problems in contexts ranging from exploratory research studies to focused industrial practice. As the application of agent-based modeling has grown, developers have advocated a wide and diverse variety of development techniques. Some of these techniques inform elements of model creation, validation, or use. Others are comprehensive development methodologies. The popularity of agent-based modeling makes it impossible to include every development technique mentioned in the literature. Instead, this paper focuses on providing a representative sample that includes the techniques with the most practical utility along with those that are widely used or have received substantial attention. The sample reviewed in this paper includes techniques advocated specifically for agent-based modeling along with general software development approaches. Due to their importance, verification and validation techniques for agent-based modeling are specially highlighted. The paper concludes with a summary and recommendations on how best to build agent-based models. © 2018, Springer International Publishing AG, part of Springer Nature.		North, M. J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2018				
288		ModelGuidance	Formal modeling and analysis of the REST architecture using CSP	As one of the most promising architectural styles, Representational State Transfer (REST) was first proposed to support the enablement of scalable and reliable design for largescale distributed hypermedia systems such as the World Wide Web (WWW). Rapidly development of the RESTful systems brings the misunderstanding and misapplied of the REST architecture. In this paper, we present a formal model to capture the essential features for the REST architecture, in which components of RESTful systems are modeled as CSP processes. Thus all the REST constraints can be completely described and validated in our framework. Furthermore, REST constraints are verified using the model checker PAT. The proposed framework for REST architecture is not only confined to HTTP but can also be applied to other REST-compliant protocols. Finally a case study about an application scenario for environment monitoring is illustrated to show the feasibility of our approach. Consequently, better understanding of REST can be achieved and implementations of RESTful systems can benefit from it. © 2013 Springer-Verlag.		Wu, X.; Zhang, Y.; Zhu, H.; Zhao, Y.; Sun, Z.; Liu, P.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2013				
289		ModelGuidance	Combining aspects and object-orientation in model-driven engineering for distributed industrial mechatronics systems	Recent advances in technology enable the creation of complex industrial systems comprising mechanical, electrical, and logical - software - components. It is clear that new project techniques are demanded to support the design of such systems. At design phase, it is extremely important to raise abstraction level in earlier stages of product development in order to deal with such a complexity in an efficient way. This paper discusses Model Driven Engineering ({MDE}) applied to design industrial mechatronics systems. An aspect-oriented {MDE} approach is presented by means of a real-world case study, comprising requirements engineering up to code generation. An assessment of two well-known high-level paradigms, namely Aspect- and Object-Oriented paradigms, is deeply presented. Their concepts are applied at every design step of an embedded and real-time mechatronics system, specifically for controlling a product assembler industrial cell. The handling of functional and non-functional requirements (at modeling level) using aspects and objects is further emphasized. Both designs are compared using a set of software engineering metrics, which were adapted to be applied at modeling level. Particularly, the achieved results show the suitability of each paradigm for the system specification in terms of reusability quality of model elements. Focused on the generated code for each case study, statistics depicted an improvement in number of lines using aspects. (C) 2014 Elsevier Ltd. All rights reserved.		Wehrmeister, Marco Aurelio; de Freitas, Edison Pignaton; Delazari Binotto, Alecio Pedro; Pereira, Carlos Eduardo	{MECHATRONICS}					ConflictExcluded	Excluded	new_screen			2		2014				
290		ModelGuidance	A Web performance testing framework and its mixed performance modeling process	Methods of pure performance testing or single analytical modeling, such as queueing network model, etc, have their limitation on the accuracy of performance indexes measurement, the validity of performance forecasting, and the controlling of testing iteration due to the complexity of Web systems. A Web performance modeling framework supporting mixed performance modeling is proposed. It uses different performance modeling methods for different kinds of performance indexes to derive closed form functions and their hypothesis of measurement. The regression analysis and testing are used on the training data to estimate the parameters of the closed form functions. To demonstrate the feasibility and validity of this framework, a real-world Web community system (igroot.com) is studied under the framework. For the indexes of system response time and scalability, a mixed modeling method is proposed by combining queueing network reduction and extended universal scalability model US-γ. Compared with other practical system performance testing methods, such as universal scalability model US, the model accuracy of performance forecasting is greatly improved and the cost of software and hardware used in the process is greatly reduced. The error rate of estimated response time is within 4 percent, the error rate of estimated throughout saturation point is within 1 percent, and the error rate of estimated infimum of buckle point is within 5 percent. Correlating the scalability model and threads data of the Web server, an HTTP processing bottleneck at the architecture level is identified.		Ming, Z.; Yin, J.; Yang, W.; Wang, H.; Xiao, Z.	Jisuanji Yanjiu yu Fazhan/Computer Research and Development					ConflictExcluded	Excluded	new_screen			2		2010				
291		ModelGuidance	A Study of Security Modeling Techniques for Smart Systems	The term 'smart' has been used in many ways for describing systems and infrastructure such as smart city, smart home, smart grid, smart meter, etc. These systems may lie in the domain of critical security systems where security can be estimated in terms of confidentiality, integrity and some cases may involve availability for protection against the theft or damage of system resources as well as disruption of the system services. Although, in spite of, being a hot topic to enhance the quality of life, there is no concrete definition of what smart system is and what should be the characteristics of it. Thus, there is a need to identify what these systems actually are and how they can be designed securely. This work firstly attempts to describe attributes related to the smartness to define smart systems. Furthermore, we propose a secure smart system development life cycle, where the security is weaved at all the development phase of smart systems according to principles, guidelines, attack patterns, risk, vulnerability, exploits, and defined rules. Finally, the comparative study is performed for evaluation of traditional security modeling techniques for early assessment of threats and risks in smart systems. © 2019 IEEE.		Tripathi, D.; Maurya, A. K.; Chaturvedi, A.; Tripathi, A. K.	Proceedings of the International Conference on Machine Learning, Big Data, Cloud and Parallel Computing: Trends, Prespectives and Prospects, COMITCon 2019					ConflictExcluded	Excluded	new_screen			2		2019				
292		ModelGuidance	The reliability of diverse systems: A contribution using modelling of the fault creation process	Design diversity is a defence against design faults causing common-mode failure in redundant systems, but we badly lack knowledge about how much reliability it will buy in practice, and thus about its cost-effectiveness, the situations in which it is an appropriate solution and how it should be taken into account by assessors and safety regulators. Both current practice and the scientific debate about design diversity depend largely on intuition. More formal probabilistic reasoning would facilitate critical discussion and empirical validation of any predictions: to this aim, we propose a model of the generation of faults and failures in two separately-developed program versions. We show results about: i) what degree of reliability improvement an assessor can reliably expect from diversity; and ii) how this reliability improvement may change with higher-quality development processes. We discuss the practical relevance of these results and the degree to which they can be trusted.		Popov, P.; Strigini, L.	Proceedings of the International Conference on Dependable Systems and Networks					ConflictExcluded	Excluded	new_screen			2		2001				
293		ModelGuidance	Model-based design for CPS with learning-enabled components	Recent advances in machine learning led to the appearance of Learning-Enabled Components (LECs) in Cyber-Physical Systems. LECs are being evaluated and used for various, complex functions including perception and control. However, very little tool support is available for design automation in such systems. This paper introduces an integrated toolchain that supports the architectural modeling of CPS with LECs, but also has extensive support for the engineering and integration of LECs, including support for training data collection, LEC training, LEC evaluation and verification, and system software deployment. Additionally, the toolsuite supports the modeling and analysis of safety cases - a critical part of the engineering process for mission and safety critical systems. © 2019 ACM.		Hartsell, C.; Mahadevan, N.; Ramakrishna, S.; Dubey, A.; Bapty, T.; Johnson, T.; Koutsoukos, X.; Sztipanovits, J.; Karsai, G.	DESTION 2019 - Proceedings of the Workshop on Design Automation for CPS and IoT					ConflictExcluded	Excluded	new_screen			2		2019				
294		ModelGuidance	A Posteriori Typing for Model-Driven Engineering: Concepts, Analysis, and Applications	Model-Driven Engineering ({MDE}) is founded on the ability to create and process models conforming to a meta-model. In this context, classes in a meta-model are used in two ways: as templates to create objects and as (static) classifiers for them. These two aspects are inherently tied in most meta-modelling approaches, which results in unnecessarily rigid systems and hinders reusability of {MDE} artefacts. In this work, we discuss the benefits of decoupling object creation from typing in {MDE}. Thus, we rely on standard mechanisms for object creation, and propose a posteriori typing as a means to retype objects and enable multiple, partial, dynamic typings. This approach enhances flexibility; permits unanticipated reuse, as model management operations defined for a meta-model can be reused with other models once they get reclassified; and enables bidirectional model transformation by reclassification. In particular, we propose two mechanisms to realise model retyping and show their underlying theory and analysis methods. We show the feasibility of the approach by an implementation atop our meta-modelling tool {METADEPTH} and present several applications of retypings (transformations, reuse, and dynamicity).		De Lara, Juan; Guerra, Esther	{ACM} {TRANSACTIONS} {ON} {SOFTWARE} {ENGINEERING} {AND} {METHODOLOGY}					ConflictExcluded	Excluded	new_screen			2		2017				
295		ModelGuidance	On modeling and analyzing cost factors in information systems engineering	Introducing enterprise information systems (EIS) is usually associated with high costs. It is therefore crucial to understand those factors that determine or influence these costs. Though software cost estimation has received considerable attention during the last decades, it is difficult to apply existing approaches to EIS. This difficulty particularly stems from the inability of these methods to deal with the dynamic interactions of the many technological, organizational and project-driven cost factors which specifically arise in the context of EIS. Picking up this problem, we introduce the EcoPOST framework to investigate the complex cost structures of EIS engineering projects through qualitative cost evaluation models. This paper extends previously described concepts and introduces design rules and guidelines for cost evaluation models in order to enhance the development of meaningful and useful EcoPOST cost evaluation models. A case study illustrates the benefits of our approach. Most important, our EcoPOST framework is an important tool supporting EIS engineers in gaining a better understanding of the critical factors determining the costs of EIS engineering projects. © 2008 Springer-Verlag Berlin Heidelberg.		Mutschler, B.; Reichert, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2008				
296		ModelGuidance	Modeling of distributed file systems for practical performance analysis	Cloud computing has received significant attention recently. Delivering quality guaranteed services in clouds is highly desired. Distributed file systems (DFSs) are the key component of any cloud-scale data processing middleware. Evaluating the performance of DFSs is accordingly very important. To avoid cost for late life cycle performance fixes and architectural redesign, providing performance analysis before the deployment of DFSs is also particularly important. In this paper, we propose a systematic and practical performance analysis framework, driven by architecture and design models for defining the structure and behavior of typical master/slave DFSs. We put forward a configuration guideline for specifications of configuration alternatives of such DFSs, and a practical approach for both qualitatively and quantitatively performance analysis of DFSs with various configuration settings in a systematic way. What distinguish our approach from others is that 1) most of existing works rely on performance measurements under a variety of workloads/strategies, comparing with other DFSs or running application programs, but our approach is based on architecture and design level models and systematically derived performance models; 2) our approach is able to both qualitatively and quantitatively evaluate the performance of DFSs; and 3) our approach not only can evaluate the overall performance of a DFS but also its components and individual steps. We demonstrate the effectiveness of our approach by evaluating Hadoop distributed file system (HDFS). A series of real-world experiments on EC2 (Amazon Elastic Compute Cloud), Tansuo and Inspur Clusters, were conducted to qualitatively evaluate the effectiveness of our approach. We also performed a set of experiments of HDFS on EC2 to quantitatively analyze the performance and limitation of the metadata server of DFSs. Results show that our approach can achieve sufficient performance analysis. Similarly, the proposed approach could be also applied to evaluate other DFSs such as MooseFS, GFS, and zFS. © 2015 IEEE.		Wu, Y.; Ye, F.; Chen, K.; Zheng, W.	IEEE Transactions on Parallel and Distributed Systems					ConflictExcluded	Excluded	new_screen			2		2014				
297		ModelGuidance	Petri net modelling on the behavior of object invocations in distributed object-oriented systems	Object-oriented programming, which treats objects as processes in execution, has shown significant effectiveness in distributed systems. To measure this effectiveness, a modelling technique is required. However, contemporary techniques for modelling processes are not fully satisfactory for object-oriented computation. Therefore, an appropriate analytical model is necessary. The authors propose an analytical model based on the coloured generalized stochastic Petri net (CGSPN) theory. This model can be used to analyze the behaviour of object invocations in a distributed manner. It also provides guidelines for the design of an effective object assignment strategy.		Tseng, C.-C.; Chang, W.-T.	International Journal of Modelling and Simulation					ConflictExcluded	Excluded	new_screen			2		1998				
298		ModelGuidance	Automatic model creation to support network monitoring	The large variety of network traffic sets many challenges in modeling the essential aspects of network traffic flows. Analyzing and collecting features for the model creation process from the network traffic traces is a time-consuming and error-prone task. Automating these procedures are a challenge. The research problem discussed in this paper concentrates on the analysis and collection of features from the network traffic traces for the model development process, by automating the analysis and collection. The proposed system of this paper, called MGtoolV2, supports the model development process through the automation of collection and analysis in the actual model creation procedures. The model development process aims to enhance the development of a model by reducing the development cost and time. The proposed tool automatically creates large sets of models according to the network traffic traces and minimizes the errors of manual modeling. The experiments conducted with MGtoolV2 indicate that the tool is able to create the models from the traffic traces cost effectively. MGtoolV2 is able to unify similarities between packets, to create very detailed models describing specific information, and to raise the abstraction level of the created models. The research is based on the constructive method of the related publications and technologies, and the results are established from the testing, validation, and analysis of the implemented MGtoolV2. © 2014 IEEE.		Määttä, M.; Räty, T.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2014				
299		ModelGuidance	A Scenario-Based Model to Improve the Quality of Software Inspection Process	Independent researches of expert groups and scientific papers show that , although some testing models and automated and manual tools are mostly used, but still some software and software projects deal with important defects that may lead to project failure. Most of software inspection models are independent of software developing process and concentrating on inspection artifacts. In this article, the proposed model is based on software developing phases adapted predefined scenarios. This inspection approach removes some possible defects in each of software development phase and avoids amplifying these defects in each of the next phases. Defect learning is the interesting point of scenario-based proposed model. Learning is a basic factor for a model to be intelligent. In this model a learning plan is created and executed through which, according to founded results, inspection process is modified and updated. The efficiency of model is evaluated through a case study.		Taba, N. H.; Ow, S. H.						ConflictExcluded	Excluded	new_screen			2		2012				
300		ModelGuidance	Guided model creation: A task-driven approach	The abstract syntax of a graphical modeling language is often defined by a metamodel. Typically, a metamodel is given as a class diagram, serving as the grammar of the modeling language. Especially in the case of complex metamodels, there is a need for tool support for assisting the creation ofmodels. In this paper, we propose a method for taskdriven creation of models, assuming that the metamodel has been given as a UML class diagram. © 2006 IEEE.		Lahtinen, S.; Peltonen, J.; Hammouda, I.; Koskimies, K.	Proceedings - IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC 2006					ConflictIncluded	Excluded	new_screen			2		2006				
301		ModelGuidance	Enterprise Architecture Modelling: Purpose, Requirements and Language	This paper is concerned with the engineering of modelling languages, and the engineering of modelling languages for enterprise architecture in particular. In line with this, this paper aims to provide two key contributions. Firstly, it aims to contribute to the field of (enterprise) modelling language engineering by refining an existing approach for the engineering of requirements on modelling languages. It will do so, by suggesting specific classes of purpose and quality criteria for models and their creation. The second contribution involves an initial application of the latter approach, in terms of a critical reflection on the language requirements as formulated for the ArchiMate standard. © 2018 IEEE.		Proper, H. A.; Bjeković, M.; Van Gils, B.; De Kinderen, S.	Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOCW					ConflictExcluded	Excluded	new_screen			2		2018				
302		ModelGuidance	Modelling and formally verifying intel VT-x: Hardware assistance for processors running virtualization platforms	The Virtualization in computer science is the process of creating a virtual replica of computer resources like processor, hardware platforms, network devices, etc. Hardware virtualization is the creation of Virtual Machines (VM) that acts like a real computer with an operating system. Virtualization is controlled by special software called hypervisor or Virtual Machine Monitor (VMM) which manages the resources for the running virtual machines. Virtual machines can’t access hardware resources directly. The modern processors are enabled with the mechanisms to support the virtual machine environment. Intel provides hardware-assisted virtualization mechanisms for Intel processors. Intel VT-x provides virtualization mechanisms for processor virtualization. In this paper, we present a novel work of verifying the properties of Intel VT-x formally. The verification is carried out on the design level using the mCRL2 tool. The formal verification of Intel VT-x along with its code written in the mCRL2 modelling language is presented. © BEIESP.		Bhushan, R. C.; Yadav, D. K.	International Journal of Engineering and Advanced Technology					ConflictExcluded	Excluded	new_screen			2		2019				
303		ModelGuidance	A feature model of E-government systems integrated with formal specifications	Feature modeling has become one of the most popular methods for representing variabilities and commonalities in software product families. In this paper we describe the feature model for e-government systems. In addition, we present a first approach to integrate formal specifications with feature models in order to produce guidelines to be used in the context of specifications reuse. We show that RSL language can adequately capture relations introducing semantics to the feature model of a system. © 2008 IEEE.		Debnath, N.; Felice, L.; Montejano, G.; Riesco, D.	Proceedings - International Conference on Information Technology: New Generations, ITNG 2008					ConflictExcluded	Excluded	new_screen			2		2008				
304		ModelGuidance	A methodology for eliciting and modeling exceptions	Exceptions in safety-critical systems must be addressed during conceptual design and risk analysis. We developed a conceptual model of exceptions, a methodology for eliciting and modeling exceptions, and templates for modeling them in an extension of the Object-Process Methodology (OPM)-a system analysis and design methodology and language that uses a single graphical model for describing systems, including their timing exceptions, which has been shown to be an effective modeling methodology. Using an antibiotics treatment guideline as a case study, we demonstrate the value of our approach in eliciting and modeling exceptions that occur in clinical care systems. © 2009 Elsevier Inc. All rights reserved.		Peleg, M.; Somekh, J.; Dori, D.	Journal of Biomedical Informatics					ConflictExcluded	Excluded	new_screen			2		2009				
305		ModelGuidance	Development of a design model for functionality and content access from rich internet application requirements	We have found several methodologies for the development of rich internet applications (RIA); however, they did not give enough attention to the problem of defining both appropriate notations and adequate process for developing the user interface (UI) of functionality and content access (UIFCA). The UIFCA is important, because it concerns with the global organization/behaviour of the UI of a RIA application; the UIFCA is complex in several RIA applications due to the several tasks/workflows/business process that need to be organized/accessed, and the use of single page applications and desktop like UIs. A good model for functionality and content access (MFCA) should be expressive enough, respect some abstraction requirements, and be understandable by the client; a good process to develop a MFCA should consider the creation of parts of the MFCA by the client, its completion by analysts, its early validation by clients, and the refinement of MFCA elements. In this work, we defined a metamodel called RIAFCA for building MFCAs, and a development process involving RIAFCA respecting these requirements. The metamodel and the process are illustrated with the help of an online e-mail application case study.		Durán, J. E.; Casalánguida, H.	WEBIST 2015 - 11th International Conference on Web Information Systems and Technologies, Proceedings					ConflictExcluded	Excluded	new_screen			2		2015				
306		ModelGuidance	A Model Driven Method to Design and Analyze Secure Architectures of Systems-of-Systems	Context: Systems-of-Systems (SoS) is becoming the major paradigm for engineering next generation solutions such as smart cities, health-care and emergency response. However, SoS differentiating characteristics, such as emergent behavior, may introduce specific issues that make ensuring their security a critical challenge. Objective: the aim of this study is to investigate how Software Engineering approaches can be extended to model and analyze secure SoS solutions for discovering high impact cascading attacks at the architecture stage. Method: in order to achieve our objective, we followed the guidelines of Model Driven Engineering to propose a method, Systems-of-Systems Security (SoSSec), that comprises: (1) an architectural description language for modeling SoS and its vulnerabilities and (2) a MultiAgent System for security analysis of SoS architectures.		Hachem, J. E.; Khalil, T. A.; Chiprianov, V.; A. Babar; Aniorte, P.						ConflictIncluded	Excluded	new_screen			2		2017				
307		ModelGuidance	Proactive modeling: a new model intelligence technique	This article discusses a model intelligence technique called proactive modeling. The goal of proactive modeling is to reduce the amount of manual modeling required when using a graphical DSML and to assist in step-by-step creation of a model. Proactive modeling accomplishes this goal by examining the metamodels syntax and constraints, automatically executing model modifications, and prompting the modeler for assistance when more than one valid model modification exists, but none are necessary. We have integrated proactive modeling into the generic modeling environment (GME) as a generic add-on that can operate on any domain-specific modeling language implemented in GME. Lastly, results from applying proactive modeling to several DSMLs in GME show that it can reduce modeling effort. © 2015, Springer-Verlag Berlin Heidelberg.		Pati, T.; Kolli, S.; Hill, J. H.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2017				
308		ModelGuidance	Architectural principles for the U.S. Army's simulation and modeling for acquisition, requirements and training (SMART) initiative	The architectural principles for the US army's simulation and modeling for acquisition, requirements and training (SMART) initiative were presented. The SMART execution plan consists of development and promuglation of SMART architectural refrence models, identification of target opportunities for technology insertion and the development of standards for data and information interchange. The development and evolution of SMART initiative information technology architecture was supported by architectural philosophy.		Page, E. H.; Lunceford, W. H.	Winter Simulation Conference Proceedings					ConflictExcluded	Excluded	new_screen			2		2001				
309		ModelGuidance	Toward a model-based approach to flight system fault protection	Fault Protection (FP) is a distinct and separate systems engineering sub-discipline that is concerned with the off-nominal behavior of a system. Flight system fault protection is an important part of the overall flight system systems engineering effort, with its own products and processes. As with other aspects of systems engineering, the FP domain is highly amenable to expression and management in models. However, while there are standards and guidelines for performing FP-related analyses, there are not standards or guidelines for formally relating the FP analyses to each other or to the system hardware and software design. As a result, the material generated for these analyses are effectively creating separate models that are only loosely-related to the system being designed. Development of approaches that enable modeling of FP concerns in the same model as the system hardware and software design enables establishment of formal relationships that has great potential for improving the efficiency, correctness, and verification of the implementation of flight system FP. This paper begins with an overview of the FP domain, and then continues with a presentation of a SysML/UML model of the FP domain and the particular analyses that it contains, by way of showing a potential model-based approach to flight system fault protection, and an exposition of the use of the FP models in FSW engineering. The analyses are small examples, inspired by current real-project examples of FP analyses.		Day, J.; Murray, A.; Meakin, P.						ConflictExcluded	Excluded	new_screen			2		2012				
310		ModelGuidance	Information modeling aspects of software development	The distinction between the modeling of information and the modeling of data in the creation of automated systems has historically been important because the development tools available to programmers have been wedded to machine oriented data types and processes. However, advances in software engineering, particularly the move toward data abstraction in software design, allow activities reasonably described as information modeling to be performed in the software creation process. An examination of the evolution of programming languages and development of general programming paradigms, including object-oriented design and implementation, suggests that while data modeling will necessarily continue to be a programmer's concern, more and more of the programming process itself is coming to be characterized by information modeling activities.		Colburn, T. R.	{MINDS} {AND} {MACHINES}					ConflictExcluded	Excluded	new_screen			2		1998				
311		ModelGuidance	Modeling and implementing an agent-based system for prediction of protein relative solvent accessibility	"In this paper, an agent-based system for prediction of relative solvent accessibility (RSA) of proteins is proposed. Since, it is believed that the 3D-structure of most proteins is defined by their sequences, utilizing data mining methods to extract hidden knowledge and information from protein sequences, is unavoidable. Due to the inherent heterogeneity and distribution in data that used to predict RSA and high time costs of central data mining on large training data, the necessity of an agent-based architecture for predicting RSA, seems to be essential. The system is logically and functionally divided into four layers, solving the tasks of data fusion"""		Meshkin, A.; Aghaee, N. G.; Sadeghi, M.	Expert Systems with Applications					ConflictExcluded	Excluded	new_screen			2		2011				
312		ModelGuidance	EMBSE: A word embeddings model oriented towards software engineering domain	The representation of contexts is essential in tasks involving Natural Language Processing (NLP). In the field of software engineering, classifying similar texts within a specific context has been a complex task, considering the informality and the complexity inherent of the texts produced through many software development processes (e.g. agile methods). Word embeddings capture semantic and syntactic information about unique words, allowing them to be represented in a dense and low-dimensional format. This property makes the embeddings vectors an important input feature for machine learning algorithms that aim to classify texts. Although there has been much research around the application of word embeddings in several areas, up to this moment, there is no knowledge about studies that have explored its application in the creation of a specific model for the domain of the area of software engineering. Thus, this article presents the proposal to generate an embedding model, called embeddings model for software engineering (EmbSE), which can recognize specific and relevant terms in the software engineering context. This model can be used as the main entry in the classification of several textual artifacts generated during the software development project process. The results are promising, presenting a 48% improvement in the mAP values for the EmbSE concerning the model trained on the generic corpus. This reinforces the hypothesis that a model of this nature can bring significant improvements in the classification of texts of the area. © 2019 Association for Computing Machinery.		De Bortoli Fávero, E. M.; Casanova, D.; Pimentel, A. R.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2019				
313		ModelGuidance	A Method for Building Domain Ontologies based on the Transformation of UML Models	Ontologies are used in the integration of information resources by describing the semantics of the information sources with machine understandable terms and definitions. But, creating an ontology is a difficult and time-consuming process, especially in the early stage of extracting key concepts and relations. This paper proposes a method for domain ontology building by extracting ontological knowledge from UML models of existing systems. We compare the UML model elements with the OWL ones and derive transformation rules between the corresponding model elements. Based on these rules, we define an XSLT document which implements the transformation processes. We expect that the proposed method reduce the cost and time for building domain ontologies with the reuse of existing UML models		Hong-Seok Na; O-Hoon Choi; Jung-Eun Lim						ConflictExcluded	Excluded	new_screen			2		2006				
314		ModelGuidance	A fuzzy-based approach for modelling preferences of users in multi-criteria recommender systems	Recommender systems (RSs) are web-based tools that use various machine learning and filtering methods to propose useful items for users. Several techniques have been used to develop such a system for generating a list of useful recommendations. Traditionally, RSs use a single rating to represent preferences of a user on an item. A multi-criteria recommendation is a new technique that recommends items to users based on multiple attributes of the items. This technique has been used to solve many recommendation problems. Its predictive performance has been tested and proved to be more efficient than the traditional approach. However, this paper presents a model that is based on the architecture and main features of fuzzy sets and systems. Fuzzy logic (FL) is widely known for its application in different fields of study with its main advantage being that it does not need a lot of training data and its ability to combine human heuristics into the computer-assisted decision making process. FL is highly applicable in the domain of RS. The proposed study is to test and provide the predictive performance of the fuzzy-based multi-criteria technique and compare it with a single rating RS. Experimental results on real-world datasets from Yahoo! Movies proved that the proposed technique has remarkably improved the accuracy of the system. © 2018 IEEE.		Hamada, M.; Odu, N. B.; Hassan, M.	Proceedings - 2018 IEEE 12th International Symposium on Embedded Multicore/Many-Core Systems-on-Chip, MCSoC 2018					ConflictExcluded	Excluded	new_screen			2		2018				
315		ModelGuidance	Simulation and modeling of group behavior during emergency evacuation	Modeling group behavior is very critical in the context of simulations designed for training personals or evacuation decision making strategies. The behavior of agents in such simulations plays a very important role. Agent behavior in complex environments such as emergency evacuation scenario involves collaboration with other agents. A simple example can be a group of people in a building trying to reach an exit by minimizing their travel time. A further complex situation would be involving several group of people trying to reach multiple exits. This paper describes how complex simulation environments involving group behavior can be constructed by fusing human behavior into the simulation. The developed prototype system is able to demonstrate some emergent human social behaviors, such as competitive, queuing, and herding behaviors. ©2009 IEEE.		Sharma, S.	2009 IEEE Symposium on Intelligent Agents, IA 2009 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2009				
316		ModelGuidance	CORBA-based dynamic services creation and location model	The problem of service efficiency and resource usage in current distributed application system were considered. A dynamic services creation and location (DSCL) model based was proposed by common object request broker architecture (CORBA). In order to make full use of the idle computer resources, an application redundant service object was created on-demand to broad the single server's abilities, and an adaptive load balancing among redundant objects was built to meet clients' demands. When the requests for service object descend tranquilly, an according service object was down so as to improve the whole system resource service efficiency. By means of CORBA advantage, especially the platform independency, naming service and trading service, a experiment environment was built. The result showed that the model can improve the efficiency of the distributed compute environment, and use the system resource efficientlly.		Wang, Y.	Huazhong Keji Daxue Xuebao (Ziran Kexue Ban)/Journal of Huazhong University of Science and Technology (Natural Science Edition)					ConflictExcluded	Excluded	new_screen			2		2008				
317		ModelGuidance	An ontological model for corporate social responsibility (csr) reporting based on global reporting initiative gri g4	The aim of this research is to develop a Model for CSR Reporting based on the Global Reporting initiative, GRI Sustainability Reporting Guidelines G4, using an ontological approach. This Model can be used as a shared vocabulary and knowledge base. This research adopts a combination of methodologies to develop the CSR reporting ontology. This includes four phases: Specification, conceptualization, formalization, and implementation. The specification phase defines the purpose and the scope. Conceptualization identifies the Conceptual Model. Formalization transforms the Conceptual Model using a Unified Modeling Language (UML) by following a top-down hierarchy approach. Implementation encodes the formalized Model using OWL. The resulting ontological Model for CSR Reporting users is based on GRI G4 and can be automatically processed.[Ilham Yaldo & Hai Dong] © 2014.		Yaldo, I. S. Y.; Dong, H.; Woodbline, G.; Fan, Y. H.	Proceedings of the 25th Australasian Conference on Information Systems, ACIS 2014					ConflictIncluded	Excluded	new_screen			2		2014				
318		ModelGuidance	CGRA-ME: A unified framework for CGRA modelling and exploration	Coarse-grained reconfigurable arrays (CGRAs) are a style of programmable logic device situated between FPGAS and custom ASICs on the spectrum of programmability, performance, power and cost. CGRAs have been proposed by both academia and industry; however, prior works have been mainly self-contained without broad architectural exploration and comparisons with competing CGRAs. We present CGRA-ME - a unified CGRA framework that encompasses generic architecture description, architecture modelling, application mapping, and physical implementation. Within this framework, we discuss our architecture description language CGRA-ADL, a generic LLVM-based simulated annealing mapper, and a standard cell flow for physical implementation. An architecture exploration case study is presented, highlighting the capabilities of CGRA-ME by exploring a variety of architectures with varying functionality, interconnect, array size, and execution contexts through the mapping of application benchmarks and the production of standard cell designs. © 2017 IEEE.		Chin, S. A.; Sakamoto, N.; Rui, A.; Zhao, J.; Kim, J. H.; Hara-Azumi, Y.; Anderson, J.	Proceedings of the International Conference on Application-Specific Systems, Architectures and Processors					ConflictExcluded	Excluded	new_screen			2		2017				
319		ModelGuidance	Creating and maintaining a collaboration platform via domain-specific reference modelling	We present a model-driven approach to create and maintain a collaboration platform for supporting the collaboration between acute hospitals and rehabilitation clinics to optimize transferal management. The model-driven approach makes the platform highly configurable to accommodate new clinical pathways and be easily extendable to include additional functions to meet future needs. All domain-specific aspects are described declaratively in an application model. The elements in the application model are mapped to corresponding elements in an application framework to obtain the executable collaboration platform. Attaching the mappings to the constructs of an underlying domain-specific language ensures that executable code can be derived from all application models. Furthermore, our framework includes reference models which serve as blueprints and will make it easier to create and adapt application models.		Reimer, U.; Laurenzi, E.						ConflictExcluded	Excluded	new_screen			2		2014				
320		ModelGuidance	Modeling SOA-Based IoT Applications with SoaML4IoT	A common feature of Internet of Things (IoT) applications is heterogeneity, regarding network protocols, data formats, hardware and software platforms. Aiming to deal with this heterogeneity, several frameworks have applied the Model-Driven Development (MDD) to build IoT applications. On the software architecture point of view, the literature has shown that the Service-Oriented Architecture (SOA) is one of the most suitable style to address the interoperability of heterogeneous entities composing these solutions. However, to the best of our knowledge, there is no modeling language tailored for the design of SOA-based IoT applications. This paper aims at bridging this gap by introducing SoaML4IoT. The modeling language extends the SoaML, the standard graphical modeling language proposed by the OMG for designing systems that follow the services approach. © 2019 IEEE.		Costa, B.; Pires, P. F.; Delicato, F. C.	IEEE 5th World Forum on Internet of Things, WF-IoT 2019 - Conference Proceedings					ConflictExcluded	Excluded	new_screen			2		2019				
321		ModelGuidance	Integrating CBSE, SoC, MDA, and AOP in a software development method	Component-based software engineering, separation of concerns, model-driven architecture, and aspect-oriented programming are four active research areas tat have been around for several years now. In this paper, we present how these four paradigms can be put together in the context of a new software development method and we show how they can complement each other are different stages in the development life-cycle of enterprise, middleware-mediated applications. Different software development methods, such as Fondue, Catalysis, KobrA, and the Rational Unified Process, are also analyzed, pointing out their differences and limitations. In the end, requirements for a dedicated tool infrastructure that would support the new development approach are discussed.		Silaghi, R.; Strohmeier, A.						ConflictExcluded	Excluded	new_screen			2		2003				
322		ModelGuidance	Multitasking Simulation of a Boiler System Using Qualitative Model-Based Reasoning	Computer modeling and simulation provide an effective, inexpensive, and realistic instruction tool for many domains that require a substantial investment for initial and ongoing training. We have designed and developed a qualitative model-based reasoning system, the BoilerModel, for such a domain, the boiler operations in a steam propulsion engineering plant. The primary purpose is to train personnel operating the boiler, which is a complex system consisting of valves, piping, and components and requiring continual refresher for watchstanders to perform their jobs safely. The BoilerModel accurately models a 1200 psi D-type boiler and its associated peripherals. The design and use of a qualitative model focusing on fundamental intracomponent relationships (�first principles�) and constraint propagation result in compact and efficient code since there is no need for the extensive rule base found in conventional expert systems. Implementation in Ada permits the use of concurrent multitasking to simulate simultaneous valve propagation found in real-world boiler systems. © 1992, ACM. All rights reserved.		Lee, Y.-J.; Stascavage, J. F.	ACM Transactions on Modeling and Computer Simulation (TOMACS)					ConflictExcluded	Excluded	new_screen			2		1992				
323		ModelGuidance	Classification framework for analysis and modeling of physically induced reliability violations	Technology downscaling is expected to amplify a variety of reliability concerns in future digital systems. A good understanding of reliability threats is crucial for the creation of efficient mitigation techniques. This survey performs a systematic classification of the state of the art on the analysis and modeling of such threats, which are caused by physical mechanisms to digital systems. The purpose of this article is to provide a classification tool that can aid with the navigation across the entire landscape of reliability analysis and modeling. A classification framework is constructed in a top-down fashion from complementary categories, each one addressing an approach on reliability analysis and modeling. In comparison to other classifications, the proposed methodology approaches the target research domain in a complete way, without suppressing hybrid works that fall under multiple categories. To substantiate the usability of the classification framework, representative works from the state of the art are mapped to each appropriate category and are briefly analyzed. Thus, research trends and opportunities for novel approaches can be identified. © 2015 ACM.		Rodopoulos, D.; Psychou, G.; Sabry, M. M.; Catthoor, F.; Papanikolaou, A.; Soudris, D.; Noll, T. G.; Atienza, D.	ACM Computing Surveys					ConflictExcluded	Excluded	new_screen			2		2015				
324		ModelGuidance	Effective Document Labeling with Very Few Seed Words: A Topic Model Approach	Developing text classifiers often requires a large number of labeled documents as training examples. However, manually labeling documents is costly and time-consuming. Recently, a few methods have been proposed to label documents by using a small set of relevant keywords for each category, known as dataless text classification. In this paper, we propose a Seed-Guided Topic Model (named STM) for the dataless text classification task. Given a collection of unlabeled documents, and for each category a small set of seed words that are relevant to the semantic meaning of the category, the STM predicts the category labels of the documents through topic influence. STM models two kinds of topics: category-topics and general-topics. Each category-topic is associated with one specific category, representing its semantic meaning. The general-topics capture the global semantic information underlying the whole document collection. STM assumes that each document is associated with a single category-topic and a mixture of general-topics. A novelty of the model is that STM learns the topics by exploiting the explicit word co-occurrence patterns between the seed words and regular words (i.e., non-seed words) in the document collection. A document is then labeled, or classified, based on its posterior category-topic assignment. Experiments on two widely used datasets show that STM consistently outperforms the state-of-the-art dataless text classifiers. In some tasks, STM can also achieve comparable or even better classification accuracy than the state-of-the-art supervised learning solutions. Our experimental results further show that STM is insensitive to the tuning parameters. Stable performance with little variation can be achieved in a broad range of parameter settings, making it a desired choice for real applications.		Li, Chenliang; Xing, Jian; Sun, Aixin; Ma, Zongyang						ConflictExcluded	Excluded	new_screen			2		2016				
325		ModelGuidance	Supporting Generic Methodologies to Assist IMS-LD Modeling	The adoption of IMS-LD as a standard conceptual model for pedagogical scenarios description will allow increasing interoperability in online learning. Since IMS-LD modeling activity does not count among the practices of teachers, it's imperative to provide a methodology to see them through this task. IMS-LD authors proposed one in the Best Practices Guide but unfortunately existing LD tools were not designed to support this or any other methodology. We propose a generic support for methodologies through a formal framework (incremental modeling process) and provide an implementation (ModX module) using IMS-LD best practices as an example		Pallec, X. Le; Filho, C. O. de Moura; Marvie, R.; M. Nebut; Tarby, J.						ConflictExcluded	Excluded	new_screen			2		2006				
326		ModelGuidance	Extending the Formal Process Description towards Consistency in Product/ion-Aware Modeling	In discrete manufacturing, basic and detail engineering workgroups collaborate to design a cyber-physical production system. Product/ion-aware modeling recognizes requirements coming from the product and from the production process for designing a production resource. These requirements imply consistency dependencies between product, production process, and resource (PPR) model elements. Unfortunately, there is only limited support for modeling consistency dependencies between PPR model elements and for defining abstract types in addition to concrete instances of PPR model elements. In this paper, we build on the PPR modeling capabilities of the VDI/VDE 3682 guideline, the Formal Process Description (FPD). We propose extensions for representing the refinement of types and instances as well as consistency dependencies between PPR model elements. We evaluate the FPD language extensions in a feasibility study with domain experts at a large production system engineering company for discrete manufacturing. The main result is that the domain experts found the extended FPD useful and usable for representing PPR consistency as a foundation for making design decisions. © 2019 IEEE.		Kathrein, L.; Meixner, K.; Winkler, D.; Lüder, A.; Biffl, S.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					ConflictExcluded	Excluded	new_screen			2		2019				
327		ModelGuidance	Intrusion detection model using fusion of chi-square feature selection and multi class SVM	Intrusion detection is a promising area of research in the domain of security with the rapid development of internet in everyday life. Many intrusion detection systems (IDS) employ a sole classifier algorithm for classifying network traffic as normal or abnormal. Due to the large amount of data, these sole classifier models fail to achieve a high attack detection rate with reduced false alarm rate. However by applying dimensionality reduction, data can be efficiently reduced to an optimal set of attributes without loss of information and then classified accurately using a multi class modeling technique for identifying the different network attacks. In this paper, we propose an intrusion detection model using chi-square feature selection and multi class support vector machine (SVM). A parameter tuning technique is adopted for optimization of Radial Basis Function kernel parameter namely gamma represented by ‘ϒ’ and over fitting constant ‘C’. These are the two important parameters required for the SVM model. The main idea behind this model is to construct a multi class SVM which has not been adopted for IDS so far to decrease the training and testing time and increase the individual classification accuracy of the network attacks. The investigational results on NSL-KDD dataset which is an enhanced version of KDDCup 1999 dataset shows that our proposed approach results in a better detection rate and reduced false alarm rate. An experimentation on the computational time required for training and testing is also carried out for usage in time critical applications. © 2016 The Authors		Sumaiya Thaseen, I.; Aswani Kumar, C.	Journal of King Saud University - Computer and Information Sciences					ConflictExcluded	Excluded	new_screen			2		2017				
328		ModelGuidance	Applying model-driven engineering in small software enterprises	Model-Driven Engineering ({MDE}) is increasingly gaining acceptance in the software engineering community, however its adoption by the industry is far from successful. The number of companies applying {MDE} is still very limited. Although several case studies and reports have been published on {MDE} adoption in large companies, experience reports on small enterprises are still rare, despite the fact that they represent a large part of the software companies ecosystem. In this paper we report on our practical experience in two transfer of technology projects on two small companies. In order to determine the degree of success of these projects we present some factors that have to be taken into account in transfer of technology projects. Then, we assess both projects analyzing these factors and applying some metrics to give hints about the potential productivity gains that {MDE} could bring. We also comment on some lessons learned. These experiences suggest that {MDE} has the potential to make small companies more competitive, because it enables them to build powerful automation tools at modest cost. We will also present the approach followed to train these companies in {MDE}, and we contribute the teaching material so that it can be used or adapted by others projects of this nature. (C) 2013 Elsevier B.V. All rights reserved.		Sanchez Cuadrado, Jesus; Izquierdo, Javier Luis Canovas; Garcia Molina, Jesus	{SCIENCE} {OF} {COMPUTER} {PROGRAMMING}					ConflictExcluded	Excluded	new_screen			2		2014				
329		ModelGuidance	PRoModel: A Model-Driven Software Environment That Facilitates and Expedites the Development of Systems That Handle Uncertainty	"PRoModel is a software environment that facilitates and expedites the development of systems that handle uncertainty. Uncertainty arises when information is incomplete or incorrect or if we have deficient models that limit the way in which knowledge can be represented. Probabilistic Relational Models (PRMs) are structures that merge, in the same model: (1) the entities and their relationships from an Entity-Relationship model, and (2) the random variables and conditional dependence associations that represent the uncertainty in the domain. PRoModel use PRMs to generate, automatically, the code artifacts and the database to produce a functional prototype of a Web application. In the same way, PRoModel generates the uncertainty model to allow the propagation of evidence and inference of knowledge. The evaluation of PRoModel was made through the development of an Intelligent Tutoring System with a simulator for training operators of power plants. Initial tests show that PRoModel expedited the development of systems that handle uncertainty, providing significant savings in time and effort.
"		López-Landa, Rosa; Noguez, Julieta						ConflictExcluded	Excluded	new_screen			2		2012				
330		ModelGuidance	Modeling test cases for security protocols with SecureMDD	Designing and executing test cases for security-critical protocols is a technically complicated and tedious process. SecureMDD is a model-driven approach that enables development of security-critical applications based on cryptographic protocols. In this paper we introduce a method which combines the model-driven approach used in SecureMDD with the design of functional and security tests. We construct and evaluate new modeling guidelines that allow the modeler to easily define such test cases during the modeling stage. We also implement model transformation routines to generate runnable tests for actual implementation of applications developed with SecureMDD. © 2013 Elsevier B.V. All rights reserved.		Katkalov, K.; Moebius, N.; Stenzel, K.; Borek, M.; Reif, W.	Computer Networks					ConflictExcluded	Excluded	new_screen			2		2014				
331		ModelGuidance	Model-Driven Development of User Interfaces: Promises and Challenges	In this paper we discuss promises and challenges of model-driven development of user interfaces. MDD's defining characteristic is that development's primary focus and products are models rather than computer programs. These aspects are very important for HCI, as user interface development is complex, multidisciplinary activity, while the implementation platforms do not directly support many of important high-level HCI concepts. Joining MDD and HCI can bring many advantages to both fields. In the case of HCI, it would enable more efficient development of user interfaces, usage of existing standards, tools, and wider acceptance of these results. On the other hand, integrating human-computer interaction accomplishments into the MDD approach can lead toward creation of more complete and better accessible solutions. Still, there are many open problems. One of the main challenges is the absence of the formal description of relevant HCI concepts, which in MDD should serve as the metamodel		Obrenovic, Z.; Starcevic, D.						ConflictExcluded	Excluded	new_screen			2		2005				
332		ModelGuidance	Goal Sketching with Activity Diagrams	Goal orientation is acknowledged as an important paradigm in requirements engineering. The structure of a goal-responsibility model provides opportunities for appraising the intention of a development. Creating a suitable model under agile constraints (time, incompleteness and catching up after an initial burst of creativity) can be challenging. Here we propose a marriage of UML activity diagrams with goal sketching in order to facilitate the production of goal-responsibility models under these constraints.		Boness, K.; Harrison, R.						ConflictExcluded	Excluded	new_screen			2		2008				
333		ModelGuidance	Guidelines for Developing Ontological Architectures in Modelling and Simulation	Introduction: This book is motivated by the belief that a better understanding of ontology		Partridge, C.; Mitchell, A.; de Cesare, S.	Intelligent Systems Reference Library					ConflictExcluded	Excluded	new_screen			2		2013				
334		ModelGuidance	Modeling and simulation of CPS based on SysML and modelica(KG)	Cyber-Physical Systems (CPS) is usually associated with large numbers of domains. The domain relevance allows system engineers' knowledge to spread many domains. The efficiency and accuracy of modeling are not able to be guaranteed. Therefore, in this paper, a set of CPS modeling guideline is proposed based on SysML, and the system's 4-layer abstract hierarchy and the kind of modeling products obtained on each layer are defined. Based on this, a modeling specification containing seven sub-processes is designed. In order to verify the correctness of CPS function and the consistency of the business logic at the primary phase of the design, we summarize the mapping rules of SysML-Modelica and define the algorithm of model conversion. Finally, a simple CPS case is used to verify our task. The results show that this method can be effective in CPS's modeling and Simulation. © 2019 Knowledge Systems Institute Graduate School. All rights reserved.		Deng, F.; Yan, Y.; Gao, F.; Wu, L.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					ConflictIncluded	Included	new_screen			2		2019				
335		ModelGuidance	UML-based enhanced rich form generation	The Model Driven Development (MDD) has provided a new way of engineering today's rapidly changing requirements into the implementation. However, the development of the user interface (UI) part of an application has not benefited much from MDD although today's UIs are complex software components and play an essential role in the usability of an application. It is a common practice that developers create view forms manually by referring to entity beans to determine their content. However, such kind of manual creation is very error-prone and thus makes the system maintenance difficult. One promise in MDD is that we can generate code from UML models, but existing design models in MDD does not capture enough information that are required to generate desired UI fragments. This paper presents our approach addressing these issues. The approach makes it possible to generate complex UIs, rich view forms, that fully satisfy both designers and end-users and to enforce system access control. © 2011 ACM.		Cerny, T.; Song, E.	Proceedings of the 2011 ACM Research in Applied Computation Symposium, RACS 2011					ConflictExcluded	Excluded	new_screen			2		2011				
336		ModelGuidance	A performance modeling framework incorporating cost efficient deployment of multiple collaborating instances	Performance evaluation of distributed system is always an intricate undertaking where system behavior is distributed among several components those are physically distributed. Bearing this concept in mind, we delineate a performance modeling framework for a distributed system that proposes a transformation process from high level UML notation to SRN model and solves the model for relevant performance metrics. To capture the system dynamics through our proposed framework we outline a specification style that focuses on UML collaboration and activity as reusable specification building blocks, while deployment diagram identify the physical components of the system and the assignment of software artifacts to identified system components. Optimal deployment mapping of software artifacts on the available physical resources of the system is investigated by deriving the cost function. Way to deal with parallel thread processing of the network nodes by defining the upper bound is precisely mentioned to generate the SRN model. © 2011 Springer-Verlag.		Hayat Khan, R.; Heegaard, P. E.	Communications in Computer and Information Science					ConflictExcluded	Excluded	new_screen			2		2011				
337		ModelGuidance	Using voice commands for uml modelling support on interactive whiteboards: Insights & experiences	The ultimate goal of software design tools is to provide efficient support for designing software systems. In our previous work we presented OctoUML, a prototype of a new generation software design environment. OctoUML supports collaborative software design and enables different input methods for creation of software models at various levels of formality. Recently, we added a voice recognition unit into the system and provided users with possibilities of giving voice commands. This paper presents insights and gathers experiences from enabling a voice interaction modality within software design environments. By conducting two user studies, we found that (i) the general perception regarding the usability is positive, (ii) the voice interaction modality is mostly preferred for text input, and (iii) the employment of voice interaction modality within the software design environments enhances the efficiency of the software design process.		Jolak, R.; Vesin, B.; Chaudron, M. R. V.	CIbSE 2017 - XX Ibero-American Conference on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2017				
338		ModelGuidance	OctoBubbles: A Multi-view interactive environment for concurrent visualization and synchronization of UML models and code	The process of software understanding often requires developers to consult both high-and low-level software artifacts (i.e. models and code). The creation and persistence of such artifacts often take place in different environments, as well as seldom in one single environment. In both cases, software models and code fragments are viewable separately making the workspace overcrowded with many opened interfaces and tabs. In such a situation, developers might lose the big picture and spend unnecessary effort on navigation and locating the artifact of interest. To assist program comprehension and tackle the problem of software navigation, we present OctoBubbles, a multi-view interactive environment for concurrent visualization and synchronization of software models and code. A preliminary evaluation of OctoBubbles with 15 professional developers shows a high level of interest, and points out to potential benefits. Furthermore, we present a future plan to quantitatively investigate the effectiveness of the environment. © 2018 IEEE.		Jolak, R.; Le, K.-D.; Sener, K. B.; Chaudron, M. R. V.	25th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2018 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2018				
339		ModelGuidance	Modeling and performance evaluation of service choreography based on stochastic petri net	Web service composition refers to the creation of new services by combining functionalities provided by existing ones. Current web service choreography proposals, such as WSCI, WS-CDL and BPEL, provide notations for describing the message flows in Web service collaborations. The kernel of WSCI consists of simple communication primitives that may be combined using control-flow constructs expressing sequence, branching, parallelism, synchronization, etc. Many efforts have been made on functional formalization and property verification of WSCI-based service compositions. However, performance facet of WSCI-based service composition is yet to be given the importance it deserves. In this paper, we introduce a stochastic-Petri-net-based approach to predict the performance of web service choreographed using WSCI. This approach translates WSCI-based composition into general stochastic Petri net and obtains analytical estimation of process-completion-time based on the continuous-time Markov chain derived from the Petri net. In the case study, we use Monte-carlo experiments and confidence interval analysis to validate theoretical evaluations. © 2010 Academy Publisher.		Dong, Y.; Xia, Y.; Sun, T.; Zhu, Q.	Journal of Computers					ConflictExcluded	Excluded	new_screen			2		2010				
340		ModelGuidance	Modularity in process models: Review and effects	The use of subprocesses in large process models is an important step in modeling practice to handle complexity. While there are several advantages attributed to such a modular design, including ease of reuse, scalability, and enhanced understanding, the lack of precise guidelines turns out to be a major impediment for applying modularity in a systematic way. In this paper we approach this area of research from a critical perspective. Our first contribution is a review of existing approaches to process model modularity. This review shows that aside from some limited insights, a systematic and grounded approach to finding the optimal modularization of a process model is missing. Therefore, we turned to modular process models from practice to study their merits. In particular, we set up an experiment involving professional process modelers and tested the effect of modularization on understanding. Our second contribution, stemming from this experiment, is that modularity appears to pay off. We discuss some of the limitations of our research and implications for future design-oriented approaches. © 2008 Springer Berlin Heidelberg.		Reijers, H.; Mendling, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2008				
341		ModelGuidance	Comparison of MDA and DSM technologies for the REA ontology model creation	Using the ontology in information systems means an improvement of the possibility of solving tasks based on domain knowledge. The quality design of the ontological model is base of well-functioning system. In this area the most commonly used technology is MDA (Model driven development), which provides solid base for modeling language's metamodel definition. This article aims to compare this technology with a new approach to visual modeling - the DSM (Domain-specific modeling) technology. Using the narrow focus on specific domain and full code generation the DSM allows easy and rapid development of the ontological system. The REA (Resource-Events-Agents) ontology, intended for business processes modeling was used for comparison of these technologies.		Meliš, Z.; Žácek, J.; Hunka, F.	E-Informatica Software Engineering Journal					ConflictExcluded	Excluded	new_screen			2		2013				
342		ModelGuidance	Model driven approach for the design and the development of non visual components	This paper describes reusable components that can be used by developers to implement applications for visually handicapped users. The non visual components are widgets adapted from graphical ones and they use specific input/output devices and specific interaction principles. They are implemented as components to facilitate the component based development of non visual applications. The contribution of this work in the field of assistive technology is valuable, because there are no existing tools that facilitate the creation of interfaces for the blind users, and it may considerably improve computer access for this category of users.		Bouraoui, A.; Soufi, M.	New Trends in ICT and Accessibility - Proceedings of the 1st International Conference in Information and Communication Technology and Accessibility, ICTA 2007					ConflictExcluded	Excluded	new_screen			2		2007				
343		ModelGuidance	Computational modeling and experimental validation of aviation security procedures	Security of civil aviation has become a major concern in recent years, leading to a variety of protective measures related to airport and aircraft security to be established by regional, national and international authorities. We propose a novel computational approach to checking consistency, coherence and completeness of procedural security requirements defined by aviation security guidelines. To deal with uncertainty, we use probabilistic modeling techniques, combining abstract state machine modeling with symbolic model checking. © Springer-Verlag Berlin Heidelberg 2006.		Glässer, U.; Rastkar, S.; Vajihollahi, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2006				
344		ModelGuidance	Model-based specification	The classical specification formalism involving pre- and postconditions expressed in program variables cannot directly be applied to the specification of classes, interfaces, components, and design patterns, since the program variables involved are mostly invisible outside of (dynamically selected) implementation code. A more useful specification formalism, operating at the problem domain level rather than at the implementation level, is proposed and it is shown how this can be used for Dijkstra-style derivation of object-oriented code.		Bijlsma, L.	Information Processing Letters					ConflictExcluded	Excluded	new_screen			2		2001				
345		ModelGuidance	Guidelines and Metrics for Configurable and Sustainable Architectural Knowledge Modelling	"Architectural Knowledge Management (AKM) has been an active research area in the last decade; the importance of making the right architectural decisions – and making these at the right time – has been recognized by the contemporary software engineering practices. Several AKM meta-models, templates and tools have been proposed and applied in practice to capture architectural design decisions and minimize architectural drift during software evolution. However, most of these AKM models, and the architectural decisions captured with them, lack contextual awareness, flexibility and maintainability over time. In this position paper, we outline an extended AKM meta-model and a set of guidelines with the goal to (i) allow AKM tool engineers to construct more configurable and therefore flexible AKM tools, (ii) allow knowledge engineers and method coaches to create more sustainable and therefore maintainable decision logs (AK model instances). We approach these two goals by way of mapping the extended AKM meta-model concepts to quality attributes for architectural knowledge as well as supporting AK metrics.
"		Carrillo, Carlos; Capilla, Rafael; Zimmermann, Olaf; Zdun, Uwe						ConflictExcluded	Excluded	new_screen			2		2015				
346		ModelGuidance	Model-driven development of a person-centric mashup for social software	Based on the success of social software, modern information and communication systems are continuously moving from an information-centric data perspective to a more person-centric view. Easy access to federated activity streams of colleagues and other awareness information that is aggregated from different distributed intra- and extra-organizational systems become more and more important for the daily knowledge work. The increasing number of platforms every person uses requires a flexible data integration solution that keeps track of the connections between the pieces of information and the persons involved in their creation in order to create a unified and aggregated view for work groups, teams and communities. This unified data collection is especially important for social network analysis and data mining as individual profiles and activities are meanwhile typically distributed over various source systems. In this paper we present the CommunityMashup, a person-centric multi-user data integration solution for social software and similar systems that facilitates data aggregation and filtering while retaining the link to the pieces of information in the source systems. To support continuous evolution and flexible integration of frequently changing heterogeneous APIs and interfaces, we apply a model-driven development approach based on a therefore created person-centric data model. In addition to the conceptual design of the CommunityMashup, we present a reference implementation based upon open source components. Our overall goal is to build a multi-user mashup middleware for social software that offers an universal entry point in combination with unified data access for different client devices and can be used in various application scenarios with regard to individually specified service levels, e.g. continuous availability. © 2012, Springer-Verlag.		Lachenmaier, P.; Ott, F.; Koch, M.	Social Network Analysis and Mining					ConflictExcluded	Excluded	new_screen			2		2013				
347		ModelGuidance	Development, analysis and evaluation of performance models for mobile multi-agent networks	Mobile agents have a number of interesting features such as creation, disposal of agents, execution of services at various network nodes, migration to other network nodes and communication with other agents. Such features are related to the performance area. Based on some examples, scenarios, or case studies, Petri net models (ordinary Petri net, colored Petri net or predicate/transition net), mathematical models, simulation models and queuing models have been developed in the literature. Such research works concentrate on studying the performance of mobile agent networks with much attention on deadlock problems, dynamic behavior problems and the calculation of response time problems. In order to better understand how to design distributed systems using the mobile agent paradigm and how to build a model with the capability of studying all such performance problems in an easy and a realistic way, we propose a new mobile agent performance model using the capability of the generalized stochastic Petri net (GSPN) modeling technique. We amended this model with new mobile agent behaviors to fully describe the dynamic behavior of the mobile agent network when it manipulates parallel/multiple agents, and uses some of the most important agent communications (e.g. remote, local, direct, indirect and parallel). Furthermore, the proposed model describes the creation process of new agents during the migration process, the execution of tasks among the network nodes, the way of handling the agent and its service task at each node and the interaction of a group of agents (as a collective result of the behaviors of each individual agent). To the best of our knowledge, such aspects are not included into one model because it is difficult to describe all these aspects into one model. Therefore, the developed GSPN mobile model gives the facility to study the performance of mobile agent networks with more details. In the performance analysis, we develop four studies to investigate the effect of different parameters such as agent communication time, size of mobile agent, number of mobile agents and number of hops on the performance of mobile agent networks. By performance of mobile agent networks, we mean the response time of the user's request. To the best of our knowledge, such four performance studies are not investigated previously by the GSPN modeling technique. Finally, we propose a reduction-modeling methodology to facilitate the modeling process of the practical mobile agent network that incorporates a large number of network nodes, a large number of users, and subsequently a large number of parallel/multiple agents. Such methodology reduces the original model to a simpler one while preserving the basic features and properties of the original model. © 2006 Oxford University Press.		Koriem, S. M.	Computer Journal					ConflictExcluded	Excluded	new_screen			2		2006				
348		ModelGuidance	Concepts and guidelines of feature modeling for product line software engineering	Product line software engineering ({PLSE}) is an emerging software engineering paradigm, which guides organizations toward the development of products from core assets rather than the development of products one by one from scratch. In order to develop highly reusable core assets, {PLSE} must have the ability to exploit commonality and manage variability among products from a domain perspective. Feature modeling is one of the most popular domain analysis techniques, which analyzes commonality and variability in a domain to develop highly reusable core assets for a product line. Various attempts have been made to extend and apply it to the development of software product lines. However, feature modeling can be difficult and time-consuming without a precise understanding of the goals of feature modeling and the aid of practical guidelines. In this paper, we clarify the concept of features and the goals of feature modeling, and provide practical guidelines for successful product line software engineering. The authors have extensively used feature modeling in several industrial product line projects and the guidelines described in this paper are based on these experiences.		Lee, K.; Kang, K. C.; Lee, J.						ConflictExcluded	Excluded	new_screen			2		2002				
349		ModelGuidance	UML-based reverse engineering and model analysis approaches for software architecture maintenance	This paper proposes a UML-based software maintenance process. The process is guided by architectural descriptions and existing architectural models. The descriptions are given as variants of UML profiles describing the styles and rules relevant for a particular application domain. A reverse engineering subprocess, combining top-down and bottom-up reverse engineering activities, aims at constructing the architectural models. Resulting models are investigated in a model analysis subprocess. The models are checked against the profiles to find violations against the given architectural rules when maintaining and developing the subject system, and they are further analyzed using a set of UML model processing operations. The proposed approach is applied for maintaining a large-scale product platform architecture and real-life product-line products built on top of this platform. The model analysis results of the case study are discussed. © 2004 IEEE.		Riva, C.; Selonen, P.; Systä, T.; Xu, J.	IEEE International Conference on Software Maintenance, ICSM					ConflictExcluded	Excluded	new_screen			2		2004				
350		ModelGuidance	Modular analysis and modelling of risk scenarios with dependencies	The risk analysis of critical infrastructures such as the electric power supply or telecommunications is complicated by the fact that such infrastructures are mutually dependent. We propose a modular approach to the modelling and analysis of risk scenarios with dependencies. Our approach may be used to deduce the risk level of an overall system from previous risk analyses of its constituent systems. A custom made assumption-guarantee style is put forward as a means to describe risk scenarios with external dependencies. We also define a set of deduction rules facilitating various kinds of reasoning, including the analysis of mutual dependencies between risk scenarios expressed in the assumption-guarantee style. © 2010 Elsevier Inc. All rights reserved.		Brændeland, G.; Refsdal, A.; Stølen, K.	Journal of Systems and Software					ConflictExcluded	Excluded	new_screen			2		2010				
351		ModelGuidance	Modeling and preventing TOCTTOU vulnerabilities in Unix-style file systems	TOCTTOU (Time-of-Check-To-Time-Of-Use) is a file-based race condition in Unix-style systems and characterized by a pair of file object access by a vulnerable program: a check operation establishes certain conditions about the file object (e.g., the file exists), followed by a use operation that assumes that the established condition still holds. Due to the lack of support for transactions in Unix-style file systems, an attacker can modify the established file condition in-between the check and use steps, thus causing significant harm. In this paper, we present a model of the TOCTTOU problem (called STEM), which enumerates all the potential file system call pairs (called exploitable TOCTTOU pairs) that form the check/use steps. The model shows that a successful TOCTTOU attack requires a change in the mapping of pathname to logical disk blocks between the check and use steps. We apply STEM to POSIX and Linux to demonstrate its practical value for Unix-style file systems. Then we propose a defense mechanism (called EDGI) that prevents an attacker from tampering with the file condition between exploitable TOCTTOU pairs during a vulnerable program's execution. EDGI works at the file system level and does not require existing applications to change. We have implemented EDGI on Linux kernel 2.4.28 and our evaluation shows that EDGI is effective and incurs little overhead to application benchmarks such as Andrew and Postmark. © 2010 Elsevier Ltd. All rights reserved.		Wei, J.; Pu, C.	Computers and Security					ConflictExcluded	Excluded	new_screen			2		2010				
352		ModelGuidance	Integrating formal UML designs and HCI patterns with spiral SDLC in droLIGHT implementation	Design engineering of an embedded system is a lot more complex and with greater security risk than a desktop and web application, as it involves several electronic components, micro controllers, external PCB boards and miscellaneous advanced devices, to be attached, used and properly communicated. Today, embedded systems are widely used for miscellaneous purposes in different fields of life, the goal of this research is to develop a new domain specific real time solution for the fields of Neurobiology and Photobiology. We propose a new embedded and multithreading based system i.e. DroLIGHT, proficient in systematizing a noncommercial special purpose hardware capable of producing lights of different brightness and wavelength that can be used to study light-evoked behavior of animals, here especially that of the fruit fly Drosophila melanogaster. The aim of this paper is to discuss initial DroLIGHT implementation, following spiral software development life cycle and integrating a formal unified modelling language to scheme from different perspectives e.g. use case, design and implementation views. We present the designed graphical user interface incorporating human computer interaction guidelines, principles and patterns e.g. window per task, direct manipulation, conversational text, ephemeral feedback and step-by-step instructions. We highlight the programming details, available features, hardware components and the basic deployment procedure of the DroLIGHT. Moreover the paper discusses a few of the patents relevant to UML Designs and HCI Patterns. © 2013 Bentham Science Publishers.		Ahmed, Z.; Helfrich-Förster, C.; Dandekar, T.	Recent Patents on Computer Science					ConflictExcluded	Excluded	new_screen			2		2013				
353		ModelGuidance	Analysis of the trade-offs in different modeling approaches for performance prediction of software systems	A number of performance modeling approaches for predicting the performance of modern software systems and IT infrastructures exist in the literature. Different approaches differ in their modeling expressiveness and accuracy, on the one hand, and their modeling overhead and costs, on the other hand. Considering a representative set of established approaches, we analyze the semantic gaps between them as well as the trade-offs in using them; we further provide guidelines for selecting the right approach suitable for a given scenario.		Kounev, S.; Brosig, F.; Meier, P.; Becker, S.; Koziolek, A.; Koziolek, H.; Rygielski, P.	Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)					ConflictExcluded	Excluded	new_screen			2		2016				
354		ModelGuidance	The semantics of hybrid process models	In the area of business process modelling, declarative notations have been proposed as alternatives to notations that follow the dominant, imperative paradigm. Yet, the choice between an imperative or declarative style of modelling is not always easy to make. Instead, a mixture of these styles is sometimes preferable. This observation has underpinned recent calls for so-called hybrid process modelling notations. In this paper, we present a formal semantics for these. In our proposal, a hybrid process model is hierarchical, where each of its sub-processes may be specified in either an imperative or declarative fashion. The semantics we provide will allow modelling communities to build on the benefits of existing imperative and declarative modelling notations, instead of spending their energy on inventing new ones. © Springer International Publishing AG 2016.		Slaats, T.; Schunselaar, D. M. M.; Maggi, F. M.; Reijers, H. A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2016				
355		ModelGuidance	Modeling the software maintenance process: process-focused models	The author explores some of the approaches that have been developed recently for modeling software maintenance processes. He begins by providing an overview of modeling approaches.{\textless}{\textgreater}		Hansen, G. A.						ConflictExcluded	Excluded	new_screen			2		1988				
356		ModelGuidance	Integrated approach to modelling human systems as reuseable components of manufacturing workplaces	A new approach to modelling human systems as reusable components of manufacturing workplaces is described. Graphical and computer executable models of people competences and behaviours are created which are qualitatively and quantitatively matched to equivalent models of process networks, decomposed into roles and dependencies between roles. To enable model creation and reuse, coherent sets of role, competence and dynamic producer unit (DPU) modelling concepts have been defined and instrumented using enterprise modelling (EM), simulation modelling (SM) and causal loop modelling (CLM) techniques. This paper reports on an application of the modelling approach to create related models of 'process oriented roles' and 'candidate human systems' so as to systemise matching of role requirements to resource systems attributes and to inform aspects of strategic and tactical decision making in an SME making composite bearings.		Ajaefobi, J.; Weston, R.; Wahid, B.; Rahimifard, A.	International Journal of Computer Integrated Manufacturing					ConflictExcluded	Excluded	new_screen			2		2010				
357		ModelGuidance	A FRAMEWORK FOR THE MODELING AND PROTOTYPING OF DISTRIBUTED INFORMATION-SYSTEMS	The major issues in designing Distributed Information Systems ({DIS}) include localization of control and data, inherent concurrency, intensive interactions among computation agents, history sensitivity, dynamic configuration and continuous system change and evolution. We propose a framework, called the G-Net model, for the specification, modeling and prototyping of {DIS}. The G-Net model not only provides a flexible notation to represent the executable specification of {DIS} through G-Net instantiation, but also offers a novel style of decentralized concurrent computation, allowing flexible inter-agent communication and interaction. A prototype of the G-Net framework has been implemented on workstations connected by a local network.		DENG, Y.; CHANG, S. K.	{INTERNATIONAL} {JOURNAL} {OF} {SOFTWARE} {ENGINEERING} {AND} {KNOWLEDGE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		1991				
358		ModelGuidance	Applying software process modeling and improvement in academic setting	This work concerns the software process of a software engineering course project work. The quality manual contains a general process model, written in a formal software process modeling language that describes activities, tools, products, responsibilities, and measures. The quality manual serves as a basis for obtaining project specific plans, and for communicating the process to students, colleagues, and customers. The formal process model is the basis for analyzing and improving the process over the years, thus improving the quality of the provided education. The analysis of a given project run has revealed some problems and errors in the original model. This list of problems has been used as an action list to design a new process model. The new model will be exploited for the next years project runs.		Jaccheri, M. L.; Lago, P.						ConflictExcluded	Excluded	new_screen			2		1997				
359		ModelGuidance	Using UML for service creation	Service-based development has attracted an increasing number of practitioners over recent years. The use of standard component technologies and more recently web services enable the construction of software systems by combining the individual services provided by a number of independent functional entities, called components, Several approaches to service-based development have been proposed recently, most of them based on the standard modelling notation Unified Modeling Language (UML). These approaches are usually complex because they are general purpose. In this sense, this paper presents a methodology for the design of service-based applications based on UML that is both simple and systematic, and yet comprehensive. The paper also presents some guidelines for design refinement assessment.		Farias, C. R. G. de						ConflictExcluded	Excluded	new_screen			2		2003				
360		ModelGuidance	PUTRACOM: A Concurrent Component Model With Exogenous Connectors	In component-based development, composing components and controlling the interactions among them is not a trivial task. Mostly, the composition and interaction styles in the current state-of-the-art component-based models are port-to-port connection or method-call based. However, both styles confer complex patterns, since the number of interactions may increase dramatically due to the number of method calls, ports, and connectors. To avoid such complexity, a simple and coherent component model with adequate policies for control is required. In this paper, we provide a formal specification for components, composition, and interactions issuing in discrete-events and non-blocking component-based systems. Our concurrent component model called PUTRACOM is equipped with exogenous connectors as third-party objects for coordination and observable/observable unit as a part of components for invocation. These are used to achieve a truly separation between computation and control in order to reduce the complexity that arises in the port-to-port connection and method-call-based interaction styles. To formally specify our model, we have adopted communication sequential processes and reactive transition systems. The applicability of our model is evaluated using CoCoME case study. We demonstrate how PUTRACOM provides a mechanism to construct independent components and control the interactions between them by well-founded connectors.		Nejati, F.; Ghani, A. A. A.; Yap, N. Keng; Jafaar, A. B.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2018				
361		ModelGuidance	ALMOsT.js: An agile model to model and model to text transformation framework	Model Driven Development (MDD) requires model-to-model and/or model-to-text transformations to produce application code from high level descriptions. Creating such transformations is in itself a complex task, which requires mastering meta-modeling, ad hoc transformation languages, and custom development tools. This paper presents ALMOsT.js, an agile, in-browser framework for the rapid prototyping of MDD transformations, which lowers the technical skills required for Web and mobile developers to start be proficient with modeling and code generation. ALMOsT.js is shown at work in the creation of IFMLedit.org, a browser-based, online/offline environment for the MDD specification and rapid prototyping of web and mobile applications. © Springer International Publishing AG 2017.		Bernaschina, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2017				
362		ModelGuidance	A model-based approach to streamlining distributed training for asynchronous SGD	The success of Deep Neural Networks (DNNs) has created significant interest in the development of software tools, hardware architectures, and cloud systems to meet the huge computational demand of their training jobs. A common approach to speeding up an individual job is to distribute training data and computation among multiple nodes, periodically exchanging intermediate results. In this paper, we address two important problems for the application of this strategy to large-scale clusters and multiple, heterogeneous jobs. First, we propose and validate a queueing model to estimate the throughput of a training job as a function of the number of nodes assigned to the job; this model targets asynchronous Stochastic Gradient Descent (SGD), a popular strategy for distributed training, and requires only data from quick, two-node profiling in addition to job characteristics (number of requested training epochs, mini-batch size, size of DNN parameters, assigned bandwidth). Throughput estimations are then used to explore several classes of scheduling heuristics to reduce response time in a scenario where heterogeneous jobs are continuously submitted to a large-scale cluster. These scheduling algorithms dynamically select which jobs to run and how many nodes to assign to each job, based on different trade-offs between service time reduction and efficiency (e.g., speedup per additional node). Heuristics are evaluated through extensive simulations of realistic DNN workloads, also investigating the effects of early termination, a common scenario for DNN training jobs. © 2018 IEEE.		Lin, S.-H.; Paolieri, M.; Chou, C.-F.; Golubchik, L.	Proceedings - 26th IEEE International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems, MASCOTS 2018					ConflictExcluded	Excluded	new_screen			2		2018				
363		ModelGuidance	Contracting of E-business services in a constraint-based process modeling framework	Analyzing and contracting of E-Business service processes is a crucial step between discovery and execution of Semantic Web Services. This paper proposes a service modelling framework consists of constraint-based service contract, agent style communication messages and service process specification. Service contract is used as shared knowledge between participants and instrument for advertising and requesting of services. The Constraint Process Specification proposed is capable of describing complex data and control-flow restrictions as well as data content restrictions. A state transition based operational semantic for this framework is given. A virtual machine is built for analyzing and contracting of services. We illustrate the expressiveness of this framework within an online shopping scenario. © 2011 IEEE.		Chen, R.; Liao, L.; Fang, Z.	Proceedings - 7th International Conference on Semantics, Knowledge, and Grids, SKG 2011					ConflictExcluded	Excluded	new_screen			2		2011				
364		ModelGuidance	Characterizing and modeling the cost of rework in a library of reusable software components	In this paper we characterize and model the cost of rework in a Component Factory (CF) organization. A CF is responsible for developing and packaging reusable software components. Data was collected on corrective maintenance activities for the Generalized Support Software reuse asset library located at the Flight Dynamics Division of NASA's GSFC. We then constructed a predictive model of the cost of rework using the C4.5 system for generating a logical classification model. The predictor variables for the model are measures of internal software product attributes. The model demonstrates good prediction accuracy, and can be used by managers to allocate resources for corrective maintenance activities. Furthermore, we used the model to generate proscriptive coding guidelines to improve programming practices so that the cost of rework can be reduced in the future. The general approach we have used is applicable to other environments.		Basili, Victor R.; Condon, Steven E.; El Emam, Khaled; Hendrick, Robert B.; Melo, Walcelio	Proceedings - International Conference on Software Engineering					ConflictExcluded	Excluded	new_screen			2		1997				
365		ModelGuidance	Modeling Cognitive Radio Networks in NetLogo	"Cognitive radio exhibits features typical to complex adaptive systems. As such, it requires multidisciplinary research, which can be difficult without a ""common language"". An accessible experimentation platform, a ""playground"", could serve as that language. Unfortunately, commonly used wireless network simulators are too esoteric for non-specialists and offer very little in support of cognitive radio studies. Agent-based modeling provides a viable alternative that we successfully tested in the past by building a framework in RePast. This work presents a simpler, ""entry-level"", version developed in NetLogo, an accessible and popular platform that allows users to quickly learn the agent-based approach. Our NetLogo model is simple, but flexible enough to conduct a wide range of experiments. Its usefulness was confirmed in classroom and research group settings, where we were able to explain basics of agent-based modeling, demonstrate basics of complexity, and run interactive cognitive radio experiments without extensive training.

"		Dzikowski, Jacek; Hood, Cynthia						ConflictExcluded	Excluded	new_screen			2		2015				
366		ModelGuidance	Rationale models for conceptual modeling	In developing information systems conceptual models are used for varied purposes. Since the modeling process is characterized by interpretation and abstracting the situation at hand it is essential to enclose information about the design process the modelers went through. This aspect is often discarded. But the lack of this information hinders the reuse of past knowledge for later, similar problems encountered and supports the repeat of failures. The design rationale approaches, discussed in the software engineering community since the 1990s, seem to be an effective means to solve these problems. But the semiformal style of the rationale models challenges the retrieval of the relevant information. The paper explores an approach for classifying issues by its responding alternatives as an access to the complex rationale documentation.		Lehrmann, S.; Esswein, W.	Studies in Classification, Data Analysis, and Knowledge Organization					ConflictExcluded	Excluded	new_screen			2		2008				
367		ModelGuidance	Techniques for process model evolution in EPOS	The authors categorize some aspects of software process evolution and customization, and describe how they are handled in the EPOS PM system. Comparisons are made to other PM systems. A process model in EPOS consists of a schema of classes and meta-classes, and its model entities and relationships. There is an underlying software engineering database, EPOSDB, offering uniform versioning of all model parts and a context of nested cooperating transactions. Then, there is a reflective object-oriented process specification language, on top of the EPOSDB. Policies for model creation, composition, change, instantiation, refinement, and enaction are explicitly represented and are used by a set of PM automatic tools. The main tools are a planner to instantiate tasks, an execution manager to enact such tasks, and a PM manager to define, analyze, customize, and evolve the process schema.{\textless}{\textgreater}		Jaccheri, M. L.; Conradi, R.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		1993				
368		ModelGuidance	Model Driven Configuration of Fault Tolerance Solutions for Component-Based Software System	"Fault tolerance is very important for complex component-based software systems, but its configuration is complicated and challenging. In this paper, we propose a model driven approach to semi-automatic configuration of fault tolerance solutions. At design time, a set of reusable fault tolerance solutions are modeled as architecture styles, with the key properties verified by model checking. At runtime, the runtime software architecture of the target system is automatically constructed by the code generated from the given architectural meta-model. Then, the impact of each component on the system reliability is automatically analyzed to recommend which components should be considered in the fault tolerance configuration. Finally, after which components are guaranteed by what fault tolerance solution is decided by the system administration, the architecture model is automatically changed by merging with the selected fault tolerance styles and finally, these changes are automatically propagated to the target system. This approach is evaluated on Java enterprise systems.
"		Wu, Yihan; Huang, Gang; Song, Hui; Zhang, Ying						ConflictExcluded	Excluded	new_screen			2		2012				
369		ModelGuidance	A process model for multimedia development with authoring systems [Ein vorgehensmodell für die multimedia-entwicklung mit autorensystemen]	Multimedia applications are interactive software systems and should therefore be developed using software engineering techniques. They are nowadays built using authoring systems that support ad hoc implementation without a preceding modeling phase. Because of that and due to the lack of established process models for multimedia software development, the development process is reduced mainly to the implementation phase. This leads to problems well-known in software engineering like missing conceptualization and missing documentation. In this paper, we present a process model for the development of multimedia applications which is centered upon an analysis and a design phase with regard to an implementation with an authoring system. Starting from a framework-based analysis model of the application and a model of the programming capabilities of a concrete authoring system, an instance-level implementation model can be systematically derived. The proposed process model is exemplarily explained using the Director authoring system for the domain of computer-based training applications. © Springer-Verlag 1999.		Depke, R.; Engels, G.; Mehner, K.; Sauer, S.; Wagner, A.	Informatik - Forschung und Entwicklung					ConflictExcluded	Excluded	new_screen			2		1999				
370		ModelGuidance	Modeling COTS-based development and related selection methods processes with MAP	COTS-based development (CBD) process consists in five main steps including identifying COTS products candidates, selecting the most appropriate one and assembling it with the other components. In practice, this process is not yet obvious to follow. Many methods are proposed to support one or several steps of the process. But, which method to use and how to apply it still remains problematic. The MAP is a process meta-model proposed to support methods specification and their enactment. We have already used the MAP to express the CBD process, and the MAP was also used to express PORE, a COTS selection method. In this paper, we propose to generalize the use of the MAP to express both the CBD process and COTS related methods, especially selection ones. As a result, the developer is guided in the process of choosing the appropriate method and its application.		Sassi, S. B.; Jilani, L. L.; Ghezala, H. H. B.						ConflictExcluded	Excluded	new_screen			2		2004				
371		ModelGuidance	Automated modeling of the guidance of a K-9	This paper attempts to automate and replace human guidance in the control of a K-9 unit by modeling that guidance from observation. The ultimate research goal seeks to contribute toward the autonomous command of a trained K-9 unit by analyzing the movement and the behavior of the dog as it responds to command tones. Specifically, GPS and command signal information (from a human trainer) is recorded as a canine follows (or fails to follow) instructions as it moves toward a destination. The data is then processed into training instances and used as training data for a general regression neural network (GRNN). Then, the network is used to classify previously unseen test instances to determine if the behavior at that moment is normal or anomalous (in need of correcting tones). Both representation of training instances and the system parameters of the GRNN are optimized using a simple evolutionary hill-climber (EHC). Given even fairly limited initial data for training, the system performs well, producing relatively few false positives and false negatives in classification.		Britt, W.; Bevly, D. M.; Dozier, G.						ConflictExcluded	Excluded	new_screen			2		2008				
372		ModelGuidance	A Tool-Supported Model-Based Method for Facilitating the EN50129-Compliant Safety Approval Process	Compliance with the CENELEC series is mandatory during the planning of as well as development of railway systems. For compliance purposes, the creation of safety plans, which define safety-related activities and all other process elements relevant at the planning phase, is also needed. These plans are expected to be executed during the development phase. Specifically, ENÂ 50129 defines the safety plan acceptance and approval process, where interactions between the applicant and the certification body are recommended: after the planning phase, to ensure the compliance between plans and standards, and after the development phase, to ensure the effective and not-deviating-unless-justified execution of plans. In this paper, we provide a tool-supported method for facilitating the safety approval processes/certification liaison processes. More specifically, the facilitation consists in guidance for modelling planned processes and the requirements listed in the standards in order to enable the automatic generation of baselines, post-planning processes and evidence models, needed during the execution phase and change impact tracking for manual monitoring of the compatibility between plans and their execution. The applicability of the proposed method is illustrated in the context of ENÂ 50126-1 and ENÂ 50129 standards. © 2019, Springer Nature Switzerland AG.		Ul Muram, F.; Gallina, B.; Kanwal, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2019				
373		ModelGuidance	Process model comprehension: The effects of cognitive abilities, learning style, and strategy	Process models are used to convey semantics about business operations that are to be supported by an information system. A wide variety of professionals is targeted to use such models, including people who have little modeling or domain expertise. We identify important user characteristics that influence the comprehension of process models. Through a free simulation experiment, we provide evidence that selected cognitive abilities, learning style, and learning strategy influence the development of process model comprehension. These insights draw attention to the importance of research that views process model comprehension as an emergent learning process rather than as an attribute of the models as objects. Based on our findings, we identify a set oforganizational intervention strategies that can lead to more successful process modeling workshops. © 2014 by the Association for Information Systems.		Recker, J.; Reijers, H. A.; van de Wouw, S. G.	Communications of the Association for Information Systems					ConflictExcluded	Excluded	new_screen			2		2014				
374		ModelGuidance	Structuredness and its significance for correctness of process models	Recent research has shown that business process models from practice suffer from several quality problems. In particular, the correctness of control flow has been analyzed for industry-scale collections of process models revealing that error ratios are surprisingly high. In the past the structuredness property has been discussed as a guideline to avoid errors, first in research on programming, and later also in business process modeling. In this paper we investigate the importance of structuredness for process model correctness from an empirical perspective. We introduce definitions of two metrics that quantify the (un)structuredness of a process model, the degree of structuredness and the unmatched connector count. Then, we use the event-driven process chain models of the SAP reference model for validating the capability of these metrics to predict error probability. Our findings clearly support the importance of structuredness as a design principle for achieving correctness in process models. © 2009 Springer-Verlag.		Laue, R.; Mendling, J.	Information Systems and e-Business Management					ConflictExcluded	Excluded	new_screen			2		2010				
375		ModelGuidance	A MDE based approach for bridging formal models	Different formal methods have presented plenty of formal models for system specification and proof Hence the problem of bridging these formal models rises. MDE is a new paradigm in software engineering, which implements software by (meta-) modeling and model transforming. In this paper, we provide a MDE based approach for bridging heterogeneous formal models: Firstly, the heterogeneous formal models are introduced into MDE as domain specific languages by metamodeling. Then, transformation rules are built for semantics mapping. At last, model-text syntax rules are developed, so as to map models to programs. Our approach could be applied on formal models in both graphical style and grammatical style. A case study of bridging MARTE to LOTOS is also illustrated showing the validity and practicability of our approach. © 2008 IEEE.		Zhang, T.; Jouault, F.; Bézivin, J.; Zhao, J.	Proceedings - 2nd IFIP/IEEE International Symposium on Theoretical Aspects of Software Engineering, TASE 2008					ConflictExcluded	Excluded	new_screen			2		2008				
376		ModelGuidance	Integration of MDA framework into the model of traditional software development	OMG initiative, The Model Driven Architecture (MDA), shifts the focus of software development from writing code to building models. MDA is a model-oriented software development paradigm, which can be applied to any software development methodology. MDA gives no guidelines in terms of the processes such as activities and phases, roles and responsibilities which are involved in the software development process. When an organization considers applying MDA-based software development process, it will face the lack of methodological guidelines. The aim of this paper is to integrate MDA framework into the model of traditional software development. © 2009 The authors and IOS Press. All rights reserved.		Nikiforova, O.; Nikulsins, V.; Sukovskis, U.	Frontiers in Artificial Intelligence and Applications					ConflictExcluded	Excluded	new_screen			2		2009				
377		ModelGuidance	The use of automata in modelling and building a real-time component based system	Stochastically enhanced timed automata are used to model components of real-time systems. These automata components can be combined and replaced as required, but only with other automata. A new technique is presented which allows an automaton to be mapped on to a JavaBean, which can then be combined with other JavaBeans and components using known techniques. A system known as STINGRAE (Swimming Training INteractive Goggles for Real-time Aquatic Environments) is used as an example of this technique.		Jones, T.; Blair, L.						ConflictExcluded	Excluded	new_screen			2		2001				
378		ModelGuidance	Developing peer-to-peer applications with MDA and JXTA	Recently, Peer-to-Peer (P2P) architecture is being used to explore better the computing power and bandwidth of networks than a client/server architecture. In order to support the creation of P2P applications, some frameworks were proposed such as JXTA. However, large systems using P2P architecture are complex to be developed, maintained and evolved. Model Driven Architecture (MDA) can support the management of the complexity in the software development process through transformations of Platform Independent Models (PIM) into Platform Specific Models (PSM). In this paper, we apply an MDA approach to allow the development of applications based on JXTA. The JXTA implementation in Java is used to demonstrate our approach. We propose a model transformation definition from an UML model to a Java+JXTA model. In order to validate our approach, we present two case studies. © 2007 Springer.		De Sousa, J. G.; Lopes, D.	Advances and Innovations in Systems, Computing Sciences and Software Engineering					ConflictExcluded	Excluded	new_screen			2		2007				
379		ModelGuidance	Models of interactive systems: A case study on programmable user modelling	The application of the operational and abstract models of interactive system and the associated verification method are discussed. The trade-off in terms of tractability, inspectability of assumptions, level of abstraction and reusability of model fragments is also studied. These modelling styles are derived to understand their usage as part of an integrated formal approach to the analysis of interactive systems. It is found that the abstract proof approach delivers stronger verification results than the operational model approach.		Blandford, A.; Butterworth, R.; Curzon, P.	International Journal of Human Computer Studies					ConflictExcluded	Excluded	new_screen			2		2004				
380		ModelGuidance	Modeling Industrial Embedded Systems with UML	"The main purpose of this paper is to present how the Unified Modeling Language (UML) can be used for modeling industrial embedded systems. By using a car radios production line as a running example, the paper demonstrates the modeling process that can be followed during the analysis phase of complex control applications. In order to guarantee the continuity mapping of the models, the authors propose some guidelines to transform the use case diagrams into a single object diagram, which is one of the main diagrams for the next development phases.
"		Fernandes, João M.; Machado, Ricardo J.; Santos, Henrique D.						ConflictIncluded	Included	new_screen			2		2000				
381		ModelGuidance	Architectural framework modeling in telecommunication domain	Architectural frameworks have been shown to increase the design reusability in large-scale object-oriented systems. Drawing on experience in complex software systems development in the telecommunication domain, we present concepts and techniques for domain partitioning and an architectural framework modeling and layering. In particular, we discuss how a component-based approach, architectural modeling styles, and the systematic usage of architectural and design patterns provide a common framework for product-line development. Two application frameworks based on this model are presented as case studies.		Fregonese, G.; Zorer, A.; Cortese, G.						ConflictExcluded	Excluded	new_screen			2		1999				
382		ModelGuidance	Crafting Game-Models Using Reactive System Design	"This paper presents a game-model of a gym training system, where the behavior of the system is specied using languages developed originally for reactive system design, which drive a game engine. The approach makes it possible to describe behaviors of dierent parts of the system using dierent re- active system design languages and tools. It thus provides a framework for integrating the model behavior to obtain an executable game-model of the entire system. Among the ad- vantages of this approach is the ability to use existing anal- ysis tools to understand the game behavior at design time and run time, the ability to easily modify the behavior, and the use of visual languages to allow various stakeholders to be involved in early stages of building the game. Finally, we suggest integrating future games and game design methods into the emerging eld of biological modeling, to which re- active system design has recently been successfully applied.
"		Harel, David; Segall, Itai; Kugler, Hillel; Setty, Yaki						ConflictExcluded	Excluded	new_screen			2		2008				
383		ModelGuidance	Continuous KAOS, ASM, and formal control system design across the continuous/discrete modeling interface: a simple train stopping application	A very simple model for train stopping is used as a vehicle for investigating how the development of a control system, initially designed in the continuous domain and subsequently discretized, can be captured within a formal development process compatible with standard model based refinement methodologies. Starting with a formalized requirements analysis using {KAOS}, an abstract model of the continuous system is created in the {ASM} formalism. This requires extensions of the {KAOS} and {ASM} formalisms, capable of dealing with quantities evolving continuously over real time, which are developed. After considering how the continuous system, described as a continuous control system in the state space framework, can be discretized, a discrete control system is created in the state space framework. This is re-expressed in the {ASM} formalism. The rigorous results on the relationship between continuous and discrete control system models that are needed to establish provable properties of the discretization, then become the ingredients of a retrenchment between continuous and discrete {ASM} models, and are thus fully integrated into the formal development. The discrete {ASM} model can then be further refined towards implementation.		Banach, Richard; Zhu, Huibiao; Su, Wen; Huang, Runlei	{FORMAL} {ASPECTS} {OF} {COMPUTING}					ConflictExcluded	Excluded	new_screen			2		2014				
384		ModelGuidance	A Behaviorally-Based Methodology for Modeling System Specifications	"The Behaviorally-Based Methodology (BBM), a methodology for modeling behaviorally-complex system requirements specifications, is introduced in this paper. The BBM provides guidelines for a Behaviorally-Based decomposition beginning at the first stage of system development, while placing the emphasis on system behavior and providing notations to represent this behavior. In Behaviorally-Based system modeling, all active services and system behavior at each instant are presented in one place (the relevant system state). Hence, problem domain information is more easily carried through the analysis phase allowing for a clear separation between system analysis and system design. In addition, inconsistencies in describing system behavior can be avoided more easily; where such problems occur they are detected and resolved with greater facility.The BBM is compared to more functional approaches, such as Hatley and Pirbhai's approach [1], highlighting the BBM's advantages. An experiment conducted in a graduate software engineering class is described. The experiment has shown that system modeling performance was significantly improved, in both accuracy and speed, when following the BBM. These design benefits of the BBM are then discussed and illustrated.
"		Mathalone, Sigal	SIGSOFT Softw. Eng. Notes					ConflictExcluded	Excluded	new_screen			2		1997				
385		ModelGuidance	Adapting Software Development Process towards the Model Driven Architecture	Model driven architecture (MDA) is increasingly gaining the attention of both research communities and industry. MDA is a model-oriented software development paradigm, which can be applied to any software development methodology. MDA gives no guidelines in terms of the processes such as activities and phases, roles and responsibilities that are involved in the software development process. When an organization considers applying MDA-based software development process, it will face the lack of methodological guidelines. The aim of this paper is to customize typical heavyweight software development methodology (based on most widely used methodologies - rational unified process and Microsoft solutions framework) according to the MDA software development framework.		Nikulsins, V.; Nikiforova, O.						ConflictExcluded	Excluded	new_screen			2		2008				
386		ModelGuidance	Modeling changeset topics for feature location	Feature location is a program comprehension activity in which a developer inspects source code to locate the classes or methods that implement a feature of interest. Many feature location techniques (FLTs) are based on text retrieval models, and in such FLTs it is typical for the models to be trained on source code snapshots. However, source code evolution leads to model obsolescence and thus to the need to retrain the model from the latest snapshot. In this paper, we introduce a topic-modeling-based FLT in which the model is built incrementally from source code history. By training an online learning algorithm using changesets, the FLT maintains an up-to-date model without incurring the non-trivial computational cost associated with retraining traditional FLTs. Overall, we studied over 600 defects and features from 4 open-source Java projects. We also present a historical simulation that demonstrates how the FLT performs as a project evolves. Our results indicate that the accuracy of a changeset-based FLT is similar to that of a snapshot-based FLT, but without the retraining costs. © 2015 IEEE.		Corley, C. S.; Kashuda, K. L.; Kraft, N. A.	2015 IEEE 31st International Conference on Software Maintenance and Evolution, ICSME 2015 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2015				
387		ModelGuidance	Modeling Software Contention Using Colored Petri Nets	Commercial servers, such as database or application servers, often attempt to improve performance via multi-threading. Improper multi-threading architectures can incur contention, limiting performance improvements. Contention occurs primarily at two levels: (1) blocking on locks shared between threads at the software level and (2) contending for physical resources (such as the cpu or disk) at the hardware level. Given a set of hardware resources and an application design, there is an optimal number of threads that maximizes performance. This paper describes a novel technique we developed to select the optimal number of threads of a target-tracking application using a simulation-based colored Petri nets (CPNs) model. This paper makes two contributions to the performance analysis of multi-threaded applications. First, the paper presents an approach for calibrating a simulation model using training set data to reflect actual performance parameters accurately. Second, the model predictions are validated empirically against the actual application performance and the predicted data is used to compute the optimal configuration of threads in an application to achieve the desired performance. Our results show that predicting performance of application thread characteristics is possible and can be used to optimize performance.		Roy, N.; Dabholkar, A.; Hamm, N.; Dowdy, L.; D. Schmidt						ConflictExcluded	Excluded	new_screen			2		2008				
388		ModelGuidance	Integrating organizational requirements and object oriented modeling	In recent years we have observed a growing influence of the object-oriented paradigm. Unfortunately, the current dominant object oriented modeling technique, i.e. the Unified Modeling Language, UML, is ill equipped for modeling early requirements which are typically informal and often focus on stakeholder objectives. Instead, UML is suitable for later phases of requirement capture which usually focus on completeness, consistency, and automated verification of functional requirements for the new system. We present a set of guidelines for the integration of early and late requirements specifications. For early (organizational) modeling we rely on the i* framework, whereas for late (functional) requirements specification, we rely on a precise subset of UML. A small example is used to illustrate how the requirements process iterates between early and late requirements.		Castro, J. F.; Alencar, F. M. R.; Filhol, G. A. C.; Mylopoulos, J.						ConflictIncluded	Excluded	new_screen			2		2001				
389		ModelGuidance	A formal approach for the modelling and verification of multiagent plans based on model checking and Petri nets	Multiagent systems are characterized by decentralized control and agents that perform autonomous actions. The sequence of such actions are generally described by plans. An important issue in this context is how to verify the correctness of plans when agents have unpredicted actions. In this paper, formal modelling and verification guidelines to verify nondeterministic multiagent system plans are introduced. The guidelines are based on {HCPN} modelling, simulation, and model checking. The guidelines are conceptually introduced, and then applied for a multiagent intelligent tutoring system modelling and verification.		de Almeida, H. O.; da Silva, L. D.; Perkusich, A.; Casto, E. D.						ConflictExcluded	Excluded	new_screen			2		2004				
390		ModelGuidance	Modeling resources in a service-oriented world	Over the last years, the need to interconnect businesses has significantly affected the Web. The Web has moved constantly from a static source of documents to a dynamic platform for distributed applications. The communication infrastructure of the Web links together applications, e.g. by exposing functionality through Web services in different architectural styles. The current strife between SOA and REST leads one to the issue which approach to choose. Supported by a formal model, we show an integrative way to incorporate service orientation and resource orientation in federated systems as a foundation for future agreements rather than a separation of the approaches. © 2009 IEEE.		Heil, A.; Gaedke, M.; Meinecke, J.	Proceedings of the 42nd Annual Hawaii International Conference on System Sciences, HICSS					ConflictExcluded	Excluded	new_screen			2		2009				
391		ModelGuidance	Semiformal process model for technology transfer	The author describes a semiformal process model for technology transfer at Ferranti Computer Systems. Experience has shown that satisfactory transition takes place only when staff members move from one group to the next either with the technology or with the problem.{\textless}{\textgreater}		Glynn, G.						ConflictExcluded	Excluded	new_screen			2		1990				
392		ModelGuidance	A process model for managing requirement change	Managing continuously changing requirements is adifficult and time consuming task in large projects. Change management if not done properly often leads toproject failure. Requirement Change Management (RCM) process models are surveyed and evaluated on the criteria of roles, activities, artifacts and representation which are fundamental and necessary for a good process model. This evaluation is extended to update the work already done in literature. The deficiencies present in current RCM literature are highlighted. The ontology for process model has already been proposed elsewhere. Using that ontology we propose an RCM process model in this paper. This RCM process model improves upon the deficiencies identified, and it also introduces some new concepts. The process is modeled using UML activity diagram. The purpose of the process model is to provide a more complete and detailed guideline than already present. It will help the practitioners to effectively manage requirement change in large projects.		Imtiaz, S.; Ikram, N.; Imtiaz, S.	Proceedings of the 4th IASTED International Conference on Advances in Computer Science and Technology, ACST 2008					ConflictExcluded	Excluded	new_screen			2		2008				
393		ModelGuidance	Towards a Model-Driven Approach to Build Component-Based Adaptable Middleware	"Adaptability is one of the goals that applications and middleware frameworks are trying to achieve. On one hand, the component paradigm is a way of reaching this goal by enforcing the reusability of functionalities involved in a component-based middleware framework. In particular, reflection could be combined with components to improve the adaptability of the structure of their assemblies. On the other hand, the model driven paradigm provides an efficient way to describe an application with enough abstraction to enable its mapping on various execution platforms. The contribution of this paper is a combination of both model and component paradigms to reach more adaptability in middleware, especially in a component-based framework to build transaction services. The framework presented uses models to describe middleware standards and compiles them to components. These components are coupled with a compliant component-based middleware framework. This approach provides adaptability at various levels with some added values.
"		Rouvoy, Romain; Merle, Philippe						ConflictExcluded	Excluded	new_screen			2		2004				
394		ModelGuidance	From code to coloured Petri nets: Modelling guidelines	This paper presents a method for designing a coloured Petri net model of a system starting from its high-level object oriented source code. The entire process is divided into two parts: grounding and code analysis. For each part detailed step-by-step guidelines are given. The approach is illustrated with an industrial application case study, the NEO protocol. © 2013 Springer-Verlag.		Dedova, A.; Petrucci, L.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2013				
395		ModelGuidance	State Machine Antipatterns for UML-RT	"Software development guidelines are a set of rules which can help improve the quality of software. These rules are defined on the basis of experience gained by the software development community over time. Software antipatterns are a powerful and effective form of guidelines used for the identification of bad design choices and development practices that often lead to poor-quality software. This paper introduces a set of seven state machine antipatterns for the model-based development of real time embedded software systems. Each of these antipatterns is described with a pair of examples: one for the antipattern itself and a second one for improved, refactored solution.
"		Das, Tuhin Kanti; Dingel, Juergen						ConflictExcluded	Excluded	new_screen			2		2015				
396		ModelGuidance	A new constructive model for reengineering software systems	In order to be successful in reengineering software projects, proper analysis of the code must be done before transformations can happen. One way to effectively begin analysis of software is to model the system in a way that can be easily understood by developers from all backgrounds yet captures the salient features of the code in a precise and complete fashion. The model thus needs to be designed in a manner that takes into account concepts from all programming languages yet model them in a language independent style. The representation being introduced in this paper has been specifically designed for use in software engineering projects. The presented representation provides a way to model software code of many languages by carefully examining concepts from common programming languages and organizing them in a hierarchical structure.		Sampson, P.; Ali, H.; Roth, V.	Proceedings of the IASTED International Conference on Software Engineering, SE 2010					ConflictExcluded	Excluded	new_screen			2		2010				
397		ModelGuidance	Quality and comprehension of UML interaction diagrams-an experimental comparison	{UML} (Unified Modeling Language) is a collection of somewhat overlapping modeling techniques, thus creating a difficulty in establishing practical guidelines for selecting the most suitable techniques for modeling 00 artifacts. This is true mainly with respect to two types of interaction diagrams: Sequence and collaboration. Attempts have been made to evaluate the comprehensibility of these diagram types for various types of applications, but they did not address the issue of quality of diagrams created by analysts. This article reports the findings from a controlled experiment where both the comprehensibility and quality of the interaction diagrams were investigated in two application domains: management information systems ({MIS}) and real-time ({RT}) systems. Our results indicate that collaboration diagrams are easier to comprehend than sequence diagrams in {RT} systems, but there is no difference in comprehension of the two diagram types in {MIS}. Irrespective of the diagram type, it is easier to comprehend interaction diagrams of {MIS} than of {RT} systems. With respect to diagram quality, in the case of {MIS}, analysts create collaboration diagrams of better quality than sequence diagrams, but there is no significant difference in quality of diagrams created in {RT} systems. Irrespective of the diagram type, more correct diagrams are created in {MIS} applications than in {RT} applications. (C) 2005 Elsevier B.V. All rights reserved.		Glezer, C.; Last, M.; Nachmany, E.; Shoval, P.	{INFORMATION} {AND} {SOFTWARE} {TECHNOLOGY}					ConflictExcluded	Excluded	new_screen			2		2005				
398		ModelGuidance	Verification of good design style of UML models	Software architecture, and its behavior can be expressed as UML models. Models of complex systems can be also complex and hard to read-they may consists of hundreds of artifacts. Analysis of such complicated models is very difficult. Applying design guidelines make this process easier. Design guidelines consist of some rules, and constraints that should be applied during models construction. They increase readability of models, and in consequence assure higher quality of the final product. The paper presents Model Verificator - the tool for checking UML models against a given design standard. The tool works as a plug-in to Rational Rose. The guidelines take the form of XML file compliant with some DTD. Verification is done fully automatically. The tool also enables correction of checked models.		Hnatkowska, B.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2007				
399		ModelGuidance	Designing information systems in social context: A goal and scenario modelling approach	In order to design a better information system, a designer would like to have notations to visualize how design experts' know-how can be applied according to one's specific social and technology situation. We propose the combined use of a goal-oriented requirements language (GRL) and a scenario-oriented notation Use Case Maps (UCM) for representing design knowledge of information systems. Goal-oriented modelling is used throughout the requirements and design process. In GRL, goals are used to depict business objectives and system requirements, both functional and non-functional. Tasks are used to represent different ways for achieving goals. Means-ends reasoning is used to explore alternative solutions and their operationalizations into implementable system constructs. Social context is modelled in terms of dependency relationships among agents and roles. Scenarios expressed in UCM are used to describe elaborated business processes or workflow. The complementary use of goal-oriented modelling with GRL and scenario modelling with UCM is illustrated with an example of designing a web-based training system. © 2003 Elsevier Ltd. All rights reserved.		Liu, L.; Yu, E.	Information Systems					ConflictExcluded	Excluded	new_screen			2		2004				
400		ModelGuidance	Multi-level modeling with MELANEE A contribution to the MULTI 2018 Challenge	This paper presents a solution to the MULTI 2018 Bicycle Challenge developed using the MELANEE deep modeling tool. The structure of the paper therefore follows the guidelines laid out in the Challenge description. After first outlining the case study and documenting which aspects are supported in the MELANEE solution, the paper presents a detailed description of the developed deep model. This is followed by a discussion of the strengths and weaknesses of the approach and a discussion of its benefits over traditional two-level modeling. The presented model covers all mandatory and optional aspects of the Challenge case study. © 2018 CEUR-WS. All rights reserved.		Lange, A.; Atkinson, C.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2018				
401		ModelGuidance	Scribbler: From collaborative sketching to formal domain specific models and back again	Most of the time developers make extensive use of software tools in a software development process to support them in their day-to-day work. One of the first and most important phases of this process is the design phase, but within this phase intuitive and easy to use tools, which support the creative but also collaborative workflow (parallel/distributed), are missing. At the moment, developers use whiteboards to express their ideas in team meetings. Subsequently a coworker takes a picture of the sketches and remodels them with a modeling tool. That procedure is very inconvenient, error-prone and hindering in a creative modeling cycle. For overcoming this ineffective process this paper shows a new software tool using digital whiteboards to transform free hand sketches in formal models and back again during modeling in a distributed team. The transformation is completely independent from a pre-defined modeling language. The tool provides also a training mode to learn new graphical syntax elements and map these to formal metamodel entities. Video: https://www.youtube.com/watch?v=0i3M9djPrRM [Mirror: http://sse-world.de/index.php?cID=3611].		Vogel, M.; Warnecke, T.; Bartelt, C.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2013				
402		ModelGuidance	Towards a model-driven platform for evidence based public health policy making	The effective management of various health conditions depends on and requires appropriate public health policies (PHP). Such policies are important for several aspects of healthcare provision, including: (a) screening for prevention of disease; (b) early diagnosis and treatment; (c) long-Term management of chronic diseases and disabilities; and (d) setting-up standards. Although it is widely recognised that the PHP life cycle (i.e., the analysis, action plan design, execution, monitoring and evaluation of public health policies) should be evidenced based, current support for it is mainly in the form of guidelines, and is not supported by data analytics and decision making tools tailored to it. In this paper, we present a novel model driven approach to PHP life cycle management and an integrated platform for realising this life cycle. Our approach is based on PHP decision making models. Such models steer the PHP decision making process by defining the data that need to be collected and the ways in which these data should be analysed in order to produce the evidence required for PHP making. Our work is part of a new research programme on public health policy making for the management of hearing loss, called EVOTION, that is funded by the European Union.		Prasinos, M.; Spanoudakis, G.; Koutsouris, D.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					ConflictExcluded	Excluded	new_screen			2		2017				
403		ModelGuidance	Lessons learned in a journey toward correct-by-construction model-based development	This paper discusses lessons learned in the attempt to apply the long-known principles of correct-by-construction (CbyC) first promoted by Dijkstra, to modern model-based development practices. We recall the intent and scrutinize the outcomes of a string of research projects that focused explicitly on the pursuit of CbyC by means of model-driven methods and technologies. The lessons learned show that when CbyC extends from the algorithmic and functional dimension to extra-functional concerns, some of the strength of original CbyC concept and its pull dilute. One of the possible causes of that phenomenon, is that – in some situation – the assertive style of algorithm refinement gives way to more tentative exploration of an unknown solution space where the known truths are insufficient to steer the development. © Springer International Publishing Switzerland 2016.		Baracchi, L.; Mazzini, S.; Puri, S.; Vardanega, T.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2016				
404		ModelGuidance	Ontology-based modelling of extended web service secure conversation pattern	Securing an application based on Service Oriented Architecture provides defences against a number of security threats arising from exposing applications and data to the internet. Various security guidelines are available to apply security in web applications. But these guidelines are sometimes difficult to understand and generate inconsistencies. In this study, an extended web service secure conversation pattern is presented in the presence of a man-in-the-middle attack. An ontology-based modelling and refinement framework is presented for semantically analysing an extended web service secure conversation pattern. A metamodel is introduced to provide rigorous modelling of security services in terms of concepts, properties, and relationships. At the end of this study, an evaluation of the proposed approach has been made by performing experiments for security requirements against security policies in presence of proposed description logic rules. Copyright © 2019 Inderscience Enterprises Ltd.		Dwivedi, A. K.	International Journal of Metadata, Semantics and Ontologies					ConflictExcluded	Excluded	new_screen			2		2019				
405		ModelGuidance	Bridging test and model-driven approaches in web engineering	"In the last years there has been a growing interest in agile methods and their integration into the so called “unified” approaches. In the field of Web Engineering, agile approaches such as test-driven development are appealing because of the very nature of Web applications, while model-driven approaches provide a less error-prone code derivation; however the integration of both approaches is not easy. In this paper, we present a method-independent approach to combine the agile, iterative and incremental style of test-driven development with the more formal, transformation-based model-driven Web engineering approaches. We focus not only in the development process but also in the evolution of the application, and show how tests can be transformed together with model refactoring. As a proof of concept we show an illustrative example using WebRatio, the WebML design tool.
"		Robles Luna, E.; Grigera, J.; Rossi, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2009				
406		ModelGuidance	Adapting Web Services for multiple devices: A model-driven, aspect-oriented approach	Mobile devices have become an essential element in our daily lives, even for connecting to the Internet. Web Services have become extremely important when offering services through the Internet. However, current Web Services are very inflexible as regards their invocation from different types of device, especially if we consider the need for them to be adaptable when being invoked from a mobile device. In this paper, we will propose several alternatives for the creation of flexible web services which can be invoked from different types of device, and compare the different proposed approaches. Aspect-Oriented Programming and Model-Driven Development have been used in all proposals to reduce the impact of service adaption, not only for the service developer, but also to maintain the correct code structure. © 2009 IEEE.		Ortiz, G.; De Prado, A. G.	SERVICES 2009 - 5th 2009 World Congress on Services					ConflictExcluded	Excluded	new_screen			2		2009				
407		ModelGuidance	Applying Patterns to Model-Driven Development of Automation Systems: An Industrial Case Study	"Model-driven approaches enable more efficient system development, but are yet rather uncommon for the automation domain due to limited practical examples and guidelines on how to apply them. We present an industrial case study using code generators attached to a Domain-Specific Language for model-driven automation system development. The case study applies the Pipes&Filters architectural pattern and the Template&Metamodel and Code Attributes code generation patterns. We present the results of the pattern application for the case study and discuss the general usage of the presented patterns for model-driven automation system development.
"		Preschern, Christopher; Kajtazovic, Nermin; Kreiner, Christian						ConflictExcluded	Excluded	new_screen			2		2012				
408		ModelGuidance	INCREMENTAL DEVELOPMENT OF FAULT PREDICTION MODELS	The identification of fault-prone modules has a significant impact on software quality assurance. In addition to prediction accuracy, one of the most important goals is to detect fault prone modules as early as possible in the development lifecycle. Requirements, design, and code metrics have been successfully used for predicting fault-prone modules. In this paper, we investigate the benefits of the incremental development of software fault prediction models. We compare the performance of these models as the volume of data and their life cycle origin (design, code, or their combination) evolve during project development. We analyze 14 data sets from publicly available software engineering data repositories. These data sets offer both design and code metrics. Using a number of modeling techniques and statistical significance tests, we confirm that increasing the volume of training data improves model performance. Further models built from code metrics typically outperform those that are built using design metrics only. However, both types of models prove to be useful as they can be constructed in different phases of the life cycle. Code-based models can be used to increase the effectiveness of assigning verification and validation activities late in the development life cycle. We also conclude that models that utilize a combination of design and code level metrics outperform models which use either one metric set exclusively.		Jiang, Yue; Cukic, Bojan; Menzies, Tim; Lin, Jie	{INTERNATIONAL} {JOURNAL} {OF} {SOFTWARE} {ENGINEERING} {AND} {KNOWLEDGE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		2013				
409		ModelGuidance	Using Model-Driven Development in Time-Constrained Course Projects	Educational software development processes, used in course projects, must exercise practices and artifacts comparable to similar industry-level processes, while achieving acceptable productivity and quality, and, at the same time, complying with constraints on available student time. Here, we discuss our experience with a specific model-driven development process, applied in a time-constrained software engineering course. The course projects are developed in iterations, each delivering a subset of the product functions. These, specified as use cases, undergo a sequence of model transformations, until they become tested code. Transformation steps are verified using standardized quality gates (inspections, tests, and audits), which serve three purposes: teaching verification, validation and quality assurance; helping to assess and grade projects; and providing feedback for process improvement. Size, effort and defect data is recorded in standardized reports. Collected data show that the quality gates proved effective to ensure compliance with the prescribed process, and that using a balanced reusable framework is necessary to achieve satisfactory productivity and quality.		Padua, W.						ConflictExcluded	Excluded	new_screen			2		2007				
410		ModelGuidance	Portable cost modeling for auto-vectorizers	Compiler optimization passes employ cost models to determine if a code transformation will yield performance improvements. When this assessment is inaccurate, compilers apply transformations that are not beneficial, or refrain from applying ones that would have improved the code. We analyze the accuracy of the cost models used in LLVM's and GCC's vectorization passes for two different instruction set architectures. In general, speedup is over-estimated, resulting in mispredictions and a weak to medium correlation between predicted and actual performance gain. We therefore propose a novel cost model that is based on a code's intermediate representation with refined memory access pattern features. Using linear regression techniques, this platform independent model is fitted to an AVX2 and a NEON hardware. Results show that the fitted model significantly improves the correlation between predicted and measured speedup (AVX2: +52% for training data, +13% for validation data), as well as the number of mispredictions (NEON: -15 for training data, -12 for validation data) for more than 80 code patterns. © 2019 IEEE.		Pohl, A.; Cosenza, B.; Juurlink, B.	Proceedings - IEEE Computer Society's Annual International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunications Systems, MASCOTS					ConflictExcluded	Excluded	new_screen			2		2019				
411		ModelGuidance	Architecture-Centric Model-Driven Web Engineering	To be adopted by architects, modelling approaches must provide a means to leverage the software patterns and architectural styles that are relevant to development practice, instead of those proscribed by black-box CASE tools. Architecture-Centric Model-Driven Software Development (AC-MDSD) is a modelling approach that provides architectural control of the generated application. However, AC-MDSD primarily focuses on generating infrastructure code. We apply AC-MDSD to web engineering and contribute a technique to define and generate system behaviour that goes beyond the create/read/update/delete infrastructure functionality. We use UML profiles augmented with OCL to specify the behaviour. We provide an example to illustrate the approach and outcomes.		Escott, E.; Strooper, P.; Suß, J. G.; King, P.						ConflictExcluded	Excluded	new_screen			2		2011				
412		ModelGuidance	Modelling and Analysis of Socio-Technical System of Systems	This paper proposes a novel approach to System of Systems modelling based on the specification of system capabilities. The approach is designed to help end users graphically identify and analyse the hazards and associated risks that can arise in complex socio-technical System of Systems, with particular emphasis on the role of system dependencies. Through a case study this paper shows how the technique can identify the vulnerabilities that may arise within a given System of System configuration; and explore the resilience of a given system when considering evolution and unexpected circumstances.		Lock, R.; Sommerville, I.						ConflictExcluded	Excluded	new_screen			2		2010				
413		ModelGuidance	Modelling and Certifying Safety for Cyber-Physical Systems: An Educational Experiment	Modelling and certifying safety systems are not straightforward activities, and they usually require a specific training and experience. The emergence of ISO26262 as a standard for the automotive sector is foreseen as a basic knowledge in the automotive sector. A special attention is required to these safety critical systems and to its related standards. This paper provides a controlled experiment carried out in classroom for teaching and learning safety principles by using Opencert tool.		Larrucea, X.						ConflictExcluded	Excluded	new_screen			2		2016				
414		ModelGuidance	WWM: a practical methodology for Web application modeling	Web applications are becoming more complex and the way to manage the complexity is to model them. This paper presents a methodology to model Web applications directly from the object-oriented fashion on the top of the event-driven programming concept. Our approach, WebForm-based Web application modeling methodology (WWM), provides guidelines to model Web application architectures from higher point-of-view than the Web element perspective. We employ the Unified Modeling Language (UML) and a subset of use case maps (UCM) for our methodology. The case study is developed to present how a Web application can be modeled, built and integrated with the business objects. A set of components is developed in order to use in the case study. Connection of the presentation to business layer shows that it could be done transparently via the components. The various issues are discussed to further extend our work.		Kaewkasi, C.; Rivepiboon, W.						ConflictIncluded	Included	new_screen			2		2002				
415		ModelGuidance	Model-based generation of enterprise information systems	Thick clients of client/server-information systems include increasingly more logic which leads to several challenges in the development process: Resulting from the separate development of frontand backend, the risk for inconsistencies between components on the one hand, and communication overhead between developers on the other hand are high. We present an approach which helps to overcome these challenges by using model-driven engineering for the development of data-intensive enterprise information systems. WebDEx was developed as a generator for the creation of such systems. It uses UML/P inspired modelling languages, as models (1) build the base for communication among project members and (2) are used as input for the code generator which ensures consistency by construction. This work relies on an infrastructure created by the language workbench and code generation framework MontiCore. Moreover, this paper presents the practical application of this approach for the agile development of a multi user, adaptable web-application to be used by more than 400 chairs of RWTH Aachen University. © Copyright 2018 for the individual papers by the papers' authors.		Adam, K.; Netz, L.; Varga, S.; Michael, J.; Rumpe, B.; Heuser, P.; Letmathe, P.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2018				
416		ModelGuidance	An automatic system modeling framework for information system engineering	System modeling is considered as a key issue in information system engineering (ISE). According to the problems in current ISE, we propose seven guidelines for creating a modeling tool to solve them. Considering the achievements in the field of modeling the software process, we present the Object-Oriented Automatic System Modeling Framework (OOAMF) to meet those guidelines. OOAMF is rule-based, and it can guide users incrementally to create a rule-based object model (RBOM) of a target system. OOAMF remembers the domain knowledge obtained from the previous modeling activities and uses it to guide the following activities. This paper describes OOAMF, presents a formal description of the RBOM and demonstrates how the RBOM view is mapped by an object transformation.		Wang Tao; Lu Zhengding; Cao Huagong; Huang Liqin						ConflictExcluded	Excluded	new_screen			2		1997				
417		ModelGuidance	Using a model framework in developing and delivering a family of software engineering project courses	The University of Southern California (USC) teaches a two-semester real-client project course as a core course in USC's MSCS-SE (Master of Science in Computer Science and Software Engineering) degree program. The course has evolved rapidly, each year introducing many changes in order to satisfy the course stakeholder's win conditions. The course has also been our primary experimental testbed for evolving our MBASE (Model-Based Architecting and Software Engineering) model integration framework. In turn, this framework, along with the CRESST (Center for Research on Evaluation, Standards and Student Testing) cognitive demands analysis has served as an effective means of managing the course's rapid evolution. A further test of the framework has been its application to undergraduate software engineering project courses at other institutions. This paper provides a description and examples of USC's experience in constructing and evolving a family of software engineering project courses based on the MBASE software engineering model integration framework. A discussion of course needs, use of software engineering models, a description of MBASE, use of the CRESST model of learning objectives, course development and experiences are presented. The approach has been used successfully at Columbia University and to a lesser degree at other institutions. Much of the current and historical materials and resources described in this paper are freely available for educational use.		Port, D.; Boehm, B.						ConflictExcluded	Excluded	new_screen			2		2001				
418		ModelGuidance	Body-structure-based cartoon character modeling from multi-view hand-drawings	Hand-drawn cartoon has the characteristics of flexibility, natural expression and so on. We present a multi-viewpoint hand-drawn character modeling method based on the human body structure, which is used to express the cartoon character model of hand-drawn style. Firstly, the two-dimensional skeleton is extracted, the skeleton depth is acquired and the three-dimensional skeleton is generated by the human body structure model. Then, combined with the expansion algorithm and the surface optimization and subdivision algorithm, the local networks matched with the multi-view hand-drawn contour lines are created and combined into the whole network model. Finally, the skeleton subspace deformation is established by using the thermal diffusion algorithm. Thereby a three-dimensional character model is generated. The experimental results show that this method can effectively generate cartoon character model with hand-drawn style. © 2016 IEEE.		Liu, Y.; Wang, W.	Proceedings of 2016 5th International Conference on Computer Science and Network Technology, ICCSNT 2016					ConflictExcluded	Excluded	new_screen			2		2017				
419		ModelGuidance	Requirements capture and specification for enterprise applications: a UML based attempt	We propose a software development method for enterprise applications that combines the use of the structural concepts provided by problem frames, and the use of the UML notation. Problem frames are patterns that provide a precise conceptual model of what is the problem to be solved. The first step of our method is to match the current task with one of the problem frames that we propose for enterprise applications, and this helps to understand the nature of the problem under study. The problem frames to be considered for enterprise applications are clearly more complex than the basic ones. We then provide guidelines to develop all the artifacts required by the method through a dedicated choice of appropriate UML diagrams together with predefined schemas or skeletons for their contents. Thus, using our method provides a more direct path to the UML models, which saves time (no long questions about which diagrams to use and how) and improves the models quality (relevant issues are addressed, a uniform style is offered). In this paper, we consider the phases of modelling the domain, the requirements capture and specification, and their relationships.		Choppy, C.						ConflictExcluded	Excluded	new_screen			2		2006				
420		ModelGuidance	ArchMDE approach for the development of embedded real time systems	The development of Embedded Real Time Systems (ERTS) is generally a complex task that requires high costs and long delays. New development tools should be elaborated in order to improve ERTS developers productivity. Model Driven Engineering (MDE) is an emerging paradigm that advances the idea to use models and models transformations to make the development process cost effective. This paper introduces the Architecture-centric Model Driven Engineering (ArchMDE) approach that stresses architecture-based development and validation of ERTS. We have defined a set of architectural meta-models and a set of QVT transformation rules to automate the generation of architecture-specific models of ERTS. © Springer-Verlag Berlin Heidelberg 2007.		Elleuch, N.; Khalfallah, A.; Ahmed, S. B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2007				
421		ModelGuidance	An introduction to class based domain modelling	The paper presents the primary concepts of learning and teaching the object-oriented paradigm. The guidelines produced supplement the framework developed, and both form a complementary package to the undergraduate software engineering curriculum. This package adopts the inverted curriculum idea, with students, both novice and experienced alike being introduced to the object oriented paradigm for the first time, through the use of this class based model. One of the main benefits recognised for adopting the OO paradigm is reusability. To assist students with this skill, they take part in the process of selecting classes for generalisation and reuse from the developed class library.{\textless}{\textgreater}		McIntyre, J.; Szewcow, U.						ConflictExcluded	Excluded	new_screen			2		1994				
422		ModelGuidance	A model-driven engineering approach to simulation experiment design and execution	There is an increasing awareness of the added value that efficient design of experiments can provide to simulation studies. However, many practitioners lack the proper training required to design, execute and analyze a well-designed simulation experiment. In this study, we present the initial stages of a modeldriven engineering based tool for managing simulation experiments. Underlying our approach are an experiment ontology and a feature model that capture the statistical design of experiments expert knowledge which users might be lacking. In its current state, the tool provides support for the design and execution of simple experiments. Using a Web-based interface, the user is guided through an experiment design wizard that produces an experiment model that can be exported as an XML file containing the experiment's description. This XML can be used to synthesize scripts that can be run by a simulator and shared across different platforms.		Teran-Somohano, A.; Smith, A. E.; Ledet, J.; L. Yilmaz; Oğuztüzün, H.						ConflictExcluded	Excluded	new_screen			2		2015				
423		ModelGuidance	A performance modeling framework incorporating cost efficient deployment of collaborating components	Performance evaluation of distributed system is always an intricate undertaking where system behavior is normally distributed among several components those are physically distributed. Bearing this concept in mind, we delineate a performance modeling framework for a distributed system that proposes a transformation process from high level UML notation to SPN model and solves the model for relevant performance metrics. To capture the system dynamics through our proposed framework we outline a specification style that focuses on UML collaboration and activity as reusable specification building blocks, while deployment diagram identify the physical components of the system and the assignment of software artifacts to those identified system components. Optimal deployment mapping of the software artifacts on the physically available system resources is investigated by deriving the cost function. The proposed performance modeling framework provides transformation rules of UML elements into corresponding SPN representations and also the prediction result of a system such as throughput. The applicability of our proposed framework is demonstrated in the context of performance modeling of a distributed system. © 2010 IEEE.		Khan, R. H.; Heegaard, P. E.	ICSTE 2010 - 2010 2nd International Conference on Software Technology and Engineering, Proceedings					ConflictExcluded	Excluded	new_screen			2		2010				
424		ModelGuidance	Using SysML for modeling of safety-critical software-hardware interfaces: Guidelines and industry experience	Safety-critical embedded systems often need to undergo a rigorous certification process to ensure that the safety risks associated with the use of the systems are adequately mitigated. Interfaces between software and hardware components (SW/HW interfaces) play a fundamental role in these systems by linking the systems' control software to either the physical hardware components or to a hardware abstraction layer. Subsequently, safety certification of embedded systems necessarily has to cover the SW/HW interfaces used in these systems. In this paper, we describe a Model Driven Engineering (MDE) approach based on the SysML language, targeted at facilitating the certification of SW/HW interfaces in embedded systems. Our work draws on our experience with maritime and energy systems, but the work should also apply to a broader set of domains, e.g., the automotive sector, where similar design principles are used for (SW/HW) interface design. Our approach leverages our previous work on the development of SysML-based modeling and analysis techniques for safety-critical systems [4]. Specifically, we tailor the methodology developed in our previous work to the development of safety-critical interfaces, and provide step-bystep and practical guidelines aimed at providing the evidence necessary for arguing that the safety-related requirements of an interface are properly addressed by its design. We describe an application of our proposed guidelines to a representative safety-critical interface in the maritime and energy domain. © 2011 IEEE.		Sabetzadeh, M.; Nejati, S.; Briand, L.; Mills, A.-H. E.	Proceedings of IEEE International Symposium on High Assurance Systems Engineering					ConflictExcluded	Excluded	new_screen			2		2011				
425		ModelGuidance	Theoretical foundations for conceptual modelling in information systems development	Conceptual modelling in information systems development is the creation of an enterprise model for the purpose of designing the information system. It is an important aspect of systems analysis. The value of a conceptual modelling language (CML) lies in its ability to capture the relevant knowledge about a domain. To determine which constructs should be included in a CML it would be beneficial to use some theoretical guidelines. However, this is usually not done. The purpose of this paper is to promote the idea that theories related to human knowledge can be used as foundations for conceptual modelling in systems development. We suggest the use of ontology, concept theory, and speech act theory. These approaches were chosen because: (1) they deal with important and different aspects relevant to conceptual modelling and (2) they have already been used in the context of systems analysis. For each approach we discuss: the rationale for its use, its principles, its application to conceptual modelling, and its limitations. We also demonstrate the concepts of the three approaches by analysing an example. The analysis also serves to show how each approach deals with different aspects of modelling. © 1995 Elsevier Science B.V. All rights reserved.		Wand, Y.; Monarchi, D. E.; Parsons, J.; Woo, C. C.	Decision Support Systems					ConflictExcluded	Excluded	new_screen			2		1995				
426		ModelGuidance	Using UML profile for connecting information architecture and detailed information design	Current Web modelling languages provide inadequate linkages between various modelling levels. Among various aspects, the problem of disconnection between business models, information architecture and detailed information models, also disconnection between functional architecture and information architecture are particularly focus of our work. We have developed UML profile for WIED (UPW) representing higher-level information aspects and demonstrated earlier its ability to address the problem of disconnection between business models and technical architecture besides integrating functional and information architectural aspects. In this paper we provide guidelines for mapping the UPW models to detailed information models. Resultantly, it enables UPW to form a bridge between higher-level information flows and detailed information design.		Azam, F.; Zhang Li; Ahmad, R.						ConflictExcluded	Excluded	new_screen			2		2005				
427		ModelGuidance	Towards software architecture runtime models for continuous adaptive monitoring	A software architecture runtime model provides an abstraction that allows to reason about a running system. For example, a self-adaptive system can employ the model to detect phenomena which make an adaptation beneficial. O ver t ime o ther p henomena can become interesting and thus make the monitoring of different system properties necessary. Typically properties are declared in a meta-model as part of application specific model element classifiers. In this case adding new properties requires the creation of a new runtime model instance based on the updated meta-model version. In contrast, a more flexible approach allows altering the set of properties in the runtime model without creating a new model instance and thus without interrupting the phenomena detection process. In this paper we elaborate requirements for a runtime model modeling language which shall enable continuous adaptive monitoring. © 2018 CEUR-WS. All rights reserved.		Brand, T.; Giese, H.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2018				
428		ModelGuidance	Modeling parallelization overheads for predicting performance	Legacy codes primarily exist on a single core processor. With the proliferation of multicore processors, end users often want to migrate to new platforms to improve performance or reduce execution time of the application. Migration from a single core processor to multicore is an expensive proposition. Thus, end users often want to get some idea about possible performance benefit prior to actual migration. Parallelizing a given application often leads to overheads due to the very constructs that enable parallelization. These overheads reduce performance of the application. In this paper, we analyze the overheads caused by OpenMP parallelization constructs. We further provide guidelines to programmers on how to reduce these overheads and maximize the performance benefits of parallelization. We start our analysis by using motivational examples, create a model and then validate our model with benchmark codes. Our experiments show that the following factors affect overheads: 1) type and scope of arrays, 2) array access w.r.t. the overall data flow, 3) number of iterations, and 4) the chunk sizes during execution. Based on our experiments we propose a mathematical model for predicting the number of cycles for these overheads. We use this model to predict overheads of four benchmark codes. Our results show that the error between the number of cycles predicted and observed is on an average 8.22%. © 2016 IEEE.		Ranadive, P.; Vaidya, V. G.	Proceedings - 2016 International Conference on Information Systems Engineering, ICISE 2016					ConflictExcluded	Excluded	new_screen			2		2016				
429		ModelGuidance	Applying MDE methodologies to design communication protocols for distributed systems	Traditionally, protocol engineers have to deal with the design and implementation of complex network services, spending considerable time and effort on creating robust and reliable final source code. Although approaches exist to assist engineers in the development of communication protocols which use several object-oriented frameworks, these do not benefit from new modelling guidelines developed in MDE and UML to exploit automatic code generation from graphical models. This paper introduces a new UML2 Profile for Communications which guides the construction of software for communications following the Client-Server architecture. The MDE process is then used to design suitable platform-specific models for the well-known Adaptive Communications Environment (ACE), a high performance C++ toolkit for implementing concurrent and network applications which relies heavily on architectural patterns. © 2007 IEEE.		Martínez, J.; Merino, P.; Salmerón, A.	First International Conference on Complex, Intelligent and Software Intensive Systems, CISIS'07					ConflictExcluded	Excluded	new_screen			2		2007				
430		ModelGuidance	Interactive 3D scene modeling and visualization system	In this scientific report the visual system for 3D scene creation for the purpose of design and visualization of various objects' behavior scenarios on the stage, their interaction with each other and also with the participation of user is described. The following system can be used at the development of virtual simulator systems and at visual modeling of different situations to demonstrate the interaction of objects with each other on the stage. The system provides for the ability to interact with user during scene demonstration, and objects' behavior on stage is being managed according to the scenario, which is predesigned by user with the help of a simple script language. These system capabilities allow substantially reduce the time required for the development of some model of an interactive 3D scene; provide possibility for user to participate in actions on scene. The system can be used for training purposes, for analysis and demonstration of various situations, where processes visualization is necessary considering mathematical models and physical properties of objects. The system is developed using the up to date technologies .NET Framework 3.5 and XNA Game Studio 3.1.		Grebinnik, R.; Lipanov, A.						ConflictExcluded	Excluded	new_screen			2		2010				
431		ModelGuidance	A refinement calculus for Statecharts	We present a Statecharts dialect with only three syntactic constructs and a semantics that is not restricted to describe reactive systems on an implementation level but allows to model them on an abstract, more specification oriented stage, where design alternatives are still left open. We give a refinement calculus with rules that tell the designer how to come from the abstract specification to the implementation such that the system under development only becomes more concrete but not more abstract; under-specification is eliminated by adding more information. The result of a design process that follows these rules is an implementation that satisfies its specification by construction.		Scholz, P.						ConflictExcluded	Excluded	new_screen			2		1998				
432		ModelGuidance	Modeling product-line legacy assets using multi-level theory	The use of non-systematic reuse techniques in Systems Engineering (SE) leads to the creation of legacy products comprised of legacy assets like software, hardware, and mechanical parts coupled with associated traceability links to requirements, testing artifacts, architectural fragments etc. The sheer number of different legacy assets and different technologies used to engineer such legacy products makes reverse engineering of PLs in this context a daunting task. One of the prerequisites for reverse engineering of PLs is to create a family model that captures implementation aspects of all the legacy products. In this paper, we evaluate the applicability of a modeling paradigm called Multi-Level Modeling, which is based on the classinstance relation, for the creation of a family model that captures all the implementation concerns in an SE PL. More specifically, we evaluate an approach called Multi-Level conceptual Theory (MLT) for capturing different legacy assets, their mutual relations and related variability information. Moreover, we map PL concepts like variants, presence conditions and product configurations to MLT concepts and provide formal interpretation of their semantics in the MLT framework. The illustrative example used throughout the paper comes from a real case from the automotive domain. © 2017 ACM.		Nešic, D.; Nyberg, M.; Gallina, B.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2017				
433		ModelGuidance	Modeling behavioral RESTful web service interfaces in UML	A web service interface contains information about the names of the operations that can be invoked on the service and the input and output parameters of these operations. The Web Application Description Language (WADL) is a language to describe the interface of a web service that follows the Representation State Transfer (REST) architectural style. Currently, WADL descriptions do not describe the behavioral semantics of the operations neither ensure that the published interfaces follow the REST style, that is they are RESTful. In this paper, we present an approach to model the structural and behavioral interface of a RESTful web service using UML class and UML protocol diagrams. These models lead to RESTful interfaces that describe the behavior of operations in terms of preconditions and postconditions. The contracts can then be published in an extended version of the WADL language and used for documentation, stub generation, testing and monitoring purposes. © 2011 ACM.		Porres, I.; Rauf, I.	Proceedings of the ACM Symposium on Applied Computing					ConflictExcluded	Excluded	new_screen			2		2011				
434		ModelGuidance	Lightweight modeling and analysis of security concepts	Modeling results from risk assessment and the selection of safeguards is an important activity in information security management. Many approaches for this activity focus on an organizational perspective, are embedded in heavyweight processes and tooling and require extensive preliminaries. We propose a lightweight approach introducing SeCoML - a readable language on top of an established methodology within an open framework. Utilizing standard tooling for creation, management and analysis of SeCoML models our approach supports security engineering and integrates well in different environments. Also, we report on early experiences of the language's use. © 2011 Springer-Verlag.		Eichler, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2011				
435		ModelGuidance	Impact of modelling assumptions in event-driven software simulation tools for the performance evaluation of cellular mobile systems	This paper addresses the problem of comparing results obtained by means of different software tools when evaluating the radio access capacity and the system performance of a cellular mobile communication system. Particularly, an analysis of the impact on the final results of modelling and working assumptions independent of radio link control aspects is performed. Main focuses are mobility modelling, path loss and shadowing modelling, as well as measurement reporting criteria and their interactions with different sets of radio network functions. The case study presented here deals with a TDMA system (GSM-like). The study is done by comparing the results obtained for the same reference scenario by two event-driven system simulation software tools, developed internally by CSELT and CNET. Nevertheless, since the topics analyzed are common to any system simulation activity, the conclusions drawn here can be easily extended to a more general context. Therefore, from these results, useful guidelines for building simulation tools or comparing outputs can be derived.		Acx, A. G.; Rolando, A.	IEEE Vehicular Technology Conference					ConflictExcluded	Excluded	new_screen			2		1998				
436		ModelGuidance	The PLUSS approach - Domain modeling with features, Use cases and Use case realizations	This paper describes a product line use case modeling approach tailored towards organizations developing and maintaining extremely long lived software intensive systems. We refer to the approach as the {PLUSS} approach, Product Line Use case modeling for Systems and Software engineering. An industrial case study is presented where {PLUSS} is applied and evaluated in the target domain. Based on the case study data we draw the conclusion that {PLUSS} performs better than modeling according to the styles and guidelines specified by the {IBM}-Rational Unified Process ({RUP}) in the current industrial context.		Eriksson, M.; Borstler, J.; Borg, K.						ConflictExcluded	Excluded	new_screen			2		2005				
437		ModelGuidance	Model-driven service development for A-posteriori application integration	"The integration of software applications constitutes a challenging task. In particular, this applies to an a-posteriori integration approach where existing legacy systems - possibly supplied by different vendors - are coupled. Responding to this challenge, the service-oriented paradigm defines an architectural style for the construction of a heterogeneous application landscape. By abstracting services, applications are made available at a clean level suitable for integration. In this paper a model-driven approach for service development is presented which yields a modeling formalism - realized as a programmed graph rewriting system -to specify service descriptions and service compositions and facilitates generation of executable program code. Moreover, the approach"" is not only confined to the conceptual level. Rather"		Haase, T.	Proceedings - ICEBE 2007: IEEE International Conference on e-Business Engineering - Workshops: SOAIC 2007; SOSE 2007; SOKM 2007					ConflictExcluded	Excluded	new_screen			2		2007				
438		ModelGuidance	Task Model-Based Systematic Analysis of Both System Failures and Human Errors	The overall dependability of an interactive system is one of its weakest components, which is usually its user interface. The presented approach integrates techniques from the dependable computing field and elements of the user-centered design. Risk analysis and fault-tolerance techniques are used in combination with task analysis and modeling to describe and analyze the impact of system faults on human activities and the impact of human deviation or errors on system performance and overall mission performance. A technique for systematic analysis of human errors, effects, and criticality (HEECA) is proposed. It is inspired and adapted from the Failure Mode, Effects, and Criticality Analysis technique. The key points of the approach are: 1) the HEECA technique combining a systematic analysis of the effects of system faults and of human errors; and 2) a task modeling notation to describe and to assess the impact of system faults and human errors on operators' activities and system performance. These key points are illustrated on an example extracted from a case study of the space domain. It demonstrates the feasibility of this approach as well as its benefits in terms of identifying opportunities for redesigning the system, redesigning the operations, and for modifying operators' training. © 2015 IEEE.		Martinie, C.; Palanque, P.; Fahssi, R.; Blanquart, J.-P.; Fayollas, C.; Seguin, C.	IEEE Transactions on Human-Machine Systems					ConflictExcluded	Excluded	new_screen			2		2016				
439		ModelGuidance	Towards a conceptual framework supporting model compilability	The ever-growing use of modeling languages today is largely due to a maturation of model-based development technologies. However, there is enough room for improving language specifications and consequently, the efficiency of their usage. The state of facts in specifying Well Formedness Rules is among the most important issues calling for improvements. Despite the fact that various papers have approached it, the topic is still open. To solve it, there is the need of a rigorous conceptual framework supporting the specification of modeling languages' static semantics. This would stand as a basis for ensuring model compilability, a mandatory requirement in a model-driven context. Through this paper, we aim at providing core ideas that would contribute to the creation of such a framework. Our approach is testing-oriented and promotes the use of OCL specification patterns. © OCL and Textual Modelling, 2010.		Chiorean, D.; Petraşcu, V.	Electronic Communications of the EASST					ConflictExcluded	Excluded	new_screen			2		2010				
440		ModelGuidance	QAM: PROPOSED MODEL FOR QUALITY ASSURANCE IN CBSS	Component-based software engineering ({CBSE}) / Component-Based Development ({CBD}) lays emphasis on decomposition of the engineered systems into functional or logical components with well-defined interfaces used for communication across the components. Component-based software development approach is based on the idea to develop software systems by selecting appropriate off-the-shelf components and then to assemble them with a well-defined software architecture. Because the new software development paradigm is much different from the traditional approach, quality assurance for component-based software development is a new topic in the software engineering research community. Because component-based software systems are developed on an underlying process different from that of the traditional software, their quality assurance model should address both the process of components and the process of the overall system. Quality assurance for component-based software systems during the life cycle is used to analyze the components for achievement of high quality component-based software systems. Although some Quality assurance techniques and component based approach to software engineering have been studied, there is still no clear and well-defined standard or guidelines for component-based software systems. Therefore, identification of the quality assurance characteristics, quality assurance models, quality assurance tools and quality assurance metrics, are under urgent need. As a major contribution in this paper, I have proposed {QAM}: Quality Assurance Model for component-based software development, which covers component requirement analysis, component development, component certification, component architecture design, integration, testing, and maintenance.		Kharb, Latika	{ADVANCES} {IN} {SCIENCE} {AND} {TECHNOLOGY}-{RESEARCH} {JOURNAL}					ConflictExcluded	Excluded	new_screen			2		2015				
441		ModelGuidance	A Rapid Development Process with UML	"Since ""design-oriented"" life-cycles came to their maturity, dramatic changes have been introduced as far as programming tools and computer hardware are concerned. Such changes made it possible to develop applications focusing on refactoring rather than on analysis and design. The underlying hypothesis is that by adopting suitable tools and target languages, refactoring would possibly cost less than the overhead introduced by modern A&D techniques. Recently, extreme programming has been proposed as an alternative to a ""design-oriented"" life-cycle. In this paper we describe a software application developed using a software life-cycle that basically follows the guidelines suggested by extreme programming. Such an approach requires highly expressive programming languages and powerful CASE tools. UML has been selected as the underlying modeling language throughout the whole process, for it incorporates well-known diagrams for describing a software application from different perspectives. Smalltalk has been selected as target language, as it allows fast prototyping and early delivery. We claim that, for small and medium-sized projects, a life-cycle based on refactoring and supported by suitable languages and tools allows team productivity to be greatly enhanced.
"		Armano, Giuliano; Marchesi, Michele	SIGAPP Appl. Comput. Rev.					ConflictExcluded	Excluded	new_screen			2		2000				
442		ModelGuidance	"Support for task modeling - A constructive"" exploration"""	Although model-based approaches focusing on task modeling for user-interface design are well accepted among researchers, they are rarely used by industrial developers. Besides a lack of theoretical frameworks for task modeling insufficient tool support might be the reason for the low diffusion of this approach to interactive software-development processes. Thus, we explored the leading-edge tools TaOSpec, ProcessLens, and CTTE with respect to the formal representation of work tasks, and the creation of task scenarios. The results reveal that current model-based design approaches should be more conceivable by their users with respect to work tasks and their organization. This objective can be met by embedding scenario-based design elements into current tools, thus, increasing integrative tool and organizational development support. © IFIP International Federation for Information Processing 2005.		Dittmar, A.; Forbrig, P.; Heftberger, S.; Stary, C.	Lecture Notes in Computer Science					ConflictExcluded	Excluded	new_screen			2		2005				
443		ModelGuidance	Inter-Association Constraints in UML2: Comparative Analysis, Usage Recommendations, and Modeling Guidelines	"UML specification is verbal and imprecise, the exact meaning of many class diagram constructs and their interaction is still obscure. There are major problems with the inter-association constraints subsets, union, redefinition, association specialization, association-class specialization. Although their standard semantics is ambiguous and their interaction unclear, the UML meta-model intensively uses these constraints. The paper investigates the semantic implications of the above inter-association constraints, their interaction with other constraints, and implied correctness problems. Based on this study, we present a comparative analysis of these constraints, that includes characterization, and refers to complexity factors, and usefulness aspect. This analysis yields recommendations concerning the semantics and usefulness of the constraints. In addition, we present modeling guidelines for users. To the best of our knowledge, this is the first all inclusive analysis of the inter-association constraints in UML2.
"		Maraee, Azzam; Balaban, Mira						ConflictIncluded	Excluded	new_screen			2		2012				
444		ModelGuidance	Formalizing the Design of Embedded Software Using Sequence Diagrams and Abstract State Machines	"The latest specification of the Unified Modeling Language (UML) 2.x revised completely the structure and elements of sequence diagrams by expanding their modularity via interaction fragments. These fragments are based on a set of operators that can simplify the diagram's structure or alter the order of events in the diagram. Unfortunately, the new revision introduced a significant degree of ambiguity in the interpretation of these diagrams. This ambiguity is exacerbated by the fact that different styles of sequence diagrams can be used for different purposes of modeling and analysis. To address this ambiguity, this paper presents a formal model in operational semantics based on Abstract State Machines (ASM) to define the semantics of sequence diagrams. Specifically, update rules are devised for ASMs to handle important behaviors present in most embedded software operating in distributed or parallel environments. The approach in this paper assumes that lifeline processes in a sequence diagram act as autonomous agents that communicate by exchanging messages among each other in asynchronous and distributed manner. This formal model can be readily extended to define the semantics of the remaining operators including information about time intervals and constraints.
"		Ejnioui, Abdel; Otero, Carlos E.; Qureshi, Abrar A.						ConflictExcluded	Excluded	new_screen			2		2013				
445		ModelGuidance	Business Process Modelling: Five Styles and a Method to Choose the Most Suitable One	"A software developer facing a modelling task may follow different styles at different levels of abstraction and precision, to better cope with the aims and the potential users of the model. We address the problem of modelling the business processes by means of UML activity diagrams, and present five styles differing in the precision level, from the Ultra-Light style, where the nodes and the edges of the activity diagram are decorated by freely-formed text, to precise styles where instead OCL and UML actions are used. Then, we propose a practical empirical method for choosing the most suitable style depending on the context in which the models will be used (why, when, where, how long, by whom).
"		Reggio, Gianna; Leotta, Maurizio; Ricca, Filippo; Astesiano, Egidio						ConflictIncluded	Included	new_screen			2		2012				
446		ModelGuidance	HESTIA: Adversarial Modeling and Risk Assessment for CPCS	Due to the characteristics and connectivity of today's Cyber-Physical Control Systems (CPCS) and critical infrastructures, cyber-attacks on these systems are currently difficult to prevent in an efficient and sustainable manner. Prevention and mitigation need accurate identification and evaluation of: system vulnerabilities, likely threats and attacks, and applicable hardening measures. Furthermore, the ability to prioritize hardening measures based on accurate assessments of threat risk and consequence and mitigation availability, applicability, and cost is also needed. To address this challenge we created HESTIA: High-level and Extensible System for Training and Infrastructure risk Assessment. In this paper, we describe the latest architecture and working principles of HESTIA. When fully developed, the HESTIA process and tool-set will enable CPCS engineers to, iteratively: 1) specify a CPCS, 2) select applicable attacks and hardening measures from a library, 3) check specifications for consistency and applicability, and 4) merge attack and hardening specifications into a new CPCS model. In addition, we add support for device specification templates. HESTIA enables the discovery of attack-defend scenarios through simulation and the design of optimal hardening strategies for a given CPCS. This paper is a shortened and updated version of a journal article entitled An architecture for HESTIA to appear in the International Journal of Internet of Things and Cyber-Assurance. © 2018 IEEE.		Jillepalli, A. A.; De Leon, D. C.; Ashrafuzzaman, M.; Chakhchoukh, Y.; Johnson, B. K.; Sheldon, F. T.; Alves-Foss, J.; Tosic, P. T.; Haney, M. A.	2018 14th International Wireless Communications and Mobile Computing Conference, IWCMC 2018					ConflictExcluded	Excluded	new_screen			2		2018				
447		ModelGuidance	Model-driven engineering of process control software - beyond device-centric abstractions	This paper presents a new, two-level, model-driven engineering approach to industrial process control software. The first level (infrastructure engineering) is concerned with the following: the definition of the development process and guidelines, the definition of a domain-specific modeling language, the specification of the model transformations, and the development of a tool suite. This tool suite enables modeling of the process control software and the automatic code generation for programmable logic controllers. In the second level (application engineering), the process control software is engineered using the results of the infrastructure level. The approach is demonstrated on excerpts from an industrial project. © 2013 Elsevier Ltd.		Lukman, T.; Godena, G.; Gray, J.; Heričko, M.; Strmčnik, S.	Control Engineering Practice					ConflictIncluded	Excluded	new_screen			2		2013				
448		ModelGuidance	A Component Model for On-board Software Applications	Component-based development has become more common news than exotic novelty in mainstream industry. Its adoption has accrued high facilitation potential for software reuse and better organization of the product. Surprisingly however, component-oriented approaches have fared far worse in the domain of high-integrity real-time systems. One of the fundamental reasons of this difficulty stems from the larger incidence of extra-functional concerns than in conventional industry and the more stringent demands on the ultimate product quality. It is not intrinsic however that component-based software engineering cannot just make it in that domain. Hence adopting it may be an effort worth pursuing. In this paper we present the main conceptual and methodological steps taken by an initiative of the European Space Agency aimed at the creation of a component model suited for the development of on-board software.		Panunzio, M.; Vardanega, T.						ConflictIncluded	Excluded	new_screen			2		2010				
449		ModelGuidance	Proportional hazards modeling of time-dependent covariates using linear regression: a case study [mine power cable reliability]	In the proportional hazards model, the effect of a covariate is assumed to be time-invariant. In this paper a graphical method based on a linear regression model (LRM) is used to test whether this assumption is realistic. The variation in the effect of a covariate is plotted against time. The slope of this plot indicates the nature of the influence of a covariate over time. A covariate is time-dependent if a drastic change in the slope of the plot is found and the time-point, at which this drastic change occurs provides guideline in redefining a time-dependent covariate into two or more time-independent covariates. This method is applied to failure data of cables used for supplying power to electric mine loaders. The results obtained by applying only the proportional hazards model were misleading as the graphical method based on the LRM showed that one covariate was highly time-dependent. This graphical method should be used to supplement the proportional hazards model, not as a separate method. This avoids misinterpretation of the influence of a time-dependent covariate in the proportional hazards model. The proportional hazards model should be used to identify the most important covariates, while the LRM should be used as an explanatory tool to check the consistency of the influence of the covariates. The LRM involves matrix computations which can be quite time consuming for large data-sets. Also, tests for the statistically significant effect of a covariate are not yet well established in the model.		Kumar, D.; Westberg, U.	IEEE Transactions on Reliability					ConflictExcluded	Excluded	new_screen			2		1996				
450		ModelGuidance	An agent-mediated knowledge-in-motion model	With millions invested in knowledge management (KM), researchers and organizations are constantly investigating how firms can best organize their KM processes to reap instrumental benefits. Yet, most KM research, apart from being fragmented, overemphasizes knowledge creation and draws little attention to key intermediaries in the KM process. The paper captures the specificity of agents as key players binding knowledge creation and knowledge application. Specifically, the paper introduces a conceptual process model that views knowledge management as an agent-mediated series of knowledge transformations, envisioned as the agent-mediated knowledge-in-motion model. The proposed agent-mediated knowledge-in-motion (KiM) model embodies the cycle of knowledge creation and reuse. By tying agent-based research to knowledge creation and application, the paper describes how organizations can strategically employ human and software agents to enhance the creation, transfer, application, and dissemination of knowledge. In the process, the paper highlights specific roles and attributes of various agents in the KM process. Using the organization as the primary unit of analysis, the scope of the discussion surrounds the conceptualization of an agent-mediated knowledge management process where data is transformed into information, information to knowledge, knowledge to creativity, creativity to innovation, and finally, the diffusion of innovation into data- thus tying together a cycle of knowledge transitions from creation to reuse. Copyright © 2007, by the Association for Information Systems.		Datta, P.	Journal of the Association for Information Systems					ConflictExcluded	Excluded	new_screen			2		2007				
451		ModelGuidance	A SVM-based model for NBA playoffs prediction	We use four statistics data from the NBA regular season including team comprehensive score, player comprehensive score, chief coach capability, and the impact of home and away games as the indicators to build up training samples. Then, we construct a prediction model based on a support vector machine (SVM), which is suitable for solving the problem of a small sample size and has the theoretical basis of structural risk minimization. We combine the technique of undersampling and oversampling to remove the unbalanced data in training datasets, thus improving the leaning ability of SVM. Experimental results show that the proposed method has a relatively preferable performance. © 2016, Science Press. All right reserved.		Zeng, P.; Zhu, A.	Shenzhen Daxue Xuebao (Ligong Ban)/Journal of Shenzhen University Science and Engineering					ConflictExcluded	Excluded	new_screen			2		2016				
452		ModelGuidance	A model-based approach to information retrieval systems development	We propose a novel model-based approach (MDA) for the design and creation of Information Retrieval (IR) systems. This is based on a specific language that provides common notation and concepts and a collaborative modular environment for the design of IR systems. The language is a UML profile, involving several stereotypes for the IR area. From this profile we derive standard libraries of modules that can be used in the development of IR systems. Through appropriate templates, we transform models into software code according different programming language and different IR platforms.		Ferreira, J.; Silva, A.; Delgado, J.	Proceedings of the 10th IASTED International Conference on Software Engineering and Applications, SEA 2006					ConflictExcluded	Excluded	new_screen			2		2006				
453		ModelGuidance	Order holon modeling method based on time petri-nets and its solution with particle swarm optimization	The manufacturing system change from hierarchy to parallel structure, from concentration to distribution based on notion of Holonic Manufacturing System. In this paper, the problem of how to demarcate the unit of the manufacturing system, management style of the unit, control structure and the corresponding control method are settled. The model on order settlement in system reconfiguration model based on time Petri-net is put forward, order intelligent operation series is guided by particle swarm optimization, Simulation results show that the proposed model and algorithm are effective to order evaluation and implementation. © 2007 IEEE.		Zhao, F.; Zhang, Q.; Zhu, A.	Proceedings - 2007 International Conference on Computational Intelligence and Security, CIS 2007					ConflictExcluded	Excluded	new_screen			2		2007				
454		ModelGuidance	An integrated framework for modeling process-oriented enterprise applications and its application to a logistics server system	Modeling process-oriented enterprise applications asks for combining business process modeling with user interaction and data modeling. Current Business Process Management (BPM) and workflow technologies, however, are neither integrated with user dialogs nor offer an appropriate data model. This paper describes a solution to these shortcomings - an integrated framework for modeling process-oriented applications called Processes with User Interfaces and Data Modeling Integration (PUDI), which combines best practices of processoriented and form-based approaches. The paper presents both, a precise technical description of the PUDI framework and a detailed description of its use in an industrial re-documentation project at inet-logistics. © 2009 IEEE.		Auer, D.; Geist, V.; Erhart, W.; Gunz, C.	2009 2nd International Symposium on Logistics and Industrial Informatics, LINDI 2009					ConflictExcluded	Excluded	new_screen			2		2009				
455		ModelGuidance	Modeling guidelines of FreeRTOS in Event-B	Formal methods have emerged as an approach to ensuring quality and correctness of highly critical systems. Event-B is a formal method for modelling and reasoning about systems. This paper presents a set of guidelines for modelling OS kernels for embedded real-time systems in Event-B. The presented modelling guidelines are intended to assist specifiers of real-time kernels with a set of modelling steps for the construction of formal models of real-time kernels. Each of these guidelines gives directions on how to model a certain aspect of RTOS kernels. The guidelines focus on the basic functionality of RTOS and represent the primary requirements of RTOS for an Event-B model. Design details that are RTOS-specific are left out from the guidelines. Design details of a specific-RTOS can be specified through a refinement of the abstract model driven by the guidelines. The identified modelling guidelines can be understood as a modelling pattern for the following RTOS features: task management, scheduling and context switch, and interrupts. © 2017 Taylor & Francis Group, London.		Alkhammash, E.; Butler, M.; Cristea, C.	Communication, Management and Information Technology - Proceedings of the International Conference on Communication, Management and Information Technology, ICCMIT 2016					ConflictIncluded	Excluded	new_screen			2		2017				
456		ModelGuidance	Toward multi-disciplinary model-based (Re)design of sustainable user interfaces	This paper reports on our experience in using the MuiCSer process framework for the redesign of the user interface for operating an industrial digital printing system. MuiCSer is created to support the user-centered interface design of new and legacy systems by a multi-disciplinary team. The process framework is created to enhance increased flexibility, usability and sustainability of the designed user interfaces. Resulting user interfaces are decoupled from the application logic, but still help to maintain consistency with the available functionality even when this changes over time. This report focuses on the usage of the task model during the analysis of the current user interface, the creation of user interface prototypes at various fidelity levels and the still ongoing realization of a flexible user interface management system to support future changes of the deployed user interfaces. © 2008 Springer-Verlag Berlin Heidelberg.		Van Den Bergh, J.; Haesen, M.; Luyten, K.; Notelaers, S.; Coninx, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2008				
457		ModelGuidance	Enhanced V-model	Typically, software development processes are time consuming, expensive, and rigorous, particularly for safety-critical applications. Even if guidelines and recommendations are defined by sector-specific functional safety standards, development process may not be completed because of excessive costs or insufficient planning. The V-model is one of the most well-known software development lifecycle model. In this study, the V-model lifecycle is modified by adding an intermediate step. The proposed modification is realized by checking the fault diagnosability of each module. The proposed modification provides three advantages: (1) it checks whether the constructed model covers all software requirements related with faults; (2) it decreases costs by early detection of modeling deficiencies before the coding and testing phases; and (3) it enables code simplicity in decision of fault occurrence. © 2018 Slovene Society Informatika. All Rights Reserved.		Durmuş, M. S.; Üstoğlu, İ.; Yu. Tsarev, R.; Börcsök, J.	Informatica (Slovenia)					ConflictExcluded	Excluded	new_screen			2		2018				
458		ModelGuidance	Reusing functional software requirements in small-sized software enterprises: a model oriented to the catalog of requirements	Software reuse can be defined as the process of creating software products from the existing ones rather than developing software from scratch. Thus, software reuse is normally proposed to increase software productivity and quality and leads to economic benefits. In this sense, the reuse of software requirements has received important attention because it provides a solid support to develop quality software through obtaining and reusing quality software requirements [i.e., software product line ({SPL}) approach used in large-sized software enterprises]. However, the small-sized enterprises-which represent up to 85 \% of all software organizations in many countries around the world-cannot implement a {SPL} approach because it does not fit with the context, properties, and complexity of their software projects. Moreover, the software engineering community has not adequately explored a more proper approach in the context of small-sized software enterprises. The use of a software requirements catalog could be this proper approach. In this context, the aim of this paper was to introduce the requirements reuse model for software requirements catalog ({RRMSRC}). Also, a set of guidelines to perform the main activities defined for reusing functional requirements within small-sized software enterprises is provided. As evidence of its feasibility, {RRMSRC} has been used in an industrial context, and the obtained results and learned lessons are summarized.		Pacheco, C.; Garcia, I.; Calvo-Manzano, J. A.; Arcilla, M.	{REQUIREMENTS} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		2017				
459		ModelGuidance	A Precise Style for Business Process Modelling: Results from Two Controlled Experiments	"We present a precise style for the modelling of business processes based on the UML activity diagrams and two controlled experiments to compare this style with a lighter variant. The comparison has been performed with respect to the comprehensibility of business processes and the effort to comprehend them. The first experiment has been conducted at the Free University of Bolzano-Bozen, while the second experiment (i.e., a differentiated replication) at the University of Genova. The participants to the first experiment were Master students and so more experienced than the participants to the replication, who were Bachelor students. The results indicate that: (a) all the participants achieved a significantly better comprehension level with the precise style; (b) the used style did not have any significant impact on the effort; and (c) more experienced participants benefited more from the precise style.

"		Reggio, Gianna; Ricca, Filippo; Scanniello, Giuseppe; Di Cerbo, Francesco; Dodero, Gabriella						ConflictExcluded	Excluded	new_screen			2		2011				
460		ModelGuidance	Bridging value modelling to ArchiMate via transaction modelling	The ArchiMate modelling language provides a coherent and a holistic view of an enterprise in terms of its products, services, business processes, actors, business units, software applications and more. Yet, ArchiMate currently lacks (1) expressivity in modelling an enterprise from a value exchange perspective, and (2) rigour and guidelines in modelling business processes that realize the transactions relevant from a value perspective. To address these issues, we show how to connect e3 value, a technique for value modelling, to ArchiMate via transaction patterns from the DEMO methodology. Using ontology alignment techniques, we show a transformation between the meta models underlying e3 value, DEMO and ArchiMate. Furthermore, we present a step-wise approach that shows how this model transformation is achieved and, in doing so, we also show the of such a transformation. We exemplify the transformation of DEMO and e3 value into ArchiMate by means of a case study in the insurance industry. As a proof of concept, we present a software tool supporting our transformation approach. Finally, we discuss the functionalities and limitations of our approach; thereby, we analyze its and practical applicability. © 2012 Springer-Verlag Berlin Heidelberg.		de Kinderen, S.; Gaaloul, K.; Proper, H. A.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2014				
461		ModelGuidance	A knowledge-based perspective for software process modeling	As the acquisition and sharing of knowledge form the backbone of the software development process, it is important to identify knowledge discrepancies between the process elements. Explicit representation of the knowledge components within a software process model can provide a means to expose these discrepancies. This paper presents an extension of the Software and System Process Engineering Metamodel (SPEM), to be used as a new knowledge modeling layer. The approach, which is based on ontologies for knowledge representation, constitutes an explicit method for representing knowledge within process models. A concept matching indicator shows the state of the process model in terms of the concept gaps for each task within the process. This indicator could lead to more informed decision making and better management of the associated risks, in terms of team competency, documentation quality, and the training required to mitigate them.		Kerzazi, N.; Lavallée, M.; Robillard, P.-N.	E-Informatica Software Engineering Journal					ConflictExcluded	Excluded	new_screen			2		2013				
462		ModelGuidance	Architectural level performance modeling of component system based on container middleware	This paper analyzes the effect of Container style middleware on the structure and performance of Component-based system based on architectural patterns, and proposes an approach integrating Container style middleware components and their interaction relation into the application UML (unified modeling language) models. The performance model derived from the integrated UML models can reflect the impact of middleware. So, analysts do not have to know the internal details of middleware at performance modeling. The architectural pattern-based method can be extended to deal with various style middlewares. In the paper, the proposed approach is illustrated by a case study.		Zhang, Y.; Huang, T.; Wei, J.; Chen, N.-J.	Ruan Jian Xue Bao/Journal of Software					ConflictExcluded	Excluded	new_screen			2		2006				
463		ModelGuidance	Modeling shared-memory multiprocessor systems with AADL	Multiprocessor chips are now commonly supplied by IC manufacturers. Real-time applications based on this kind of execution plat-forms are difficult to develop for many reasons: complexity, design space, unpredictability, . The allocation of the multiple hardware resources to the software entities could have a great impact on the final result. Then, if the interest to represent the set of hardware computing resources inside an architectural model is obvious, we argue that other hardware elements like shared buses or memory hierarchies must be included in the models if analyze of the timing behavior is expected to be performed. This article gives guidelines to represent, with AADL, shared-memory multiprocessing systems and their memory hierarchies while keeping a high-level model of the hardware architecture.		Rubini, S.; Dissaux, P.; Singhoff, F.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2014				
464		ModelGuidance	User model and system model: The yin and yang in user-centered software development	Software systems can be viewed from both external and internal perspectives. They are called user model and system model respectively in the human-computer interaction community. In this paper, we employ the yin-yang principle as an analytical tool for reviewing the relationship between the user model and the system model. In the traditional system-centered approach, the engineer is more concerned with the system model and does not pay much attention to the user model. However, as the user-centered approach has gained increasing acceptance in a number of projects, we claim that the user model and system model are the yin and yang in user-centered software development and, following the yin-yang principle, call for equal emphasis on both models. Particularly, we propose using video-based scenarios as the representation of user models and reveal the benefits of the use of video in software development. As a case study, we describe how we have employed scenario videos in a project course and share best practices that we have identified for the creation of demo scenario videos. Copyright © 2013 ACM.		Xu, H.; Creighton, O.; Boulila, N.; Demmel, R.	SPLASH Indianapolis 2013: Onward! 2013 - Proceedings of the 2013 International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software					ConflictExcluded	Excluded	new_screen			2		2013				
465		ModelGuidance	Modeling behavior in compositions of software architectural primitives	Software architectures and architectural styles are increasingly used for designing large-scale software systems. Alfa is a framework for the composition of style-based software architectures from a small set of primitives. It models the behavior of architectural components and connectors as orderings among events at their inputs and outputs. Formalizing such behavior is useful for checking conformance of architectures to their styles. We therefore propose a formal approach that uses data-abstract constraint automata to model the behavior of Alfa's compositions, and to verify their behavioral style conformance. We have also developed an automated conformance analyzer for Alfa.		Mehta, N. R.; Medvidovic, N.; Sirjani, M.; Arbab, F.						ConflictExcluded	Excluded	new_screen			2		2004				
466		ModelGuidance	A Model-Driven Safety Certification Method for Process Compliance	A safety case is a contextualized structured argument constituted of process and product-based sub-arguments to show that a system is acceptably safe. The creation of a safety case is an extremely time-consuming and costly activity needed for certification purposes. To reduce time and cost, reuse as well as automatic generation possibilities represent urgent research directions. In this paper, we focus on safety processes mandated by prescriptive standards and we identify process-related structures from which process-based arguments (those aimed at showing that a required development process has been applied according to the standard) can be generated and more easily reused. Then, we propose a model-driven safety certification method to derive those arguments as goal structures given in Goal Structuring Notation from process models given in compliance with Software Process Engineering Meta-model 2.0. The method is illustrated by generating process-based arguments in the context of ISO 26262.		Gallina, B.						ConflictExcluded	Excluded	new_screen			2		2014				
467		ModelGuidance	Towards a UML 2.0 profile for RBAC modeling in activity diagrams	Business Processes are a crucial issue for many companies because they are the key to maintain competitiveness. Moreover, business processes are important for software developers, since they can capture from them the necessary requirements for software design and creation. Besides, business process modeling is the center for conducting and improving how the business is operated. Security is important for business performance, but traditionally, it is considered after the business processes definition. Empirical studies show that, at the business process level, customers, end users, and business analysts are able to express their security needs. In this work, we will present a proposal aimed at integrating security requirements and role identification for RBAC, through business process modeling. We will summarize our UML 2.0 profile for modeling secure business process through activity diagrams, and we will apply this approach to a typical health-care business process.		Rodríguez, A.; Fernández-Medina, E.; Piattini, M.	Proceedings of the 4th International Workshop on Security in Information Systems, WOSIS 2006, in Conjunction with ICEIS 2006					ConflictExcluded	Excluded	new_screen			2		2006				
468		ModelGuidance	Towards an encyclopedia of Modeling and Simulation methodology	Modeling and Simulation is both multidisciplinary and interdisciplinary. While this provides great benefits to the discipline, it poses great challenges in that 1) the body of knowledge is often dispersed in application areas and 2) each application area develops and uses methods that are seemingly unconnected with one another and are difficult to relate into a cohesive body of knowledge. In this paper, we propose the creation of an encyclopedia of Modeling and Simulation methodologies in order to address these challenges. We survey the structure of several encyclopedias and propose a taxonomical structure and tentative content for the book. We present the characteristics that such a book should have and discuss the potential benefits and areas of growth. © 2015 IEEE.		Diallo, S.; Mustafee, N.; Zacharewicz, G.	Proceedings - Winter Simulation Conference					ConflictExcluded	Excluded	new_screen			2		2016				
469		ModelGuidance	Introduction to modeling and simulation	Simulation is a powerful tool for the analysis of new system designs, retrofits to existing systems and proposed changes to operating rules. Conducting a valid simulation is both an art and a science. This paper provides an introduction to simulation and modeling and the main concepts underlying simulation. It discusses a number of key issues regarding a simulation team, how to conduct a simulation study, the skills required and the steps involved. It also provides project management guidelines and outlines pitfalls to avoid.		Carson II, J. S.	Proceedings - Winter Simulation Conference					ConflictExcluded	Excluded	new_screen			2		2004				
470		ModelGuidance	An Object-Oriented Modeling Method for Algebraic Specifications in CafeOBJ	"A scenario-based object-oriented modeling method for algebraic specifications is proposed. The method is based on the integration of a new algebraic specification language, CafeOBJ, and a multiparadigm design notation, GILO-2 (Generic Interaction Language for Objects). CafeOBJ is a successor of the algebraic specification language OBJ and supports object-oriented formal specifications based on hidden order sorted rewriting logic. GILO-2 provides collaborations as well as classes of objects to capture behavioral aspects of scenarios in object-oriented modeling. Given a problem description of the system to develop, the proposed method provides guidelines for decomposing the problem into executable CafeOBJ specification modules through scenario-based object-oriented design in GILO-2; the decomposition reflects the structure of the problem domain. The proposal also indicates how formal executable specification in CafeOBJ can be systematically obtained from the design in GILO-2.
"		Nakajima, S.; Futatsugi, K.						ConflictExcluded	Excluded	new_screen			2		1997				
471		ModelGuidance	An MDA approach to develop secure business processes through a UML 2.0 extension	Business Processes have become essential to the performance of enterprises since they incorporate the differentiating aspects that generate a higher financial performance. Consequently, business process modeling is the centre through which to conduct and improve how a business is operated. Moreover, security is a crucial issue for business performance, but is usually considered after the business processes definition. Many security requirements can be expressed at the business process level. A business process model is important for software developers, since they can use it to obtain the necessary requirements for software design and creation. In this work, we shall show a microprocess, consistent with the MDA approach, through which it is possible to specify and refine security requirements at a high level of abstraction and obtain a subset of all analysis-level classes and use cases from the context problem, in such a way that they can be incorporated into the development of a software system. In addition, an extension of UML 2.0 activity diagrams through which it is possible to identify such requirements will be presented. © 2007 CRL Publishing Ltd.		Rodríguez, A.; Fernández-Medina, E.; Piattini, M.	Computer Systems Science and Engineering					ConflictExcluded	Excluded	new_screen			2		2007				
472		ModelGuidance	A SOM-based hierarchical model to short-term load forecasting	This paper proposes a SOM-based hierarchical neural model to the problem of short-term load forecasting. The neural model is made up of two self-organizing map nets - one on top of the other. It has been successfully applied to domains which require time series analysis. The model was trained and assessed on load data extracted from a Brazilian electric utility. It was required to predict once every hour the electric load during the next 24 hours. The paper presents the results, and evaluates them.		Carpinteiro, O. A. S.; Reis, A. J. R.						ConflictExcluded	Excluded	new_screen			2		2005				
473		ModelGuidance	API2MoL: Automating the building of bridges between APIs and Model-Driven Engineering	Context: A software artefact typically makes its functionality available through a specialized Application Programming Interface ({API}) describing the set of services offered to client applications. In fact, building any software system usually involves managing a plethora of {APIs}, which complicates the development process. In Model-Driven Engineering ({MDE}). where models are the key elements of any software engineering activity, this {API} management should take place at the model level. Therefore, tools that facilitate the integration of {APIs} and {MDE} are clearly needed. Objective: Our goal is to automate the implementation of {API}-{MDE} bridges for supporting both the creation of models from {API} objects and the generation of such {API} objects from models. In this sense, this paper presents the {API}2MoL approach, which provides a declarative rule-based language to easily write mapping definitions to link {API} specifications and the metamodel that represents them. These definitions are then executed to convert {API} objects into model elements or vice versa. The approach also allows both the metamodel and the mapping to be automatically obtained from the {API} specification (bootstrap process). Method: After implementing the {API}2MoL engine, its correctness was validated using several {APIs}. Since {APIs} are normally large, we then developed a tool to implement the bootstrap process, which was also validated. Results: We provide a toolkit (language and bootstrap tool) for the creation of bridges between {APIs} and {MDE}. The current implementation focuses on Java {APIs}, although its adaptation to other statically typed object-oriented languages is straightforward. The correctness, expressiveness and completeness of the approach have been validated with the Swing, {SWT} and {JTwitter} {APIs}. Conclusion: {API}2MoL frees developers from having to manually implement the tasks of obtaining models from {API} objects and generating such objects from models. This helps to manage {API} models in {MDE}-based solutions. (C) 2011 Elsevier B.V. All rights reserved.		Canovas Izquierdo, Javier Luis; Jouault, Frederic; Cabot, Jordi; Garcia Molina, Jesus	{INFORMATION} {AND} {SOFTWARE} {TECHNOLOGY}					ConflictExcluded	Excluded	new_screen			2		2012				
474		ModelGuidance	Business service modeling using SOA: A core component of business architecture	For Business Architecture (BA) to provide the intended benefits there should be considerable focus on the components that deliver the real architectural value. Current trends focus on the business process component of Business Architecture and tend to consider BPM as an architectural style for its modeling. As the major concern of enterprises is value creation to customers in terms of services, considering business processes as a hub mixes the concerns of service specifications and how it is provided. For Business Architecture to serve the generation of subsequent artifacts in the Enterprise Architecture (EA), we suggest that business services should be the focal point and appropriate architectural style should be adopted. This paper presents methodologies we developed adopting the SOA architectural style to model business services, and created Service Oriented Business Service Model (SOBSM) and applied it on the portfolio of business services standardized across a given enterprise ecosystem. As well, we suggest that the resulting SOBSM be used for generating the subsequent components of the EA spectrum. Copyright © 2012 ACM.		Zikie, F. A.; Dico, A. S.; Debela, D. M.	Proceedings of the International Conference on Management of Emergent Digital EcoSystems, MEDES 2012					ConflictExcluded	Excluded	new_screen			2		2012				
475		ModelGuidance	Design patterns and inductive modeling rules to support the construction of ontologically well-founded conceptual models in OntoUML	In recent years, there has a growing interest in the use of Ontologically Well-Founded Conceptual Modeling languages to support the domain analysis phase in Information Systems Engineering. OntoUML is an example of a conceptual modeling language whose metamodel has been designed to comply with the ontological distinctions and axiomatic theories put forth by a theoretically well-grounded Foundational Ontology. However, despite its growing adoption, OntoUML has been deemed to pose a significant complexity to novice modelers. This paper presents a number of theoretical and methodological contributions aimed at assisting these modelers. Firstly, the paper explores a number of design patterns which are derived from the ontological foundations of this language. Secondly, these patterns are then used to derive a number of model construction rule sets. The chained execution of these rule sets assists the modeler in the instantiation of these patterns, i.e., in the use of OntoUML as pattern-language. Thirdly, the article demonstrates how these rule sets can be materialized as a set of methodological guidelines which can be directly implemented in a tool support in the form of an automated dialogue with the novice modeler. © 2011 Springer-Verlag.		Guizzardi, G.; Das Graças, A. P.; Guizzardi, R. S. S.	Lecture Notes in Business Information Processing					ConflictIncluded	Included	new_screen			2		2011				
476		ModelGuidance	A categorical model of model merging and weaving	Model driven engineering advocates the separation of concerns during the design time of a system, which leads to the creation of several different models, using several different syntaxes. However, to reason on the overall system, we need to compose these models. Unfortunately, composition of models is done in an ad hoc way, preventing comparison, capitalisation and reuse of the composition operators. In order to improve comprehension and allow comparison of merging and weaving operators, we use category theory to propose a unified framework to formally define merging and weaving of models. We successfully use this framework to compare them, both through the way they are transformed in the formalism, and through several properties, such as completeness or non-redundancy. Finally, we validate this framework by checking that it correctly identifies three tools as performing merging or weaving of models.		Marchand, J. Y.; Combemale, B.; Baudry, B.						ConflictExcluded	Excluded	new_screen			2		2012				
477		ModelGuidance	Generating annotated behavior models from end-user scenarios	Requirements-related scenarios capture typical examples of system behaviors through sequences of desired interactions between the software-to-be and its environment. Their concrete, narrative style of expression makes them very effective for eliciting software requirements and for validating behavior models. However, scenarios raise coverage problems as they only capture partial histories of interaction among system component instances. Moreover, they often leave the actual requirements implicit. Numerous efforts have therefore been made recently to synthesize requirements or behavior models inductively from scenarios. Two problems arise from those efforts. On the one hand, the scenarios must be complemented with additional input such as state assertions along episodes or flowcharts on such episodes. This makes such techniques difficult to use by the nonexpert end-users who provide the scenarios. On the other hand, the generated state machines may be hard to understand as their nodes generally convey no domain-specific properties. Their validation by analysts, complementary to model checking and animation by tools, may therefore be quite difficult. This paper describes tool-supported techniques that overcome those two problems. Our tool generates a labeled transition system ({LTS}) for each system component from simple forms of message sequence charts ({MSC}) taken as examples or counterexamples of desired behavior. No additional input is required. A global {LTS} for the entire system is synthesized first. This {LTS} covers all scenario examples and excludes all counterexamples. It is inductively generated through an interactive procedure that extends known learning techniques for grammar induction. The procedure is incremental on training examples. It interactively produces additional scenarios that the end-user has to classify as examples or counterexamples of desired behavior. The {LTS} synthesis procedure may thus also be used independently for requirements elicitation through scenario questions generated by the tool. The synthesized system {LTS} is then projected on local {LTS} for each system component. For model validation by analysts, the tool generates state invariants that decorate the nodes of the local {LTS}.		Damas, C.; Lambeau, B.; Dupont, P.; van Lamsweerde, A.	{IEEE} {TRANSACTIONS} {ON} {SOFTWARE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		2005				
478		ModelGuidance	Using CSTPNs to model traffic control CPS	Transportation cyber-physical system (T-CPS) is a spatiotemporal discrete-continuous hybrid system. However, the hybrid T-CPSs have some analysis and modelling problems, especially the problems related to the spatiotemporal characteristics. Existing coloured Petri net approaches of traffic control cannot effectively analyse dynamic changes of cyber systems and physical entities in space and time. Moreover, some problems, related to the state space explosion and the large complex T-CPSs, have not been well solved. This study develops the innovative methods for T-CPS design and modelling via the development and application of coloured spatiotemporal Petri nets (CSTPNs). The proposed research ideas involve the CSTPN theory creation, the development of traffic intersection coordination control system using CSTPNs, the traffic simulation analysis and the implementation of T-CPS-based CSTPNs. The experimental results show that the new spatiotemporal theories and approaches of the traffic coordination control based on CSTPNs have excellent potentials to address the issues related to the spatiotemporal discrete-continuous characteristics of T-CPS. Moreover, these innovative methods with a good validity can be easily applied into practise for the development of T-CPS. © The Institution of Engineering and Technology 2017.		Zhao, H.; Sun, D.; Yue, H.; Zhao, M.; Cheng, S.	IET Software					ConflictExcluded	Excluded	new_screen			2		2017				
479		ModelGuidance	Style-based modeling and verification of fault tolerance service oriented architectures	Service-Oriented Architecture (SOA) is a flexible, Loosely coupled and dynamic architecture for developing different distributed systems. Since using this architecture is every day increasing in the design of software systems. Creating dependable services in this architecture is one of the main challenges. Considering different QoS levels consisting of non-functional aspects like security, Safety, Accessibility, etc is necessary for dependable systems. One of these non-functional aspects is fault tolerance. In this paper, in order to have a fault tolerance system, initially SOA core style has been extended using required parameters. Then, different communication and reconfiguration mechanisms of fault tolerance have been developed by graph transformation rules. Finally, the proposed model has been verified using model checking techniques available for graph transformation systems. © 2010 Published by Elsevier Ltd.		Rafe, V.; Mahdian, F.	Procedia Computer Science					ConflictExcluded	Excluded	new_screen			2		2011				
480		ModelGuidance	Formal modelling and analysis of HLA architectural style	The high level architecture (HLA) was accepted as an IEEE standard in the year 2000 as reference architecture and common infrastructure for large scale distributed interactive simulation systems. But the problems caused by the informal description of the standard are widely recognised. The special requirements of HLA formalisation are analysed and considered as a new architectural style. Combined with the comparison of many architecture description languages (ADLs), the formal models of HLA style are introduced with a newly proposed formal language, π-ADL. These models are grouped as specific architectural concepts of composite, component and connector types. With respect to the different HLA concepts, the models are further described by internal behaviour and external interfaces. They are then tested and analysed with a simple HLA example using the π-ADL compiler π-ADLVM. An HLA internal deadlock reason is found automatically. With the formal specification, a new HLA system design environment is established, which improves the efficiency of the system development. Copyright © 2010 Inderscience Enterprises Ltd.		Chen, J.; Wu, D.; Zhang, J.; Oquendo, F.	International Journal of Modelling, Identification and Control					ConflictExcluded	Excluded	new_screen			2		2010				
481		ModelGuidance	A method to model guidelines for developing railway safety-critical systems with UML	There are today an abundance of standards concerned with the development and certification of railway safety- critical systems. They recommend the use of different techniques to describe system requirements and to pursue safety strategies. One problem shared by standards is that they only prescribe what should be done or use but they provide no guidance on how recommendations can be fulfilled. The purpose of this paper is to investigate a methodology to model guidelines for building certifiable UML models that cater for the needs and recommendations of railway standards. The paper will explore some of the major tasks that are typical of development guidelines and will illustrate practical steps for achieving these tasks.		Ossami, D. D. O.; Mota, J.-M.; Thiry, L.; Perronne, J.-M.; Boulanger, J.-L.; Mariano, G.	ICSOFT 2007 - 2nd International Conference on Software and Data Technologies, Proceedings					ConflictIncluded	Excluded	new_screen			2		2007				
482		ModelGuidance	Model of the condensate water and the air cooled condenser of a combined cycle power plant	In this paper, the basis of the models of the condensate water and the air cooled condenser are presented. The models are part of a full scope simulator of a 450 MW combined cycle power plant. The simulator is executed in real time and is intended to be a support for the training of the operators of the Comisión Federal de Electricidad (the Mexican utility company). The simulator is presently in the final acceptance tests stage and is programmed to be in commercial operation in 2010. Here, they are included a summary the modeling methodology used to develop the referred models and the mathematical fundaments used to obtain the main equations. The tendencies of selected variables during a transient are displayed and analyzed in order to probe the validity of the new generic models.		Mendoza-Alegria, Y.; Roldán-Villasana, E. J.; Cruz-Cruz, R.	NASTEC 2009 - 2nd International North American Simulation Technology Conference					ConflictExcluded	Excluded	new_screen			2		2009				
483		ModelGuidance	Modeling and enforcing invariants of dynamic software architectures	"In this paper, we propose an end-to-end"" approach that supports dynamic reconfiguration of software architectures taking advantage of graphical modeling"		Kallel, S.; Kacem, M. H.; Jmaiel, M.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2012				
484		ModelGuidance	The concepts of model in information systems engineering: A proposal for an ontology of models	Modelling is one of the most frequent tasks in the area of information systems (ISs), with models such as schemata, ontologies, patterns and architectures forming the bases for their creation. Very often, however, the difference between these types of models is not clear and causes confusion and erratic use of the terms. The aim of this paper is to clarify the concept of model through a study of some of the more common ones used in ISs. This proposal is presented through an ontology, where we show how we conceptualize models according to their role in the development of an IS: the model understood as the representation of a domain or as a reality serving as an example. © 2009 Copyright Cambridge University Press.		Sánchez, D. M.; Cavero, J. M.; Marcos, E.	Knowledge Engineering Review					ConflictExcluded	Excluded	new_screen			2		2009				
485		ModelGuidance	A formal model for reasoning about adaptive QoS-enabled middleware	Systems that provide distributed multimedia services are subject to constant evolution; customizable middleware is required to effectively manage this change. Middleware services for resource management execute concurrently with each other, and with application activities, and can, therefore, potentially interfere with each other. To ensure cost-effective {QoS} in distributed multimedia systems, safe composability of resource management services is essential. In this article, we present a meta-architectural framework, the Two-Level Actor Model ({TLAM}) for customizable {QoS}-based middleware, based on the actor model of concurrent active objects. Using {TLAM}, a semantic model for specifying and reasoning about components of open distributed systems, we show how a {QoS} brokerage service can be used to coordinate multimedia resource management services in a safe, flexible, and efficient manner. In particular, we show a system in which the multimedia actor behaviors satisfy the specified requirements and provide the required multimedia service. The behavior specification leaves open the possibility of a variety of algorithms for resource management. Furthermore, constraints are identified that are sufficient to guarantee noninterference among the multiple broker resource management services, as well as providing guidelines for the safe composition of additional services.		Venkatasubramanian, N.; Talcott, C.; Agha, G. A.	{ACM} {TRANSACTIONS} {ON} {SOFTWARE} {ENGINEERING} {AND} {METHODOLOGY}					ConflictExcluded	Excluded	new_screen			2		2004				
486		ModelGuidance	Models and software for agent-based model development based on model-driven approach	The article discusses the application of the model-driven approach in the development of agent-based simulation models, presents an overview of agent architectures, considers the updated version of the hierarchical system of metamodels for formalizing the agent-based simulation models development methodology, as well as a description of the minimum set of software tools required to develop the software system for creation the applied agent-based simulation models © 2018 CEUR-WS. All rights reserved.		Nikolaychuk, O. A.; Pavlov, A. I.; Stolbov, A. B.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2018				
487		ModelGuidance	Requirements analysis and modelling	The rapid change in the software engineering field, in particular the emerging of software development methodologies has relaxed the need for well definedness of the requirements. A primary characteristic of the process in developing a system with ill defined requirements is the iteration through one or more development phases before the requirements are clarified. By exposing end users to the problem of revising and iterating on a larger scale system design through several levels of the software life cycle, we are able to be more responsive to their evolving requirements as they gain experience in formulating critical system requirements. Iterative requirements elicitation and requirements elicitation have been tied closely to two techniques: object oriented modeling (analysis) and rapid prototyping. In the context of these observations the discussion focuses on the following two questions: Should object oriented modeling and design be the focus or should greater emphasis be placed on traditional structured analysis techniques that are more widely used in practice? How should prototyping be treated?.{\textless}{\textgreater}		Bruegge, B.						ConflictExcluded	Excluded	new_screen			2		1994				
488		ModelGuidance	Modeling of Instant Messaging System Based on RUP and UML	Rational Unified Process (Rational Unified Process, RUP) is a software engineering process of use-case driven, architecture-centric, iterative and incremental development. This paper analyzes the core workflow of RUP, cuts the RUP process, uses Unified Modeling Language (Unified Modeling Language, UML), proposes the steps for small and medium software system modeling, and applies to the modeling process of instant messaging system analysis, design and implementation. Practice shows that the combination of RUP and UML provides developers with guidelines, templates and guidance for the development of software, which helps to reduce the risk of product development, improve the efficiency of software development and improve the quality of software.		Jin, L.; Liang, X.						ConflictExcluded	Excluded	new_screen			2		2016				
489		ModelGuidance	The MONDO collaboration framework: Secure collaborative modeling over existing version control systems	Model-based systems engineering of critical cyber-physical systems necessitates effective collaboration between different stakeholders while still providing secure protection of intellectual properties of all involved parties. While engineering artifacts are frequently stored in version control repositories, secure access control is limited to file-level strategies in most existing frameworks where models are split into multiple fragments with all-or-nothing permissions, which becomes a scalability and usability bottleneck in case of complex industrial models. In this paper, we introduce the MONDO Collaboration Framework, which provides rule-based fine-grained model-level secure access control, property-based locking and automated model merge integrated over existing version control systems such as Subversion (SVN) for storage and version control. Our framework simultaneously supports offline collaboration (asynchronous checkoutmodify- commit) on top of off-the-shelf modeling tools and online scenarios (GoogleDocs-style short transactions) scenarios by offering a web-based modeling frontend. Screencast Demo: https://youtu.be/Ix3CgmsYIU0 © 2017 Association for Computing Machinery.		Debreceni, C.; Bergmann, G.; Búr, M.; Ráth, I.; Varró, D.	Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering					ConflictExcluded	Excluded	new_screen			2		2017				
490		ModelGuidance	Value-based software quality modeling	This study is unique in incorporating cost-sensitive learning techniques during the model-training process of building software quality estimation models, such as predicting program modules as fault-prone or not-fault-prone. Such models are usually built from knowledge of past projects and then evaluated using prediction error rates or performance metrics derived from the four basic metrics: true positive rate, false positive rate, true negative rate, and false negative rate. To date, most studies have evaluated the cost aspects of software quality models using the expected cost of misclassification after model training. In this study we investigate the strategy of using a cost-sensitive learning technique, MetaCost, during the training process of C4.5 and Naive Bayes classification models. Software practitioners can use this approach to obtain a direct insight into the cost-based performance of the trained software quality model. A large case study of four software measurement datasets, two classification algorithms, one cost-sensitive learning technique, and a wide range of cost ratio values reveals the empirically-validated benefits of using cost-sensitive learning as a useful technique during defect prediction modeling.		Seliya, N.; Khoshgoftaar, T. M.	Proceedings of the 21st International Conference on Software Engineering and Knowledge Engineering, SEKE 2009					ConflictExcluded	Excluded	new_screen			2		2009				
491		ModelGuidance	MODELLING STYLES AND THEIR SUPPORT IN THE CASM ENVIRONMENT.	The design and implementation of integrated software support environments for discrete-event simulation modeling is examined, focusing on the development of such environments. The issues are then examined in the context of one such environment, namely, that of the computer-aided simulation modeling (CASM) group at the London School of Economics.		Balmer, David W.	Winter Simulation Conference Proceedings					ConflictExcluded	Excluded	new_screen			2		1987				
492		ModelGuidance	Modeling actor systems using dynamic I/O automata	Actor-based programming has become an important technique for the development of concurrent and distributed systems. This paper presents a new automaton model for actor systems and demonstrates how the model can be used for compositional verification. The model allows expressing the detailed behavior of actor components where components are built from actors and other components. It abstracts from internal and environment behavior, supports encapsulation of actors, and captures the dynamic aspects of actor creation and exposure of actor names to the component environment, which are crucial for verification. We handle these changes at the component interface by specializing dynamic I/O automata. The model can be used as a foundation of different verification techniques. We illustrate this by combining weakest precondition techniques on the actor level with simulation proofs on the component level. © Springer International Publishing Switzerland 2016.		Kurnia, I. W.; Poetzsch-Heffter, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2016				
493		ModelGuidance	Story Driven Modeling: A Practical Guide to Model Driven Software Development	"The Rational Unified Process lacks practical guidance for the development of object oriented applications. Model Driven Software Development (MDD) proposes to do most of these development steps at the model level of abstraction. This tutorial takes the MDD idea and examplifies such a development process. The tutorial guides the user from textual requirements descriptions through UML scenario modeling to the derivation of test case specifications, class diagrams and UML behavior models and finally to the implementation of the desired system. The tutorial employs a running example that allows to illustrate the modeling activities for each development phase and the guidelines for each modeling step. We discuss how existing CASE tools may be used in such an approach and how the Fujaba environment supports our development process.
"		Zündorf, Albert						ConflictIncluded	Excluded	new_screen			2		2005				
494		ModelGuidance	Model-based dynamic reliability engineering for hybrid electric vehicle design	The paper analyzes the tradeoff between battery life and functional reliability for a hybrid electrical vehicle design study. Reliability of complex technical systems often depends on their dynamic behavior. Petri nets have significant advantages over classic static models of reliable systems in describing such systems, and an international standard IEC 62551 has been published recently (Analysis techniques for dependability - Petri net techniques). Simulation is the only possible method to derive reliability results for realistic systems that have a large state space or are not Markovian (memoryless). The paper shows how the very long run times for highly reliable systems can be sped up significantly by using the RESTART-method for stochastic Petri nets and its implementation in the TimeNET software tool.		Zimmermann, A.; Dietrich, T.; Maciel, P.; A. Hildebrandt						ConflictExcluded	Excluded	new_screen			2		2017				
495		ModelGuidance	An automatic trace based performance evaluation model building for parallel distributed systems	Performance models can be built at early stages of software development cycle to aid software designers to assess design alternatives and identify fundamental design pitfalls before the implementation phase starts. These models are flexible for varying operational conditions and design alternatives; however, their creation is not trivial and requires considerable efforts. This paper addresses this problem by introducing automation in process of Layered Queuing Network (LQN) performance model creation for traces of events generated from instrumented software programs in the nodes of a distributed parallel software application. The event-traces are created based on a new timestamp format, which is independent of physical time and uses extremely low count elements. A set of post-mortem methodologies have been introduced to identify the interactions between the service nodes of the parallel distributed software application and determine their workload activities, while supporting concurrent executions in the nodes. It can capture Forward, Asynchronous, Synchronous and loops of Asynchronous or Forward interactions. The final result is a framework of methodologies, specifications and tools which is appropriate for model-based performance evaluation parallel distributed software applications.		Mizan, A.; Franks, G.	ICPE'11 - Proceedings of the 2nd Joint WOSP/SIPEW International Conference on Performance Engineering					ConflictExcluded	Excluded	new_screen			2		2011				
496		ModelGuidance	On the modeling and generation of service-oriented tool chains	Tool chains have grown from ad-hoc solutions to complex software systems, which often have a service-oriented architecture. With service-oriented tool integration, development tools are made available as services, which can be orchestrated to form tool chains. Due to the increasing sophistication and size of tool chains, there is a need for a systematic development approach for service-oriented tool chains. We propose a domain-specific modeling language (DSML) that allows us to describe the tool chain on an appropriate level of abstraction. We present how this language supports three activities when developing service-oriented tool chains: communication, design and realization. A generative approach supports the realization of the tool chain using the service component architecture. We present experiences from an industrial case study, which applies the DSML to support the creation of a service-oriented tool chain. We evaluate the approach both qualitatively and quantitatively by comparing it with a traditional development approach. © 2012 Springer-Verlag.		Biehl, M.; El-Khoury, J.; Loiret, F.; Törngren, M.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2014				
497		ModelGuidance	Modeling coordination and control in cross-organizational workflows	Current e-service technology paradigms require the analysis and conceptual modeling of cooperative inter-organizational workflows. Cooperation among different organizations is based on contractual agreements that coordinate production activities among cooperating companies and establish mechanisms to control the fulfillment of production goals. Existing conceptual models of workflows do not provide constructs and related methodological guidelines to support the high-level conceptual modeling of coordination and control activities. This paper presents a model that helps specifying patterns of control and coordination among different cooperating actors and associating corresponding contractual rules. Patterns are organized along a continuum between hierarchical and market control and coordination paradigms. The model is explained based on an example showing the fundamental differences between hierarchical and market coordination and control. It is also shown how operating flows change as coordination and control shift from hierarchical to market patterns, due to varying contractual rules for cooperation in executing operating activities. © Springer-Verlag Berlin Heidelberg 2002.		Colombo, E.; Francalanci, C.; Pernici, B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2002				
498		ModelGuidance	A Modeling Approach for Business Processes Based on Variability	The business processes of an enterprise are its core asset, enabling a prompt and flexible response to business changes. Recently, business processes have attracted considerable interest with the emergence of service-oriented computing environments. In these environments, the business process acts as a connection point between the business and information technology. Therefore, a systematic and practical process model is required to develop business processes efficiently. We propose a process model that consists of a business definition and a business decision, and a process definition phase for developing a business process by combining product-line concepts. The proposed process model can facilitate the efficient development of a business process by providing explicit templates and supporting tools.		Park, J.; Yeom, K.						ConflictIncluded	Excluded	new_screen			2		2011				
499		ModelGuidance	Component-based software development model	Most existing software development processes, methods, and tools are weak in supporting architecture modeling and component reuse. This paper introduces concepts and principles behind Component-Based Software Engineering (CBSE), the style of system construction by component assembly. A process model and supporting technologies are described. Central to this model is explicit representation of software components and component-based architectures.		Ning, Jim Q.	Proceedings - IEEE Computer Society's International Computer Software \& Applications Conference					ConflictExcluded	Excluded	new_screen			2		1996				
500		ModelGuidance	Fault-Tolerant SoFtware Reliability Modeling	In situations in which computers are used to manage life-critical situations, software errors that could arise due to inadequate or incomplete testing cannot be tolerated. This paper examines three methods of creating fault-tolerant software systems, Recovery Block, N-Version Programming, and Consensus Recovery Block, and it presents reliability models for each. The models are used to show that one method, the Consensus Recovery Block, is more reliable than the other two.		Scott, R. K.; Gault, J. W.; McAllister, D. F.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		1987				
501		ModelGuidance	Use case modeling guidelines	Use case modeling has become the most popular de facto standard technique for performing software requirements analysis and specification. However, use case modeling has its well known problems, and different requirements engineers typically perform use case modeling differently. The paper provides a hierarchically organized set of detailed guidelines for use case modeling.		Firesmith, D. G.						ConflictIncluded	Included	new_screen			2		1999				
502		ModelGuidance	Facet-oriented modelling open objects for model-driven engineering	Model-driven engineering (MDE) promotes models as the main assets in software projects. Models are built using a language whose syntax is defined by a metamodel. Hence, objects in models are typed by a metamodel class, and this typing is static as it is established at creation time and cannot be changed later. This way, objects in MDE are closed and fixed w.r.t. the type they conform to, the slots they have, and the constraints they should obey. This hampers the reuse of model-related artefacts like transformations, as well as the opportunistic or dynamic combination of metamodels. To alleviate this rigidity, we propose making model objects open so that they can acquire or drop so-called facets, each one contributing a type, slots and constraints to the object. Facets are defined by regular metamodels, hence being a lightweight extension of standard metamodelling. Facet metamodels may declare usage interfaces, and it is possible to specify laws that govern how facets are to be assigned to the instances of a metamodel. In this paper, we describe our proposal, report on an implementation, and illustrate scenarios where facets have advantages over other techniques. © 2018 Association for Computing Machinery.		Lara, J. D.; Guerra, E.; Kienzle, J.; Hattab, Y.	SLE 2018 - Proceedings of the 11th ACM SIGPLAN International Conference on Software Language Engineering, co-located with SPLASH 2018					ConflictExcluded	Excluded	new_screen			2		2018				
503		ModelGuidance	Modelling of message security concerns with UML	Service oriented computing is increasingly accepted as a cross-disciplinary paradigm to integrate distributed application functionality through service interfaces. Integration through services as entry points for inter-organisational collaboration can be achieved by exchanging data in messages. In this architectural style, the security of sensitive exchanged data is essential. Security needs to be carefully considered during the entire life-cycle (Devanbu, 2000). Unfortunately, current UML-based modelling approaches do not support the adequate integration of message security concerns. In this paper, we investigate various integration options with UML systematically. The evaluation encompasses most of the options that are proposed today in science and industry as UML profiles. We conclude that neither of those approaches is sufficient for the systematic and comprehensive treatment of message security during modelling. To this end, we propose a new approach that is based on UML and very minor extensions of OCL.		Mehr, F.; Schreier, U.	ICEIS 2007 - 9th International Conference on Enterprise Information Systems, Proceedings					ConflictExcluded	Excluded	new_screen			2		2007				
504		ModelGuidance	A Context-Role Based Modeling Framework for Engineering Adaptive Software Systems	To engineer adaptive software systems, it is crucial to capture changes that drive adaptation. We believe that a pair of concepts, context and roles, is most effective in capturing such changes and creating an adaptation mechanism to deal with those changes. We propose a new framework for developing adaptive software systems based on Epsilon, a context-role oriented approach. The framework covers the whole process of adaptive system development, starting from the requirements phase through the implementation phase of program generation by means of model building and model transformation. We show effectiveness of our approach with a case study of the Traffic Jam Monitoring System. In this case, traffic jam occurrence, growth and dissolution are captured as context creation, merging and splitting and roles are played by intelligent cameras. How an Epsilon model is built and then successively transformed into a final program through several steps of model transformation is explained.		Tamai, T.; Monpratarnchai, S.						ConflictExcluded	Excluded	new_screen			2		2014				
505		ModelGuidance	Amoeba: A Methodology for Modeling and Evolving Cross-Organizational Business Processes	"Business service engagements involve processes that extend across two or more autonomous organizations. Because of regulatory and competitive reasons, requirements for cross-organizational business processes often evolve in subtle ways. The changes may concern the business transactions supported by a process, the organizational structure of the parties participating in the process, or the contextual policies that apply to the process. Current business process modeling approaches handle such changes in an ad hoc manner, and lack a principled means for determining what needs to be changed and where. Cross-organizational settings exacerbate the shortcomings of traditional approaches because changes in one organization can potentially affect the workings of another. This article describes Amoeba, a methodology for business processes that is based on business protocols. Protocols capture the business meaning of interactions among autonomous parties via commitments. Amoeba includes guidelines for (1) specifying cross-organizational processes using business protocols, and (2) handling the evolution of requirements via a novel application of protocol composition. This article evaluates Amoeba using enhancements of a real-life business scenario of auto-insurance claim processing, and an aerospace case study.
"		Desai, Nirmit; Chopra, Amit K.; Singh, Munindar P.	ACM Trans. Softw. Eng. Methodol.					ConflictExcluded	Excluded	new_screen			2		2009				
506		ModelGuidance	A MODEL-DRIVEN APPROACH TO WEAVE ARCHITECTURAL STYLES INTO SERVICE-ORIENTED ARCHITECTURES	Model-driven development is recognized as one of the most promising approaches in software engineering. Recent research in the area highlights the importance of using an explicit architectural model in this context. Since service-oriented architectures have also demonstrated to be adequate to overcome current software needs, the idea of using the model-driven approach to generate service-oriented architectural models has successfully flourished in the last years. However, the emphasis on the Service-Oriented Computing ({SOC}) paradigm has led to the design of architectures lacking some desirable features. Knowing the benefits provided by architectural styles, we have found that their use can help us to overcome those needs. Our goal is to obtain a service-oriented model which satisfies the requirements of the concrete architecture and complies with the constraints and vocabulary defined for a specific architectural style. To achieve this, here, we propose to use a weaving model which merges the concrete architectural model with a model of the architectural style of choice.		Lopez-Sanz, Marcos; Manuel Vara, Juan; Marcos, Esperanza; Cuesta, Carlos E.	{INTERNATIONAL} {JOURNAL} {OF} {COOPERATIVE} {INFORMATION} {SYSTEMS}					ConflictExcluded	Excluded	new_screen			2		2011				
507		ModelGuidance	A model-driven development framework for non-functional aspects in service oriented architecture	Service oriented architecture (SOA) is an emerging style of software architectures to reuse and integrate existing systems for designing new applications. Each application is designed in an implementation independent manner using two major abstract concepts: services and connections between services. In SOA, non-functional aspects (e.g., security and fault tolerance) of services and connections should be described separately from their functional aspects (i.e., business logic) because different applications use services and connections in different non-functional contexts. This paper proposes a model-driven development (MDD) framework for non-functional aspects in SOA. The proposed MDD framework consists of (1) a Unified Modeling Language (UML) profile to model non-functional aspects in SOA, and (2) an MDD tool that transforms a UML model defined with the proposed profile to application code. Empirical evaluation results show that the proposed MDD framework improves the reusability and maintainability of service-oriented applications by hiding low-level implementation technologies in SOA. Copyright © 2008, IGI Global.		Wada, H.; Suzuki, J.; Oba, K.	International Journal of Web Services Research					ConflictExcluded	Excluded	new_screen			2		2008				
508		ModelGuidance	Modeling scenarios for the performance prediction of distributed real-time embedded systems	Autonomous defence systems are typically characterized by hard constraints on space, weight and power. These constraints have a strong impact on the non-functional properties and especially performance of the final system. System execution modelling tools permit early prediction of the performance of model driven systems; however they are intended for one shot analysis, not for repeatable, interactive use. In this paper we propose a Domain Specific Language for describing scenarios to repeatedly test a system execution model within a Synthetic Environment. We exemplify it by describing and executing a scenario involving an UAV and a CMS. © 2013 IEEE.		Falkner, K.; Chiprianov, V.; Falkner, N.; Szabo, C.; Puddy, G.	2013 Military Communications and Information Systems Conference, MilCIS 2013 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2013				
509		ModelGuidance	Model-driven engineering techniques for the development of multi-agent systems	Model-driven engineering (MDE), implicitly based upon meta-model principles, is gaining more and more attention in software systems due to its inherent benefits. Its use normally improves the quality of the developed systems in terms of productivity, portability, inter-operability and maintenance. Therefore, its exploitation for the development of multi-agent systems (MAS) emerges in a natural way. In this paper, agent-oriented software development (AOSD) and MDE paradigms are fully integrated for the development of MAS. Meta-modeling techniques are explicitly used to speed up several phases of the process. The Prometheus methodology is used for the purpose of validating the proposal. The meta-object facility (MOF) architecture is used as a guideline for developing a MAS editor according to the language provided by Prometheus methodology. Firstly, an Ecore meta-model for Prometheus language is developed. Ecore is a powerful tool for designing model-driven architectures (MDA). Next, facilities provided by the Graphical Modeling Framework (GMF) are used to generate the graphical editor. It offers support to develop agent models conform to the meta-model specified. Afterwards, it is also described how an agent code generator can be developed. In this way, code is automatically generated using as input the model specified with the graphical editor. A case of study validates the method put in practice for the development of a multi-agent surveillance system. © 2011 Elsevier Ltd. All rights reserved.		Gascueña, J. M.; Navarro, E.; Fernández-Caballero, A.	Engineering Applications of Artificial Intelligence					ConflictExcluded	Excluded	new_screen			2		2012				
510		ModelGuidance	A Modeling Methodology for Sizing A Computer Based System in a Netted Environment	"This paper describes a hybrid model, combining both analytical and simulation techniques, which was developed to study the performance of a netted computer based system. The computer based system that was modeled is the Facility Assignment and Control System (FACS). This system is presently being deployed within several Bell Operating Companies to inventory and assign central office and outside plant facilities. A key feature of the model is its ability to characterize the dynamic nature of FACS. An understanding of this dynamic nature is necessary in establishing important operational guidelines such as allowable CPU utilization, levels of multiprogramming and priority of transaction processing. In addition, the model allows the user to investigate the sensitivity of the system to a wide range of conditions. Typical study items could include the effect of various load scenarios, ability of the system to meet performance objectives, and different hardware configurations. As part of this paper, both the practical aspects of modeling a netted computer based system and the theoretical development of the hybrid model are considered.
"		Becker, S. T.; Rege, K. M.; Sengupta, B.						ConflictExcluded	Excluded	new_screen			2		1984				
511		ModelGuidance	Development of domain model based on SUMO ontology	Domain model is the first model in the scope of interests of software developers. Its creation, especially for complex domain, can be very costly and time consuming, as it extensively involves domain experts. On the other side, domain knowledge could be included in existing ontologies, and can be extracted, with the support of domain experts, from them. That way of knowledge extraction should lead to better model quality, preventing from misunderstandings between business analysts and domain experts. The paper presents an approach to business model development on the base of SUMO ontologies. The approach is explained with the use of simple, but real example. The results are promising. Domain models, created using this approach, could be perceived as valuable input for further development. © Springer International Publishing Switzerland 2015.		Hnatkowska, B.; Huzar, Z.; Dubielewicz, I.; Tuzinkiewicz, L.	Advances in Intelligent Systems and Computing					ConflictIncluded	Excluded	new_screen			2		2015				
512		ModelGuidance	Understanding strategic moves and reciprocity on software ecosystems: A strategic modeling approach	Many software ecosystems comprise rival vendors that cooperate and compete with each other simultaneously. This type of relationship is termed coopetition wherein enterprises cooperate to increase collective benefits while competing to maximize their individual gains. In such a relationship, strategic moves by an actor can have significant consequences for other actors in the ecosystem. This paper proposes a model-based approach for analyzing strategic moves in software ecosystems using i∗ and game trees. We offer a methodology for developing complementary i∗ models and game trees. We also explicate guidelines for applying this methodology in a consistent manner. We draw upon a published case study as an illustrative example and instantiate a model based on it to assess the strengths and weaknesses of this methodology. © Copyright 2017 for the individual papers by the papers' authors.		Pant, V.; Yu, E.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2017				
513		ModelGuidance	Modelling by the People, for the People	Domain-specific modelling has moved the focus of model content from the implementation domain to the problem domain. However, much research still sees most modellers as programmers – a tacit assumption that is exemplified by the use of IDEs as modelling environments. Model-Driven Engineering research should instead be reaching out to make itself presentable to subject matter experts – as language creators, users, and research subjects. Every leap in developer numbers has been triggered by a new format, and we need another such leap now. Domain-specific modelling is ideally placed to step up and enable the creation of applications by people of all backgrounds. © Springer International Publishing AG 2018.		Kelly, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2018				
514		ModelGuidance	Development of CMS-Based Web-Applications Using a Model-Driven Approach	The emerging Model-Driven Engineering paradigm advocates the use of models as first-class citizens in the software development process, while artifacts such as documentation and source-code can be quickly produced from those models by using automated transformations. One of the many types of deployment platforms that can potentially benefit from such model-driven approaches are Content Management Systems, as these approaches can significantly accelerate the development of new web-applications and features, as well as simplify their maintenance. This work proposes the creation of a model-driven approach for the development of web-applications based on Content Management Systems. This approach is based on the creation of two modeling languages (which are situated at different levels of abstraction, and are used to both quickly model a web-application and provide a common ground for the creation of additional languages), and a mechanism for the processing of models specified using those languages. The current results of this work so far are the development of a Content Management System that effectively supports web-applications of medium complexity, and the creation of a reference case study that will be used to validate this work.		Saraiva, J. d S.; Silva, A. R. d						ConflictExcluded	Excluded	new_screen			2		2009				
515		ModelGuidance	The multiple-asymmetric-utility system model: A framework for modeling cyber-human systems	Traditional cyber security modeling approaches either do not explicitly consider system participants or assume a fixed set of participant behaviors that are independent of the system. Increasingly, accumulated cyber security data indicate that system participants can play an important role in the creation or elimination of cyber security vulnerabilities. Thus, there is a need for cyber security analysis tools that take into account the actions and decisions of human participants. In this paper, we present a modeling approach for quantifying how participant decisions can affect system security. Specifically, we introduce a definition of a cyber-human system (CHS) and its elements, the opportunity-willingness-capability (OWC) ontology for classifying CHS elements with respect to system tasks, the human decision point (HDP) as a first-class system model element, and the multiple-asymmetric-utility system modeling framework for evaluating the effects of HDPs on a CHS. This modeling approach provides a structured and quantitative means of analyzing cyber security problems whose outcomes are influenced by human-system interactions. © 2011 IEEE.		Eskins, D.; Sanders, W. H.	Proceedings of the 2011 8th International Conference on Quantitative Evaluation of Systems, QEST 2011					ConflictExcluded	Excluded	new_screen			2		2011				
516		ModelGuidance	Just model! — Putting automatic synthesis of node-link-diagrams into practice	Node-link-diagrams can effectively communicate information, but their creation and maintenance require a lot of manual effort. Therefore we follow the transient views approach that aims at automatically deriving high quality diagrams from arbitrary models. Besides composing diagram structures, this task involves the arrangement of the diagram elements on the canvas, and, on a finer-grained level of detail, the arrangement of the shapes (rectangles, circles, lines, etc.) that form the diagram elements. We show the feasibility of this approach by means of the Kieler Lightweight Diagrams (KLighD) framework that creates diagrams this way. We discuss our overall design objectives in terms of this framework, investigate an alternative way to shape diagram figures, and briefly demonstrate the usage of KLighD in custom modeling environments by means of a case study.		Schneider, C.; Spönemann, M.; Hanxleden, R. von						ConflictExcluded	Excluded	new_screen			2		2013				
517		ModelGuidance	From requirements to source code: a Model-Driven Engineering approach for RESTful web services	During the last few years, the {REST} architectural style has drastically changed the way web services are developed. Due to its transparent resource-oriented model, the {RESTful} paradigm has been incorporated into several development frameworks that allow rapid development and aspire to automate parts of the development process. However, most of the frameworks lack automation of essential web service functionality, such as authentication or database searching, while the end product is usually not fully compliant to {REST}. Furthermore, most frameworks rely heavily on domain specific modeling and require developers to be familiar with the employed modeling technologies. In this paper, we present a Model-Driven Engineering ({MDE}) engine that supports fast design and implementation of web services with advanced functionality. Our engine provides a front-end interface that allows developers to design their envisioned system through software requirements in multimodal formats. Input in the form of textual requirements and graphical storyboards is analyzed using natural language processing techniques and semantics, to semi-automatically construct the input model for the {MDE} engine. The engine subsequently applies model-to-model transformations to produce a {RESTful}, ready-to-deploy web service. The procedure is traceable, ensuring that changes in software requirements propagate to the underlying software artefacts and models. Upon assessing our methodology through a case study and measuring the effort reduction of using our tools, we conclude that our system can be effective for the fast design and implementation of web services, while it allows easy wrapping of services that have been engineered with traditional methods to the {MDE} realm.		Zolotas, Christoforos; Diamantopoulos, Themistoklis; Chatzidimitriou, Kyriakos C.; Symeonidis, Andreas L.	{AUTOMATED} {SOFTWARE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		2017				
518		ModelGuidance	Rule-Based Service Modeling	In the context of service-oriented computing, services provide the capabilities necessary to support the business, especially its processes. Within the service modeling process, the services that constitute a common and stable basis for all supported processes have to be identified. The consideration of each business process on its own, without guidelines, may yield a service inventory that is not adjusted with all requirements, and for instance contains several services providing the same capability, having an inappropriate granularity, or using different taxonomies. Thus, this paper suggests applying rules on a model capturing relevant business requirements to systematically derive a blueprint as a proposal of necessary services. The approach is exemplified by a scenario at the Karlsruhe Institute of Technology (KIT), where it is applied in the context of module catalog management.		Gebhart, M.; Abeck, S.						ConflictExcluded	Excluded	new_screen			2		2009				
519		ModelGuidance	Collaborative modeling techniques to facilitate communication among end-users and analysts	In activity-based system modeling, natural language descriptions are difficult for analysts to understand and the abstract modeling notation used for systems design is difficult for end-users to understand. Field studies have demonstrated, however, that many of the problems associated with participative modeling can be alleviated with customized software. One group tool for activity-based (IDEFO) modeling incorporates features that specifically address problems identified during field studies conducted with previous prototypes. The specialists are freed from data entry responsibilities and can concentrate on coaching the end-user participants on the modeling process. Analysts can identify inconsistencies and violations of modeling rules dynamically, minimizing the participants' need for formal advanced training in the methodology. Ideally, the analysts can supply the abstraction needed for technical methodological requirements (i.e., level balancing of constraints) without threatening the end-user's sense of ownership of the model.		Daniels Jr., Robert M.; Hayes, Glenda	Proceedings of the ACM SIGCPR Conference					ConflictExcluded	Excluded	new_screen			2		1995				
520		ModelGuidance	A style-based architecture modelling approach for UML 2 component diagrams	There has been a variety of work arguing that the UML 1.x was not adequate as an Architectural Description Language (ADL). UML 2.x has made a large step towards supporting modelling software architectures, e.g. through the introduction of modelling constructs for composite structures. But many modelling constructs from ADLs can still not be mapped to the UML in a straightforward way. Important examples are typed connectors and architectural styles. We propose a mapping of of the MidArch modelling approach, which is similar to the well-known ADL Acme, to the UML 2.x and the OCL. The mapping is based on mapping the style/family construct to UML Profiles and the system/configuration construct to UML Component Diagrams. Architectural constraints are directly mapped to OCL constraints. In addition, OCL constraints are used to specialize the architecture modelling constructs of UML 2.x, and thus adapt the UML 2.x to the MidArch modelling approach. We describe a case study applying our approach and discuss our experiences.		Giesecke, S.; Marwede, F.; Rohr, M.; Hasselbring, W.	Proceedings of the 11th IASTED International Conference on Software Engineering and Applications, SEA 2007					ConflictExcluded	Excluded	new_screen			2		2007				
521		ModelGuidance	Model-driven product line architectures	It has long been recognized that successful product line engineering revolves around the creation of a coherent and flexible product line architecture that consolidates the common parts of a product family for reuse and captures the variant parts for simple adaptation. However, it has been less clear what form such architectures should take and how they should be represented. One promising approach is offered by the new Model-Driven Architecture (MDA) paradigm of the Object Management Group (OMG). This paradigm holds that an organization’s key architectural assets should be represented in an abstract “platform-independent” way, in terms of Unified Modeling Language (UML) models, and thereby be shielded from the idiosyncrasies and volatility of specific implementation technologies. In this paper, we discuss the opportunities and challenges involved in using the MDA paradigm for product line engineering and explain how model-driven, product line architectures can be developed, maintained and applied. After first outlining the core concepts of product line engineering and the ad hoc strategies currently used to support it, the paper provides a detailed metamodel of the information that needs to be stored within a product line architecture. © Springer-Verlag Berlin Heidelberg 2002.		Muthig, D.; Atkinson, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2002				
522		ModelGuidance	On models for a trusted application system	A trusted application system must support the processing needs of a specific operating environment. Its security policy includes many constraints that are specific to the application, so the trusted application system can be more difficult to develop and evaluate than a trusted product. One approach for reducing the development and evaluation effort for a trusted application system is to build the system on an evaluated product. Among other advantages, this approach may relieve the developer from demonstrating that the application's trusted computing base enforces those application policies that are enforced by the evaluated product. The authors discuss their thoughts on modeling a trusted application system based on an evaluated product. They identify some lessons learned from experience in evaluating a trusted application system formal model and provide a set of guidelines for writing a formal model for a trusted application system based on an evaluated product. © 1990 IEEE.		Payne, C. N.; Froscher, J. N.; McDermott, J. P.	Proceedings - Annual Computer Security Applications Conference, ACSAC					ConflictExcluded	Excluded	new_screen			2		1990				
523		ModelGuidance	The Structured Process Modeling Method (SPMM) what is the best way for me to construct a process model?	More and more organizations turn to the construction of process models to support strategical and operational tasks. At the same time, reports indicate quality issues for a considerable part of these models, caused by modeling errors. Therefore, the research described in this paper investigates the development of a practical method to determine and train an optimal process modeling strategy that aims to decrease the number of cognitive errors made during modeling. Such cognitive errors originate in inadequate cognitive processing caused by the inherent complexity of constructing process models. The method helps modelers to derive their personal cognitive profile and the related optimal cognitive strategy that minimizes these cognitive failures. The contribution of the research consists of the conceptual method and an automated modeling strategy selection and training instrument. These two artefacts are positively evaluated by a laboratory experiment covering multiple modeling sessions and involving a total of 149 master students at Ghent University. © 2017 Elsevier B.V.		Claes, J.; Vanderfeesten, I.; Gailly, F.; Grefen, P.; Poels, G.	Decision Support Systems					ConflictExcluded	Excluded	new_screen			2		2017				
524		ModelGuidance	Creating a Domain Specific Modelling Method for Ambient Assistance	Domain specific modelling languages (DSMLs) have gained increasing popularity: they are convenient, support the productivity of modelling, and help to increase model quality and comprehensibility. Some work has been published about how to use or evaluate a DSML. In contrast to that, there is hardly any guideline for the DSML creation process and almost none for creating a Domain Specific Modelling Method (DSMM). This paper aims at contributing to fill that gap: it introduces a process for creating a DSMM. For illustration it uses a modelling language that has been created for the domain of Ambient Assistance domain. © 2015 IEEE.		Michael, J.; Mayr, H. C.	15th International Conference on Advances in ICT for Emerging Regions, ICTer 2015 - Conference Proceedings					ConflictExcluded	Excluded	new_screen			2		2016				
525		ModelGuidance	Collaborative conceptual schema design: A process model and prototype system	"Recent years have seen an increased interest in providing support for collaborative activities among groups of users participating in various information systems design tasks such as, requirements determination and process modeling. However, little attention has been paid to the collaborative conceptual database design process. In this article, we develop a model of the collaborative conceptual schema development process and describe the design and implementation of a graphical multiuser conceptual schema design tool that is based on the model. The system we describe allows a group of users to work collaboratively on the creation of database schemas in a synchronous (same-time) mode (either in a face-to-face or distributed setting). Extensive modeling support is provided to assist users in creating semantically correct conceptual schemas. The system also provides users with several graphical facilities such as, a large drawing workspace with the ability to scroll or jump"" to any portion of this workspace"		Ram, S.; Ramesh, V.	ACM Transactions on Information Systems					ConflictExcluded	Excluded	new_screen			2		1998				
526		ModelGuidance	A modeling methodology to facilitate safety-oriented architecture design of industrial avionics software	Summary Ensuring that avionics software meets safety requirements at each development stage is very important to warrant the safe operation of an avionics system. Many safety requirements are imposed by various standards and industrial regulations that must be met by avionics software. One of such standards is DO-178B/C, which provides guidelines (e.g., development process and objectives to satisfy in development activities) for meeting safety requirements. This paper presents a modeling methodology including a UML profile for specifying safety requirements on a component-based architecture model and a set of design guidelines on avionics software. These safety requirements were identified from both standards (mainly DO-178B/C) and current engineering practices in the domain of avionics systems. The methodology automatically enforces these safety requirements. We have applied the methodology on an industrial autopilot system, and several previously uncaught faults were revealed. Copyright © 2014 John Wiley & Sons, Ltd.		Wu, J.; Yue, T.; Ali, S.; Zhang, H.	Software - Practice and Experience					ConflictIncluded	Included	new_screen			2		2015				
527		ModelGuidance	A finite-state machine approach for modeling and analyzing Restful systems	Representational State Transfer (REST), as an architectural style for distributed hypermedia systems, enables scalable operation of the World Wide Web and is the foundation for its future evolution. However, although described over 10 years ago, no formal model for representing RESTful systems exists that is comprehensive in following REST principles, intuitive to Web engineers and researchers alike, and offers practical development guidelines. The lack of such formal models has hindered understanding of both the REST architectural style and the Web architecture, consequently limiting Web engineering advancement. In this paper we present a generic model of RESTful systems based on a finite-state machine formalism. We show that the model enables intuitive formalization of REST design principles, including uniform interface, stateless client-server operation, and code-on-demand execution. Furthermore, we describe the model's mapping to a system-level view of operation and apply the model to an example Web application and several real-word Web applications. Finally, we explore the practical challenges and benefits of using the model in the field of Web engineering, ranging from better understanding of REST to designing frameworks for RESTful system development.		Zuzak, I.; Budiseli, I.; Delac, G.	Journal of Web Engineering					ConflictExcluded	Excluded	new_screen			2		2011				
528		ModelGuidance	Modeling and cross-domain dependability analysis of cyber-physical systems	This paper discusses a novel method of modeling and formal verification to support dependability analyses. The method is demonstrated in an example of a fault management capability of robots that interacts with equipment and humans. Hazard analyses produce derived requirements for fault management capabilities. These include safety critical functions for collision avoidance and temporary autonomy. Derived requirements are represented formally in models that are used to produce dependability evidence using theorem proving, model-based test vector generation, test execution with code coverage analysis, and requirement-to-test traceability. To address the challenges of heterogeneity of modeling tools and languages, Semantic Web Technologies are used for model composition and model transformation from modeling tools to formal analysis tools. © 2018 IEEE.		Blackburn, M. R.; Austin, M. A.; Coelho, M.	12th Annual IEEE International Systems Conference, SysCon 2018 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2018				
529		ModelGuidance	Towards a deep, domain-specific modeling framework for robot applications	In the future, robots will play an increasingly important role in many areas of human society from domestic housekeeping and geriatric care to manufacturing and running businesses. To best exploit these new opportunities, and allow third party developers to create new robot applications in as simple and efficient a manner as possible, new user-friendly approaches for describing desired robot behavior need to be supported. This paper introduces a prototype domain-specific modeling framework designed to support the quick, simple and reliable creation of control software for standard robot platforms. To provide the best mix of general purpose and domain-specific language features the framework leverages the deep modeling paradigm and accommodates the execution phases as well as design phases of a robot application's lifecycle.		Atkinson, C.; Gerbig, R.; Markert, K.; Zrianina, M.; Egurnov, A.; Kajzar, F.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2014				
530		ModelGuidance	A modeling approach for use-cases model in UML	UML (Unified Modeling Language) use-cases model is an essential part of software systems model, and significantly affects the effectiveness of software development. So far, there is large arbitrariness because there is not a standardized modeling approach for UML use-cases model. For this reason, this paper introduces a practical modeling approach for it. Firstly, the organization model of domain is built; Secondly, using the activity diagram describes the workflow model of domain; Thirdly, the use-cases model of business is built according to activity diagram; Fourthly, the use-cases model of domain is transformed into the use-cases model of software system; Finally, This process is an iterative loop and refinement process. Further, a case study using this approach is presented. Application results show that this approach is effective in software development.		Wang, Z.						ConflictIncluded	Included	new_screen			2		2012				
531		ModelGuidance	Towards model-driven development of staged participatory multimedia events	The industry nowadays is showing an increasing interest towards an extended interactive television experience, called participation television. This increasing interactivity brings the creation of such television events closer to the creation of regular software as we know it for personal computers and mobile devices. In this paper we report on our work in model-driven development of one kind of such interactive television shows, staged participatory multimedia events. More specifically, this work reports on the domain-specific language we created to model these events and the generation of abstract prototypes. These interactive prototypes are built using web-languages and can be used to perform early evaluation. © Springer-Verlag Berlin Heidelberg 2007.		Van Den Bergh, J.; Huypens, S.; Coninx, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2007				
532		ModelGuidance	A-posteriori typing for Model-Driven Engineering	Model-Driven Engineering is founded on the ability to create and process models conformant to a meta-model. Hence, meta-model classes are used in two ways: as templates to create objects, and as classifiers for them. While these two aspects are inherently tied in most meta-modelling approaches, in this paper, we discuss the benefits of their decoupling. Thus, we rely on standard mechanisms for object creation and propose a-posteriori typing as a means to reclassify objects and enable multiple, partial, dynamic typings. This approach enhances flexibility, permitting unanticipated reutilization (as existing model management operations defined for a meta-model can be reused with other models once they get reclassified), as well as model transformation by reclassification. We show the underlying theory behind the introduced concepts, and illustrate its applicability using our MetaDepth meta-modelling tool.		Lara, J. de; Guerra, E.; Cuadrado, J. Sánchez						ConflictExcluded	Excluded	new_screen			2		2015				
533		ModelGuidance	Ontological Model-Driven Architecture for Ubiquitous Learning Applications	"The ubiquitous learning more than a technology phenomenon is a vision that challenges to review the educational environment to propose new educational settings, because it allows to make available to students a wide variety of educational resources, creates new and varied learning environments, personalizes learning and enables the realization of a series of training activities from anywhere, anytime and from any device. This paper presents a proposed architecture to develop ubiquitous learning applications. Based on this architecture will enable the development of applications operating in pervasive computing dynamic environments and adapt to changes in context. This architecture provides also an application development approach based on ontological models that facilitate dynamic and automatic adaptation of the services that are available to the student. The proposed architecture is currently being used to develop different ubiquitous applications to the university level.

"		Durán, Elena B.; Álvarez, Margarita M.; Únzaga, Silvina I.						ConflictExcluded	Excluded	new_screen			2		2014				
534		ModelGuidance	Conceptual modeling of structure and behavior with UML - The Top Level Object-Oriented Framework (TLOOF) approach	In the last decade UML has emerged as the standard object-oriented conceptual modeling language. Since UML is a combination of previous languages, such as Booch, OMT, Statecharts, etc., the creation of multi-views within UML was unavoidable. These views, which represent different aspects of system structure and behavior, overlap, raising consistency and integration problems. Moreover, the object-oriented nature of UML sets the ground for several behavioral views in UML, each of which is a different alternative for representing behavior. In this paper I suggest a Top-Level Object-Oriented Framework (TLOOF) for UML models. This framework, which serves as the glue of use case, class, and interaction diagrams, enables changing the refinement level of a model without losing the comprehension of the system as a whole and without creating contradictions among the mentioned structural and behavioral views. Furthermore, the suggested framework does not add new classifiers to the UML metamodel, hence, it does not complicate UML. © Springer-Verlag Berlin Heidelberg 2005.		Reinhartz-Berger, I.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2005				
535		ModelGuidance	Modeling organizational architectural styles in UML	Today's information systems operate within a dynamic, organizational context and consequently require flexible architectures to ensure that they remain operational and useful. The Tropos software development methodology is founded on the premise that social and intentional concepts (such as those of actor and goal) can be used throughout the development process from early requirements to implementation. Earlier work within the scope of the project has defined a number of organizational architectural, styles which are suitable for cooperative, dynamic and distributed applications. In this paper, we use UML to describe these novel architectural styles. In doing so we are able to provide a detailed representation of both the structure and behaviour of the styles. © Springer-Verlag Berlin Heidelberg 2003.		Castro, J. F. B.; Silva, C. T. L. L.; Mylopoulos, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2003				
536		ModelGuidance	Performance modeling approach of grid service using queueing petri nets	Performance models are used increasingly throughout the phases of the development and running of grid systems. However, as grid systems grow in size and complexity, building models that accurately capture the different aspects of their behavior becomes a more and more challenging task. As a matter of fact, it is more practical to study grid service performance than to study the whole grid. We present a hierarchical structure of grid service and the concept of grid service execution graph. Then we study how Queueing Petri Net models can be exploited as a powerful performance prediction tool for grid service. A detailed performance model is built in a step-by-step fashion and then used to tackle performance evaluation problem of grid services. In addition to CPU and I/O capacity, it was demonstrated how some complex aspects of grid components behavior, such as service dependency style, reliability impact, and recovery ability, can be modeled. We show that this solution can be helpful to design, analyze and develop grid system more efficiently. ©2010 IEEE.		Zhang, J.; Gu, J.; Yang, H.	ICCSE 2010 - 5th International Conference on Computer Science and Education, Final Program and Book of Abstracts					ConflictExcluded	Excluded	new_screen			2		2010				
537		ModelGuidance	RETRACTED ARTICLE: Research and implementation of AHP-based method base: Model base application of hierarchical model	This paper introduces that the representation and storage of hierarchical model via a database table, achieves the dynamic generation and management of model. It main achieves model base based on AHP. That addresses a number of unstructured or semi-structured problems such as assessment and prediction in the modeling. Focusing on the creation of their corresponding AHP-based method base is to solve practical problems. Experiments show that this method base can be well integrated with model base. So it will be applied in common AHP cases. © 2009 IEEE.		Gan, L.; Wang, X.; Li, R.	KESE 2009 - 2009 Pacific-Asia Conference on Knowledge Engineering and Software Engineering					ConflictExcluded	Excluded	new_screen			2		2009				
538		ModelGuidance	Modeling enterprise service-oriented architectural styles	Modern enterprise consists of complicate business processes and systems. The Enterprise Service-Oriented Architecture (ESOA) becomes an important architectural style that defines the principles for coping with the complexity of designing and implementing business systems. This paper classifies ESOA styles to six substyles and proposes a generic and abstract model for ESOA styles. The model consists of seven sets: services, service consumers, service data, infrastructure, processes, management and quality attributes. This paper formally defines each set and their relationships in ESOA style model, and discusses the roles of these sets. The model can be applied to specify various ESOA styles. As case studies, the definition of instance of ESOA style is applied to analyze and evaluate a Java component-based ESOA-style architecture and several other ESOA-style architectures. Finally, this paper concludes by comparing the proposed model with related ESOA models. © 2010 Springer-Verlag London Limited.		Tang, L.; Dong, J.; Peng, T.; Tsai, W.-T.	Service Oriented Computing and Applications					ConflictExcluded	Excluded	new_screen			2		2010				
539		ModelGuidance	A model-driven approach to dynamic and adaptive service brokering using modes	Industry and academia are exploring ways to exploit the services paradigm to assist in the challenges of software self-management. In this paper we present a novel approach which aims to bring these two fields closer by specifying the requirements and capabilities within a UML2 model architecture style and illustrating how these model elements are used to generate specifications for dynamic runtime service brokering given different modes of a software system. The approach is implemented in a tool suite integrated into the Eclipse IDE with a prototype runtime service broker engine. © 2008 Springer Berlin Heidelberg.		Foster, H.; Mukhija, A.; Rosenblum, D. S.; Uchitel, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2008				
540		ModelGuidance	A Comprehensive Analytical Performance Model of DRAM Caches	"Stacked DRAM promises to offer unprecedented capacity, and bandwidth to multi-core processors at moderately lower latency than off-chip DRAMs. A typical use of this abundant DRAM is as a large last level cache. Prior research works are divided on how to organize this cache and the proposed organizations fall into one of two categories: (i) as a Tags-In-DRAM organization with the cache organized as small blocks (typically 64B) and metadata (tags, valid, dirty, recency and coherence bits) stored in DRAM, and (ii) as a Tags-In-SRAM organization with the cache organized as larger blocks (typiclly 512B or larger) and metadata stored on SRAM. Tags-In-DRAM organizations tend to incur higher latency but conserve off-chip bandwidth while the Tags-In-SRAM organizations incur lower latency at some additional bandwidth. In this work, we develop a unified performance model of the DRAM-Cache that models these different organizational styles. The model is validated against detailed architecture simulations and shown to have latency estimation errors of 10:7% and 8:8% on average in 4-core and 8-core processors respectively. We also explore two insights from the model: (i) the need for achieving very high hit rates in the meta- data cache/predictor (commonly employed in the Tags-In-DRAM designs) in reducing latency, and (ii) opportunities for reducing latency by load-balancing the DRAM Cache and main memory.

"		Gulur, Nagendra; Mehendale, Mahesh; Govindarajan, Ramaswamy						ConflictExcluded	Excluded	new_screen			2		2015				
541		ModelGuidance	Distributed real-time managed systems: A model-driven distributed secure information architecture platform for managed embedded systems	Architecting software for a cloud computing platform built from mobile embedded devices incurs many challenges that aren't present in traditional cloud computing. Both effectively managing constrained resources and isolating applications without adverse performance effects are needed. A practical design-and runtime solution incorporates modern software development practices and technologies along with novel approaches to address these challenges. The patterns and principles manifested in this system can potentially serve as guidelines for current and future practitioners in this field. © 2014 IEEE.		Levendovszky, T.; Dubey, A.; Otte, W. R.; Balasubramanian, D.; Coglio, A.; Nyako, S.; Emfinger, W.; Kumar, P.; Gokhale, A.; Karsai, G.	IEEE Software					ConflictIncluded	Excluded	new_screen			2		2014				
542		ModelGuidance	A UML profile for goal-oriented modeling	The Unified Modeling Language (UML) does not fully address the needs of some important modeling domains, including goals and non-functional requirements (NFR). However, UML can be extended and tailored through the definition of profiles. In this paper, we propose a UML profile for the Goal-oriented Requirement Language (GRL), the goal/NFR notation of the User Requirements Notation (URN), recently standardized by ITU-T as Recommendation Z.151. Our profile is based on the abstract metamodel of GRL defined in accordance with ITU-T Recommendation Z.111 (meta-metamodel). This GRL metamodel has already been successfully tested and implemented in the jUCMNav Eclipse plug-in (a URN modeling tool). The profiling approach used in this paper adheres to the guidelines for UML profile design defined in ITU-T Recommendation Z.119. The resulting profile has been implemented in a UML 2 tool, namely IBM Rational Tau 4.0, and validated with case studies. Our experience and lessons learned are also discussed. © 2009 Springer Berlin Heidelberg.		Abid, M. R.; Amyot, D.; Somé, S. S.; Mussbacher, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2009				
543		ModelGuidance	Guidelines for modelling reactive systems with coloured Petri nets	This paper focus on the modelling of reactive systems, more particularly, control systems. A set of guidelines is proposed in order to build models that support analysis, simulation and prototyping. The guidelines are split in two parts; the analysis of a problem is addressed first, followed by the design with Coloured Petri Nets (CPNs). A smart library example is used as case study. The models developed under this approach turn out to be modular, parameterisable, configurable and executable. © 2013 Springer-Verlag.		Gonçalves, M.; Fernandes, J. M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictIncluded	Included	new_screen			2		2013				
544		ModelGuidance	Modeling Human Behavior for Software Engineering Simulation Games	Simulation games are a well-known concept for teaching in a practical way. Especially for project management training, simulation games are helpful. Students can try out different management strategies and gain experience without endangering real projects. To provide a good learning environment, it is important to simulate the employees managed by the player as realistically as possible. However, existing approaches only use simple models to simulate human behavior, missing psychological aspects like motivation and interpersonal interaction, and therefore are not detailed enough for leadership and project management training. We present a new decision-making model based on findings of psychology, which can be used for simulating a more realistic human behavior. We use heuristics for calculating the motivational force of all potential actions an employee has, in order to decide which he will choose. This calculation is not only based on the project's state and schedule, but also on emotional factors like the preferences and aversions of the employee. Within our approach, we implemented a decision-making model, which is not limited to our game concept and can also be adapted for other simulation games.		Nassal, A.; Tichy, M.						ConflictExcluded	Excluded	new_screen			2		2016				
545		ModelGuidance	Modeling in the large and modeling in the small	"As part of the AMMA project (ATLAS Model Management Architecture), we are currently building several model management tools to support the tasks of modeling in the large and of modeling in the small. The basic idea is to define an experimental framework based on the principle of models as first class entities. This allows us to investigate issues of conceptual and practical interest in the field of model management applied to data-intensive applications. By modeling in the small, we mean dealing with model and metamodel elements and the relations between them. In this sense, ATL (ATLAS Transformation Language) allows expressing automatic model transformations. We also motivate the need for the ModelWeaver"" which handles fine-grained relationships between elements of different metamodels with a different purpose than automatic model transformation. By modeling in the large"		Bézivin, J.; Jouault, F.; Rosenthal, P.; Valduriez, P.	Lecture Notes in Computer Science					ConflictExcluded	Excluded	new_screen			2		2005				
546		ModelGuidance	Use cases and object modelling using ArgoUML	The key factor in the process of good quality software development is using proper techniques for requirements elicitation, representation and modelling providing foundations to build a logical model of the projected system. One of the most popular functional requirements description methods is use cases and scenarios approach introduced by Jacobson in 1993. Use case diagrams and analysis of functionality necessary for future users of the system allows precise definition of object model of target software system. However there are few fully functional free CASE tools supporting system designer at this software development stage. The article describes process of creating guidelines and formal requirements for design of a software system supporting storage and analysis of data concerning regulatory duties of Polish Telecom (Polish name: Telekomunikacja Polska) in the range of RIO framework agreement regarding collocation with the free UML modelling ArgoUML tool. © 2011 Springer-Verlag.		Complak, W.; Wojciechowski, A.; Mishra, A.; Mishra, D.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2011				
547		ModelGuidance	The guidelines of modeling - An approach to enhance the quality in information models	Although the necessity of building models seems obvious, it is astonishing that only few works deal with the fundamental problems of modeling - how models need to be understood from an epistemological point of view (e.g.: how does a modeler come to a model; why and in which ways do models built by different designers differ from another). The paper bases on the assumption that the subjective position of the modeler is the characterizing issue for the result of the modeling process – and that this subjectivity needs to be managed. We derive from this assumption the need for a sound structural framework in order to deal with the subjectivism of building models. With the Guidelines of Modeling (GoM) we present a framework of principles that improve the quality of information models by reducing the subjectivism in the information modeling process. The quality of modeling is supported by recommendations for an efficient, comprehensive, and correct design of information models. In the first part of the paper the guidelines are derived from the specific problems that stem from the subjective process of the system design. The Guidelines of Modeling contain six principles to ameliorate the quality of information modeling which are described in detail. Subsequently, the basic guidelines are placed in a structural framework, the GoM-Architecture, which consists of two dimensions: 1st the range of model-use (reference models for a class of organizations or an industry, and companyspecific models) and 2nd the degree of precision or concretion (general, system views, and description language). © Springer-Verlag Berlin Heidelberg 1998.		Schuette, R.; Rotthowe, T.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictIncluded	Included	new_screen			2		1998				
548		ModelGuidance	A model-driven framework for educational game design	Educational games are a class of serious games whose main purpose is to teach some subject to their players. Despite the many existing design frameworks, these games are too often created in an adhoc manner, and typically without the use of a game design document (GDD). We argue that a reason for this phenomenon is that current ways to structure, create and update GDDs do not increase the value of the artifact in the design and development process. As a solution, we propose a model-driven, web-based knowledge management environment that supports game designers in the creation of a GDD that accounts for and relates educational and entertainment game elements. The foundation of our approach is our devised conceptual model for educational games, which also defines the structure of the design environment. We present promising results from an evaluation of our environment with eight experts in serious games. © Springer International Publishing Switzerland 2016.		Roungas, B.; Dalpiaz, F.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2016				
549		ModelGuidance	Architectural style-based modeling and simulation of complex software systems	The design and development of complex software systems is a difficult task, and it is not easy to ensure the quality of a developed software. The paper presents an architectural style-based approach to specifying and analyzing complex software systems. The approach developed is based on UML-like meta models and graph transformation techniques to support sound methodological principals, formal analysis and refinement. The approach is illustrated through the specification and simulation of architectural styles of mobile computing middleware, where three abstract levels of architectural styles are defined in order to decrease the complexity brought by mobility.		Guo, P.; Engels, G.; Heckel, R.						ConflictExcluded	Excluded	new_screen			2		2005				
550		ModelGuidance	Modelling software architectures using CRADLE	"Architecture description languages (ADLs) and architecture analysis and design languages (AADLs) are important modelling and analysing languages for the software design phase. Around a decade ago, a significant number of ADLs, such as Unicon (9), Rapide (5), Wright (1) and C3 (7), were developed to describe a variety of system features. For example, Rapide describes event triggered dynamic architectures; while Wright describes architectures at a predefined conceptual level. However, these ADLs do not provide strong support for analysis. More recently, the MetaH AADL (2) has been developed, with improved support for analysis and the expression of real-time behaviour. Developed from MetaH AADL, SAE AADL (4) provides further advances on previous ADLs and AADLs, with support for describing dynamic features in real-time systems, and stronger support for analysis than earlier languages. However, this AADL still lacks certain flexibility to express generic and conceptual features of software architectures. Furthermore, it does not provide strong support for error correction and non-functional behaviour 1 is not expressed formally. We propose a new ADL, named CRADLE, with our main aims to provide strong support for: architecture analysis (detecting inconsistencies or violations of functional and/or non-functional constraints); architecture adaptation (correcting these inconsistencies and constraint violations); and architecture expressiveness (being able to describe a variety of architectural features including function properties and non-functional timing constraints using a formal notation). A key feature of CRADLE is the support for defining generic architectures that can be adapted by instantiating parameters. This allows us to model and analyse architectures with more genericity, allowing a single architecture model to capture, for example, differing control styles (e.g. concurrent versus sequential), varying numbers of components, and configurable timing constraints. Furthermore, by providing a library of generic architectures, both high level architectures and lower level sub-architectures, we can provide support for architecture adaptation, by extending existing approaches to component adaptation. Tool support for checking and adapting CRADLE architectures will be based on model checkers and theorem provers. In general, we plan to use model checking to check non-functional properties whereas theorem proving is used to check the functional properties. This paper describes a case study to model an air traffic control scenario using CRADLE. The previous generation ADL Rapide modelled the architecture of the air traffic control system. For simplicity, the architecture consists of aircraft radio components and control tower transmitter/receiver components and the radio components are connected to the transmitter/receiver components. In reality, CRADLE is able to specify bi-directional connection between the aircraft and the tower. There are two possible communication styles: pipeline style (sequential); or broadcast style (concurrent). Both of these architectures can be expressed separately using non-generic CRADLE constructs as Rapide. However using CRADLE we are able to express both possibilities in a single specification. The air traffic control model is described in two parts: interface and configuration. The interface contains types of component and connector. The configuration contains instance"""		Hemer, D.; Ding, Y.	18th World IMACS Congress and MODSIM09 International Congress on Modelling and Simulation: Interfacing Modelling and Simulation with Mathematical and Computational Sciences, Proceedings					ConflictExcluded	Excluded	new_screen			2		2009				
551		ModelGuidance	An agent-based collaborative evolutionary model for multimodal optimization	A novel approach to multimodal optimization called Roaming Agent-Based Collaborative Evolutionary Model (RACE) combining several evolutionary techniques with agent-based modeling is proposed. RACE model aims to detect multiple global and local optima by training a multi-agent system to employ various evolutionary techniques suitable for a specified multimodal optimization problem. Agents can exchange information during the search process enabling a cooperative search of optima between several populations evolving independently. Redundant search by multiple agents is avoided by having them communicate and negotiate about the space region searched. An agent can request and receive from another agent valuable information and genetic material for a better search of a certain region in the environment. Performance of the proposed agent-based collaborative evolutionary model is compared by means of numerical experiments with rival evolutionary techniques. Copyright 2008 ACM.		Lung, R. I.; Chira, C.; Dumitrescu, D.	GECCO'08: Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation 2008					ConflictExcluded	Excluded	new_screen			2		2008				
552		ModelGuidance	Power semiconductor device modeling with model architect	A new modeling environment for the creation, testing and validation of HDL-based models is presented. The environment is designed to support the generation of multiple hardware description languages including MAST, VHDL-AMS and Verilog-AMS. The software architecture and feature set of the environment is described. The main use model is illustrated through an IGBT model creation example.		Mantooth, H. A.; Skudlarek, J. P.; Carlson, J. R.; Cooper, D. K.; Getreu, I. E.; Graham, G.; Pothier, S.; Vedam, R.; Wolff, C. M.	IEEE Workshop on Computers in Power Electronics					ConflictIncluded	Excluded	new_screen			2		2000				
553		ModelGuidance	Refactoring to rich internet applications. A model-driven approach	"Rich Internet Applications (RIAs) combine the simplicity of the hypertext paradigm with the flexibility of desktop interfaces. The quick emergence of these applications is driving a new (r)evolution in the Web field. Building RIAs from scratch is often unfeasible because companies do not want to loose their investments in legacy Web software; additionally, most users are still accustomed to the old"" Web interaction style. In this paper we present an evolutionary approach to transform conventional Web software into RIAs; we show how to apply the well-known refactoring concept to seamless introduce rich interface functionality in a Web application. By applying refactoring at the model level"		Rossi, G.; Urbieta, M.; Ginzburg, J.; Distante, D.; Garrido, A.	Proceedings - 8th International Conference on Web Engineering, ICWE 2008					ConflictExcluded	Excluded	new_screen			2		2008				
554		ModelGuidance	Word blast: Modelling word edutainment game for children	The amalgamation of technology with educational training is useful in developing new handheld mobile applications which can attract students’ attention to learn more. Realizing the importance of designing the right product for the right users, this study aims to design a reference model and further develop a prototype of an edutainment game known as Word Blast using Rapid Application Development (RAD) method. The game is specifically designed for children to learn new words through a more interactive medium. The result shows that the model is able to be used in designing and developing edutainment game. This will benefit educational researchers by deepening the understanding on the link between design space and learning because successful design is the key to support effective teaching and learning. With the children, they may enjoy the learning process that also increases educational achievement. © 2016 American Scientific Publishers All rights reserved.		Hussain, A.; Zahra, F.; Kamal, F. M.	Advanced Science Letters					ConflictExcluded	Excluded	new_screen			2		2016				
555		ModelGuidance	Security patterns modeling and formalization for pattern-based development of secure software systems	Pattern-based development of software systems has gained more attention recently by addressing new challenges such as security and dependability. However, there are still gaps in existing modeling languages and/or formalisms dedicated to modeling design patterns and the way how to reuse them in the automation of software development. The solution envisaged here is based on combining metamodeling techniques and formal methods to represent security patterns at two levels of abstraction to fostering reuse. The goal of the paper is to advance the state of the art in model and pattern-based security for software and systems engineering in three relevant areas: (1) develop a modeling language to support the definition of security patterns using metamodeling techniques; (2) provide a formal representation and its associated validation mechanisms for the verification of security properties; and (3) derive a set of guidelines for the modeling of security patterns within the integration of these two kinds of representations.		Hamid, B.; Guergens, S.; Fuchs, A.	{INNOVATIONS} {IN} {SYSTEMS} {AND} {SOFTWARE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		2016				
556		ModelGuidance	A model-based approach to gamify the learning of modeling	Conceptual modeling is an essential activity in the development of any information system. But at the same time, it is a difficult one which may discourage some professionals that may be tempted to skip it altogether in favor of more code-oriented tasks. In recent years, gamification has emerged as a new approach to increase learner engagement and has been successfully applied to a wide range of training and educational scenarios. We believe gamification can play a key supportive role in teaching and learning conceptual modeling, an area where gamification has not been really applied so far. In this sense, this paper presents a model-based approach for gamifying scenarios for learning modeling. Our approach includes a new language for modeling the gamification process itself and an environment where this new language can be embedded in current modeling tools to allow instructors and students design and use gaming scenarios all within a full modeling infrastructure.		Cosentino, V.; Gérard, S.; Cabot, J.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2017				
557		ModelGuidance	A complex interface modeling approach based on presentation style	There are no unified normal forms of the descriptions for the User Interface Design Patterns until now, which leads to the great insufficiency in using several kinds of presentation styles to construct complex user interface; meanwhile it cannot meet the need of displaying the content of a hierarchical structure in the limited area. In this paper a presentation style of the complex interface is defined. Based on abstracting the interface presentation style, the standardized descriptions of interface design pattern are constructed; thus the complex interface modeling and target code automatic generation are finally implemented by customizing interface presentation style. Application research shows that this method can greatly support the complex interface design and realization, and enhance the efficiency of the user interface development. ©2009 IEEE.		Gao, T.; Shi, Q.	Proceedings - 2009 IEEE International Conference on Intelligent Computing and Intelligent Systems, ICIS 2009					ConflictExcluded	Excluded	new_screen			2		2009				
558		ModelGuidance	Generic model of software cost estimation: A hybrid approach	Software companies ensure to complete the project within time and cost, for which good planning and thinking is required. Software project estimation is a form of problem solving which cannot be solved in a single piece of data by using some formulae. Decomposition of the problem helps in concentrating on smaller parts so that they are not missed. It aids in controlling and approximating the software risks which are commendably fixed and accurate. This paper represents an innovative idea which is the working of Principal Component Analysis (PCA) with Artificial Neural Network (ANN) by keeping the base of Constructive Cost Model II (COCOMO II) model. Feed forward ANN uses delta rule learning method to train the network. Training of ANN is based on PCA and COCOMO II sample dataset repository. PCA is a type of classification method which can filter multiple input values into a few certain values. It also helps in reducing the gap between actual and estimated effort. The test results from this hybrid model are compared with COCOMO II and ANN. © 2014 IEEE.		Patil, L. V.; Waghmode, R. M.; Joshi, S. D.; Khanna, V.	Souvenir of the 2014 IEEE International Advance Computing Conference, IACC 2014					ConflictExcluded	Excluded	new_screen			2		2014				
559		ModelGuidance	Model-Driven Development of Mobile Applications	This research aims to simplify the creation of applications for mobile platforms by developing a high-level and platform independent model of an application, and automatically transforming this high-level model to platform specific code. The research method is a combination of the model-driven development (MDD) approach in software development and application of techniques in the field of human-computer interaction (HCI) particularly on user- centered system design. This research involves developing a graphical modeling language which is specific to mobile applications and coming up with a generic algorithm for the conversion of this graphical model into code. The main focus of the research however, is on the design of the graphical model, and the interaction techniques which will allow non-expert people to create specialized mobile applications with case.		Balagtas-Fernandez, F. T.; Hussmann, H.						ConflictExcluded	Excluded	new_screen			2		2008				
560		ModelGuidance	A preference modelling approach to support intelligibility in pervasive applications	Context-aware applications do not always adapt their behaviours in ways that users expect due to a variety of reasons. Applications that lack intelligibility are often incapable of offering explanations to users as to why they decided to adapt their behaviours in certain ways, and providing feedback mechanisms for users to take control of any unwanted adaptation. This can lead to loss of user trust, satisfaction and acceptance of these applications. However, providing intelligibility and user control in applications are non-trivial; it involves exposing internal working components that influence the adaptation decisions, rendering them understandable to non-technical users, and enabling user modifications to those components to correct unexpected adaptations. This paper describes a user preference model regarding application adaptations. The goal is to support intelligibility in applications by facilitating users in generation of clear mental models that enable them to understand the links between particular contextual situations and various adaptive actions. It also aims to support user control of application behaviours by assisting developers in the creation of appropriate feedback mechanisms. These are essential in preventing user frustration at erratic application behaviours. © 2011 IEEE.		Fong, J.; Indulska, J.; Robinson, R.	2011 IEEE International Conference on Pervasive Computing and Communications Workshops, PERCOM Workshops 2011					ConflictExcluded	Excluded	new_screen			2		2011				
561		ModelGuidance	Model based approach to semi-automated user interface generation for process control interactive applications	The purpose of this paper is the description of a model-based approach (called ERGO-CONCEPTOR) to semi-automated user interface (UI) generation. Its application field concerns process control interactive applications. From a database describing the industrial process (for instance a chemical process) to be supervised, the system is able to generate automatically UI specifications using guidelines. The specifications contain eventually, design alternatives. They can be selected by the designer who can then interactively generate the UI. ERGO-CONCEPTOR is composed of three main modules. The first allows an interactive process description according to three sub-models (a physical model, a structural model and a functional model). The second module uses a knowledge-based approach for the automated generation of the UI specification. Finally, the third module is used by the designer to interactively generate the specified UI.		Moussa, F.; Kolski, C.; Riahi, M.	Interacting with Computers					ConflictExcluded	Excluded	new_screen			2		2000				
562		ModelGuidance	Towards a Unified Learning Style Model in Adaptive Educational Systems	Accommodating learning styles in adaptive educational systems represents an important step towards providing individualized instruction. The paper summarizes the main results reported in the literature, as well as the main criticisms of the current approaches. Thus, most of the adaptive educational systems to date are based on a single learning style model and the diagnosis is done explicitly, by means of a psychological questionnaire. The lack of an integrative, comprehensive learning style model and the questionable validity and reliability of the measuring instruments are two important problems of this approach. In this context, we advocate the use of a unified learning style model, which exhibits the following properties: i) it integrates the most relevant characteristics from several models in the literature; ii) it includes e-learning specific aspects (technology related preferences); iii) it is stored as a set of learning characteristics, not as a stereotyping model. Moreover, the student diagnosis is to be done implicitly, based on analyzing her/his interactions with the system.		Popescu, E.; Trigano, P.; Badica, C.						ConflictExcluded	Excluded	new_screen			2		2007				
563		ModelGuidance	Formal Modeling of Virtual Machines	"A preliminary example of program development demonstrates that the control-independent implementation of data types can lead to very inefficient code. The concept of a data space, which emphasizes the interaction between data and control structures, is introduced as a formal model of virtual machines. The model consists of three components: a state space X, an information structure F, and a control component p. Formally, X is a set of objects, F a set of functions with common domain X mapping the states to the value sets of certain data types, and p a partial function X → X. Two important points of investigation are the characterization of state space structure and the mechanism of implementation. Good state description is characterized by completeness"" and ""orthogonality."" Either property plays a prominent role for the concept of implementation which"		Cremers, A. B.; Hibbard, T. N.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		1978				
564		ModelGuidance	OPEN MODEL METHODOLOGY - A NEW APPROACH TO THE DEVELOPMENT OF USER INTERFACES BASED ON KNOWLEDGE PROCESSING	In this paper, we propose a new interface development methodology called the open model methodology, based on the open model of user interfaces which divides the interactive system into six layers: I/O Media, Concept, Semantic/Syntax, Domain, Mode/Style and Computation. Knowledge is used as the basis for developing and maintaining interfaces. The interface development is divided into three parallel streams: {BEHAVIOURS}, {MEAN} and {DO}. Each of these streams maintains a mini-refinement-loop consisting of two steps: knowledge acquisition and testing. Using this approach, we have designed a prototype interface called {KZ}3. The experimental results indicate that the methodology has a bright future.		X, D. U.; XIE, L.	{SOFTWARE} {ENGINEERING} {JOURNAL}					ConflictExcluded	Excluded	new_screen			2		1992				
565		ModelGuidance	Modeling China's Inflation: Linear versus Nonlinear Method	Inflation is one of the most important macroeconomic variables. However, the behavior of inflation is so complicated that both economists and statisticians have strived to model and forecast inflation for years. In this study, the linear AS-AD model and nonlinear artificial neural network (ANN) technique are both employed to have a better understanding of the inflation behavior in China from 1992 Q1 to 2010 Q1. Experimental results demonstrated the inflation model can be obtained via ANN technique with higher accuracy compared to AS-AD model.		Wang, C.; Wu, D.						ConflictExcluded	Excluded	new_screen			2		2010				
566		ModelGuidance	Configuration logics: Modelling architecture styles	We study a framework for the specification of architecture styles as families of architectures involving a common set of types of components and coordination mechanisms. The framework combines two logics: (1) interaction logics for the specification of architectures as generic coordination schemes involving a configuration of interactions between typed components; (2) configuration logics for the specification of architecture styles as sets of interaction configurations. The presented results build on previous work on architecture modelling in BIP. We show how propositional interaction logic can be extended into a corresponding configuration logic by adding new operators on sets of interaction configurations. We provide a complete axiomatisation of the propositional configuration logic, as well as a decision procedure for checking that an architecture satisfies given logical specifications. To allow genericity of specifications, we study first-order and second-order extensions of the propositional logic. We provide examples illustrating the application of the results to the characterization of architecture styles. Finally, we provide an experimental evaluation using the Maude rewriting system to implement the decision procedure for the propositional logic. © Springer International Publishing Switzerland 2016.		Mavridou, A.; Baranov, E.; Bliudze, S.; Sifakis, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2016				
567		ModelGuidance	Criteria for selecting software process models	In an effort to improve the quality of software and its production, researchers have defined many variations of the software development process. These range from the traditional waterfall process to the throwaway prototype. This paper presents guidelines for selecting the most appropriate process model for a particular project. To facilitate selection, we have organized the software process models into a three-level hierarchy. After applying all the criteria a relative rating of the process models is generated to guide the selection. © 1991 IEEE.		Alexander, L. C.; Davis, A. M.	Proceedings - International Computer Software and Applications Conference					ConflictExcluded	Excluded	new_screen			2		1991				
568		ModelGuidance	Extending BPMN with submit/response-style user interaction modeling	Developing process-oriented enterprise systems not only asks for Business Process Management (BPM) but also for an appropriate user interface and data model. Current BPM and workflow technologies are neither integrated with user dialogs nor offer an appropriate data model. This paper describes a novel integrated framework for modeling process-oriented systems called Processes with User Interfaces and Data Modeling Integration (PUDI), which offers a solution to these shortcomings. For the projects described in this paper, we used the Business Process Modeling Notation (BPMN) for the processes, extensions to BPMN for submit/response-style user interaction, which is characteristic of form-based applications ranging from small Web applications to large ERP systems, and the Unified Modeling Language (UML) for the data model which defines both, the information and the message model. The paper discusses related work and describes real-world application scenarios which motivated our research on the proposed framework and illustrates its practical benefits. © 2009 IEEE.		Auer, D.; Geist, V.; Draheim, D.	2009 IEEE Conference on Commerce and Enterprise Computing, CEC 2009					ConflictExcluded	Excluded	new_screen			2		2009				
569		ModelGuidance	Adaptive modeling: An approach and a method for implementing adaptive agents	"This paper describes the fundamentals of a research project which is being launched in the emerging field of Ambient Intelligence as defined by the European Union's 6th Research Program on Information Society. Massively multi-agent systems is the natural technique for implementing Ambient Intelligence. Adaptivity is one of the key features of ambient systems. Ensuring that the evolution of an ambient system is predictable and desirable is a challenging open design issue. We propose a user-driven approach to adaptation. We call it Adaptive Modeling"" because it relies on the architectural style known as Adaptive Object-Models. This provides us with a design method and tool for agents to be used in this context. Systems built with this method allow non-programmer domain experts to locally modify the structure and behavior of agents at runtime"		Razavi, R.; Jean-François, P.; Guelfi, N.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2005				
570		ModelGuidance	3D Behavioral Model Design for Simulation and Software Engineering	"Modeling is used to build structures that serve as surrogates for other objects. As children, we learn to model at a very young age. An object such as a small toy train teaches us about the structure and behavior of an actual train. VRML is a file standard for representing the structure of objects such as trains, while the behavior would be represented in a computer language such as ECMAScript or Java. VRML is an abbreviation for Virtual Reality Modeling Language [2], which represents the standard 3D language for the web. Our work is to extend the power of VRML so that it is used not only for defining shape models, but also for creating structures for behavior. “Behavior shapes” are built using metaphors mapped onto wellknown dynamic model templates such as finite state machines, functional block models and Petri nets. The low level functionality of the design still requires a traditional programming language, but this level is hidden underneath a modeling level that is visualized by the user. We have constructed a methodology called rube which provides guidelines on building behavioral structures in VRML. The result of our endeavors has yielded a set of VRML Prototypes that serve as dynamic model templates. We demonstrate several examples of behaviors using primitive shape and architectural metaphors.

"		Fishwick, Paul A.						ConflictExcluded	Excluded	new_screen			2		2000				
571		ModelGuidance	A Scalable Approach to Multi-style Architectural Modeling and Verification	Software Architecture represents the high level description of a system in terms of components, external properties and communication. Despite its importance in the software engineering process, the lack of formal description and verification support limits the value of developing architectural models. Automated formal engineering methods can provide an effective means to precisely describe and rigorously verify intended structures and behaviors of software systems. In this paper, we present an approach to support the design and verification of software architectural models using the Alloy analyzer. Based on our earlier work, we propose a fundamental library for specifying system structures in terms of different architectural styles. We illustrate use of the architecture style library in modeling and verifying a complex system that utilizes multi-style structures. To promote scalability, we use model decomposition to parallelize the verification process. Results show that our approach enhances the performance of verifying models significantly.		Wong, S.; Sun, J.; Warren, I.; Sun, J.						ConflictExcluded	Excluded	new_screen			2		2008				
572		ModelGuidance	Creating and Evaluating a Software Power Model for Linux Single Board Computers	The number of Single Board Computers (SBCs) is increasing, and so is the cumulative energy consumed by this category of device. Moreover, such devices are often always-on or running on batteries. Therefore, it is worth investigating their energy consumption to provide software developers and users with indicators for understanding how much energy the device is consuming while running a software application. In this paper, we explain a procedure for the creation of an energy consumption model of SBCs based on the usage of its components. We apply the procedure on a Raspberry PI 2 model B to test the model with a set of real applications. The results demonstrate the practical feasibility of the approach and show that estimated consumption values on our device have an average error of 2.2\%, which is a good approximation without using external and expensive measuring devices.		Ardito, L.; Torchiano, M.						ConflictExcluded	Excluded	new_screen			2		2018				
573		ModelGuidance	Service value properties for service ecosystems: A reference model and a modeling guideline	With the rise of service-oriented computing and web service ecosystems, services and their electronic descriptions become crucial to foster significant value propositions toward potential service consumers. While there exist ample technical specifications to describe web services, conceptual approaches are rare. On top of this, an alignment between business models and information technology is lacking. This paper is a step toward this direction in that it offers a reference model to classify service value descriptions depending on their purpose, presents a generic model for service properties, proposes two meta models for conceptual modeling, and finally introduces a modeling guideline.		Scheithauer, G.; Augustin, S.; Wirtz, G.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2009				
574		ModelGuidance	COMO: a UML-based component development methodology	Many organizations have begun to consider implementing applications using reusable components. They envision that writing a component once and reusing it in many subsequent software systems will effectively amortize the development cost among all users. Recent technology advances such as JavaBeans/EJB, COM, CORBA, and others spur this interest. However, the systematic development process and practical instructions for building software components have not been studied enough. We propose a practical object-oriented component development methodology (COMO) that can be utilized in developing software components. COMO extends Unified Modeling Language (UML) and Rational's Unified process with semantics related to component development. Since COMO provides systematic process and comprehend instructions for each development task, we believe it can be effectively used in modeling and implementing software components.		Sang Duck Lee; Young Jong Yang; Fun Sook Cho; Soo Dong Kim; Sung Yul Rhew						ConflictExcluded	Excluded	new_screen			2		1999				
575		ModelGuidance	A model-driven approach for developing responsive web apps	Nowadays users have multiple devices to access a myriad of web and mobile applications. This has increased the importance of developing such applications in a responsive way, i.e. with the ability to seamlessly display their contents on multiple devices. This paper proposes the XIS-Web technology as a model-driven approach focused in the development of responsive web applications. XIS-Web technology includes two main parts: the XIS-Web modeling language, implemented as a UML profile; and the XIS-Web framework, which is a set of integrated software tools. XIS-Web stands out in four key aspects: supports the modeling of web applications around six viewpoints, which ultimately promotes the separation of concerns that is key to managing complexity; generates user-interface models from extended use-case models, relieving this cumbersome and time consuming task from the user; employs latest generation web technologies (such as HTML5, JavaScript, CSS) that allow the required flexibility of developing responsive web applications; and allows the creation of platform-independent models without requiring a significant learning curve. This paper also presents an evaluation conducted in a controlled environment with a group of independent users, and briefly introduces simple case studies. Copyright © 2019 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved		Seixas, J.; Ribeiro, A.; Da Silva, A. R.	ENASE 2019 - Proceedings of the 14th International Conference on Evaluation of Novel Approaches to Software Engineering					ConflictExcluded	Excluded	new_screen			2		2019				
576		ModelGuidance	Story driven modeling - A practical guide to model driven development	The Rational Unified Process lacks practical guidance for the development of object oriented applications. Model Driven Software Development (MDD) proposes to do most of these development steps at the model level of abstraction. This tutorial takes the MDD idea and examplifies such a development process. The tutorial guides the user from textual requirements descriptions through UML scenario modeling to the derivation of test case specifications, class diagrams and UML behavior models and finally to the implementation of the desired system. The tutorial employs a running example that allows to illustrate the modeling activities for each development phase and the guidelines for each modeling step. We discuss how existing CASE tools may be used in such an approach and how the Fujaba environment supports our development process.		Zündorf, A.	Proceedings - 27th International Conference on Software Engineering, ICSE05					ConflictExcluded	Excluded	new_screen			2		2005				
577		ModelGuidance	Towards a Cognizant Virtual Software Modeling Assistant using Model Clones	We present our new ideas on taking the first steps towards cultivating synergy between model-driven engineering (MDE), machine learning, and software clones. Specifically, we describe our vision in realizing a cognizant virtual software modeling assistant that uses the latter two to improve software design and MDE. Software engineering has benefited greatly from knowledge-based cognizant source code completion and assistance, but MDE has few and limited analogous capabilities. We outline our research directions by describing our vision for a prototype assistant that provides suggestions to modelers performing model creation or extension in the form of 1) complete models for insertion or guidance, and 2) granular single-step operations. These suggestions are derived by detecting clones of the in-progress model and existing domain, organizational, and exemplar models. We overview our envisioned workflow between modeler and assistant, and, using Simulink as an example, illustrate different manifestations including multiple overlays with percentages and employing variant elements.		Stephan, M.						ConflictExcluded	Excluded	new_screen			2		2019				
578		ModelGuidance	Reusable architectural decision models for enterprise application development	In enterprise application development and other software construction projects, a critical success factor is to make sound architectural decisions. Text templates and tool support for capturing architectural decisions exist, but have failed to reach broad adoption so far. One of the inhibitors we perceived on large-scale industry projects is that architectural decision capturing is regarded as a retrospective and therefore unwelcome documentation task which does not provide any benefit during the original design work. A major problem of such a retrospective approach is that the decision rationale is not available to decision makers when they identify, make, and enforce decisions. Often a large, possibly distributed, community of decision makers is involved in these three steps. In this paper, we propose a new conceptual framework for proactive decision identification, decision maker collaboration, and decision enforcement. Based on a meta model capturing reuse and collaboration aspects explicitly, our framework instantiates decision models from requirements models and re usable decision templates. These templates capture know ledge gained on other projects em ploy ing the same architectural style. As an exemplary application of these concepts to service-oriented architecture shows, reusable architectural decision models can speed up the decision identification and improve the quality of the decision making. Reusable architectural decision models can also simplify the exchange of architecture design rationale within and between project teams, and expose decision out come as model transformation parameters in model-driven software development. © 2008 Springer-Verlag Berlin Heidelberg.		Zimmermann, O.; Gschwind, T.; Küster, J.; Leymann, F.; Schuster, N.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2007				
579		ModelGuidance	Future trends of software technology and applications model-based development	The productivity and dependability challenges we face in software engineering remain significant. Software has become the pacing item and an unexpectedly large expense in the development of many engineered systems. Dealing with this situation will require a radical change in the way we build software, and one candidate to form the basis of that change is model-based development. Model-based development relies on the creation by application experts of models of the required systems and synthesis of the software from the model. This approach brings many benefits but also a surprising number of challenges. Success to date with model-based development has been considerable		Knight, J. C.						ConflictExcluded	Excluded	new_screen			2		2006				
580		ModelGuidance	Integrating expressiveness of modern requirements modeling approaches	Uses cases are the most widely accepted notation despite their restricted expressiveness and overloaded semantic. Other more sophisticated modeling techniques have been developed independently of any other ones and/or for specific application domains. These techniques often provide broad expressiveness but do not include any scalability or any integration with other approaches. In this work, we present a proposal for requirements modeling that allows the integration of the expressiveness of some of the most relevant approaches in the requirements engineering arena. By focusing on the scalability with respect to expressiveness and adaptability to the application domain, we have established some basic guidelines and extension mechanisms that give coherence and semantic precision to our approach.		Navarro, E.; Letelier, P.; Ramos, I.						ConflictExcluded	Excluded	new_screen			2		2005				
581		ModelGuidance	SMArDT modeling for automotive software testing	Efficient testing is a crucial prerequisite to engineer reliable automotive software successfully. However, manually deriving test cases from ambiguous textual requirements is costly and error-prone. Model-based software engineering captures requirements in structured, comprehensible, and formal models, which enables early consistency checking and verification. Moreover, these models serve as an indispensable basis for automated test case derivation. To facilitate automated test case derivation for automotive software engineering, we conducted a survey with testing experts of the {BMW} Group and conceived a method to extend the {BMW} Group's specification method for requirements, design, and test methodology by model-based test case derivation. Our method is realized for a variant of systems modeling language activity diagrams tailored toward testing automotive software and a model transformation to derive executable test cases. Hereby, we can address many of the surveyed practitioners' challenges and ultimately facilitate quality assurance for automotive software.		Drave, Imke; Hillemacher, Steffen; Greifenberg, Timo; Kriebel, Stefan; Kusmenko, Evgeny; Markthaler, Matthias; Orth, Philipp; Salman, Karin Samira; Richenhagen, Johannes; Rumpe, Bernhard; Schulze, Christoph; von Wenckstern, Michael; Wortmann, Andreas	{SOFTWARE}-{PRACTICE} \& {EXPERIENCE}					ConflictExcluded	Excluded	new_screen			2		2019				
582		ModelGuidance	Modeling and applying security patterns using contextual goal models	Security patterns have been proposed to help analysts with little security knowledge to tackle repetitive security design tasks. Although advanced research in this field has produced an impressive collection of patterns, they are not well integrated with security requirements analysis and not easy to apply. Goal-oriented modeling languages have been proposed as an effective way to capture requirements, including security requirements, for socio-technical systems. In this paper, we argue that modeling and analyzing security patterns in contextual goal models can facilitate their applications and magnify their influences in system security design. Particularly, we present a mapping between security patterns and contextual goal models, and provide practical guidelines for transforming textual security patterns into the goal models. In addition, we propose a systematic process for applying security patterns, and discuss how it can be combined with existing security requirements analysis approaches.		Li, T.; Mylopoulos, J.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2014				
583		ModelGuidance	Experiences in large-scale, component based, model-driven software development	Over the past 5 years, the Subscriber Software group of the Motorola Networks and Enterprise division has been engaged in establishing a Model-Driven software development approach to allow the efficient creation of quality software to be used in a variety of different product lines produced. Historically, this division has operated internally as three independent product groups, with each group producing a new product line every 2 to 3 years. In addition, each product line may contain 10-20 product variants, often distinguished through software with an expected lifetime of a particular product to exceed 10 years. A clear challenge for the division was to cope with the ever increasing rate of change in technology, the growing number of active product lines, accelerating the introduction of new product lines to meet customer demands, while simultaneously maintaining the current workforce size. This paper seeks to capture the experiences over these past 5 years, covering the challenges encountered in deploying this approach to a global workforce, redefining the organizational boundary lines, and overcoming the difficulties in meeting both short term product centric development time constraints while balancing a longer term strategic objective. In particular, the paper will focus on aspects on Model-driven development that are critical to large scale deployment, such as model(s) organization, distribution and control, in addition to component creation and management and quality aspects of multi-product line software. In addition, the paper will address the importance of formal architectures and design as applied to this approach...The paper concludes with the establishment of a cohesive environment for large-scale component based model-driven software development, with an emphasis on minimizing the overhead associated with artifact management, while maximizing consistency across the entire environment. © 2007 IEEE.		Foustok, M.	Proceedings of the 1st Annual 2007 IEEE Systems Conference					ConflictExcluded	Excluded	new_screen			2		2007				
584		ModelGuidance	Supporting distributed product configuration by integrating heterogeneous variability modeling approaches	Context: In industrial settings products are developed by more than one organization. Software vendors and suppliers commonly typically maintain their own product lines, which contribute to a larger (multi) product line or software ecosystem. It is unrealistic to assume that the participating organizations will agree on using a specific variability modeling technique - they will rather use different approaches and tools to manage the variability of their systems. Objective: We aim to support product configuration in software ecosystems based on several variability models with different semantics that have been created using different notations. Method: We present an integrative approach that provides a unified perspective to users configuring products in multi product line environments, regardless of the different modeling methods and tools used internally. We also present a technical infrastructure and a prototype implementation based on web services. Results: We show the feasibility of the approach and its implementation by using it with the three most widespread types of variability modeling approaches in the product line community, i.e., feature-based, OVM-style, and decision-oriented modeling. To demonstrate the feasibility and flexibility of our approach, we present an example derived from industrial experience in enterprise resource planning. We further applied the approach to support the configuration of privacy settings in the Android ecosystem based on multiple variability models. We also evaluated the performance of different model enactment strategies used in our approach. Conclusions: Tools and techniques allowing stakeholders to handle variability in a uniform manner can considerably foster the initiation and growth of software ecosystems from the perspective of software reuse and configuration. © 2015 Elsevier B.V. All rights reserved.		Galindo, J. A.; Dhungana, D.; Rabiser, R.; Benavides, D.; Botterweck, G.; Grünbacher, P.	Information and Software Technology					ConflictExcluded	Excluded	new_screen			2		2015				
585		ModelGuidance	Creation and validation of embedded assertion statecharts	This paper addresses the need to integrate formal assertions into the modeling, implementation, and testing of statechart based designs. The paper describes an iterative process for the development and verification of statechart prototype models augmented with statechart assertions using the StateRover tool. The novel aspects of the proposed process include (1) writing formal specifications using statechart assertions, (2) JUnit-based simulation and validation of statechart assertions, (3) JUnit-based simulation and testing of statechart prototype models augmented with statechart assertions, (4) automatic, JUnit-based, white-box testing of statechart prototypes augmented with statechart assertions, and (5) spiral adjustment of model and specification using the test results. We demonstrate the proposed process with a prototype of a safety-critical computer assisted resuscitation algorithm (CARA) software for a casualty intravenous fluid infusion pump. © 2006 IEEE.		Drusinsky, D.; Shing, M.-T.; Demir, K. A.	Proceedings of the International Workshop on Rapid System Prototyping					ConflictExcluded	Excluded	new_screen			2		2006				
586		ModelGuidance	The requirements engineering framework based on ISO 29148:2011 and multi-view modeling framework	Software development in Government Agencies in Indonesia faces various challenges. There are at least 18 (eighteen) factors of software development projects failure which recorded, such as miscommunication about project owner needs, no method to guarantee user needs identified consistently, accurately and completely; lack of ability to handle the change request of the project from users; unclear specification; and lack of understanding about software development standard. Based on that study, it had been done an analysis how to overcome them, especially that related to software requirements area. The result of the analysis then used as reference to design a requirements engineering framework for the government agencies. The design of this framework was conducted by combining processes/activities/tasks and artifacts of ISO/IEC/IEEE 29148:2011 and Multi-View Modeling Framework resulting a set of processes/activities/tasks of the requirements engineering framework and artifacts. The evaluation of the framework design showed that the framework could add the completeness of understanding of requirements engineers (the increase is 9.81%), improved guidelines (the increase is 2.41%) and provide greater benefits in terms of improving quality of requirements documents and as a communication tool between the parties involved in the requirements engineering (the increase is 10.38%). © 2017 IEEE.		Selvyanti, D.; Bandung, Y.	2017 International Conference on Information Technology Systems and Innovation, ICITSI 2017 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2017				
587		ModelGuidance	Modeling for configuration employing hybrid knowledge representation	Domain modeling for technical configuration problems addresses the need for dedicated knowledge representation facilities. In this article we present the hybrid system C3L which combines a declarative with a procedural knowledge representation paradigm. This is especially useful for the elaboration of a model for the configuration of modular vehicle bus systems. Some key features of such a model will be explained in the following.		Kessel, T.; Schlick, M.; Stern, O.						ConflictExcluded	Excluded	new_screen			2		1996				
588		ModelGuidance	SE process modelling and improvement	The variable nature of student populations from year to year, and probably also the projects themselves, make it difficult to assess or detect improvements in the software engineering (SE) process modelling adopted. The changing nature of both students and projects make any comparisons invalid. The choice of SE process model should in any case depend upon the type of project. Even if the project is a constant, not only will the student population vary but there will be variations in the (meta) management of the student groups by the lecturer in charge whose handling of student groups and projects will improve with time and experience. The possibility of having students complete a truncated project which has a head start e.g. being given the requirements specification or the initial design is discussed. This could allow students to embark upon several different projects within the one year or semester thereby applying what they had learnt previously in a subsequent round. The difficulty is that this would have students no longer completing the entire life cycle. Another possibility is to identify some activities which appear in all phases of the life cycle of a project and to target these for measurement/evaluation and improvement, e.g. documentation meeting deadlines, team communication, team management, etc. While this is seen as beneficial, it is limited in scope.{\textless}{\textgreater}		Mohay, G.						ConflictExcluded	Excluded	new_screen			2		1994				
589		ModelGuidance	Non-Monotonic Modelling from Initial Requirements: A Proposal and Comparison with Monotonic Modelling Methods	"Researchers make a significant effort to develop new mod-elling languages and tools. However, they spend less ef-fort developing methods for constructing models using these languages and tools. We are developing a method for build-ing an embedded system model for formal verification. Our method provides guidelines to build a model and to con-struct a correctness argument. We start from a high-level formula stating that a plant (a device that performs a task) and its control should satisfy requirements. As our knowl-edge about the system grows, we refine this formula and the model gradually, in a stepwise non-monotonic process, until we have a description that can be formally verified. In this paper we explain our method on a simple example and compare it briefly with two other methods: require-ments progression and the goal-oriented KAOS approach. The requirements progression is an extension of a problem frames approach. The KAOS method is also based on prob-lem frames, but introduces new concepts for describing a system.
"		Marincic, Jelena; Mader, Angelika; Wupper, Hanno; Wieringa, Roel						ConflictIncluded	Included	new_screen			2		2008				
590		ModelGuidance	Synchronous protocol automata: A framework for modelling and verification of SoC communication architectures	Plug-n-play-style intellectual property reuse in system-on-chip design is facilitated by the use of an on-chip bus architecture. Component integration and verification in such systems is a cumbersome and time consuming process largely concerned with interfacing issues. A synchronous, finite state machine framework for modelling communication aspects of such architecture is presented. The framework has been developed via interaction with designers and the industry, and is intuitive and light-weight. The development includes cycle-accurate methods for protocol specification, compatibility verification, interface synthesis and model checking with automated specification. Case studies performed include the AMBA family of protocols and a proprietary industrial bus protocol. These modelling exercises show that such models enable reasoning about and comparison of different bus architectures to gain valuable design insights. The utility of this framework is demonstrated by modelling the AMBA bus architecture including details such as pipelined operation, burst transfers, the AHB-APB bridge and arbitration features. © IEE, 2005.		D'silva, V.; Ramesh, S.; Sowmya, A.	IEE Proceedings: Computers and Digital Techniques					ConflictExcluded	Excluded	new_screen			2		2005				
591		ModelGuidance	An object-oriented model in support of context-aware mobile applications	Intelligent and context-aware mobile services require users and applications to share information and utilize services from remote locations. Thus, context information from the users must be structured and be accessible to applications running in end-devices. In response to this challenge, we present a shared object-oriented meta model for a persistent agent environment. The approach enables agents to be contextaware facilitating the creation of ambient intelligence demonstrated by a sensor-based scenario. The agents are context-aware as agent actions are based upon sensor information, social information, and the behavior of co-agents. © Institute for Computer Sciences, Social Informatics and Telecommunications Engineering 2010.		Dobslaw, F.; Larsson, A.; Kanter, T.; Walters, J.	Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering					ConflictExcluded	Excluded	new_screen			2		2010				
592		ModelGuidance	A proposal of TIE model for communication in software development process	Communication is more important in software development fields. We proposed the intermediary knowledge model to analyze the enterprise communication by extending traditional knowledge creation model. In this article, we propose TIE models based on intermediary knowledge model. TIE model is the knowledge network model to explain the just in time documentation in the CMC (Computer Mediated Communication) tools like wiki. We analyzed the case of wiki based software development and showed the effectiveness and efficiency of the CMC tools in software development in certain conditions. © 2010 Springer-Verlag.		Kanbe, M.; Yamamoto, S.; Ohta, T.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2010				
593		ModelGuidance	Creating object models-design and architecture	In both general systems engineering and in the engineering of computer based systems, there are management processes and technical engineering processes carried out by the systems engineers. This paper treats the steps in the technical engineering work that define the structure of the system. It describes this work when it is done with executable models and with text to explain the models. With the advent and popularity of object-oriented software methodologies, the software engineering world is using concepts of abstraction of things (objects) and the encapsulation of behavior by objects, that have been practiced in mechanical, electrical, and other engineering professions for many years. It is critically important that the systems engineer be able to communicate rigorously with all of the engineering disciplines using the views, representations and notations understood by those disciplines. This paper focuses on several aspects of design and architecture: the semantic constructs required to describe design and architecture in models; how architecture and design are generated by the repeated core steps of systems engineering technical work; how architecture is related to effectiveness measures and reusable components; how design is simplified by architecture and reusable components; a behavioral model for the process of creating architectures and designs; and a view of the extent and impact of automation when architecture and design requirements are rigorously captured in models.		Oliver, D. W.						ConflictExcluded	Excluded	new_screen			2		1996				
594		ModelGuidance	Conceptual modeling for knowledge management to support agile software development	Agile software development ({ASD}) has emerged as a result of consolidated values proposed under the lightweight methods of software engineering. Despite bearing some criticisms, the initial deployment and results observed in the practice environment represents its increasing domination over the traditional software development practices. Any {ASD} method, in particular, requires knowledge-intensive practices and typically employs multi-disciplinary expert team working extended periods of time for weeks on a nearly continuous basis. A huge amount of tacit knowledge creation and exchange happens in the entire process over the project lifecycle, which attracts the attention of research in the domain of knowledge management ({KM}). In this paper, first, we have mapped the agile values and agile principles, and in its support, we have argued upon and the need for integrated {KM} infrastructure and proposed a {KM} model that can be employed within the organization. We have also developed a conceptual framework for knowledge sharing and learning for the individual practitioners for the sustainability of agile team. We attempt to create an organizational learning framework for knowledge creation and exchange among the involved entities in a collaborative practice environment.		Amritesh; Misra, Subhas C.	{KNOWLEDGE} {ENGINEERING} {REVIEW}					ConflictExcluded	Excluded	new_screen			2		2014				
595		ModelGuidance	Formal Modeling and Analysis of the HLA Component Integration Standard	"An increasingly important trend in the engineering of complex systems is the design of component integration standards. Such standards de_x000C_ne rules of interaction and shared
communication infrastructure that permit composition of systems out of independently-developed parts. A problem with these standards is that it is often di_x000E_cult to understand exactly what they require and provide, and to analyze them in order to understand their deeper properties. In this paper we use our experience in modeling the High Level Architecture (HLA) for Distributed Simulation to show how one can capture the structured protocol inherent in an integration standard as a formal architectural model that can
be analyzed to detect anomalies, race conditions, and deadlocks."		Allen, Robert J.; Garlan, David; Ivers, James						ConflictExcluded	Excluded	new_screen			2		1998				
596		ModelGuidance	Computer-aided modeling and analysis techniques for determining business information systems requirements	The paper deals with the problem of determining the information requirements or needs of a business organization. Characteristics of the problem are discussed and several forms of models based on concepts in elementary matrix algebra and graph theory are described. We construct boolean matrices representing either data usage or creation by a process or function in a business organization. Products of the two matrices are represented as directed graphs to depict the flow of information. Two procedures are described for realizing the solutions obtained from the analysis. The applicability to other related areas of information systems research is discussed and an example is presented. © 1982.		Ewusi-Mensah, K.	Information and Management					ConflictExcluded	Excluded	new_screen			2		1982				
597		ModelGuidance	Using SysML for Modelling and Code Generation for Smart Sensor ASICs	The latest developments in networking and the rapidly increasing demand for IoT devices lead to higher demands on time-to-market and production costs. In addition, the complexity of the development processes for smart sensor ASICs is constantly increasing and new methods for automation and code generation are particularly needed in development. This paper describes a new methodology that formalizes functional specification based on SysML and enables automation of Virtual Prototype (VP) development. The virtual prototype is an established approach for early embedded software development. The presented methodology translates natural language written specifications into a modeled and formalized functional specification and enables the generation of behavior descriptions in SystemC that are used for the creation of VP. Furthermore, it enables the connection of the IP-XACT-centric generation of the register interface description, as well as the description of the signal processing parts by MATLAB® Simulink®, with the SysML-based generated functional description.		Kirchner, A.; Oetjens, J.; Bringmann, O.						ConflictExcluded	Excluded	new_screen			2		2018				
598		ModelGuidance	A comprehensive framework for modeling requirements of CSCW systems	As in any other system, an accurate requirements specification is essential to developing a collaborative system, which has special kinds of requirements that are hard to specify by means of current Requirements Engineering techniques. The Collaborative Systems Requirement Modeling Framework ({CSRMF}) was developed to address this problem; the original Collaborative Systems Requirement Modeling Language was extended and modeled to properly deal with collaboration and awareness requirements. The developed {CSRMF} framework consists of 3 components: an Requirements Engineering modeling language able to represent collaboration among users as well as awareness needs, a set of design guidelines that drive Computer Supported Cooperative Work system specification by means of 5 different types of diagrams, and a supporting computer-aided software engineering tool to specify and validate Computer Supported Cooperative Work system requirements. {CSRMF} provides Requirements Engineers with a complete solution to the specification of awareness-demanding collaborative systems, as they can now take advantage of a language and a set of guidelines supported by a tool to guide them in specifying system requirements.		Teruel, Miguel A.; Navarro, Elena; Lopez-Jaquero, Victor; Montero, Francisco; Gonzalez, Pascual	{JOURNAL} {OF} {SOFTWARE}-{EVOLUTION} {AND} {PROCESS}					ConflictExcluded	Excluded	new_screen			2		2017				
599		ModelGuidance	Evaluating user interface generation approaches: model-based versus model-driven development	Advances in software design possibilities have led to a growing interest in the study of user interfaces (UIs). Many Model-Based User Interface Development Environments (MB-UIDEs) have been proposed to deal with the generation of the UIs (semi-) automatically by using models with different levels of abstraction. Often, this generation is limited to the UI part of an application. However, achieving true model-driven development (MDD) requires the co-development of application and UI and, hence, needs to go a step further. This paper analyzes a large set of existing MB-UIDEs, evaluates, from a critical perspective, to what extent they can be considered full MDD environments, and adequately addresses the co-design of UI and application. Following the guidelines proposed by Kitchenham and Charters (Engineering 2, 2007), we performed a systematic literature review. A total of 96 papers were examined. Based on these papers, an assessment framework containing 10 criteria with specific metrics to evaluate MB-UIDEs was defined and 30 different environments were evaluated following these criteria. The evaluation identifies several gaps in the existing state of the art and highlights the areas of promising improvement. The evaluation shows that, although a strong progress has being achieved over the last years, the existing environments do not yet fully exploit the benefits and potentialities of MDD, nor do they adequately integrate UI design with application logic design and generation. Further research needs to be done to support the MDD of UIs and the co-design of the underlying application. The difficulty of use of the existing MB-UIDEs, the lack of UI design flexibility, and the lack of complete and integrated development support are the main research gaps that need to be addressed. © 2018, Springer-Verlag GmbH Germany, part of Springer Nature.		Ruiz, J.; Serral, E.; Snoeck, M.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2019				
600		ModelGuidance	A model-driven approach for usability engineering of interactive systems	Usability is considered to be one of the most important quality factors that determine the success/failure in the actual use of an interactive system. This can explain the ever-increasing number of publications addressing the problem of usability evaluation. However, most of these proposals only consider usability evaluations after the application is fully implemented and deployed. Some others are based on reviewing usability principles in intermediate artifacts with regard to their conformance with a set of guidelines. Since the traceability between these artifacts and the final application is not well established, performing usability evaluations by considering these artifacts as input may not ensure the usability of the final application. This problem may be alleviated by using a model-driven engineering (MDE) approach due to its intrinsic traceability mechanisms that are established by the transformation processes. The present paper aims to delineate a method for evaluating usability throughout an MDE development life cycle by considering conceptual models as input. To do this, two main contributions are proposed. The first one, called usability-driven model transformation, aims to ensure that an intermediate artifact with the required level of usability is generated. It controls the model transformation process according to a set of usability attributes. The second contribution, called early usability evaluation, performs the usability evaluation from the conceptual models by defining metrics based on conceptual primitives that constitute the conceptual models. This evaluation would be a significant advantage with regard to saving time and resources. The early usability evaluation is empirically validated by comparing the usability measure obtained by our proposal and the level of usability perceived by the end-users. © 2015, Springer Science+Business Media New York.		Ammar, L. B.; Trabelsi, A.; Mahfoudhi, A.	Software Quality Journal					ConflictExcluded	Excluded	new_screen			2		2016				
601		ModelGuidance	Modeling and Simulating for Bomber Air Turret System	To solve the gap between the theoretical teaching and practical training, some research on the structure of the bomber air turret, a lot of mission can be carried out such as device configuration, target selection, environment selection and so on. Flying sence simulation and the target simulation and shooting simulation are achieved. Also monitoring system stability and accuracy is enhanced. And a comprehensive training system of semi-sence bomber aviation turret can be realized. In this paper, simulation system function, hardware configuration, software component, system modeling methods, system design and key technologies of system simulation will be found. The system can effectively help students familiar with the turret structure and usage, improve their operating skills.		Yang, B.; Zhang, Y.; Rui, H.; Li, Y.; Xiao, Y.						ConflictExcluded	Excluded	new_screen			2		2010				
602		ModelGuidance	Modeling and simulation	Modeling and simulation (M\&S) represents a fundamental change in the US Department of Defense (DOD), and has been identified as a critical technology that allows evaluation, testing, and training without building physical replicas. Although M\&S can never replace actual hardware tests and exercises, savings come from testing borderline performance conditions with no risk to the hardware or human life. The current effort at the Defense Modeling and Simulation Office is summarized. Tables characterizing the following key technology areas for modeling and simulation are presented: database technologies; environmental representation; networking; software engineering; behavioral representation; instrumentation; graphics; and computer hardware.{\textless}{\textgreater}		Bishop, R. B.						ConflictExcluded	Excluded	new_screen			2		1992				
603		ModelGuidance	A pattern based modelling for self-organizing multi-agent systems with event-B	Self-Organizing Multi-Agent Systems (SO-MAS) are defined as a set of autonomous entities called agents interacting together in order to achieve a given task. Generally, the development process of these systems is based on the bottom-up approach which focuses on the design of the entities individual behavior. The main question arising when developing SO-MAS is how to insure that the designed entities, when interacting together, will give rise to the desired behavior? Our proposition to deal with this question is to use formal methods. We propose a correct by construction method for systematic design of SO-MAS based on the use of design patterns and formal stepwise refinements. Our work gives guidelines to assist the designer when developing the individual behavior of the entities and prove its correctness at the early stages of the design process. The method is illustrated with the foraging ants' case study. Copyright © 2014 SCITEPRESS.		Graja, Z.; Migeon, F.; Maurel, C.; Gleizes, M.-P.; Laibinis, L.; Regayeg, A.; Kacem, A. H.	ICAART 2014 - Proceedings of the 6th International Conference on Agents and Artificial Intelligence					ConflictExcluded	Excluded	new_screen			2		2014				
604		ModelGuidance	Model-driven design of industrial control systems	Industrial Control Systems are used In most of the industrial sectors to achieve production improvement, process optimization and time and cost reduction. Integration, reuse, flexibility and optimization are demanded to adapt to a rapidly changing and competitive market. There is also a growing requirement that all software tools that support the different phases of the development process (design, configuration, management) can be integrated as well. Thus, a consolidation of modeling methodologies for achieving this goal is needed. This paper proposes a Model-driven approach based on different views of the application (control engineering, electric engineering and software engineering views) for designing industrial control systems. The approach is based on the definition of a description language that includes the description of the three domain views and their relationships. In particular, XML schema technology is used to define the architectural style and schematron technology to implement the composition rules. © 2008 IEEE.		Marcos, M.; Estevez, E.	Proceedings of the IEEE International Symposium on Computer-Aided Control System Design					ConflictExcluded	Excluded	new_screen			2		2008				
605		ModelGuidance	Context modelling and a context-aware framework for pervasive service creation: A model-driven approach	Pervasive service creation entails a complex process that involves a diversity of development aspects. Context-awareness is an important facet of pervasive service creation, which deals with the acquisition, rendering, representation and utilisation of context information. In this paper we tackle context-awareness at the application level dealing with the representation and utilisation of context by services. We propose a model-driven approach that facilitates the creation of a context modelling framework and simplifies the design and implementation of pervasive services. To conclude, we demonstrate the benefits of our model-driven approach via the creation of a pervasive museum service and its evaluation using selected software metrics. © 2010.		Achilleos, A.; Yang, K.; Georgalas, N.	Pervasive and Mobile Computing					ConflictExcluded	Excluded	new_screen			2		2010				
606		ModelGuidance	Integrating organizational requirements and object oriented modelling	In recent years we have observed a growing influence of the object-orientation paradigm. Unfortunately, the current dominant object oriented modelling technique, i.e. the Unified Modelling Language - UML, is ill equipped for modelling early requirements which are typically informal and often focus on stakeholder objectives. Instead, UML is suitable for later phases of requirement capture which usually focus on completeness, consistency, and automated verification of functional requirements for the new system. In this paper, we present a set of guidelines for the integration of early and late requirements specifications. For early (organizational) modelling we rely on the i* framework, whereas for late (functional) requirements specification, we rely on a precise subset of UML. A small example is used to illustrate how the requirements process iterates between early and late requirements.		Castro, J. F.; Alencar, F. M. R.; Cysneiros Filho, G. A.; Mylopoulos, J.	Proceedings of the IEEE International Conference on Requirements Engineering					ConflictExcluded	Excluded	new_screen			2		2001				
607		ModelGuidance	The BRICS Component Model: A Model-Based Development Paradigm for Complex Robotics Software Systems	"Because robotic systems get more complex all the time, developers around the world have, during the last decade, created component-based software frameworks (Orocos, OpenRTM, ROS, OPRoS, SmartSoft) to support the development and reuse of ""large grained"" pieces of robotics software. This paper introduces the BRICS Component Model (BCM) to provide robotics developers with a set of guidelines, meta-models and tools for structuring as much as possible the development of, both, individual components and component-based architectures, using one or more of the aforementioned software frameworks at the same time, without introducing any framework- or application-specific details. The BCM is built upon two complementary paradigms: the ""5Cs"" (separation of concerns between the development aspects of Computation, Communication, Coordination, Configuration and Composition) and the meta-modeling approach from Model-Driven Engineering.
"		Bruyninckx, Herman; Klotzbücher, Markus; Hochgeschwender, Nico; Kraetzschmar, Gerhard; Gherardi, Luca; Brugali, Davide						ConflictIncluded	Excluded	new_screen			2		2013				
608		ModelGuidance	Towards a UML 2.0 extension for the modeling of security requirements in business processes	Security is a crucial issue for business performance, but usually, it is considered after the business processes definition. Many security requirements can be expressed at the business process level. A business process model is important for software developers, since they can capture from it the necessary requirements for software design and creation. Besides, business process modeling is the center for conducting and improving how the business is operated. This paper contains a description of our UML 2.0 extension for modeling secure business process through activity diagrams. We will apply this approach to a typical health-care business process. © Springer-Verlag Berlin Heidelberg 2006.		Rodríguez, A.; Fernández-Medina, E.; Piattini, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2006				
609		ModelGuidance	Enabling eXtreme model driven design of Parlay X-based communications services for end-to-end multiplatform service orchestrations	Modern telecommunications networks and classical roles of operators are subject to fundamental change. In the age of Web expansion, many network operators are currently seeking for new ways to create and provide applications on top of converging networks. Enabling user gene rated services as well as the smooth integration of communications services into mash-ups and other 3 rd party services is a key capability for the Service Creation Environments. In this paper we describe our approach to enabling eXtreme Model Driven Design of Parlay X-based communications services, which is a standardized collection of Web services that expose Next Generation Networks (NGN) core services to 3rd parties. We explain how to integrate Parlay X services in a service creation environment adequate for easy, user-level mash-up design as a human-computer interaction during service design and creation phase. We validate the integration of Parlay X-based NGN services through an end-to-end multiplatform service orchestrations by means of an Assisted Living scenario that has been exhibited at the German CeBIT 2009 fair to show how human beings may interact with automated processes through real-time communication channels. © 2009 IEEE.		Blum, N.; Magedanz, T.; Kleeßen, J.; Margaria, T.	Proceedings of the IEEE International Conference on Engineering of Complex Computer Systems, ICECCS					ConflictExcluded	Excluded	new_screen			2		2009				
610		ModelGuidance	COSIMIR® transport: Modeling, simulation and emulation of modular carrier based transport systems	More and more industrial enterprises tend to validate their planning for new factories using simulation. Production environments often contain automated transport systems to move items between different work stations. We present a solution for modeling transport systems with respect to their interaction with all peripheries like robots and treatment machines. Modeling follows the process of mechanical assembly by putting together constructional components in 3-D space. Models of devices are of sufficient physical and electrical accuracy to test unmodified controller programs in a virtual commissioning phase to save time at the real start-up. In emulation, real controllers connect to the model to test and optimize control programs. In contrast to conventional discrete event simulation software, developers can play with the model during simulation to test its reaction and perform event of fault analysis. Simulation results are suited to secure design decisions of planners and reduce the risk of incorrect planning. Easy to recognize 3-D geometry and simulation interactivity qualify models for presentation and personnel training. Finally, simulation reveals suboptimal behavior and makes optimizations easier.		Wischnewski, R.; Freund, E.	Proceedings - IEEE International Conference on Robotics and Automation					ConflictExcluded	Excluded	new_screen			2		2004				
611		ModelGuidance	On formal MOM modeling	Distributed applications are usually concurrent and nondeterministic. For this reason, formal verification on their design specifications is an essential technique for us to gain more confidence in the correctness of the behavioral aspects of our design before putting them into coding stage. Message-Oriented Middleware (MOM) is widely used to simplify the task of interprocess communications in distributed applications. To model the MOM-based applications for verification purpose, the services provided by MOM must also be integrated into the models. However, MOM modeling is non-trivial. While providing high-level program interfaces which shield programmers from the complexity of the underlying operating systems and networks, MOM may also conceals under such interfaces the concurrency and nondeterminism present in the underlying networks. This increases the possibility of misinterpretting the behavior of the applications, which in turn causes design errors. An over-abstracted MOM model based on Application Programming Interface may bury such design errors while an over-detailed model may consume too much resource and render the verification infeasible. As a guideline for MOM modeling, we present several formal models of various behavioral aspects of MOM in terms of Promela, the specification language used in SPIN model checker. Based on our empirical study, we also discuss the impact of incorporating these formal models in different settings into the MOM-based application models, in terms of increased state space for model checking. © Springer-Verlag Berlin Heidelberg 2007.		Cui, H.; Chen, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2007				
612		ModelGuidance	An extensible modeling methodology for embedded and cyber-physical system design	Models are important tools to manage the increasing complexity of system design. The choice of a modeling language for constructing models governs what types of systems can be modeled, and which subsequent design activities can be performed. This is especially true for the area of embedded electronic and cyber-physical system design, which poses several challenging requirements of modeling and design methodologies. This article argues that the Formal System Design (ForSyDe) methodology with the necessary presented extensions fulfills these requirements, and thus qualifies for the design of tomorrow's systems. Based on the theory of models of computation and the concept of process constructors, heterogeneous models are captured in ForSyDe with formal semantics. A refined layer of the formalism is introduced to make its denotational-style semantics easy to implement on top of commonly used imperative languages, and an open-source realization on top of the IEEE standard language SystemC is presented. The introspection mechanism is introduced to automatically export an intermediate representation of the constructed models for further analysis/synthesis by external tools. Flexibility and extensibility of ForSyDe is emphasized by integrating a new timed model of computation without central synchronization, and by providing mechanisms for integrating foreign models, parallel and distributed simulation, modeling adaptive, data-parallel, and non-deterministic systems. A set of ForSyDe features is demonstrated in practice, and compared with similar approaches using a running example and two relevant case studies. © Simulation Councils Inc.		Attarzadeh-Niaki, S.-H.; Sander, I.	Simulation					ConflictExcluded	Excluded	new_screen			2		2016				
613		ModelGuidance	Designing Real-Time, Concurrent, and Embedded Software Systems Using UML and Ada	"The domain of real-time, concurrent, and embedded software is becoming increasing complex. To effectively develop these systems, greater care must be taken to construct adequate models of the software and to effectively analyze these designs prior to code development. In this tutorial, we will discuss modeling and analysis issues specific to real-time, concurrent, and embedded software systems. Specifically, this tutorial will present guidelines for modeling these systems using the Unified Modeling Language (UML) version 2. A case study will be introduced to solidify the concepts and participant interaction will be encouraged in the construction of the models. Analytical methods will also be discussed to verify that the UML-based designs will produce the desired behavior. Finally, we will discuss how to proceed from the UML models into an Ada (2005) implementation.
"		Pettit, Robert G.						ConflictExcluded	Excluded	new_screen			2		2010				
614		ModelGuidance	Modeling Software Architectures in the Unified Modeling Language	"The Unified Modeling Language (UML) is a family of design notations that is rapidly becoming a de facto standard software design language. UML provides a variety of useful capabilities to the software designer, including multiple, interrelated design views, a semiformal semantics expressed as a UML meta model, and an associated language for expressing formal logic constraints on design elements. The primary goal of this work is an assessment of UML's expressive power for modeling software architectures in the manner in which a number of existing software architecture description languages (ADLs) model architectures. This paper presents two strategies for supporting architectural concerns within UML. One strategy involves using UML ""as is,"" while the other incorporates useful features of existing ADLs as UML extensions. We discuss the applicability, strengths, and weaknesses of the two strategies. The strategies are applied on three ADLs that, as a whole, represent a broad cross-section of present-day ADL capabilities. One conclusion of our work is that UML currently lacks support for capturing and exploiting certain architectural concerns whose importance has been demonstrated through the research and practice of software architectures. In particular, UML lacks direct support for modeling and exploiting architectural styles, explicit software connectors, and local and global architectural constraints.

"		Medvidovic, Nenad; Rosenblum, David S.; Redmiles, David F.; Robbins, Jason E.	ACM Trans. Softw. Eng. Methodol.					ConflictExcluded	Excluded	new_screen			2		2002				
615		ModelGuidance	Short Paper: A model driven approach for telecommunication service creation environments relying on enterprise architecture	Telecom systems are complex due to their implicit composition of software and hardware elements. Our aim in this research is to support designing new services by providing facilities and tools to detect design flaws and errors at an early stage. Our proposed framework and tools rely on model driven engineering. © 2015 IEEE.		Alloush, I.; Chiprianov, V.; Simonin, J.; Rouvrais, S.; Kermarrec, Y.	2015 18th International Conference on Intelligence in Next Generation Networks, ICIN 2015					ConflictExcluded	Excluded	new_screen			2		2015				
616		ModelGuidance	Conceptual and system modelling with UML: Guidelines	Unified Modelling Language (UML) is one of the widely used object-oriented modelling grammars in the current information system modelling process. Initially, UML more focussed on the design phase modelling (system modelling), but recently certain research studied identified that UML can appropriately be used in analysis phase modelling (conceptual modelling) also. Nevertheless, still it is unclear that whether UML is capable of representing any given real world scenario precisely using its' grammatical constructs and rules, during the conceptual modelling process. Therefore, the purpose of this research paper is to (1) identify all the real world domain characteristics to be represented using the grammatical constructs and rules of UML. Subsequently, certain guidelines will be proposed to: (2) define UML based grammatical rules for the conceptual level to represent the real world domain characteristics completely and clearly using UML (3) transform the UML based grammatical ruled defined at the conceptual level into system level with no missing information.		Tilakaratna, P.; Rajapakse, J.	International Journal of Digital Content Technology and its Applications					ConflictIncluded	Excluded	new_screen			2		2012				
617		ModelGuidance	Power-modelling toward a more versatile approach to creating and using conceptual models	The prospects of conceptual modelling are widely undisputed. Nevertheless the current practice of conceptual modelling remains unsatisfactory. Usually, modelling languages offer primitive concepts only-with respective effects on productivity and model quality. The creation of models is restricted to early phases of system life-cycle. Hence, the benefits of models in later phases are ignored. Furthermore, the creation and use of conceptual models is still restricted to experts only. In this paper, the outline of a new modelling paradigm, referred to as power-modelling, is presented. It builds on the potential of domain-specific modelling languages (DSML), application frameworks and reference models. It regards models as the primary medium to perceive, interact with and change systems and the environment they are supposed to operate in during the entire system life-cycle. For this purpose, power-modelling is built on an extensible set of multi-level DSML that fit the conceptual perspectives of a wide range of prospective users and a common representation of models and code, which allows overcoming the notorious problem of synchronizing models and code.		Frank, U.	BMSD 2014 - Proceedings of the 4th International Symposium on Business Modeling and Software Design					ConflictExcluded	Excluded	new_screen			2		2014				
618		ModelGuidance	UML-B: Formal Modeling and Design Aided by UML	"The emergence of the UML as a de-facto standard for object-oriented modelling has been mirrored by the success of the B method as a practically useful formal modelling technique. The two notations have much to offer each other. The UML provides an accessible visualisation of models facilitating communication of ideas but lacks formal precise semantics. B, on the other hand, has the precision to support animation and rigorous verification but requires significant effort in training to overcome the mathematical barrier that many practitioners perceive. We utilise a derivation of the B notation as an action and constraint language for the UML and define the semantics of UML entities via a translation into B. Through the UML-B profile we provide specialisations of UML entities to support model refinement. The result is a formally precise variant of UML that can be used for refinement based, object-oriented behavioural modelling. The design of UML-B has been guided by industrial applications.

"		Snook, Colin; Butler, Michael	ACM Trans. Softw. Eng. Methodol.					ConflictExcluded	Excluded	new_screen			2		2006				
619		ModelGuidance	Flexible modelling for requirements engineering	Many applications that are developed do not completely fulfil the requirements of their stakeholders. This can be a result of inadequate requirements elicitation and poorly defined requirements. Many solutions, including model-driven inspired ones, have been proposed to improve the elicitation of the requirements, though many of them are not yet widely used in practice as they require training of both the employees and the stakeholders. In this paper we propose the use of exible modelling for eliciting and capturing the requirements of applications to facilitate the production of correct products that deliver on the contract defined between clients and developers. We argue that the use of exible modelling can lower the entry barrier for use in the industry. The pro- posed method, called FlexRE, is applied to a scenario to demonstrate its capabilities and ways it can be extended. © 2015 for the individual papers by the papers' authors.		Zolotas, A.; Matragkas, N.; Kolovos, D. S.; Paige, R. F.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2015				
620		ModelGuidance	Towards an assistive and pattern learning-driven process modeling approach	The practice of business process modeling not only requires modeling expertise but also significant domain expertise. Bringing the latter into an early stage of modeling contributes to design models that appropriately capture an underlying reality. For this, modeling experts and domain experts need to intensively cooperate, especially when the former are not experienced within the domain they are modeling. This results in a time-consuming and demanding engineering effort. To address this challenge we propose a process modeling approach that assists domain experts in the creation and adaptation of process models. To get an appropriate assistance, the approach is driven by semantic patterns and learning. Semantic patterns are domain-specific and consist of process model fragments (or end-to-end process models), which are continuously learned from feedback from domain as well as process modeling experts. This enables to incorporate good practices of process modeling into the semantic patterns. To this end, both machine-learning and knowledge engineering techniques are employed, which allow the semantic patterns to adapt over time and thus to keep up with the evolution of process modeling in the different business domains. Copyright held by the author(s).		Laurenzi, E.; Hinkelmann, K.; Jüngling, S.; Montecchiari, D.; Pande, C.; Martin, A.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2019				
621		ModelGuidance	A “Resource Package”-Oriented Approach for Remote Sensing Analysis Modeling - Dust Storm Monitoring Model as Example	Now, with the development of intelligent service technology, information provisioning models are changing from simple, single-type models to complex, on-demand models as required. Remote sensing analysis modeling often requires the use of multiple data sources, computer resources, tools, and models, and couples these resources into a workflow for global change research. Therefore, remote sensing analysis modeling research today faces a critical challenge: the registry, discovery, and allocation of modeling resources are complex, as they are heterogeneous and geographically distributed. This paper proposes a resource package-oriented approach that provides guidelines for remote sensing analysis modeling to increase model sharing and integrating. This unified wrapping approach can be used to make the management and use of existing resources becoming easy and reusable. Based on this description of construction method, different remote sensing analysis resources can be combined together on-demand. We developed a web environment to compose different remote sensing modeling resources as on-demand processing components, based on the existing workflow engineering, and use a dust storm monitoring model as an example. Comparative analyses are given to further explain the applications of this hierarchical construction method in the areas of the remote sensing analysis model.		Zou, Quan; Li, Guoqing; Yu, Wenyang; Cao, Yang	{INTERNATIONAL} {JOURNAL} {OF} {SOFTWARE} {ENGINEERING} {AND} {KNOWLEDGE} {ENGINEERING}					ConflictExcluded	Excluded	new_screen			2		2014				
622		ModelGuidance	On the role of architectural style in model driven development	Object Management Group's Model-Driven Architecture (MDA) can be considered as one of the achievements resulting from ever-increasing importance of software architecture. However, based on case studies on using the ideas of MDA both with UML and in a formal setting, some notions that have been conventionally associated with architecture-oriented development have no clear role in the model. In particular, we are referring to architectural styles, which can be seen as recurring architectures of various systems, especially when designing product families. In this paper, we analyze architectural styles in the context of MDA, propose a modification to the model that would allow encapsulation of architectural properties in it, and demonstrate the usage of the approach with two examples, where interaction and distribution are the essential characteristics of the used architecture. © Springer-Verlag 2004.		Mikkonen, T.; Pitkänen, R.; Pussinen, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2004				
623		ModelGuidance	Hierarchical declarative modelling with refinement and sub-processes	We present a new declarative model with composition and hierarchical definition of processes, featuring (a) incremental refinement, (b) adaptation of processes, and (c) dynamic creation of sub-processes. The approach is motivated and exemplified by a recent case management solution delivered by our industry partner Exformatics A/S. The approach is achieved by extending the Dynamic Condition Response (DCR) graph model with interfaces and composition along those interfaces. Both refinement and sub-processes are then constructed in terms of that composition. Sub-processes take the form of hierarchical (complex) events, which dynamically instantiate sub-processes. The extensions are realised and supported by a prototype simulation tool. © 2014 Springer International Publishing Switzerland.		Debois, S.; Hildebrandt, T.; Slaats, T.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2014				
624		ModelGuidance	Model development guidelines for UML-RT: conventions, patterns and antipatterns	Software development guidelines are a set of rules which can help improve the quality of software. These rules are defined on the basis of experience gained by the software development community over time. This paper discusses a set of design guidelines for model-based development of complex real-time embedded software systems. To be precise, we propose nine design conventions, three design patterns and thirteen antipatterns for developing UML-RT models. These guidelines have been identified based on our analysis of around 100UML-RT models from industry and academia. Most of the guidelines are explained with the help of examples, and standard templates from the current state of the art are used for documenting the design rules. © 2016, Springer-Verlag Berlin Heidelberg.		Das, T. K.; Dingel, J.	Software and Systems Modeling					ConflictIncluded	Included	new_screen			2		2018				
625		ModelGuidance	Device Modeling for a Flexible Embedded Systems Development Process	Methodologies, techniques and tools that currently support the embedded systems (ESs) development process prove inadequate for today's complex ESs. Adopted traditional architectural styles do not cover the whole requirements of the development process, with extensibility being the major drawback. Service-oriented computing is exploited in this paper, to define an architectural framework for a demand-led ESs development process. Features required in the development process are defined as Web-services, published in the public domain, and used on demand through semantic Web by developers to construct their projects' specific integrated development environment (IDE). The way that these services affect the development process is discussed with main focus on an ontology-based device modeling.		Thamboulidis, K. C.; Doukas, G. S.; Koumoutsos, G. V.						ConflictExcluded	Excluded	new_screen			2		2007				
626		ModelGuidance	Modeling business process of web services with an extended STRIPS operations to detection feature interaction problems runtime	Service-Oriented Computing is benefit of inter-operation among services. Current service-oriented computing research is much more concerning the low level interoperation among services, such as service discovery, service composition etc. However, the high level research issue - the feature interaction problem is also challenging the interoperation of service-oriented computing. Traditional feature interaction methods are focused on the service design phrase with formal methods or software engineering analysis. Autonomy and distribution of service deploying style have made the needs of runtime detecting and resolving feature interaction in SOC research community. This paper investigates the detection of feature interactions in web services at runtime and proposes ESTRIPs, an extended STRIPS operation conflict-free of services in business process detection method, which reasons from OWL-S and SWRL combined with runtime SOAP messages. First, we give the model of the feature interaction problem in business process during its execution and then the ESTRIPS method given in detail. The implementation of a prototype is illustrated. Using a real world scenario shows the plausibility of our method of detecting feature interactions of business process. © 2011 IEEE.		Xu, J.; Chen, K.; Duan, Y.; Reiff-Marganiec, S.	Proceedings - 2011 IEEE 9th International Conference on Web Services, ICWS 2011					ConflictExcluded	Excluded	new_screen			2		2011				
627		ModelGuidance	Process models for agent-based development	A great deal of research in the area of agent-oriented software engineering ({AOSE}) focuses on proposing methodologies for agent systems, i.e., on identifying the guidelines to drive the various phases of agent-based software development and the abstractions to be exploited in these phases. However, very little attention has been paid so far to the engineering process subjacent to the development activity, disciplining the execution of the different phases involved in the software development. In this paper, we focus on process models for software development and put these in relation with current researches in {AOSE}. First, we introduce the key concepts and issues related to software processes and present the various software process models currently adopted in mainstream software engineering. Then, we survey the characteristics of a number of agent-oriented methodologies, as they pertain to software processes. In particular, for each methodology, we analyze which software process model it (often implicitly) underlies and which phases of the process are covered by it, thus enabling us to identify some key limitations of currently methodology-centered researches. On this basis, we eventually identify and analyze several open issues in the area of software process models for agent-based development, calling for further researches and experiences. (c) 2004 Elsevier Ltd. All rights reserved.		Cernuzzi, L.; Cossentino, M.; Zambonelli, F.	{ENGINEERING} {APPLICATIONS} {OF} {ARTIFICIAL} {IN}℡{LIGENCE}					ConflictExcluded	Excluded	new_screen			2		2005				
628		ModelGuidance	Implication of different learning styles on the modeling of object-oriented systems	This poster reports on work in progress on the implication of thinking and learning styles on the modelling of Object-Oriented Systems. In particular, analyses of learning modalities are presented and then considered in light of using the Unified Modelling Language (UML) as a tool for system modelling. The results of testing UML CASE tool learners will be available before the conference.		Thomas, Lynda A.	Proceedings - International Conference on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2000				
629		ModelGuidance	An Industrial Application of Formal Model Based Development: The Metrô Rio ATP Case	"The railway and metro signaling industries are currently investigating strategies for the introduction of formal model based development within their development processes. Among the various platforms supporting this technology, the Simulink/Stateflow tool-suite has been adopted in various safety-critical domains for modeling and code generation of control systems. Despite their flexibility and ease of use, introduction of these tools for developing dependable software, and in particular signaling applications, has been often hampered by the lack of a rigorous formal semantics and by the absence of a certified code generator. This paper reports on the Simulink/Stateflow based development of the on-board equipment of the Metrô Rio Automatic Train Protection system, describing the design strategy and the approach followed in addressing weaknesses and certification issues related to the adopted tool-suite.
"		Ferrari, Alessio; Papini, Mario; Fantechi, Alessandro; Grasso, Daniele						ConflictExcluded	Excluded	new_screen			2		2010				
630		ModelGuidance	Middleware-Induced Architectural Style Modelling for Architecture Exploration	The MID ARCH method is a software design method for exploring software architecture alternatives that use different middleware platforms. First, candidate architectures are modelled based on different architectural styles that are induced by the respective middleware platforms. Candidate styles are chosen using a taxonomy of such styles. The goal is the evaluation of candidate architectures with respect to a goal/question/metric quality model. We illustrate the modelling approach using the Apache Cocoon Web component framework and related technologies, and a taxonomy of their associated styles.		Giesecke, S.; Bornhold, J.; Hasselbring, W.						ConflictExcluded	Excluded	new_screen			2		2007				
631		ModelGuidance	Modeling sociotechnical specifics using architectural concepts	In this paper we focus on architectural concepts for complex sociotechnical systems. First we claim that there is a great need for model-based reasoning about systemic properties concerning questions of system design and the definition of long-term management policies. After this we take our starting point from formal methods, requirements engineering, and software architecture. We provide special extensions for these methods which are well-suited for the description of the behavioral relevance of cognitive parameters in sociotechnical systems. We maintain the visual style of modeling concepts as known from software architecture and provide an easy to use notation for reasoning about the features of specific decision situations. Finally we provide concepts to deal with uncertain system behavior and human error.		Cebulla, M.	Proceedings of the ACM Symposium on Applied Computing					ConflictExcluded	Excluded	new_screen			2		2004				
632		ModelGuidance	Model driven development for business performance management	Business process integration and monitoring provides an invaluable means for an enterprise to adapt to changing conditions. However, developing such applications using traditional methods is challenging because of the intrinsic complexity of integrating large-scale business processes and existing applications. Model Driven Development™ (MDD™) is an approach to developing applications - from domain-specific specific models to platform-sensitive models - that bridges the gap between business processes and information technology. We describe the MDD framework and methodology used to create the IBM Business Performance Management (BPM) solution. We describe how we apply model-driven techniques to BPM and present a scenario from a pilot project in which these techniques were applied. Technical details on models and transformation are presented. Our framework uses and extends the IBM business observation metamodel and introduces a data warehouse metamodel and other platform-specific and transformational models. We discuss our lessons learned and present the general guidelines for using MDD to develop enterprise-scale applications. © 2006 IBM.		Chowdhary, P.; Bhaskaran, K.; Caswell, N. S.; Chang, H.; Chao, T.; Chen, S.-K.; Dikun, M.; Lei, H.; Jeng, J.-J.; Kapoor, S.; Lang, C. A.; Mihaila, G.; Stanoi, I.; Zeng, L.	IBM Systems Journal					ConflictExcluded	Excluded	new_screen			2		2006				
633		ModelGuidance	Agent-based modeling of interdependencies in critical infrastructures through UML	In this paper, we investigate the adoption of agent-based modeling and simulation to study the interdependencies in critical infrastructures. We propose an approach to model critical infrastructures through agents as well as some guidelines to simulate such complex systems. We adopt UML as modeling language, thus proposing a new way to represent the interdependencies that occur in a complex system composed by different critical infrastructures. Through an example that regards an information system for civic emergency management, we describe our modeling methodology, discuss about the measurements and results that can be gained from the simulation of the complex system, and present the most relevant issues regarding the simulator design and implementation.		Cardellini, V.; Casalicchio, E.; Galli, E.	Agent Directed Simulation Symposium, ADS 2007 - Proceedings of the 2007 Spring Simulation Multiconference, SpringSim 2007					ConflictExcluded	Excluded	new_screen			2		2007				
634		ModelGuidance	The subject-oriented notation for end-user data modelling	Existing data modeling notations and methods of database development are dedicated to technicians. At the same time, there is a tendency to involve the end-user in the development process. This requires the creation of new modeling notations and development methods for databases area. These tools should be understandable both to end-users and to developers. Because of unified understanding, it is possible to consider the action of the subject (end-user) as a basis of such modelling and designing tools. Subject's action describes the process of creating domain concepts with which end-users are working and which developers should implement in an information system. The paper proposes a subject-oriented data model and its modeling notation, which are devoted to the end user. Minimizing of graphic primitives quantity and universalization of modeling tools are results of using both the unified structure of action mechanism and its variable content. © 2016 IEEE.		Kucherov, S.; Rogozov, Y.; Sviridov, A.	Application of Information and Communication Technologies, AICT 2016 - Conference Proceedings					ConflictExcluded	Excluded	new_screen			2		2017				
635		ModelGuidance	Bridging the gap between a set of interrelated business process models and software models	A business process model identifies the activities, resources and data involved in the creation of a product or service, having lots of useful information for starting to develop a supporting software system. With regard to software development, one of the most difficult and crucial activities is the identification of system functional requirements. A popular way to capture and describe those requirements is through UML use case models. Usually an organization deals with several business processes. As a consequence, a software product does not usually support only one business process, but rather a set of business processes. This paper presents an approach that allows aggregating in one use case model all the information that can be extracted from the set of business process models that will be supported by the software under development. The generated use case model serves as a basis for the software development process, helping reducing time and effort spent in requirements elicitation. The approach also helps to ensure the alignment between business and software, and enables traceability between business processes and the corresponding elements in software models. Copyright © 2015 SCITEPRESS - Science and Technology Publications.		Cruz, E. F.; Machado, R. J.; Santos, M. Y.	ICEIS 2015 - 17th International Conference on Enterprise Information Systems, Proceedings					ConflictExcluded	Excluded	new_screen			2		2015				
636		ModelGuidance	Designing UML diagrams using goal-based concepts	Researchers in the requirements engineering discipline have been proposing goal modeling techniques to capture business context as part of the information systems (IS) requirements. Unfortunately, it is still unclear how to utilize the goals captured by goal modeling techniques in IS design. To overcome this gap, we propose a systematic and structured set of guidelines to translate goal-based requirements, which are represented in goal schemas, to UML diagrams. The translation guidelines are grounded on Bunge's ontology; good aggregation and decomposition principles; and a goal structured approach developed by Rolland et al. The usefulness of these guidelines was tested in an empirical study. The results illustrate that subjects using the guidelines were able to generate more complete and precise UML diagrams.		Singh, S.; Sun, F.; Woo, C.	19th Workshop on Information Technologies and Systems, WITS 2009					ConflictExcluded	Excluded	new_screen			2		2009				
637		ModelGuidance	An explicit modeling approach for wholes in the object-oriented development process	Summary form only given. Although the success of the object paradigm is owed to the capability of representing complex entities characteristic of highly structured application domains, current object-development methodologies do not provide the appropriate support for dealing homogeneously with complex units in the analysis, design and implementation phase. Mutually related entities can be modelled either implicitly by a web of mutually referencing objects or explicitly by an object holding part-of references to objects playing the role of parts. The paper explores the latter explicit approach, where complex entities are explicitly recognised, designed and implemented as wholes. Such an approach makes the appropriate conceptual and implementation tools available in the different phases of the object-oriented development process. The relevant steps of a methodology are drafted, with emphasis on the analysis and design phase, where the cognitive and ontological notion of whole suggests the guidelines towards a criterion for inferring and validating wholes from associative knowledge in the domain.		Pazzi, L.; Malagoli, A.						ConflictExcluded	Excluded	new_screen			2		2005				
638		ModelGuidance	Model-Driven Development of Secure Service Applications	The development of a secure service application is a difficult task and designed protocols are very error-prone. To develop a secure SOA application, application-independent protocols (e.g. TLS or Web service security protocols) are used. These protocols guarantee standard security properties like integrity or confidentiality but the critical properties are applicationspecific (e.g. “a ticket can not be used twice”). For that, security has to be integrated in the whole development process and application-specific security properties have to be guaranteed. This paper illustrates the modeling of a security-critical service application with UML. The modeling is part of an integrated software engineering approach that encompasses model-driven development. Using the approach, an application based on service-oriented architectures (SOA) is modeled with UML. From this model executable code as well as a formal specification to prove the security of the application is generated automatically. Our approach, called SecureMDD, supports the development of security-critical applications and integrates formal methods to guarantee the security of the system. The modeling guidelines are demonstrated with an online banking example.		Borek, M.; Moebius, N.; Stenzel, K.; Reif, W.						ConflictExcluded	Excluded	new_screen			2		2012				
639		ModelGuidance	Modeling and analysis of value added services using message sequence charts	A value added service is an extension to the basic call/session establishment functionality of a network. Different teams develop services independently or in order to handle complexity, a service is often specified individually without any consideration to existing ones. These different services may behave correctly when they run separately, but may interact in a negative manner when they are integrated. This is known as service interaction. In this paper, we tackle the problem of service interaction detection in a formal setup. We use message sequence charts (MSC) to specify the behaviors of services as well as their properties. In our specification style, high-level MSC (HMSC) is used to describe the behavior of services from the user point of view, while basic MSCs (bMSCs) are used to describe these behaviors at an abstract network level. We describe service properties from a local point of view. The behavior of a service is first validated against its properties. For the detection of potential interactions between two services, instead of merging their behaviors and then check for the interactions, we first determine interaction-prone scenarios using known filtering techniques, then we verify whether the properties of one service are satisfied by the behavior of the other service without combining their behaviors. In the case of non-satisfaction, we conclude that an interaction has been detected. © 2006 Elsevier Ltd. All rights reserved.		Khendek, F.; Zheng, T.	Journal of Network and Computer Applications					ConflictExcluded	Excluded	new_screen			2		2008				
640		ModelGuidance	Analyzing the integration between requirements and models in model driven development	In Model Driven Development (MDD), models replace software code as the development artifact. At the same time, requirements represent the information that is elaborated in models. However, despite the tight relationship between models and requirements, only a few MDD approaches provide the necessary methodological guidelines and tool support to explicitly facilitate this relationship. We analyze approaches for integrating requirements with models within MDD and highlight the common characteristics, benefits, and problems. Based on the analysis, we elicit a set of general properties that need to be fulfilled when considering the integration of requirements and models, and we assess the contribution of the considered approaches accordingly. © 2011 Springer-Verlag.		Zikra, I.; Stirna, J.; Zdravkovic, J.	Lecture Notes in Business Information Processing					ConflictExcluded	Excluded	new_screen			2		2011				
641		ModelGuidance	A user-centered model for usable security and privacy	Security, privacy and usability are vital quality attributes of IT systems and services. Users and legal authorities demand that systems are secure and preserve privacy. At the same time, security and privacy mechanisms should not complicate workflows and must be transparent for the user. In order to master this challenge, a close involvement of the users is necessary—both at development and at run-time. In this paper, we present a user-centered model for usable security and privacy that is aligned with user-centered design guidelines [34] and the Human-Centered Design process [28]. Based on this model, we present an initial method for the design of usable security systems. Through active involvement of the user, the model and the method are meant to help developers to identify and solve shortcomings of their security and privacy mechanisms. We motivate our work and present our results based on an Internet of Things/smart home scenario. Due to the amount of private data and strong data protection laws, both usability and privacy are of major importance in this domain. However, our model and method are not limited to the smart home domain, but can be applied whenever usable security and privacy are of particular interest for a system under development. © Springer International Publishing AG 2017.		Feth, D.; Maier, A.; Polst, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2017				
642		ModelGuidance	Modeling multi-board communication in the AXIOM cyber-physical system	The main goal of the AXIOM project is to design a small board that could be used as a LEGOTM-style module to build systems with more performance while keeping the programming task simple by using a familiar sharedmemory programming model. The interconnection plays a crucial role both for the need of providing fast and reliable communication (including lossless control flow as, e.g., Infiniband, but with a simplified scope and cost). In this paper, we outline some of our initial choices and explore the performance of RDMA based mechanisms and interfaces, including the remote memory management behind the programming model. Our initial results show a potential for scaling the system as we use DF-Threads, good bandwidth for RDMA transfers, promising to scale once we use the OmpSs, programming model.		Giorgi, R.; Mazumdar, S.; Viola, S.; Gai, P.; Garzarella, S.; Morelli, B.; Pnevmatikatos, D.; Theodoropoulos, D.; Alvarez, C.; Ayguadé, E.; Bueno, J.; Filgueras, A.; Jimenez-Gonzalez, D.; Martorell, X.	Ada User Journal					ConflictExcluded	Excluded	new_screen			2		2016				
643		ModelGuidance	Sketch-Based gradual model-driven development	This paper proposes an abstraction-aware reverse engineering method in which a developer just makes a mark on an important code region as if he or she draws a quick sketch on the program list. A support tool called iArch slices a program from marked program points and generates an abstract design model faithful to the intention of the developer. The developer can modify the design model and re-generate the code again while preserving the abstraction level and the traceability. Archface, an interface mechanism between design and code, plays an important role in abstraction-aware traceability check. If the developer wants to obtain a more concrete design model from the code, he or she only has to make additional marks on the program list. We can gradually transition to model-driven development style. Copyright © 2014 ACM.		Li, P.; Ubayashi, N.; Ai, D.; Li, Y. N.; Hosoai, S.; Kamei, Y.	International Workshop on Innovative Software Development Methodologies and Practices, InnoSWDev 2014 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2014				
644		ModelGuidance	An integrative modelling technique bridging the gap between business and information systems development	The goal of this research is to develop an integrative modelling technique that is easy enough to be used by most business users with little training, but robust and structured enough to be used in subsequent Information Systems Development (ISD) modelling. This technique attempts to bridge the current gap between modelling on a business level and modelling on a technical level. The overall research methodology is design science research, embedding a grounded approach, to develop an integrative modelling technique. The resultant artefact is applied to a case study to test its applicability and suitability, and the results are evaluated. The results show that the proposed integrative modelling technique that is based on a better understanding of the fundamental entities in business and ISD modelling and their properties, attributes and relationships, can be used as a method to model business situations easily and expressively. By overcoming the divide between business and ISD modelling, the technique also advances informal, mostly textual, business modelling. The paper makes a methodological contribution by establishing a new technique that integrates business analysis with ISD, as well as demonstrating how a single case study could serve as an exemplar of a theory. © the author(s).		Joubert, P.; de Villiers, C.; Kroeze, J. H.	South African Computer Journal					ConflictIncluded	Excluded	new_screen			2		2018				
645		ModelGuidance	Descriptive process modeling in an industrial environment: Experience and guidelines	Process modeling is a key activity in process improvement to understand the software process, to detect weaknesses in the process and to allow estimation. A major problem when process modeling is done in industrial environment is obtaining access to the information needed. This paper describes experience from descriptive process modeling in an industrial environment and reports problems and difficulties encountered in acquiring and formalizing that knowledge. From the experience, guidelines for descriptive process modeling activities, especially for process knowledge acquisition, are derived. © Springer-Verlag Berlin Heidelberg 2000.		Becker-Kornstaedt, U.; Belau, W.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2000				
646		ModelGuidance	Design, modeling and analysis of ITS using UML and petri nets	This paper Is about the application of formal methods to model and analyze complex systems in the context of Intelligent Transport Systems (ITS). It suggests a specification methodology based on a set of UML diagrams to generate a complete analyzable formal model. The methodology integrates the requirements of incremental and modular development for complex systems. The analysis made on the formal model is carried out through qualitative criteria, verified by model checking tools. The proposed guidelines are illustrated by a case study which considers cars In traffic situations, exchanging information about their states to reach consistency among their driving decisions. © 2007 IEEE.		Bonnefoi, F.; Hillah, L. M.; Kordon, F.; Renault, X.	IEEE Conference on Intelligent Transportation Systems, Proceedings, ITSC					ConflictIncluded	Excluded	new_screen			2		2007				
647		ModelGuidance	Towards an architecture for electronic notifications services on the cloud: A model driven approach	Cloud computing technology is being adopted by organizations driven by their need to reduce operational costs, and to deliver scalable and flexible services. Solutions deployed on the cloud are a great point of interest in the commercial and governmental area for e-commerce transactions. Here, electronic invoicing applications play a key role in commercial activities, being a branch of vital importance for the business activities. In order to accomplish certain tasks (e.g., collection of overdue invoices, notifications about payment plans) technological solutions have been proposed. Then, it is important to establish architectures that support developers in creating notification solutions in order to send messages about issues of interest for organizations in a proper manner. Moreover, due to the constant changes of laws, a model driven approach can help as a flexible and maintainable option for these solutions. Therefore, this paper proposes an architecture for the creation of electronic notifications, which allows a good communication between organizations and their clients. In this context, a case study is presented in order to demonstrate the instantiation of the proposed architecture in a real scenario. © 2019 IEEE.		Cedillo, P.; Garcia, A.; Diego Cardenas-D, J.	2019 6th International Conference on eDemocracy and eGovernment, ICEDEG 2019					ConflictExcluded	Excluded	new_screen			2		2019				
648		ModelGuidance	Modeling deep reinforcement learning based architectures for cyber-physical systems	Reinforcement learning is a sub-field of machine learning where an agent aims to learn a behavior or a policy maximizing a reward function by trial and error. The approach is particularly interesting for the design of autonomous cyber-physical systems such as self-driving cars. In this work we present a generative, domain-specific modeling framework for the design, training and integration of reinforcement learning systems. It consists of a neural network modeling language which is used to design the models to be trained, e.g. actor and critic networks, and a training language used to describe the training procedure and set the corresponding hyperparameters. The underlying component model allows the modeler to embed the trained networks in larger component & connector architectures. We illustrate our framework by the example of a self-driving racing car. © 2019 IEEE.		Gatto, N.; Kusmenko, E.; Rumpe, B.	Proceedings - 2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019					ConflictExcluded	Excluded	new_screen			2		2019				
649		ModelGuidance	Extending UML for object-relational database design	The most common way of designing databases is using de E/R model without taking into account other views of the system. However, new object-oriented design languages, such as UML (Unified Modelling Language), permit modelling the full system, including the database schema, in a uniform way. Besides, as UML is an extensible language, it allows introducing new stereotypes for specific applications if it is needed. There are some proposals to extend UML with stereotypes for database design but, unfortunately, they are focused on relational databases. However, new applications require representing complex objects related with complex relationships and object-relational databases are more appropriated to support the new application requirements. The framework of this paper is an Object-Relational Database Design Methodology. The methodology defines new UML stereotypes for Object-Relational Database Design and proposes some guidelines to translate an UML schema into an object-relational one. The guidelines are based on the SQL:1999 object-relational model and on Oracle8i as an example of product. In this paper we focus on the UML extensions required for object-relational database design. © Springer-Verlag Berlin Heidelberg 2001.		Marcos, E.; Vela, B.; Cavero, J. M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2001				
650		ModelGuidance	A Petri Net pattern-oriented approach for the design of physical protection systems	The design of complex Physical Protection Systems (PPSs) still raises some challenges despite the high number of technologies for smart surveillance. One reason is the lack of effective methodologies able to support the PPS designer in evaluating the effectiveness of the system on varying design choices. Indeed, an estimation of the system vulnerability should be performed in the early phases of the PPS design. This paper introduces a model-based methodology for the quantitative estimation of the vulnerability of a PPS. The proposed methodology clearly defines a compositional approach which takes advantage from the usage of predefined patterns for the creation of vulnerability models. In particular, the paper proposes some Petri Net patterns able to capture the behavioural aspects of several assets and actors involved in attacking/defending scenarios. © 2014 Springer International Publishing.		Flammini, F.; Gentile, U.; Marrone, S.; Nardone, R.; Vittorini, V.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2014				
651		ModelGuidance	Model driven engineering approach to manage peripherals in mobile devices	In the last years, Model Driven Engineering (MDE) has demonstrated several benefits for software development. It has gained a great popularity in both academic and industry communities. The application of its guidelines is suitable for several domains including Model Transformations. In addition, mobile applications is one domain that has a lot of relevance. However, these applications increases their value when they use properly mobile peripherals. Thus, the purpose of this paper is to show the creation of a domain metamodel to manage peripherals in mobile devices. Said metamodel will serve to built a Model Transformation Chain that will be able to generate native code for the Android platform. © Springer International Publishing AG, part of Springer Nature 2018.		Sanchez, D.; Florez, H.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2018				
652		ModelGuidance	Architecture and design of adaptive object-models	"Many object-oriented information systems share an architectural style that emphasizes flexibility and run-time adaptability. Business rules are stored externally to the program such as in a database or XML files instead of in code. The object model that the user cares about is part of the database, and the object model of the code is just an interpreter of the users' object model. We call these systems Adaptive Object-Models"""		Yoder, J. W.; Balaguer, F.; Johnson, R.	SIGPLAN Notices (ACM Special Interest Group on Programming Languages)					ConflictExcluded	Excluded	new_screen			2		2001				
653		ModelGuidance	Styles in business process modeling: an exploration and a model	Business process models are an important means to design, analyze, implement, and control business processes. As with every type of conceptual model, a business process model has to meet certain syntactic, semantic, and pragmatic quality requirements to be of value. For many years, such quality aspects were investigated by centering on the properties of the model artifact itself. Only recently, the process of model creation is considered as a factor that influences the resulting model’s quality. Our work contributes to this stream of research and presents an explorative analysis of the process of process modeling (PPM). We report on two large-scale modeling sessions involving 115 students. In these sessions, the act of model creation, i.e., the PPM, was automatically recorded. We conducted a cluster analysis on this data and identified three distinct styles of modeling. Further, we investigated how both task- and modeler-specific factors influence particular aspects of those modeling styles. Based thereupon, we propose a model that captures our insights. It lays the foundations for future research that may unveil how high-quality process models can be established through better modeling support and modeling instruction. © 2013, The Author(s).		Pinggera, J.; Soffer, P.; Fahland, D.; Weidlich, M.; Zugal, S.; Weber, B.; Reijers, H. A.; Mendling, J.	Software and Systems Modeling					ConflictIncluded	Excluded	new_screen			2		2015				
654		ModelGuidance	Software Usability Improvement: Modeling, Training and Relativity Analysis	In the paper, we try to analyze and summarize common software's usability quality character system in order to fine a software usability malfunction discover and improve problems. We use the Fuzzy Cognitive Map to describe the software quality character relationship. And give an integrated training arithmetic, syntax pruning arithmetic, semantic pruning arithmetic and quality relationship analysis arithmetic to the method.		Lai, X.; Zhou, Y.; Zhang, W.						ConflictExcluded	Excluded	new_screen			2		2009				
655		ModelGuidance	Modeling and reasoning about design alternatives of software as a service architectures	In general, a common reference architecture can be derived for Software as a Service (SaaS). However, while designing particular applications one may derive various application design alternatives from the same reference SaaS architecture specification. To meet the required functional and nonfunctional requirements of different enterprise applications it is important to model the possible design so that a feasible alternative can be defined. In this paper, we propose a systematic approach and corresponding tool support for guiding the design of SaaS application architectures. The approach defines a SaaS reference architecture, a family feature model and a set of reference design rules. Based on the business requirements an application feature model is defined using the family feature model. Selected features are related to design decisions and a SaaS application architecture design is derived. © 2011 IEEE.		Tekinerdogan, B.; Öztürk, K.; Doǧru, A.	Proceedings - 9th Working IEEE/IFIP Conference on Software Architecture, WICSA 2011					ConflictExcluded	Excluded	new_screen			2		2011				
656		ModelGuidance	Faster development through modeling	A modeling technique that is effective in speeding development by using free tools, and some of the ideas from OMG's Model Driven Architecture (MDA) process are discussed. The developers found that the reuse of code is effective in speeding development, and modeling can facilitate a a great deal of reuse in the development of datawarehouse system. Some of the steps of this technique include the creation of a model of the application, writing a miniapplication that implements the first instance of the repeated set of steps, and generation of all the code for the whole application. Other advantages of the further reuse of this model include impact analysis, creation unit tests, creation system documentation, and creation of XML schema for verifying input file compliance. Oracle Warehouse Builder makes it easy to model a data warehouse using the Common Warehouse Metamodel (CWM).		Cahoon, J.	Dr. Dobb's Journal					ConflictIncluded	Excluded	new_screen			2		2006				
657		ModelGuidance	Modeling and validation of service-oriented architectures: Application vs. style	Most applications developed today rely on a given middleware platform which governs the interaction between components, the access to resources, etc. To decide, which platform is suitable for a given application (or more generally, to understand the interaction between application and platform), we propose UML models of both the architectural style of the platform and the application scenario. Based on a formal interpretation of these as graphs and graph transformation systems, we are able to validate the consistency between platform and application. We exemplify the approach for platforms realizing the service-oriented architectural style and a supply chain management system as application scenario. Besides, we demonstrate the potential of model checking for graph transformation systems for answering the above consistency question. © 2003 ACM.		Baresi, L.; Heckel, R.; Thöne, S.; Varró, D.	Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering					ConflictExcluded	Excluded	new_screen			2		2003				
658		ModelGuidance	Modeling of Architectures with UML Panel	"A critical level of abstraction in the modeling of a large, complex system is its architecture. At an architectural level one models the principal system elements and their interaction. Architectural models are typically used to provide an intellectually tractable, birds-eye view of a system and to permit design-time reasoning about system-level concerns such as performance, reliability, portability, and conformance to external standards and architectural styles.

In practice most architectural descriptions are informal documents. They are usually centered on box-and-line diagrams, with explanatory prose. Visual conventions are idiosyncratic, and usually project specific. As a result, architectural descriptions are only vaguely understood by developers, they cannot be analyzed for consistency or completeness, they are only hypothetically related to implementations, their properties cannot be enforced as a system evolves, and they cannot be supported by tools to help software architects with their tasks.

There exist several architecture description languages, but we are interested in the use of UML. We aim to identify requirements on architectural modeling and how different modeling concepts of UML meet these requirements. This paper is not intended as a critique of the UML but as a discussion of approaches to modeling architectures that have been tried, more or less successfully."		Weigert, Thomas; Garlan, David; Knapman, John; Møller-Pedersen, Birger; Selic, Bran						ConflictExcluded	Excluded	new_screen			2		2000				
659		ModelGuidance	Model-driven ontology engineering	W3C's Semantic Web provides a common framework that allows data to be shared and reused across application and enterprise. As the Semantic Web shapes the future of the Web, it becomes more and more important in software engineering and enterprise application development. While existing ontology engineering tools provide a stack of ontology management support and are used successfully in certain domains, there still remains a gap between the ontology engineering tools and the traditional software engineering. For several decades, software engineering has been established on different modeling languages and methodologies such as Unified Modeling Language ({UML}). The differences in modeling languages and methodologies cause difficulties in enterprise application development involving the Semantic Web technologies. The existing ontology engineering tools provide only an ad hoc approach to bridging this gap with limited functionality and performance. The primary objective of our work is to bridge this gap between two different, but complementary engineering disciplines with a systematic approach. Our approach leverages Model-Driven Architecture ({MDA}) and Ontology Definition Metamodel ({ODM}), which enable model transformation. This approach allows seamdessly supporting existing models in {UML} and other languages in Semantic Web-based software development. In addition, it allows exploiting the availability and features of {UML} tools for creation of vocabularies and ontologies. Furthermore, {MDA} enables code generation and facilitates software tool development. This paper presents an {MDA}-based system for ontology engineering. In addition, it presents the entire stack of individual components of the developed ontology engineering tool.		Pan, Yue; Xie, Guotong; Ma, Li; Yang, Yang; Qiu, ZhaoMing; Lee, Juhnyoung						ConflictExcluded	Excluded	new_screen			2		2006				
660		ModelGuidance	Pattern-based modeling of cyber-physical systems for analyzing security	Cyber-physical systems are a crucial part of many infrastructure or production systems, and are spreading into other domains as part of the IoT (Internet-of-Things) wave. As cyber-physical systems act on the physical world, attacks could have severe consequences. At the same time, cyber-physical systems can be attacked like other IT systems. So it is essential that developers consider security during the design phase of software, to design adequate security protection for the system. This fact requires a structured security analysis right from the beginning. The initial input of such a security analysis is a system overview, e.g. in form of an architecture. It is a challenging task to provide the appropriate abstraction level of the system that allows identifying security threats and weaknesses. In the present paper, we describe a pattern that assists software developers in creating an architecture which captures the relevant elements for a security analysis. The interfaces of components may not only be accessible for authorized entities, but also for attackers. Therefore, we specify different interface types which enables one to identify relevant attacks for a specific interface type. We first present the solution part of our pattern as a meta-model, for which we then provide guidelines for its instantiation. As an example, we instantiate the pattern for a typical automation and control system. Last, we evaluate the suitability of our pattern by discussing how typical threats could be mapped to the different interface types. © 2019 Association for Computing Machinery.		Maidl, M.; Wirtz, R.; Zhao, T.; Heisel, M.; Wagner, M.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2019				
661		ModelGuidance	Modeling Statecharts and Activitycharts as Signal Equations	"The languages for modeling reactive systems are of different styles, like the imperative, state-based ones and the declarative, data-flow ones. They are adapted to different application domains. This paper, through the example of the languages Statecharts and Signal, shows a way to give a model of an imperative specification (Statecharts) in a declarative, equational one (Signal). This model constitutes a formal model of the Statemate semantics of Statecharts, upon which formal analysis techniques can be applied. Being a transformation from an imperative to a declarative structure, it involves the definition of generic models for the explicit management of state (in the case of control as well as of data). In order to obtain a structural construction of the model, a hierarchical and modular organization is proposed, including proper management and propagation of control along the hierarchy. The results presented here cover the essential features of Statecharts as well as of another language of Statemate: Activitycharts. As a translation, it makes multiformalism specification possible, and provides support for the integrated operation of the languages. The motivation lies also in the perspective of gaining access to the various formal analysis and implementation tools of the synchronous technology, using the DC1 exchange format, as in the Sacres programming environment.
"		Beauvais, J.-R.; Rutten, E.; Gautier, T.; Houdebine, R.; Le. Guernic, P.; Tang, Y.-M.	ACM Trans. Softw. Eng. Methodol.					ConflictExcluded	Excluded	new_screen			2		2001				
662		ModelGuidance	Design guidelines for feature model construction: Exploring the relationship between feature model structure and structural complexity	Software Product Lines (SPLs) play an important role in the context of large-scale production of software families. Feature models (FMs) are essential in SPLs by representing all the commonalities and variabilities in a product line. Currently, several tools support automated analysis of FMs, such as checking the consistency of FMs and counting the valid configurations of a product line. Although these tools greatly reduce the complexity of FM analysis, FM design is often performed manually, thus being prone to bad design choices in the domain analysis phase. This paper reports on our work to improve FM qualities from the exploration of the relationship between FM structure and structural complexity. By performing two common operations (i.e., consistency checking and counting valid configurations on FMs with different sizes and structures), we collected the time that an automated tool needs to finish these operations. Then, we applied data mining approaches to explore the relationship between FM structure and structural complexity. In addition, we provide guidelines for designing FMs based on our observations. Copyright © 2019 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved		Zhao, X.; Gray, J.	MODELSWARD 2019 - Proceedings of the 7th International Conference on Model-Driven Engineering and Software Development					ConflictIncluded	Included	new_screen			2		2019				
663		ModelGuidance	Efficient ontology-based modeling of context-aware in-car infotainment systems benchmark infrastructure and design guidelines	Context-aware systems, such as in-car infotainment systems, aim at improving the interaction between computers and humans by using contextual information about the system, the user and the environment. Previous work has shown that ontologies have significant benefits for modeling such context-aware systems, e.g., when inferring knowledge. However, the potential performance impact on the overall system when adopting ontologies, especially with rules, to model context-awareness is yet unknown. In this paper, we introduce a benchmark infrastructure and perform benchmarks on multiple ontologies of context-aware systems in order to determine factors that inuence performance. From the results of these benchmarks, we derive guidelines for designing ontologies with rules for context-aware systems. These guidelines allow making conscious decisions about performance trade-offs and, in consequence, may improve suitability of ontologies for use in implementing industrial context-aware systems as they guide the creation of high-performance ontology-based context-aware systems.		Lüddecke, D.; Seidl, C.; Schaefer, I.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2015				
664		ModelGuidance	Modelling and performance design of distributed intelligent networks	The evolution of Intelligent Networks (IN) passes through the distributed networking environments, made possible by the introduction of advance software technologies like CORBA and Agents. The starting point of this paper is the Broadband Intelligent Network which adopts a centralised approach in processing IN service requests. The performance bottlenecks of the IN architecture, centred around the core service processing unit, (i.e. Service Control Point (SCP)) are studied and compared to alternative architectures enabling distribution of intelligence to others than the SCP entities of the IN. We consider a Distributed Intelligent Network architecture based on CORBA and Mobile Agents Technology. We evaluate the performance of this architecture by simulation using a set of detailed models developed to represent the internal operations of the system. Results given provide insight on critical design issues like the selection of physical entities for the migration of software, the service software objects to be transferred as well as the selection of software platforms. Overall the paper provides useful guidelines for the design and implementation of advanced IN architectures.		Stathopoulos, V. M.; Venieris, I. S.	IEEE International Conference on Communications					ConflictExcluded	Excluded	new_screen			2		2001				
665		ModelGuidance	Unity criteria for Business Process Modelling	Software engineering has a recurrent problem in relation to business process modelling (BPM): there is no agreement with regards to business process modularity. We claim that this results from a lack of theoretical underpinnings on the matter. This paper goes deeply into this issue by unfolding the notion of modularity: modularisation has an engineering intention that depends on the field where it is applied, and it relies on information hiding and encapsulation mechanisms. Unity criteria provide guidance for encapsulation. An important contribution of the paper is to provide unity criteria for BPM. These criteria are mainly underpinned by systemic principles and communication theory. The resulting unity criteria allow to clearly differentiate between problem space and solution space in BPM. The argumentations are illustrated with explanatory examples and figures. Also, a historical review of unity criteria in software engineering and requirements engineering is offered.		Gonzalez, A.; Espana, S.; Pastor, O.						ConflictExcluded	Excluded	new_screen			2		2009				
666		ModelGuidance	Guidelines of business process modeling	Process modeling becomes more and more an important task not only for the purpose of software engineering, but also for many other purposes besides the development of software. Therefore it is necessary to evaluate the quality of process models from different viewpoints. This is even more important as the increasing number of different end users, different purposes and the availability of different modeling techniques and modeling tools leads to a higher complexity of information models. In this paper the Guidelines of Modeling ({GoM})(1), a framework to structure factors for the evaluation of process models, is presented. Exemplary, Guidelines of Modeling for workflow management and simulation are presented. Moreover, six general techniques for adjusting models to the perspectives of different types of user and purposes will be explained.		Becker, J.; Rosemann, M.; von Uthmann, C.						ConflictIncluded	Included	new_screen			2		2000				
667		ModelGuidance	Model-based system development for embedded mobile platforms	With the introduction and popularity of wireless devices, the diversity of the platforms has also been increased. There are different platforms and tools from different vendors such as Microsoft, Sun, Nokia, SonyEricsson and many more. Because of the relatively low-level programming interface, software development for Symbian platform is a tiresome and error prone task, whereas.NET CF contains higher level structures. This paper introduces the problem of the software development for incompatible mobile platforms, moreover, it provides a model-driven architecture (MDA) and Domain Specific Modeling Language (DSML)-based solution. We also discuss the relevance of the model-based approach that facilitates a more efficient software development, because the reuse and the generative techniques are key characteristics of model-based computing. In the presented approach, the platform-independence lies in the graph rewriting-driven visual model transformation. This paper illustrates the creation of model compilers on a metamodeling basis by a software package called Visual Modeling and Transformation System (VMTS), which is an n-layer multipurpose modeling and metamodel-based transformation system. A case study is also presented how model compilers can be used to generate user interface handler code for different mobile platforms from the same platform-independent input models. © 2006 IEEE.		Forstner, B.; Lengyel, L.; Levendovszky, T.; Mezei, G.; Kelenyi, I.; Charaf, H.	Proc. - Joint Meeting of the 4th Workshop on Model-Based Dev. of Computer-Based Systems and the 3rd Int. Workshop on Model-Based Methodologies for Pervasive and Embedded Software, MBD/MOMPES 2006					ConflictExcluded	Excluded	new_screen			2		2006				
668		ModelGuidance	A model driven approach for the development of semantic RESTful Web services	Nowadays, Web services and others SOA-based applications have attracted more attention in the software industry. The RESTful Web Service becomes an important service architectural style due to its simplicity, heterogeneity and web-based format. One of the principal advantages of the REST architecture is the interoperability. However, different implementation languages and representation data formats can break interoperability, especially on semantic description of these services. In this paper, we propose the use of a model driven approach for the development of semantic RESTful Web services. Raising the development abstraction level, providing language-independent metamodels of services and semantic resources and by model transformations it is possible to develop interoperable complex services. © 2013 ACM.		Tavares, N. A. C.; Vale, S.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2013				
669		ModelGuidance	A Methodology for Use Cases Modeling Based on Sequence Diagrams Quantification	In this paper we describe a methodology to model a use case using sequence diagrams quantification. Our methodology consists in a set of metrics to define the amount of scenarios, and it determines the use case goal accomplishment based on the occurrence, sequence order, and the flow of data involved in. It also helps to obtain a robust design because all possible flows are considered; by this way, software quality could be achieved in quantitative terms. This approach can be used in two ways: to define a complete set of scenarios before entering in the design phase, and to measure design quality in terms of completeness and functionality attributes. Our methodology follows the main recommendations to apply a solid mathematical basis for engineering careers, and informatics and computing programs.		Juarez, J. Reyes; Barraza, K. C.; Licea, G.; A. Cristobal-Salas						ConflictExcluded	Excluded	new_screen			2		2006				
670		ModelGuidance	Modelling the critical success factors of agile software development projects in South Africa	Background: The continued in failure of agile and traditional software development projects have led to the consideration, attention and dispute to critical success factors that are the aspects which are most vital to make a software engineering methodology fruitful. Although there is an increasing variety of critical success factors and methodologies, the conceptual frameworks which have causal relationship are limited. Objective: The objective of this study was to identify and provide insights into the critical success factors that influence the success of software development projects using agile methodologies in South Africa. Method: Quantitative method of collecting data was used. Data were collected in South Africa through a Web-based survey using structured questionnaires. Results: These results show that organisational factors have a great influence on performance expectancy characteristics. Conclusion: The results of this study discovered a comprehensive model that could provide guidelines to the agile community and to the agile professionals.		Chiyangwa, Tawanda B.; Mnkandla, Ernest	{SOUTH} {AFRICAN} {JOURNAL} {OF} {INFORMATION} {MANAGEMENT}					ConflictExcluded	Excluded	new_screen			2		2017				
671		ModelGuidance	Model-driven design of distributed applications	The objective of the Ph.D. work discussed in this paper is to define a methodology for the design of distributed applications, in line with the Model-Driven Architecture (MDA). An important characteristic of this methodology is that it leads to models of distributed applications that withstand the impact of change in (middleware) platform technologies. These models are organized into different levels of platform-independence that are defined using the notion of abstract platform. An abstract platform is an abstraction of infrastructure characteristics assumed for models of an application at some point of (the platform-independent phase of) the design process. We aim at providing methodological guidelines for the definition of abstract platforms and their representations in modelling languages. © Springer-Verlag 2004.		Almeida, J. P. A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2004				
672		ModelGuidance	A web UI modeling approach supporting model-driven software development	Model-driven software development has become a tendency in software engineering. However, Web user interfaces have the characteristics of the customization but frequently renewing, which makes traditional software development approach not suitable for the design requirements of Web pages. To solve the problems of the development of Web user interface, and focusing on the characteristics of Web application, a user interface modeling approach is proposed on the basis of interface template and XML technology. Web user interfaces are described in a direct-viewing style with graphics at the model level. The approach can provide an effective support for model-driven software development. © Springer-Verlag Berlin Heidelberg 2014.		Hou, J.	Advances in Intelligent Systems and Computing					ConflictExcluded	Excluded	new_screen			2		2014				
673		ModelGuidance	Model-driven development of real-time software using OMG standards	"The term ""model-driven development"" denotes an approach to software design and development characterized by the creation of software models as the focus and primary artifacts of development rather than programs. In this brief note, the essentials of model-driven development are explained first, followed by a discussion of how this approach is supported in the realtime and embedded system domains by two key OMG standards. A short overview of these standards is also included.
"		Selic, B.						ConflictExcluded	Excluded	new_screen			2		2003				
674		ModelGuidance	A roadmap for comprehensive requirements modeling	Most large software systems result from weaving together many independently developed systems. Like Shelley's Frankenstein, such systems risk inheriting undesirable properties. Requirements monitoring can sound the alert should these creations fail to meet their obligations. © 2010 IEEE.		Robinson, W.	Computer					ConflictExcluded	Excluded	new_screen			2		2010				
675		ModelGuidance	Modeling the user interface of multimedia applications	Multimedia applications are a branch of software development with growing importance. Typical application areas are training applications and simulations, infotainment systems - e.g. in cars - or computer games. However, there is still a lack of tailored concepts for a structured development of this kind of application. The current paper proposes a modeling approach for the user interface of multimedia applications with the goal of a model-driven development. We identify the special properties of multimedia application development and the resulting aspects to be covered by the user interface model. Existing conventional user interface modeling approaches are not sufficient, as they do not cover the media-specific aspects of the application. However, a multimedia application usually includes conventional user interface elements as well. Thus, we first propose a solution for the media-specific part. Second, we elaborate an integration of our approach with existing conventional approaches. Finally, we discuss the overall model-driven development approach and outline its benefits. © Springer-Verlag Berlin Heidelberg 2005.		Pleuß, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2005				
676		ModelGuidance	Modeling with monads: Extensible modeling semantics as syntactic sugar	We present an extensible implementation of Modelica-style modeling semantics. Modeling features are implemented using an intuitive encoding as an extensible state monad. Monadic computation naturally yields model composition and interpretation. This in turn allows for a clear separation between the modular aspects of a modeling language (e.g. classes and inheritance) and the symbolical and numerical treatment of models: While the former can be implemented by a compiler or interpreter, the latter can be moved into a core-library to be maintained by domain-experts. In a second step, we show how the elaboration aspects of the language can be removed by a correct and complete desugaring procedure. The residual language is a simple extension of a call-by-value λ-calculus. Thus it becomes possible to implement a compiler for a modeling language using existing standard techniques. © 2016 ACM.		Höger, C.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2016				
677		ModelGuidance	Modeling of services and service collaboration in UML 2.0	One of many definitions of Service-Oriented Architecture (SOA) says that SOA is an architectural style for building next-generation distributed information systems. If we want to get a reliable and good working system, it must be well designed first. This paper deals with Service-Oriented Architecture Design (SOAD), especially with modeling of services. Furthermore, abstraction layers of SOA are introduced and possible using of object oriented approach on each layer is discussed in this paper. Besides, three types of service collaboration are presented. The main objective of the paper is to demonstrate how these types of collaboration can be described in UML 2.0.		Weiss, P.; Zendulka, J.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2007				
678		ModelGuidance	From i* requirements models to conceptual models of a Model Driven Development process	A good understanding of the systems requirements has a high impact in the successful development of software products. Therefore, an appropriate requirements model must provide a comprehensive structure for what must be elicited, evaluated, specified, consolidated, and modified, instead of just providing facilities for software specifications. Since there is a well-known gap between requirements specifications and final software products, we propose the integration of Goal-Oriented Requirements Engineering (GORE) and Model- Driven Development (MDD) to solve this gap. The core of our proposal is comprised by a set of guidelines to automate the process of going from an initial i* model to a final software product by means of a precise model transformation process. Finally, we use a case study that is based on a photographic agency system in order to illustrate our approach. © 2009 IFIP International Federation for Information Processing.		Alencar, F.; Marín, B.; Giachetti, G.; Pastor, O.; Castro, J.; Pimentel, J. H.	Lecture Notes in Business Information Processing					ConflictExcluded	Excluded	new_screen			2		2009				
679		ModelGuidance	Model-driven integration using existing models	Continuing system evolution and repeated large-scale and expensive integration are common place with virtually all moderately complex software. Traditional integration makes little or no use of the models, which are created at great expense and which provide valuable information about a system. Creating and using joint action models and linked component models, which meld other specialized models, is the key to making the best use of prior investments in model construction. This will significantly ease integration projects by allowing automation of tasks that are presently performed manually.		Denno, P.; Steves, M. P.; Libes, D.; Barkmeyer, E. J.	IEEE Software					ConflictExcluded	Excluded	new_screen			2		2003				
680		ModelGuidance	Developing executable models of business systems	Traditionally, business processes models are based on graphical artifacts that do not lend to model checking or simulation, e.g., any Flow Chart like representation or UML diagrams. To check whether business process models are syntactically correct, the models are either translated to other diagrams with formal semantics or the validation is carried out manually. This approach poses two issues: first, models not lending to execution (simulation) will hardly allow thorough insight into the dynamic behavior of the system under consideration; second, when manual checking for small models may not be too difficult, it is almost impossible for complex models. In this paper we investigate two research questions that resulted in a method allowing to build executable business process models based on formal semantics of Petri net. The proposed method is theoretically based on the Transaction Concept. The two questions further studied in this paper concern graphical extension of Petri nets for business process modeling, and developing a framework (guidelines) applying the proposed method.		Barjis, J.	ICEIS 2007 - 9th International Conference on Enterprise Information Systems, Proceedings					ConflictIncluded	Excluded	new_screen			2		2007				
681		ModelGuidance	Very lightweight requirements modeling	We argue for the creation and use of a very lightweight requirements modeling language as an alternative to textual and pictorial requirements specifications. © 2010 IEEE.		Glinz, M.	Proceedings of the 2010 18th IEEE International Requirements Engineering Conference, RE2010					ConflictExcluded	Excluded	new_screen			2		2010				
682		ModelGuidance	Modelling systemC process behavior by the UML method state machines	We describe the {SystemC} Process State Machines that we have defined, as a variation of the {UML} method state machines, to model the behavior of reactive processes of the {SystemC} language. They are part of a complete {UML} 2.0 profile for {SystemC} that we have developed to improve the {SoC} (System on a Chip) design flow in order to provide a modelling framework which allows high-level designing {SoC} components in the style of {UML} using the {SystemC} design primitives.		Riccobene, E.; Scandurra, P.						ConflictExcluded	Excluded	new_screen			2		2005				
683		ModelGuidance	On the vague modelling of web page characteristics regarding usability	Vagueness is an inherent property of man-machine systems associated with some perceptual and cognitive characteristics of human information processing, as pointed out by Karwowski and other researchers. More concretely, some perceivable characteristics of interface designs, including sizes and quantities, are usually perceived by humans as vague categories that result in imprecise guidelines for interface usability. In this paper, we describe how such categories - in the specific case of the Web - can be modelled as fuzzy sets by using conventional membership function elicitation procedures, using Web page length and number of links as case studies. The resulting fuzzy sets can then be used for automated usability analysis processes using fuzzy rules to formalize vague guidelines. © 2003 Springer-Verlag Berlin Heidelberg.		Barriocanal, E.; Urban, M. A. S.; Gutierrez, J. A.	Lecture Notes in Artificial Intelligence (Subseries of Lecture Notes in Computer Science)					ConflictExcluded	Excluded	new_screen			2		2003				
684		ModelGuidance	The implication of different learning styles on the modeling of object-oriented systems	This paper reports on work in progress on the implication of thinking and learning styles on the modelling of object oriented systems. In particular, analyses of learning modalities are presented and then considered in light of using the Unified Modeling Language (UML) a tool for system modelling.		Thomas, L. A.						ConflictExcluded	Excluded	new_screen			2		2000				
685		ModelGuidance	The new modeling method for Instructional System Design with Unified Process and UML	The Instructional System Design (ISD) is an incremental process that systematically follows the phases of analysis, design, development, implementation, and evaluation. ADDIE is a best defined a model falling under the ISD framework and is composed of above five steps. Reference to ADDIE model and Rational Unified Process(RUP) specification, as well as Unified Modeling Language (UML), and with the aid of the theory and method on Software Engineering, this paper defines a set of models for ISD. It includes the model of Unified Process model for ISD, and how to use UML diagrams for phases of Unified Process. The purpose of this paper is to presents a new framework for ISD in main aspects, so that the ISD becomes more standard, understand easily and implementation. Our work shows that it can provide a new way to help represent both specific and generic designs solution, and believe this can bring overall change on ISD.		Jiang, Z.						ConflictExcluded	Excluded	new_screen			2		2012				
686		ModelGuidance	Rigorous development in UML	The Unified Modelling Language ({UML}) is becoming the de facto industry standard notation for object-oriented analysis and design. In this paper we propose a development process using {UML} and other notations which supports formal analysis and verification, so enabling the notation to be used for highly critical systems. We will illustrate the development process using a small example of a traffic light control system.(1)		Lano, K.; Evans, A.						ConflictExcluded	Excluded	new_screen			2		1999				
687		ModelGuidance	Using UML for Modeling PDM System Architectures	In this paper, a kind of PDM architecture, which is modeled by UML, is introduced. The main methods of designing and realizing PDM system based on UML are described. Finally, an example is given in order to provide methodical guidelines and hints. It can also be used as a tutorial for UML and for object-oriented development in general.		Liu, S.	Parallel and Distributed Computing, Applications and Technologies, PDCAT Proceedings					ConflictIncluded	Excluded	new_screen			2		2003				
688		ModelGuidance	Model-based Test-Driven Cyber-Physical System Design	Model-based design plays a key role in the software-intensive design and cyber-physical system development. With more research attention given to the cyber-physical system (CPS), the desire to construct a reliable and robust CPS was raised further with the intention to researchers. Test-driven development (TDD) plays an important role in providing reliable software intensive systems. TDD requires the generation of tests to ensure the quality of code is valid. In this paper, we describe an approach to introduce the main ideas of integrating a model-based design with the test-driven development in the cyber-physical system development process to ensure a robust CPS. This study was validated by a testable tangible experiment with LEGO bricks on the multiple automatic driving cars in the predefined parking garage. © 2018 IEEE.		Fu, Y.; Choosilp, W.; Dong, Z.	Conference Proceedings - IEEE SOUTHEASTCON					ConflictExcluded	Excluded	new_screen			2		2018				
689		ModelGuidance	Ontological modeling rules for UML: An empirical assessment	The Unified Modeling Language (UML) is widely accepted as the de-facto standard for object-oriented information systems (IS) design and software modeling. Recent research has proposed to extend the use of UML to conceptual modeling of application domains. Conceptual models serve both as the basis for communication and domain understanding among analysts, and as the starting point for IS software design. Prior research has proposed a set of modeling rules to provide the analyst or modeler with guidelines for using UML for conceptual modeling. This paper provides an empirical assessment of the benefits derived from using' these modeling rules. Using an experimental study involving 53 subjects, it examines the effects of different levels of modeling rule application on application domain understanding. The results show statistically significant differences in the level of domain understanding that was derived from the various models.		Evermann, J.; Wand, Y.	Journal of Computer Information Systems					ConflictExcluded	Excluded	new_screen			2		2006				
690		ModelGuidance	Formal modeling of RESTful systems using finite-state machines	Representational State Transfer (REST), as an architectural style for distributed hypermedia systems, enables scalable operation of the World Wide Web (WWW) and is the foundation for its future evolution. However, although described over 10 years ago, no comprehensive formal model for representing RESTful systems exists. The lack of a formal model has hindered understanding of the REST architectural style and the WWW architecture, consequently limiting Web engineering advancement. In this paper we present a model of RESTful systems based on a finite-state machine formalism. We show that the model enables intuitive formalization of many REST's constraints, including uniform interface, stateless client-server operation, and code-on-demand execution. We describe the model's mapping to a system-level view of operation and apply the model to an example Web application. Finally, we outline benefits of the model, ranging from better understanding of REST to designing frameworks for RESTful system development. © 2011 Springer-Verlag.		Zuzak, I.; Budiselic, I.; Delac, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2011				
691		ModelGuidance	Ontology-based modelling of architectural styles	The conceptual modelling of software architectures is of central importance for the quality of a software system. A rich modelling language is required to integrate the different aspects of architecture modelling, such as architectural styles, structural and behavioural modelling, into a coherent framework. Architectural styles are often neglected in software architectures. We propose an ontological approach for architectural style modelling based on description logic as an abstract, meta-level modelling instrument. We introduce a framework for style definition and style combination. The application of the ontological framework in the form of an integration into existing architectural description notations is illustrated. © 2009 Elsevier B.V. All rights reserved.		Pahl, C.; Giesecke, S.; Hasselbring, W.	Information and Software Technology					ConflictExcluded	Excluded	new_screen			2		2009				
692		ModelGuidance	FLIGHTLAB TM modeling for real-time simulation applications	Modeling and simulation are used to support a wide range of applications including design, analysis, operations research, test and evaluation, training, etc. Each application has different fidelity requirements and computational limitations. Consequently, a variety of models are required to support a single aircraft type throughout its life cycle. Validation and configuration management of this array of models is costly. FLIGHTLABTMis a software tool that supports selective fidelity modeling and simulation to insure trace-ability and commonality between models, ranging from the comprehensive models required for design to the real time models required for training and hardware-in-the-loop testing. Providing a single tool with this range of modeling options greatly enhances the configuration management capability. Also once the highest fidelity, comprehensive, model is validated, it can be used to provide reference data for validation of simpler models, thereby expediting the validation process for all levels of modeling. This paper describes the real-time simulation capability of FLIGHTLABTMmodels and their trace-ability to higher level FLIGHTLABTMmodels. © 2017 World Scientific Publishing Company.		Du Val, R.; He, C.	International Journal of Modeling, Simulation, and Scientific Computing					ConflictExcluded	Excluded	new_screen			2		2017				
693		ModelGuidance	A Model of Layered Architectures	Architectural styles and patterns play an important role in software engineering. One of the most known ones is the layered architecture style. However, this style is usually only stated informally, which may cause problems such as ambiguity, wrong conclusions, and difficulty when checking the conformance of a system to the style. We address these problems by providing a formal, denotational semantics of the layered architecture style. Mainly, we present a sufficiently abstract and rigorous description of layered architectures. Loosely speaking, a layered architecture consists of a hierarchy of layers, in which services communicate via ports. A layer is modeled as a relation between used and provided services, and layer composition is defined by means of relational composition. Furthermore, we provide a formal definition for the notions of syntactic and semantic dependency between the layers. We show that these dependencies are not comparable in general. Moreover, we identify sufficient conditions under which, in an intuitive sense which we make precise in our treatment, the semantic dependency implies, is implied by, or even coincides with the reflexive-transitive closure of the syntactic dependency. Our results provide a technology-independent characterization of the layered architecture style, which may be used by software architects to ensure that a system is indeed built according to that style.		Marmsoler, Diego; Malkis, Alexander; Eckhardt, Jonas	{ELECTRONIC} {PROCEEDINGS} {IN} {THEORETICAL} {COMPUTER} {SCIENCE}					ConflictExcluded	Excluded	new_screen			2		2015				
694		ModelGuidance	A model-driven approach for deploying trading-based knowledge representation systems	Trading services are well-known solutions in Software Engineering for solving the interoperability and integration of software components and Information Systems (IS). This paper presents a Model-Driven Engineering (MDE) approach aimed to help designing and deploying Trading-Based Knowledge Representation (TKR) Systems, a subset of Management Information Systems (MIS). For this purpose, we have defined a set of modeling languages and supporting tools enabling: (a) the description of platform-independent TKR System architectures; (b) the high-level description of different deployment platforms; and (c) the creation of configuration models relating the two previous ones. These configuration models are then used as an input to a model-to-text transformation that generates the final TKR System implementation (code) from the selected platform. In order to demonstrate the feasibility and benefits of the proposed approach we also present a case study applied to an Environmental Management Information System (EMIS). © 2011 Springer-Verlag.		Asensio, J.-A.; Iribarne, L.; Padilla, N.; Vicente-Chicote, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2011				
695		ModelGuidance	Legal requirements analysis and modeling with the measured compliance profile for the goal-oriented requirement language	As demonstrated by a benchmark HIPPA case study, the Measured Compliance Profile for the Goal-oriented Requirement Language (GRL) is used to formalize legal text with GRL in order to make it amenable to compliance analysis. This formalization is based on guidelines yielding a goal model that can be analyzed for compliance with the jUCMNav tool with the help of real-world measurements captured by indicators in the goal model. For usability reasons, the legal text may also be specified in a tabular representation and subsequently transformed into a goal model by jUCMNav. © 2013 IEEE.		Rashidi-Tabrizi, R.; Mussbacher, G.; Amyot, D.	2013 6th International Workshop on Requirements Engineering and Law, RELAW 2013 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2013				
696		ModelGuidance	Modeling of human resource management processes [Modelação de processos de gestão de recursos humanos]	This paper aims to propose BPMN models that can represent the best practices in human resources management in order to facilitate the identification of the main requirements of the software packages for Human Resource Management. Therefore, the following subareas were studied: recruitment and selection, performance appraisal, training and development, calculation and payment of salary and rewards, and careers. To design BPMN, it was adopted a design science methodology appropriate to research projects in information systems and technology aiming at developing artefacts based on theoretical support. The developed models were made available for evaluation by managers and executives from the human resources management field which allowed refine and improve the model . © 2015 Associacao Portuguesa de Sistemas de Informacao. All rights reserved.		Pedro, S. R.; Santos, V.	Atas da Conferencia da Associacao Portuguesa de Sistemas de Informacao					ConflictExcluded	Excluded	new_screen			2		2015				
697		ModelGuidance	Agent based modelling for migration of industrial control systems	Keeping industrial control systems on par with state-of-the-art is required to (i) make industrial plants greener with reduced energy consumption and emissions, (ii) improve productivity due to better optimization and automation, and (iii) reduce maintenance cost due to improved hardware and software. However, updating and upgrading Industrial Control Systems is complex, time consuming and resource intensive task because of execution order constraints and hard real time needs. Added challenge in migrating control logic from legacy and heritage systems is shortage of Subject Matter Experts with prior knowledge of such heritage and legacy systems. This paper proposes a migration system based on Agent Based Modelling (ABM) architecture to map the control entities and parameters from source to target system enabling easier migration of legacy systems to newer versions. It provides a standard platform where knowledge of the experts is captured and stored for re-use, improving confidence level of suggestions, training generic automation engineers on system specific aspects as well as support handling unknown source systems. The proposed migration system is flexible, scalable and usable because of ABM architecture. It is capable of creating virtual agents from micro-agents offering atomic and/or granular functionality. © 2019 IEEE.		Mohan, D.; Chandrika, K. R.; Sudarsan, S. D.	Conference Proceedings - IEEE International Conference on Systems, Man and Cybernetics					ConflictExcluded	Excluded	new_screen			2		2019				
698		ModelGuidance	CAUSAL-MODELING IN SOFTWARE ENGINEERING DESIGN	Engineering/information systems need to be modelled in the context of an environment that can encompass hardware, users, and many possible external operations and processes. We discuss an approach in which systems can be represented in terms of causal agents having a general architecture and the extent to which this can assist in the software engineering educational environment.		PURVIS, M.						ConflictExcluded	Excluded	new_screen			2		1993				
699		ModelGuidance	Modeling a composite RESTful web service with UML	The process of web service composition involves different partner web services that are published over the internet. The Representational-State Transfer (REST) web services adopt different architectural style compared to Remote Procedure Call (RPC) web services. In this paper, we address these differences in the context of web service compositions and motivate the need for new designing techniques that lead to RESTful interfaces. We provide a UML based modeling approach for the composition of RESTful web services that models the composition for its static and behavioral features. These models provide RESTful compositions by construction, serve as a part of specification document, have mapping to several web implementation languages and can also be used to validate a RESTful composition. We illustrate the applicability of the approach with a sample Hotel and Flight booking RESTful composite web service. © 2010 ACM.		Rauf, I.; Ruokonen, A.; Systa, T.; Porres, I.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2010				
700		ModelGuidance	Modeling emergency scenarios in virtual evacuation environment	There has been an increasing interest in the use of Virtual Reality for learning and training. The development of Virtual Reality environment makes it possible for a user to understand and observe multiple paths and emotions that an agent would observe during evacuation. This paper presents a fuzzy logic application for modeling an evacuation scenario where fuzzy parameters such as stress, panic, and anger are modeled using fuzzy logic and integrated in the virtual environment. We present a virtual environment that has a group of agents move towards their goal which is the shortest distance from their initial position. Changing the fuzzy parameters has an effect on agents' speed. This paper presents a virtual reality application for simulation of panic behavior in a library building. The results show that the application can be used for way finding in the building, evacuation simulation, and safety evaluations of the building. © 2008 IEEE.		Sharma, S.; Vadali, H.	2009 WRI World Congress on Computer Science and Information Engineering, CSIE 2009					ConflictExcluded	Excluded	new_screen			2		2009				
701		ModelGuidance	An integrated role-based approach for modeling, designing and implementing multi-agent systems	To facilitate the development of multi-agent systems and improve the reusability, robustness and feasibility of these systems, we have developed a role-based agent development framework (RADE). In this paper, we present an integrated approach for modeling, designing and implementing multi-agent systems using RADE. We describe the design of agents and motivations within such framework. We introduce a practical approach for modeling agent's motivation and specifying agent's goals, where a role-agent mapping mechanism is developed based on this design. Dynamic task allocation is achieved through the creation of role instances and the mapping from role instances to agents. We also introduce the RTJEMS language based on the extension of TÆMS to model the plan tree for each goal. This representation enables the reuse of general planning/scheduling and collaboration/cooperation mechanisms developed in multi-agent system research community. We have developed an automatic agent generation interface and also implemented a simple demo system in health care domain.		Zhang, X.; Xu, H.; Shrestha, B.	Journal of the Brazilian Computer Society					ConflictExcluded	Excluded	new_screen			2		2007				
702		ModelGuidance	METRIC BASED SOFTWARE PROJECT PERFORMANCE MONITORING MODEL	Successful implementation of software projects development is entirely depending upon successful monitoring and control mechanism. Software metrics can deliver the necessary information for monitoring and control the software projects development for its enhancement. However, the current software metrics does not widely address the performance criteria and related metrics for software project management. Largely, metrics are identified in the perspectives of software development only. Hence, the aim of this study is to formulate a Metric based Software Project Performance Monitoring Model which consists of performance criteria and metrics that involves in a software projects development. This model formulation is consists of five processes: metrics integration, metrics validation, metrics description, metrics categorization and metrics threshold. The proposed model is a novel approach and adds significant of knowledge to the software engineering domain especially on software project monitoring and software measurement domain. Generally, this model will be a guideline for software project managers to monitor and control software projects particularly in public sector software projects. In order to demonstrate the applicability of this model, case study was conducted at various departments at Malaysian Public Sector. The results show that the proposed model is very useful for the project managers in monitoring and control software projects.		Doraisamy, Mariayee; Ibrahim, Suhaimi; Mahrin, Mohd Naz'ri	{JURNAL} {TEKNOLOGI}					ConflictExcluded	Excluded	new_screen			2		2016				
703		ModelGuidance	A Theoretical Evaluation for Assessing the Relevance of Modeling Techniques in Business Process Modeling	"Enterprise systems are an important topic for business modeling techniques currently. Due to the focus on business process and its usefulness in different business improvement methodologies, the process modeling has gained prominence in the information systems modeling area. Several modeling techniques have been proposed to fulfill the objective of systematize the business process modeling. However, to date, no guidelines exist for selecting the appropriated technique according with a specific application domain. For this reason, it is necessary to evaluate the quality of the techniques from the theoretical viewpoint to identity the capabilities to model business process. In this paper, a theoretical evaluation is proposed to evaluate techniques for business process modeling using three levels of modeling -- organizational, integration and web. The theoretical evaluation compares the modeling capabilities supplied by the different techniques. The results of the evaluation allow us to determine what modeling technique is the most appropriate to face business modeling process.
"		Ortiz-Hernández, Javier; Nieto-Ariza, Erika M.; Estrada-Esquivel, Hugo; Rodríguez-Ortiz, Guillermo; Montes-Rendon, Azucena						ConflictExcluded	Excluded	new_screen			2		2007				
704		ModelGuidance	Modeling and implementing an agent-based environmental health impact decision support system	This paper presents an approach to the creation of an agent-based system for the assessment of environmental impact upon human health. As indicators of the environmental impact water pollution, indexes of traffic and industrial activity, wastes and solar radiation are assumed. And as human health indicator morbidity is taken. All the data comprise multiple heterogeneous data repositories. The system is logically and functionally divided into three layers, solving the tasks of information fusion, pattern discovery and decision support making, respectively. The outcomes of the system design phase under Prometheus methodology and the complete characteristics of the agents forming the proposal are discussed. The discovered patterns are used as a foundation for real-time decision making, which is of great importance for adequate and effective management by responsible governmental authorities. © 2008 Elsevier Ltd. All rights reserved.		Sokolova, M. V.; Fernández-Caballero, A.	Expert Systems with Applications					ConflictExcluded	Excluded	new_screen			2		2009				
705		ModelGuidance	A model process towards modeling guidelines to build certifiable UML models in the railway sector	There are several standards concerned with the development and certification of railway safety-critical systems. They recommend the use of different techniques to describe system requirements and to pursue safety strategies. One problem shared by standards is that they only prescribe what should be done or use but they provide no guidance on how recommendations can be fulfilled. The purpose of this paper is to investigate a model process to model guidelines for building certifiable UML models that cater for the needs and recommendations of railway standards.		Okalas Ossami, D.; Mota, J. M.; Boulanger, J. L.	7th International SPICE Conference on Process Assessment and Improvement, SPICE 2007					ConflictIncluded	Excluded	new_screen			2		2007				
706		ModelGuidance	Understanding and modeling user-perceived brand personality from mobile application UIs	Designers strive to make their mobile apps stand out in a competitive market by creating a distinctive brand personality. However, it is unclear whether users can form a consistent impression of brand personality by looking at a few user interface (UI) screenshots in the app store, and if this process can be modeled computationally. To bridge this gap, we irst collect crowd assessment on brand personalities depicted by the UIs of 318 applications, and statistically conirm that users can reach substantial agreement. To further model how users process mobile UI visually, we compute UI descriptors including Color, Organization, and Texture at both element and page levels. We feed these descriptors to a computational model, achieving a high accuracy of predicting perceived brand personality (MSE = 0.035 and R2 = 0.78). This work could beneit designers by highlighting contributing visual factors to brand personality creation and providing quick, low-cost design feedback. © 2019 Association for Computing Machinery.		Wu, Z.; Kim, T.; Li, Q.; Ma, X.	Conference on Human Factors in Computing Systems - Proceedings					ConflictExcluded	Excluded	new_screen			2		2019				
707		ModelGuidance	A Formal Approach for Modeling and Verification of RTCORBA-Based Applications	"We introduce a formal model for describing Real-Time CORBA-based applications, and a set of guidelines to formally check that the design of such an application is consistent with its specification. The model and the guidelines are then applied to the verification of a simple test application.
"		Rossi, Matteo; Mandrioli, Dino						ConflictIncluded	Excluded	new_screen			2		2004				
708		ModelGuidance	Extending the UML Statecharts Notation to Model Security Aspects	Model driven security has become an active area of research during the past decade. While many research works have contributed significantly to this objective by extending popular modeling notations to model security aspects, there has been little modeling support for state-based views of security issues. This paper undertakes a scientific approach to propose a new notational set that extends the UML (Unified Modeling Language) statecharts notation. An online industrial survey was conducted to measure the perceptions of the new notation with respect to its semantic transparency as well as its coverage of modeling state based security aspects. The survey results indicate that the new notation encompasses the set of semantics required in a state based security modeling language and was largely intuitive to use and understand provided very little training. A subject-based empirical evaluation using software engineering professionals was also conducted to evaluate the cognitive effectiveness of the proposed notation. The main finding was that the new notation is cognitively more effective than the original notational set of UML statecharts as it allowed the subjects to read models created using the new notation much quicker.		El-Attar, M.; Luqman, H.; Kárpáti, P.; Sindre, G.; Opdahl, A. L.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2015				
709		ModelGuidance	An approach to modelling legacy enterprise systems	The reclamation and redevelopment of software “brownfield sites” requires a multi-layered understanding of the domain in which the enterprise system lives. A further dimension is added to the interconnectivity of the domain knowledge when the evolution of the system requires the migration of existing services to a web-based system and the creation of new value-added services. Where the enterprise systems are both internal to the organisations and “joined up” into wider inter-organisational networks, there are further challenges to developers. The Institutionally Secure Integrated Data Environment project is addressing the problems and issues surrounding the development and delivery of web based services for “joined up” systems within Higher Education Institutions. In this paper we define the meta-process that has emerged as a way to support incremental implementation of value-added services together with the relationships that exist amongst the generated work products in context with the meta-process. © Springer-Verlag Berlin Heidelberg 2002.		Lavery, J.; Boldyreff, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2002				
710		ModelGuidance	A Multiway Model for Predicting Earthquake Ground Motion	This paper develops a novel supervised method for predicting earthquake ground motions in the wavelet domain. The training input is a set of seismological predictors related to seismic source, path and local site conditions, and the training output consists of the weights from a multiway analysis of ground motions. We treat wavelet transforms of acceleration records as images and extract essential patterns from them using tensor decomposition. The decomposition weights of these patterns are then linked to seismological variables using general regression neural network (GRNN). The resulting nonparametric model is then used to predict the wavelet image of an accelerogram for a given set of seismological variables. The predicted image can be transformed back to the time domain using inverse wavelet transform for subsequent processing to match a given design spectrum. Unlike conventional ground motion models, the proposed approach retains the time domain characteristics of ground motions. Pearson's correlation coefficient between the vectorized forms of actual and predicted wavelet images has been used as the similarity metric in assessing the prediction capability of the resulting model. Experimental results demonstrate the ability of the proposed model to predict significant patterns in the seismic energy distribution.		Bai, Y.; Tezcan, J.; Cheng, Q.; Cheng, J.						ConflictExcluded	Excluded	new_screen			2		2013				
711		ModelGuidance	A UML-based approach for multi-scale software architectures	Multi-level software architecture design is an important issue in software engineering. Several research studies have been done on the modeling of multi-level architectures based on UML. However, they neither included the refinement between the levels nor clarified the relationships between them. In this paper, we propose a multiscale modeling approach for multi-level software architecture oriented to facilitate adaptability management. The proposed design approach is founded on UML notations and uses component diagrams. The diagrams are submitted to vertical and horizontal transformations for refinement; this is done to reach a fine-grain description that contains necessary details that characterize the architectural style. The intermediate models provide a description with a given abstraction that allow the validation to be conducted significantly while remaining tractable w.r.t. complexity. The validation scope can involve intrinsic properties ensuring the model correctness w.r.t. the UML specification. To achieve this, we propose a set of model refinement rules. The rules manage the refinement and abstraction process (vertical and horizontal) as a model transformation from a coarse-grain description to a fine-grain description. Finally, we experimented our approach by modeling an Emergency Response and Crisis Management System (ERCMS) as a case of study. Copyright © 2015 SCITEPRESS - Science and Technology Publications.		Khlif, I.; Kacem, M. H.; Kacem, A. H.; Drira, K.	ICEIS 2015 - 17th International Conference on Enterprise Information Systems, Proceedings					ConflictExcluded	Excluded	new_screen			2		2015				
712		ModelGuidance	Modelling, analysis and synthesis of asynchronous control circuits using Petri nets	In this tutorial paper we survey some of the existing techniques for modelling, analysis and synthesis of asynchronous control circuits. All these methods are based on the use of Petri nets as a tool for describing the behaviour of such circuits. The descriptive power of Petri nets allows them to model a wide range of asynchronous circuit components, whether they are built in the two-phase (micropipeline) or in the four-phase (logic gate based) design styles. We present three different approaches to verification of net-based models, and show their relative strengths and weaknesses. We advocate their complementary application for different classes of Petri nets and the properties verified. Two major synthesis approaches are demonstrated using the example of a modulo-N Up/Down counter. The first one is a combination of Petri net level decompositions and syntax-directed translation of nets into circuits. The second one is based on logic synthesis from signal transition graph specifications.		Yakovlev, A. V.; Koelmans, A. M.; Semenov, A.; Kinniment, D. J.	Integration, the VLSI Journal					ConflictExcluded	Excluded	new_screen			2		1996				
713		ModelGuidance	A model-driven approach to noninterference	Systems consisting of mobile apps and web services continue to grow in popularity. Guaranteeing that private or sensitive data is treated confidentially in such systems is non-trivial and poses several challenges due to their distributed and platform-specific nature. Information flow control is a formal technique that is used to guarantee the privacy of such data, but is difficult to utilize in practice. We present a model-driven approach which allows to develop such systems with secure information flow using intuitive modeling guidelines. From an abstract system model, partial Java code as well as a formal model is generated automatically and used to verify information flow properties. This paper explains the automatic generation of the formal model and presents several advantages of a modeldriven approach for the practical application of information flow control. © 2014 Innovative Information Science and Technology Research Group. All rights reserved.		Stenzel, K.; Katkalov, K.; Borek, M.; Reif, W.	Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications					ConflictExcluded	Excluded	new_screen			2		2014				
714		ModelGuidance	Designing models and systems to support it management: A case for multilevel modeling	Refering to the domain of IT management, this paper demonstrates conceptual strengths and economic benefits of multilevel modeling. In the past, IT management was primarily focussed on technical aspects of IT infrastructures. In recent years, more and more organizations became aware of the pivotal relevance their IT infrastructures has for staying competitive. Therefore, IT managers are expected to not only provide IT services, but also to justify investments and costs with respect to the benefit the IT creates. On the one hand this responsibility demands for methods that allow for reducing the complexity of both, the IT infrastructure and the business. On the other hand, it is required accounting for interdependencies between these two areas. Specialized frameworks for IT management provide guidelines for specifying, managing and controlling IT services. Enterprise architectures or enterprise models support the alignment of IT and business by integrating models of the IT infrastructure and of enterprise software systems with models of the organizational action system. Against this background, specific requirements of modeling IT infrastructures will be looked at in more detail. It will then be demonstrated that a multilevel language architecture and a corresponding meta-modeling and programming facility represent a powerful foundation for the development of advanced tools for IT management.		Frank, U.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2016				
715		ModelGuidance	Component-Based Simulation Model Development Using BOMs and Web Services	Modelling and simulation (M\&S) is a valuable tool and provides means for reducing, amongst others, manufacturing and training costs. However, development of simulation models is a multi-disciplinary and time/resource consuming process. Building simulation models through composition and reuse of predefined and already existing validated simulation components is an approach to reduce the associated costs and improving the usability of the models. The base object model, BOM, is a new standard for defining reusable and composable simulation components. However, BOMs lack the necessary expressive power to ensure semantic matching of simulation components. In Web service composition (WSC), composite services are built by assembling existing services in order to address functionalities required by users. In WSC much emphasis has been on including the semantic aspects of the composition, through among others utilization of the semantic Web concept. In this paper we describe a process that has been developed at the Swedish Defence Research Agency (FOI) with the aim to speed up and improve the development of simulation models. This process utilizes the BOM concept and extends it by taking advantage of the techniques used in WSC. We will present our approach and findings based on our implementation of the proposed process		Moradi, F.						ConflictExcluded	Excluded	new_screen			2		2007				
716		ModelGuidance	Automated construction of competence-oriented models of specialists in the field of software engineering	The scientific-methodical and technological experience of the development and use of tutoring integrated expert systems and the creation of a single ontological space of knowledge and skills for the automated construction of competence-oriented models of specialists in the field of methods and technologies of artificial intelligence and software engineering obtained at the Department of Cybernetics of NRNU MEPhI is analyzed. © 2019 for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).		Rybina, G. V.; Nikiforov, A. Y.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2019				
717		ModelGuidance	Security quality model: an extension of Dromey’s model	The quantity of sensitive data that is stored, processed and transmitted has increased many folds in recent years. With this dramatic increase, comes the need to ensure that the data remain trustworthy, confidential and available at all times. Nonetheless, the recent spate of high-profile security incidents shows that software-based systems remain vulnerable due to the presence of serious security defects. Therefore, there is a clear need to improve the current state of software development to guide the development of more secure software. To this end, we propose a security quality model that provides a framework to identify known security defects, their fixes, the underlying low-level software components along with the properties that positively influence the overall security of the product. The proposed model is based on Dromey’s quality model that addresses the core issue of quality by providing explicit guidelines on how to build quality into a product. Furthermore, to incorporate security, we have introduced several new model components and model construction guidelines as Dromey’s model does not address security explicitly and the model construction guidelines are not specific enough. We use well-known defects and security controls to construct the model as a proof of concept. The constructed model can be used by the programmers during development and can also be used by the quality engineers for audit purposes. We also propose an automated environment in which the model can be used in practice. © 2013, Springer Science+Business Media New York.		Zafar, S.; Mehboob, M.; Naveed, A.; Malik, B.	Software Quality Journal					ConflictIncluded	Excluded	new_screen			2		2015				
718		ModelGuidance	Modeling of vehicle administrative management system based on unified modeling language	Establishing a good model during the analysis and design phase in the process of software development, is the key for the correct implementation of system. UML (Unified Modeling Language, Unified Modeling Language) is the standard modeling language, graphically on the system analysis and design, Suitable for all stages of software life cycle. Combining vehicle administrative management system, flowing with the UML modeling steps, using the modeling tool Enterprise Architect 12 which supports UML 2.0, it has completed system requirements modeling through use case diagram, static modeling through class diagram and package diagram, dynamic modeling through sequence diagram, activity diagram and state diagram, physical modeling through component diagram and deployment diagram. It implemented vehicle management, goods purchasing, personnel management, training management, loan management of life, and employee performance management, and other functions. Practice proves that the system model is more clear, better team communication, simplified development process, enhanced development efficiency. © 2017 IEEE.		Jin, L.; Liang, J.	Proceedings of 2017 IEEE 3rd Information Technology and Mechatronics Engineering Conference, ITOEC 2017					ConflictIncluded	Excluded	new_screen			2		2017				
719		ModelGuidance	A Stochastic-Petri-Net-Based Model for Ontology-Based Service Compositions	OWL-S, one of the most significant Semantic web service ontologies proposed to date, provides Web Service providers with a core ontological framework and guidelines for describing the properties and capabilities of their web Services in unambiguous, computer interpretable form. In this paper, we propose a probabilistic model for OWL-S processes, employing the Non-markovian stochastic Petri net(NMSPN) as the intermediate representation. A set of translation rules is defined for constructs and activities of OWL-S so that processes specified in OWL-S can be translated into NMSPN. Based on the NMSPN representation, analytical methods for QoS analysis can be designed.		Xia, Y.; Dai, G.; Tang, F.; Zhu, Q.						ConflictExcluded	Excluded	new_screen			2		2011				
720		ModelGuidance	Heterogeneous software reliability modeling	A number of Markov-based software reliability models have been developed for measuring software reliability. However, the application of these models is strictly limited to software that satisfies the Markov properties. The objective of our work is to expand the application domain of the Markov-based models, so that most software can be modeled and software reliability can be measured at the architecture level. To overcome the limitations of Markov properties, our model takes execution history into account and addresses both deterministic and probabilistic software behaviors. Each state represents the executions of one or more components depending on the architectural styles. In addition, the executions of one component are depicted by using distinctive states, when such executions are influenced by past states. Furthermore, we construct loops to eliminate the likelihood of unlimited state expansion and utilize a binomial tree structure to account for all the different execution paths. We show that Markov models are applicable even to software that does not fully satisfy the Markov properties. Therefore, we significantly improve the state of the art in architecture-based software reliability modeling. © 2002 IEEE.		Wang, W.-L.; Chen, M.-H.	Proceedings - International Symposium on Software Reliability Engineering, ISSRE					ConflictExcluded	Excluded	new_screen			2		2002				
721		ModelGuidance	Model-driven secure development lifecycle	Building security into software development lifecycles and doing it right is hard. To address the challenge, several prominent organizations have published process-oriented security guidelines to bring security activities into a structured way. Although these efforts contribute to measurable improvements in software and system security, they are often too verbose and fuzzy to be implementable in a development lifecycle involving people (e.g., security experts, developers, and managers) with different skillsets. In this paper, we propose the model-driven secure development lifecycle (MD-SDL), an approach that leverages on modeling methods and the advances in model-driven security to simplify the process of efficiently integrating security into development lifecycles for the development of security-critical software and systems.		Ma, Z.; Wagner, C.; Bonitz, A.; Bleier, T.; Woitsch, R.; Nichterl, M.	International Journal of Security and its Applications					ConflictExcluded	Excluded	new_screen			2		2012				
722		ModelGuidance	A Model-Driven Service Specification Approach from BPMN Models	Service-oriented architecture (SOA) is a fast emerging architectural style to implement dynamic e-business solutions. It has been widely adopted by modern organizations to design and implement information systems that support their business processes. Benefits of using SOA include reuse, model-driven implementation, service composition, better integration through standardization, and business process management. This paper aims to bridge the gap between business processes and SOA-based software applications that support them. It proposes a novel model-driven development method that generates SOA services from the specification of business processes expressed in BPMN. We present the principles underlying our approach and describe the state of an ongoing implementation. © 2017 IEEE.		Blal, R.; Leshob, A.	Proceedings - 14th IEEE International Conference on E-Business Engineering, ICEBE 2017 - Including 13th Workshop on Service-Oriented Applications, Integration and Collaboration, SOAIC 207					ConflictExcluded	Excluded	new_screen			2		2017				
723		ModelGuidance	Monarch: Model-Based Development of Software Architectures	"In recent work we showed that it is possible to separate, and combine formal representations of, application properties and architectural styles, respectively. We do this by defining style-specific mappings from style-independent application models to architectural models in given styles. This paper shows that this separation of concerns supports a model-based development and tools approach to architectural-style-independent application modeling, and architecture synthesis with style as a separate design variable. In support of these claims, we present a proof-of-concept tool, Monarch, and illustrate its use.

"		Bagheri, Hamid; Sullivan, Kevin						ConflictExcluded	Excluded	new_screen			2		2010				
724		ModelGuidance	Modelling and Initial Analysis of Operational Planning Processes Using Coloured Petri Nets	"This paper presents a project where Hierarchical Coloured Petri Nets have been used to formally specify and analyse an operational planning process in a deployable Headquarters of the Australian Defence Force. A CPN model has been constructed for capturing the planning process, qualitative metrics have been defined for analysis of the planning process, and the CPN model has been analysed using state space analysis methods. The paper focusses on a concrete representative planning process as observed in a training exercise. The modelling approach, defined metrics, and state space analysis techniques are applicable also in other application domains for process modelling.
"		Kristensen, Lars M.; Mitchell, Brice; Zhang, Lin; Billington, Jonathan						ConflictExcluded	Excluded	new_screen			2		2002				
725		ModelGuidance	Precise vs. ultra-light activity diagrams - An experimental assessment in the context of business process modelling	"UML activity diagrams are a commonly used notation for modelling business processes in the field of both workflow automation and requirements engineering. In this paper, we present a novel precise style for this notation. Further, the effectiveness of this style has been investigated in the context of the modelling of business processes through a controlled experiment conducted with master students in Computer Science at the Free University of Bolzano-Bozen. The results indicate that the subjects achieved a significantly better comprehension level when business processes are modelled using the precise style with respect to a lighter"" variant"		Di Cerbo, F.; Dodero, G.; Reggio, G.; Ricca, F.; Scanniello, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2011				
726		ModelGuidance	Modeling Web Services Policy with corporate knowledge	Web Services Policy is used to specify service constraints. Although many efforts like WS-Policy have been done to provide declarative configuration languages, it is still hard to discover and exchange the configuration information in the service computing environment. A novel approach to share service knowledge and application-specific information is needed. In this paper, we model web service policy with corporate knowledge, which is defined as the amount of knowledge provided by individual agents. This approach provides a distributed knowledge management method to our proposed semantic policy framework that enables reasoning, which is necessary for policy creation, conflicts resolution and negotiation. © 2006 IEEE.		Huang, D.; Yang, Y.; Calmet, J.	Proceedings - IEEE International Conference on e-Business Engineering, ICEBE 2006					ConflictExcluded	Excluded	new_screen			2		2006				
727		ModelGuidance	Modeling and analysis BPEL-based web services composition using XYZ	As a new distributed computing paradigm, web services have been paid more and more attention in recent years because of its efficient ability of building large-scale distributed, loosely coupled applications across different platforms and operating systems. Web services composition has become the hotspot currently in the field of web services research. With the network environment become more and more open, and users' requirements diverse from each other, how to describe the dynamic composition of web services and the validity of the web services have been problems while compositing web services. On the other side, the formal software architecture language XYZ/ADL can represent both static semantics and dynamic semantics under an unified logical framework, and support the stepwise refinement from higher-level architectures to lower-level architectures, so we introduce XYZ/ADL to specify the web services composition from the view of architecture in order to analysis web services composition from the global perspective. In this paper, we first introduce web services and some related works, analyze the similarity between the design elements in XYZ/ADL and activities in BPEL, then present the model of web services composition based on software architecture, using XYZ/ADL to specify the web services composition, furthermore, we define the mapping rules from XYZ/E and XYZ/ADL to BPEL, at last we give an example to illustrate the feasibility of our work and conclude the whole paper. © 2014 IEEE.		Rong, M.	Proceedings of the 9th International Conference on Computer Science and Education, ICCCSE 2014					ConflictExcluded	Excluded	new_screen			2		2014				
728		ModelGuidance	Towards the refinement of topological class diagram as a platform independent model	In this paper a refinement process of topological class diagram is presented. The refinement process is aimed to lower the abstraction level of the initial topological diagram which is obtained from the topological functioning model. Topological functioning model uses mathematical foundations that holistically represent complete functionality of the problem and application domains. By lowering abstraction level of the topological class diagram, it gets additional information which is needed during the software development and maintenance phases. The refinement process consists of six steps. As a result of applying refinement process, a rich topological class diagram with lower abstraction level is obtained. The refinement process is a part of topological modeling approach and it is shown in the context of laundry business system software development project. By applying topological modeling approach it is possible to enable computation independent model creation in a formal way and to enable transformation from it to the platform independent model. Copyright © 2011 SciTePress.		Donins, U.; Osis, J.; Slihte, A.; Asnina, E.; Gulbis, B.	Proceedings of the 3rd International Workshop on Model-Driven Architecture and Modeling-Driven Software Development, MDA and MDSD 2011, in Conjunction with ENASE 2011					ConflictExcluded	Excluded	new_screen			2		2011				
729		ModelGuidance	A UML model-based approach for replication assessment of AUTOSAR safety-critical applications	The paper extends the AUTOSAR meta-model to enable feasibility predictions on the provision of fault tolerant support for application components. We focus on a fault-tolerant support based on software replication techniques. The meta-model is extended in order to evaluate different replication strategies, in terms of replication styles, types of faults to be tolerated, replicas placement. This extension is realized by a UML profile. A model-based approach is presented aiming at the definition of a so-called Application Replication View, in which a replication strategy is specified for safety critical application components. A separate model, called Application Timing View, defines timing constraints for system responses. The combination of the two views will enable schedulability analysis of the fault-tolerant application. Schedulability analysis considers the task set composed of application tasks and the additional tasks injected by replication. An automotive case study is presented showing the applicability of the approach. © 2011 IEEE.		Tucci-Piergiovanni, S.; Mraidha, C.; Wozniak, E.; Lanusse, A.; Gerard, S.	Proc. 10th IEEE Int. Conf. on Trust, Security and Privacy in Computing and Communications, TrustCom 2011, 8th IEEE Int. Conf. on Embedded Software and Systems, ICESS 2011, 6th Int. Conf. on FCST 2011					ConflictExcluded	Excluded	new_screen			2		2011				
730		ModelGuidance	A Conceptual Approach to Modeling Model Driven Development Processes	Many model driven software development (MDSD) processes take the form of the integration of several development techniques or approaches. However comparing, selecting, and composing of them usually go implicitly lacking systemic guidelines. In this paper a conceptual approach for MDSD process frameworks modeling is proposed. Taking three inter-discipline concepts, abstraction, generality, and behaviorism that are fundamental to mathematics, philosophy as well as computer science as comparison dimensions, development techniques are compared in both static and dynamic facets of MDSD processes. An experimental method for composing them into development process frameworks is also given. This work potentially will be beneficial to meet nonfunctional software performance requirements on MDSD processes such as improving efficiency, traceability, and ensuring consistency etc.		Yucong Duan; Xiaolan Fu						ConflictExcluded	Excluded	new_screen			2		2006				
731		ModelGuidance	Requirement Engineering Techniques Selection and Modeling An Expert System Based Approach	Choosing suitable Requirement Engineering (RE) techniques for a particular project is a challenging and time-consuming task, requiring substantial expertise and efforts. In this paper, an expert system based approach is proposed to help solving this problem. This expert system is capable of modeling and selecting suitable RE techniques for a software project. An on-line questionnaire is created in the first place to collect the expertise available in the community. A new algorithm is proposed to convert the raw data to a training data set suitable for building a complete Bayesian Belief Network (BBN). The resulting BBN is used to build sub-BBNs for RE techniques in six RE phases. The sub-BBNs integrated with a user interface form the expert system. Empirical study shows that the expert system outperforms other predictors in selecting suitable RE techniques. A case study is conducted to show the application of the expert system in the real world.		Tang, Y.; Feng, K.; Cooper, K.; Cangussu, J.						ConflictExcluded	Excluded	new_screen			2		2009				
732		ModelGuidance	Modeling a hardware synthesis methodology in Isabelle	Formal Synthesis is a methodology developed at the University of Kent for combining circuit design and verification, where a circuit is constructed from a proof that it meets a given formal specification. We have reinterpreted this methodology in ISABELLE'S theory of higher-order logic so that circuits are incrementally built during proofs using higher-order resolution. Our interpretation simplifies and extends Formal Synthesis both conceptually and in implementation. It also supports integration of this development style with other proof-based synthesis methodologies and leads to techniques for developing new classes of circuits, e.g., recursive descriptions of parametric designs.		Basin, D.; Friedrich, S.	Formal Methods in System Design					ConflictExcluded	Excluded	new_screen			2		1999				
733		ModelGuidance	AN ABSTRACT EXECUTION MODEL FOR BASIC LOTOS	This paper presents some techniques that can be used for translating a {LOTOS} (Language Of Temporal Ordering Specification) specification into an efficient implementation. In particular, the paper focuses attention on basic {LOTOS}, the control part of {LOTOS}, and presents a simple algorithm to derive an abstract machine based on a set of labelled transition systems from a basic {LOTOS} specification. The transition systems define interacting processes. The problem of the unbounded number of state is considered and solved, by allowing dynamic creation and destruction of processes and by adopting an appropriate construction procedure for the transition systems. The synchronisation of the processes, according to the {LOTOS} multi-way rendezvous mechanism, is obtained by means of a procedure based on message transfer among the processes, thus enabling a distributed implementation.		VALENZANO, A.; SISTO, R.; CIMINIERA, L.	{SOFTWARE} {ENGINEERING} {JOURNAL}					ConflictExcluded	Excluded	new_screen			2		1990				
734		ModelGuidance	A framework to non-functional modelling and analysis of software architectures	Software system modelling so that they satisfy all their important functional requirements is difficult Software architecture can help modelling and analysis through effective compositions of welldefined components and connectors. In this paper, we propose a framework for modelling nonfunctional properties. Then, we explain how one can evaluate them. To do so, we propose using graph transformation system for modelling both functional and non-functional properties in the form of a proper architectural style. Using styles it is possible to capture functional and non-functional aspects of different systems naturally. ©2012 International Information Institute.		Hajiee, M.; Rasoolzade, S.; Rafe, R.	Information					ConflictExcluded	Excluded	new_screen			2		2012				
735		ModelGuidance	Guidelines for Model Based Systems Engineering	Cassidian ® is working on modeling guidelines. We present our approach and report first results and findings to illustrate progress and direction of our work.		Steinbach, D.						ConflictIncluded	Excluded	new_screen			2		2012				
736		ModelGuidance	Software process simulation modeling: Why? What? How?	Software process simulation modeling is increasingly being used to address a variety of issues from the strategic management of software development, to supporting process improvements, to software project management training. The scope of software process simulation applications ranges from narrow focused portions of the life cycle to longer term product evolutionary models with broad organizational impacts. This article provides an overview of work being conducted in this field. It identifies the questions and issues that simulation can be used to address ('why'), the scope and variables that can be usefully simulated ('what'), and the modeling approaches and techniques that can be most productively employed ('how'). It includes a summary of the papers in this special issue of the Journal of Systems and Software, which were presented at the First International Silver Falls Workshop on Software Process Simulation Modeling (ProSim'98). It also provides a framework that helps characterize work in this field, and applies this new characterization scheme to many of the articles in this special issue. This paper concludes by offering some guidance in selecting a simulation modeling approach for practical application, and recommending some issues warranting additional research.		Kellner, M. I.; Madachy, R. J.; Raffo, D. M.	Journal of Systems and Software					ConflictExcluded	Excluded	new_screen			2		1999				
737		ModelGuidance	Model-based guidelines for user-centric satellite control software development	Three persistent common problems in satellite ground control software are obsolescence, lack of desired features and flexibilities, and endless software bug fixing. The obsolescence problem occurs when computer and ground equipment hardware become obsolete, usually after only one-third into the satellite mission lifetime. The software needs to be updated to accommodate changes on the hardware side, requiring significant work of satellite operators to test, verify, and validate these software updates. Trying to help solve these problems, we have proposed an object-process methodology model and guidelines for developing satellite ground control software. The system makes use of a database-driven application and concepts of object-process orientation and modularity. In the new proposed framework, instead of coding each software function separately, the common base functions will be coded, and combining them in various ways will provide the different required functions. The formation and combination of these base functions will be governed by the main code, definitions, and database parameters. These design principles will make sure that the new software framework would provide satellite operators with the flexibility to create new features and enable software developer to find bugs quicker and fix them more effectively. Copyright (c) 2015 John Wiley \& Sons, Ltd.		Dori, Dov; Thipphayathetthana, Somwang	{INTERNATIONAL} {JOURNAL} {OF} {SA}℡{LITE} {COMMUNICATIONS} {AND} {NETWORKING}					ConflictExcluded	Excluded	new_screen			2		2016				
738		ModelGuidance	Modeling fault-prone modules of subsystems	Software developers are very interested in targeting software enhancement activities prior to release, so that rework of faulty modules can be avoided. Credible predictions of which modules are likely to have faults discovered by customers can be the basis for selecting modules for enhancement. Many case studies in the literature build models to predict which modules will be fault-prone without regard to subsystems defined by the system's functional architecture. Our hypothesis is this: models that are specially built for subsystems will be more accurate than a system-wide model applied to each subsystem's modules. In other words, the subsystem that a module belongs to can be valuable information in software quality modeling. This paper presents an empirical case study which compared software quality models of an entire system to models of a major functional subsystem. The study modeled a very large telecommunications system with classification trees built by the Classification And Regression Trees algorithm (CART). For predicting subsystem quality, we found that a model built with training data on the subsystem alone was more accurate than a similar model built with training data on the entire system. We concluded that characteristics of the subsystem's modules were not similar to those of the system as a whole, and thus, information on subsystems can be valuable.		Khoshgoftaar, Taghi M.; Thaker, Vishal; Allen, Edward B.	Proceedings of the International Symposium on Software Reliability Engineering, ISSRE					ConflictExcluded	Excluded	new_screen			2		2000				
739		ModelGuidance	A framework for executable UML models	One approach to support the creation of executable UML models is to utilize an existing DEVS simulation environment. The Discrete Event System Specification (DEVS) formalism excels at modeling complex discrete event systems. An approach to specifying DEVS-compliant models is presented via Unified Modeling Language (UML) state machines. Resultant UML models are executable within DEVS simulation frameworks such as DEVSJAVA. Constructing DEVS-compliant UML models enables early simulation and verification of a design. This paper outlines how the specifics of simulation can be naturally expressed in UML models without significant burden to the UML practitioner. Simulatable models are an excellent precursor and companion to the current models normally developed during design and implementation and may result in significant cost and time savings.		Mooney, J.; Sarjoughian, H.	Simulation Series					ConflictExcluded	Excluded	new_screen			2		2009				
740		ModelGuidance	Model driven software development: An overview	The vision of the MDSD is an era of software engineering where modelling completely replaces programming i.e. the systems are entirely generated from high-level models, each one specifying a different view of the same system. The MDSD can be seen as the new generation of visual programming languages which provides methods and tools to streamline the process of software engineering. Productivity of the development process is significantly improved by the MDSD approach and it also increases the quality of the resulting software system. The MDSD is particularly suited for those software applications which require highly specialized technical knowledge due to the involvement of complex technologies and the large number of complex and unmanageable standards. In this paper, an overview of the MDSD is presented; the working styles and the main concepts are illustrated in detail.		Saleem, M. Q.; Jaafar, J.; Hassan, M. F.						ConflictIncluded	Excluded	new_screen			2		2014				
741		ModelGuidance	Petri net-based object-oriented modelling of distributed systems	This paper presents an object-oriented approach for building distributed systems. An example taken from the field of computer integrated manufacturing systems is taken as a guideline. According to this approach a system is built up through three steps: control and synchronization aspects for each class of objects are treated first using PROT nets, which are a high-level extension to Petri nets; then data are introduced specifying the internal states of the objects as well as the messages they send each other; finally the connections between the objects are introduced by means of a data flow diagram between classes. The implementation uses ADA as the target language, exploiting its tasking and structuring mechanisms. The flexibility of the approach and the possibility of using a knowledge-based user interface promote rapid prototyping and reusability. © 1986, ACM. All rights reserved.		Bruno, G.; Balsamo, A.	ACM SIGPLAN Notices					ConflictExcluded	Excluded	new_screen			2		1986				
742		ModelGuidance	BUILDING TAILOR-MADE SOFTWARE COST MODEL - INTERMEDIATE TUCOMO	Success in software engineering depends primarily on managerial considerations, which are in turn contingent on an accurate and reliable cost-estimation procedure. Among the many software cost-estimation procedures available today, {COCOMO} stands out by its concern for accuracy and the thoroughness of its procedures. But {COCOMO} is calibrated to a specific profile of projects and performs best when it is applied to a project of that specific profile. The paper discusses an effort to build a {COCOMO}-like, tailor-made cost-estimation model. Guidelines are given on how to calibrate Intermediate {COCOMO} to an arbitrary project profile.		MARWANE, R.; MILI, A.	{INFORMATION} {AND} {SOFTWARE} {TECHNOLOGY}					ConflictExcluded	Excluded	new_screen			2		1991				
743		ModelGuidance	Automating the construction of models based on domain views	This work addresses the automatic generation of the resources required for the assisted creation of domain models according to specialized views of their meta-model. The task of a designer who builds models compliant to a complex domain meta-model is eased if the model editor requests the information according to a specific view of the meta-model based on the conceptualization or the specific construction strategy that the designer uses. With that aim, this work presents 1) the meta-model with which a domain expert formulates the model creation strategy that he envisions, 2) the tool that, from that strategy information, generates the meta-model that drives data introduction and 3) the M2M transformation that generates the final model compliant to the original domain meta-model and that contains the newly introduced data. © Copyright 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.		Cuesta, C. C.; Martínez, P. L.; Drake, J. M.	MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development					ConflictExcluded	Excluded	new_screen			2		2016				
744		ModelGuidance	A Conceptual Model-based Systems Engineering (MBSE) approach to develop Digital Twins	A digital twin (DT) is an interactive, real-time digital representation of a system or a service utilizing onboard sensor data and Internet of Things (IoT) technology to gain a better insight into the physical world. With the increasing complexity of systems and products across many sectors, there is an increasing demand for complex systems optimization. Digital twins vary in complexity and are used for managing the performance, health, and status of a physical system by virtualizing it. The creation of digital twins enabled by Modelbased Systems Engineering (MBSE) has aided in increasing system interconnectivity and simplifying the system optimization process. More specifically, the combination of MBSE languages, tools, and methods has served as a starting point in developing digital twins. This article discusses how MBSE has previously facilitated the development of digital twins across various domains, emphasizing both the benefits and disadvantages of adopting an MBSE enabled digital twin creation. Further, the article expands on how various levels of digital twins were generated via the use of MBSE. An MBSE enabled conceptual framework for developing digital twins is identified that can be used as a research testbed for developing digital twins and optimizing systems and system of systems		V. Lopez; A. Akundi	2022 IEEE International Systems Conference (SysCon)					ConflictExcluded	Excluded	new_screen			2		2022				
745		ModelGuidance	A Component-Based Evolution Model for Service-Based Software Architectures	Microservices architecture has emerged as an architectural style which focuses on the design and development of software systems as a set of small independent services. Although MSA is inspired by the Service-Oriented Architecture style (both are service-based architectures), it presents important differences. Likewise, software architecture must evolve as new architectural styles and software frameworks arise, and the evolution of the software architecture is considered as a central feature of any software system. In this way, this paper proposes an approach to evolve SOA to MSA architectures through the use of Sarch language. To accomplish this, the language was extended to allow the modeling of the two architectural styles from the component-and-connector view, the inclusion of a decomposition view for functional properties, and the use of a model-to-model transformation algorithm.		E. Berrio-Charry; J. Vergara-Vargas; H. Umaña-Acosta	2020 IEEE 11th International Conference on Software Engineering and Service Science (ICSESS)					ConflictExcluded	Excluded	new_screen			2		2020				
746		ModelGuidance	Code-First Model-Driven Engineering: On the Agile Adoption of MDE Tooling	Domain models are the most important asset in widely accepted software development approaches, like Domain-Driven Design (DDD), yet those models are still implicitly represented in programs. Model-Driven Engineering (MDE) regards those models as representable entities that are amenable to automated analysis and processing, facilitating quality assurance while increasing productivity in software development processes. Although this connection is not new, very few approaches facilitate adoption of MDE tooling without compromising existing value, their data. Moreover, switching to MDE tooling usually involves re-engineering core parts of an application, hindering backward compatibility and, thereby, continuous integration, while requiring an up-front investment in training in specialized modeling frameworks. In those approaches that overcome the previous problem, there is no clear indication - from a quantitative point of view - of the extent to which adopting state-of-the-art MDE practices and tooling is feasible or advantageous.In this work, we advocate a code-first approach to modeling through an approach for applying MDE techniques and tools to existing object-oriented software applications that fully preserves the semantics of the original application, which need not be modified. Our approach consists both of a semi-automated method for specifying explicit view models out of existing object-oriented applications and of a conservative extension mechanism that enables the use of such view models at run time, where view model queries are resolved on demand and view model updates are propagated incrementally to the original application. This mechanism enables an iterative, flexible application of MDE tooling to software applications, where metamodels and models do not exist explicitly. An evaluation of this extension mechanism, implemented for Java applications and for view models atop the Eclipse Modeling Framework (EMF), has been conducted with an industry-targeted benchmark for decision support systems, analyzing performance and scalability of the synchronization mechanism. Backward propagation of large updates over very large views is instant.		Boronat, Artur	Proceedings of the 34th IEEE/ACM International Conference on Automated Software Engineering					ConflictExcluded	Excluded	new_screen			2		2020				
747		ModelGuidance	"Constructing the Model of ""Four-in-One"" Software Engineering Master Training Based on Artificial Intelligence"	"Building a ""Four-in-One"" software engineering master's cultivation model based on artificial intelligence is an inevitable requirement of the development of the times and the realization of industrial development. However, due to the outdated cultivation mode of the Master of Artificial Intelligence Software Engineering, there are few or no courses related to artificial intelligence in terms of curriculum setting, and the textbooks are not updated in time, which makes students lack of grasp of cutting-edge knowledge and scientific research methods. In terms of scientific research practice, it is simple in form and low in technology content, which leads to the insufficiency of students' comprehensive engineering application ability, and becomes the bottleneck of the cultivation of senior talents in software engineering under the background of artificial intelligence. With four modules of scientific selection system, multi-module curriculum system, practical training system and school-enterprise cooperation mechanism, the ""Four-in-One"" training mode is constructed to cultivate high-level, open, compound and international software talents."		Duan, Yuanpeng; Gong, Weixin	2021 3rd International Conference on Artificial Intelligence and Advanced Manufacture					ConflictExcluded	Excluded	new_screen			2		2022				
748		ModelGuidance	Painting Flowers: Reasons for Using Single-State State Machines in Model-Driven Engineering	Models, as the main artifact in model-driven engineering, have been extensively used in the area of embedded systems for code generation and verification. One of the most popular behavioral modeling techniques is state machine. Many state machine modeling guidelines recommend that a state machine should have more than one state in order to be meaningful. However, single-state state machines (SSSMs) violating this recommendation have been used in modeling cases reported in the literature.We study the prevalence and role of SSSMs in the domain of embedded systems, as well as the reasons why developers use them and their perceived advantages and disadvantages. We employ the sequential explanatory strategy to study 1500 state machines from 26 components at ASML, a leading company in manufacturing lithography machines from the semiconductor industry. We observe that 25 out of 26 components contain SSSMs, making up 25.3% of the model base. To understand the reasons for this extensive usage we conduct a series of interviews followed by a grounded theory building. The results suggest that SSSMs are used to interface with the existing code, to deal with tool limitations, to facilitate maintenance and to ease verification. Based on our results, we provide implications to modeling tool builders. Furthermore, we formulate two hypotheses about the effectiveness of SSSMs as well as the impacts of SSSMs on development, maintenance and verification.		Yang, Nan; Cuijpers, Pieter; Schiffelers, Ramon; Lukkien, Johan; Serebrenik, Alexander	Proceedings of the 17th International Conference on Mining Software Repositories					ConflictExcluded	Excluded	new_screen			2		2020				
749		ModelGuidance	Chinese Short Text Entity Linking Model Based on PET	Existing Chinese short text entity link models are less, and the short text is limited and handled by the context missing and the processing noise. There is still a lot of space to improve the accuracy. This paper proposes a Chinese short text entity linking model, encoding the mention and entity representation of Pattern-Exploiting Training (PET), and learning the potential relationship between the entities in the knowledge base, based on contrastive learning. Our Chinese short text model experiments on Duel2.0 dataset and improves the result.		Yan, Xiaofan; Cheng, Jie; Zhang, Ru; Wei, Jiahui; Chen, Liandong; Cheng, Kai	Proceedings of the 4th World Symposium on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2022				
750		ModelGuidance	Chinese Text Similarity Calculation Model Based on Multi-Attention Siamese Bi-LSTM	Measuring text similarity is a key research area in natural language processing technology. In this research, we proposed a multi-attention Siamese bi-directional long short-term memory (MAS-Bi-LSTM) to calculate the semantic similarity between two Chinese texts. The novel model used Bi-LSTM as the basic framework of the Siamese network, introduced a multi-head attention mechanism to capture the key features of the text, and used the Manhattan distance to calculate the similarity. Experiments were conducted on the large-scale Chinese question matching corpus dataset. Results showed that our model can achieve higher accuracy compared with other comparable models. The F1 value of our model reached 0.8070. The contribution of this research is to use the multi-head attention mechanism to re-weight the semantic features, and explore the influence of different pre-training corpus, distance formulas and heads of multi-attention on the model.		Wang, Zhongguo; Zhang, Bao	Proceedings of the 4th International Conference on Computer Science and Software Engineering					ConflictExcluded	Excluded	new_screen			2		2021				
751		ModelGuidance	Towards an Open Repository for Teaching Software Modeling Applying Active Learning Strategies	Modeling is a core topic in Software Engineering Education. Nevertheless, students face difficulties while learning software modeling. To teach software modeling effectively in computing courses, instructors who usually employed traditional methods could use active learning strategies. However, instructors are reluctant to change their teaching approaches due to several barriers that hinder the application of active learning strategies. Besides, relatively little research addresses how to mitigate them. The objective of this research is to help instructors implementing active learning strategies when teaching software modeling with UML diagrams. To achieve this objective, we conducted a Design Science Research (DSR). We proposed an artifact called OpenSMALS, an Open Repository for teaching Software Modeling applying Active Learning Strategies. OpenSMALS provides specific guidelines on how instructors can apply these strategies and helping instructors to identify the active learning strategies best suit their teaching context. We performed four DSR Design Cycles—in four different universities—to evaluate and evolve OpenSMALS. Our results show that OpenSMALS satisfactorily reduced the barriers faced by instructors, and it achieved an appropriate maturity level to be adopted by other instructors.		Silva, Williamson; Gadelha, Bruno; Steinmacher, Igor; Conte, Tayana	Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Software Engineering Education and Training					ConflictExcluded	Excluded	new_screen			2		2020				
752		ModelGuidance	Academic and Industry Training for Data Modelling: Ideas for Mutual Benefit	Finding a common ground between academic and industry training is a challenging task. However, despite all the differences between the two worlds, there is one important common aspect for the master students and industry trainees in the field of conceptual data modelling: the mistakes they make when creating data models. This idea paper describes the existing differences and similarities between two academic and industrial training approaches for teaching conceptual data modelling. We propose ideas for improvement of training quality on both sides by analysing and tackling the ground errors in conceptual data modelling made both by novices and professionals. Additionally, we propose the ideas for methodology exchanges between the two training types.		Bogdanova, Daria; Snoeck, Monique	Proceedings of the ACM/IEEE 44th International Conference on Software Engineering: Software Engineering Education and Training					ConflictExcluded	Excluded	new_screen			2		2022				
753		ModelGuidance	Meaningful Metrics for Multi-Level Modelling	"One of the key enablers of further growth of multi-level modeling will be the development of objective ways to allow multi-level modeling approaches to be compared to one another and to two-level modeling approaches. While significant strides have been made regarding qualitative comparisons, there is currently no adequate way to quantitatively assess to what extent a multi-level model may be preferable over another model with respect to high-level qualities such as understandability, maintainability, and control capacity. In this paper, we propose deep metrics, as an approach to quantitatively measure high-level model concerns of multi-level models that are of interest to certain stakeholders. Beyond the stated goals, we see deep metrics as furthermore supporting the comparison of modeling styles and aiding modelers in making individual design decisions. We discuss what makes a metric ""depth-aware"" so that it can appropriately capture multi-level model properties, and present two concrete proposals for metrics that measure high-level multi-level model qualities."		Kühne, Thomas; Lange, Arne	Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					ConflictExcluded	Excluded	new_screen			2		2020				
754		ModelGuidance	An Approach to Build Consistent Software Architecture Diagrams Using Devops System Descriptors	System architecture diagrams play an essential role in understanding system architecture. They encourage more active discussion among participants and make it easier to recall system details. However, system architecture diagrams often diverge from the software. As a result, they can interfere with the understanding and maintenance of the software. We propose an approach to build system architecture diagrams using DevOps system descriptors to improve the consistency of architecture diagrams. To produce our approach, we survey problems with architecture diagrams in the software industry, developing guidelines for creating architecture diagrams. Next, we produce a taxonomy for system descriptor concepts and a process to convert system descriptors into architecture diagrams. We evaluate our approach through a case study. In this case study, we defined a Docker Compose descriptor for a newsfeed system and transformed it into a system architectural diagram using the proposed approach. Our results indicate that, currently, system descriptors generally lead to consistent diagrams only to a limited extent. However, the case study's observations indicate that the proposed approach is promising and demonstrates that system descriptors have the potential to create more consistent architectural diagrams. Further evaluation in controlled and empirical experiments is necessary to test our hypothesis in more detail.		Nicacio, Jalves; Petrillo, Fabio	Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
755		ModelGuidance	On the Engineering of IoT-Intensive Digital Twin Software Systems	Digital Twins (DT) are software systems representing different aspects of a physical or conceptual counterpart—the real twin, which is instrumented with several sensors or computing devices that generate, consume and transfer data to its DT with different purposes. In other words, DT systems are, to a large extent, IoT-intensive systems. Indeed, by exploiting and managing IoT data, artificial intelligence, and big data and simulation capabilities, DTs have emerged as a promising approach to manage the virtual manifestation of real-world entities throughout their entire lifecycle. Their proliferation will contribute to realizing the long-craved convergence of virtual and physical spaces to augment things and human capabilities. In this context, despite the proposal of noteworthy contributions, we argue that DTs have not been sufficiently investigated from a software engineering perspective. To address this, in this paper we propose GEMINIS, an architectural reference model that adopts self-adaptation, control, and model-driven engineering techniques to specify the structural and behavioural aspects of DTs and enable the evolution of their internal models. Moreover, we introduce an approach for engineering IoT-intensive Digital Twin Software Systems (DTSS) using GEMINIS' capabilities to deal with uncertain conditions that are inherent to the nature of mirrored physical environments and that might compromise the fidelity of a DT. With GEMINIS and the proposed approach, we aim to advance the engineering of DTSS as well as IoT and cyber-physical systems by providing practitioners with guidelines to model and specify inherent structural and behavioural characteristics of DTs, addressing common design concerns.		Rivera, Luis F.; Müller, Hausi A.; Villegas, Norha M.; Tamura, Gabriel; Jiménez, Miguel	Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops					ConflictExcluded	Excluded	new_screen			2		2020				
756		ModelGuidance	Towards Flexible Creation of Multi-Level Models: Bottom-up Change Support in the Modeling and Programming Environment XModeler	A process of a multi-level model creation follows typically the top-down approach, i.e., it requires first defining concepts and relations on the highest classification levels, which only then can be used to create concepts on the lower ones. Empirical insights into the process of multi-level model creation suggest however, that this strategy may be counter-intuitive and challenging, especially for non-experts. This paper addresses this problem by focusing on the idea of flexible multi-level model creation, understood as an intertwined application of top-down and bottom-up strategies. As a first step towards realizing this vision for multi-level models in general, and those created with the XModeler and Flexible Meta-Modeling and Execution Language (FMMLx) in particular, in this paper, we select a set of relevant multi-level refactoring patterns, adapt them to our approach, and implement them in the supporting tool. We illustrate the flexible creation process using an exemplary scenario.		Töpel, Daniel; Kaczmarek-Heß, Monika	Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
757		ModelGuidance	Development of Virtual Reality Training System	"This article mainly studies the application of virtual reality technology in the design of virtual training system. A simple and easy software solution of ""modeling software + programming language"" is proposed; the module division and development steps of the development of virtual reality training system are given. Combining the key technologies of virtual reality and selecting part of the equipment installation content, designed and developed a simple desktop virtual reality assembly training system centered on scenes. Organize and schedule the equipment assembly, parts and other resources in the scene. Choose the entry point with scene as the core, and discuss the specific technical implementation details of model import, collision detection, and system optimization. The overall design scheme, specific development work and technical realization proposed in this article have a good demonstration effect, and it takes a multifunction machine tool in virtual system as an example to verify the method is efficient."		Jiang, Lai	Proceedings of the 4th International Conference on Computer Science and Software Engineering					ConflictExcluded	Excluded	new_screen			2		2021				
758		ModelGuidance	Automating the Early Detection of Security Design Flaws	Security by design is a key principle for realizing secure software systems and it is advised to hunt for security flaws from the very early stages of development. At design-time, security analysis is often performed manually by means of either threat modeling or expert-based design inspections. However, when leveraging the wide range of established knowledge bases on security design flaws (e.g., CWE, CAWE), these manual assessments become too time consuming, error-prone, and infeasible in the context of contemporary development practices with frequent iterations. This paper focuses on design inspection and explores the potential for automating the application of inspection rules to speed up the security analysis.The contributions of this paper are: (i) the creation of a publicly available data set consisting of 26 design models annotated with security flaws, (ii) an automated approach for following inspection guidelines using model query patterns, and (iii) an empirical comparison of the results from this automated approach with those from manual inspection. Even though our results show that a complete automation of the security design flaw detection is hard to achieve, we find that some flaws (e.g., insecure data exposure) are more amenable to automation. Compared to manual analysis techniques, our results are encouraging and suggest that the automated technique could guide security analysts towards a more complete inspection of the software design, especially for large models.		Tuma, Katja; Sion, Laurens; Scandariato, Riccardo; Yskout, Koen	Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems					ConflictExcluded	Excluded	new_screen			2		2020				
759		ModelGuidance	Towards the Systematic Design of Model Animation: Key Ingredients and General Guidelines	Model Animation (MA) is a practical technique for providing modellers and Model Transformation designers an insurance that their models behave as expected. This is specially relevant in expertise domains where models have a natural visual representation, i.e. a dedicated concrete syntax. MA can be seen as the visual representation of Model Transformation simulation. It supports Model Transformation designers understand, trace, monitor, and ultimately debug their specification using visual clues.In contrast to other techniques surrounding Model-Driven Engineering, MA has received less attention, in contrast to, e.g. testing or debugging. This paper is a first step towards the systematic engineering of model animators. It identifies three key challenges: (i) how to effectively, explicitly and precisely define the concrete syntax to enable MA; (ii) how to build an MA language to express animations units in a compositional way, so that animations become flexible in their definition, and reusable across several Dsls; and finally (iii) how to explicitly relate MA units with their transformation counterparts, to avoid reimplementing the transformation scheduling.We analyse these challenges to extract some requirements for future animators, and give a partial conceptual proposal that fulfil them, paving the way towards the creation of a family of animation tools that would work alongside transformation engines. We then show, on simple examples, how these propositions apply and to which extent they promote flexibility and reuse.		Amrani, Moussa; Ouared, Abdelkader; Schobbens, Pierre-Yves	Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
760		ModelGuidance	Mapping Textual Feedback to Process Model Elements	In this paper, we have proposed novel concept of mapping natural language customer feedback text to relevant business process model elements. Customer feedback mapped over business process model will provide augmented business process having customer perception. More specifically, in this work, we have proposed systematic approach for mapping feedback comment to relevant process model elements which comprises a)process model generation, b) preparation of real-world customer feedback corpus, c) BPRI framework based mapping guidelines and d) first novel human annotated customer feedback process model element mapping dataset. We have evaluated the effectiveness of six traditional text similarity measures for automatic mapping of customer feedback to process model elements. Based on the results, we concluded that automatic mapping identification is challenging task as six traditional similarity measures resulted zero recall score.		Ahmed, Sanam; Mustansir, Amina	Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering Workshops					ConflictExcluded	Excluded	new_screen			2		2021				
761		ModelGuidance	User-Centered Performance Engineering of Model Transformations	In Model-Driven Engineering, models are key artifacts. Due to the fact that the systems to be developed become larger and more complex, the corresponding models also become larger and more complex. This trend also influences operations on these models, such as transformations. They are applied at design time and at runtime, e.g. to update models, generate code or to create new models. With increasing model size, their execution time increases, making their performance an important quality aspect. Current research mainly concentrates on further improvements of the transformation engine that performs the transformation, but this will not solve the problem alone. Engine optimizations will never be able to mitigate every possible performance problem due to the fact that there's an arbitrary amount of ways to define a transformation as well as the models and meta-models that all affect the runtime. Therefore, transformation engineers must also ensure that they define their transformations in such a way that they have a short execution time. To achieve this, a performance engineering approach for model transformations is necessary. This approach must consist of steps and techniques that help to analyze and improve performance. In this paper we present our performance engineering approach for declarative model transformations. We identified the five artifacts Guidelines, Monitoring, Analyses, Visualizations and Improvement proposals that form our approach. These artifacts are intended to help an engineer to understand the execution of a transformation and the causes of performance problems with the help of Analyses and Visualizations based on our Monitoring in order to improve them. During the improvement the engineer will be supported by Guidelines and Improvement proposals.		Groner, Raffaela	Proceedings of the 22nd International Conference on Model Driven Engineering Languages and Systems					ConflictExcluded	Excluded	new_screen			2		2021				
762		ModelGuidance	ModelGame: A Quality Model for Gamified Software Modeling Learning	Gamification has been adopted in software development tasks in recent years. This adoption seeks, for example, to improve the engagement of developers while creating UML models or writing code. Empirical studies report that UML models suffer from incompleteness and inconsistency problems. This study conjectures that gamification mechanics can improve learner engagement while learning software modeling, mitigating such problems concerning UML models. The current literature lacks studies that explore gamification and UML model quality in the context of software modeling learning. This article, therefore, proposes ModelGame, which is a quality model to support software modeling learning in a gamified way. It serves as a reference framework so that instructors can obtain a parameterized way to evaluate UML models created by learners. The quality of UML models can be improved by applying gamified activities and providing guidelines aware of quality issues. A qualitative questionnaire was answered by 19 instructors who teach software modeling at higher education institutions. The results show that (1) 94.7% recognize that the proposed model can improve the quality of UML models, indicating that they would adopt the ModelGame in their learning practices; and (2) 47.4% do not use any gamification mechanics in their classes. The results are encouraging, showing the potential for applying and improving the teaching and learning of software modeling.		Júnior, Ed; Farias, Kleinner	15th Brazilian Symposium on Software Components, Architectures, and Reuse					ConflictExcluded	Excluded	new_screen			2		2021				
763		ModelGuidance	Classification of Discussions in MOOC Forums: An Incremental Modeling Approach	Supervised classification models are commonly used for classifying discussions in a MOOC forum. In most cases these models require a tedious process for manual labeling the forum messages as training data. So, new methods are needed to reduce the human effort necessary for the preparation of such training datasets. In this study we follow an incremental approach in order to examine how soon after the beginning of a new course, we have collected enough data for training a supervised classification model. We show that by employing features that derive from a seeded topic modeling method, we achieve classifiers with reliable performance early enough in the course life, thus reducing significantly the human effort. The content of the MOOC platform is used to bias the topic extraction towards discussions related to (a) course content, (b) logistics, or (c) social interactions. Then, we develop a supervised model at the start of each week based on the topic features of all previous weeks and evaluate its performance in classifying the discussions for the rest of the course. Our approach was implemented in three different MOOCs of different subjects and different sizes. The findings reveal that supervised models are able to perform reliably quite early in a MOOC's life and retain a steady overall accuracy across the remaining weeks, without requiring to be trained with the entire forum dataset.		Ntourmas, Anastasios; Dimitriadis, Yannis; Daskalaki, Sophia; Avouris, Nikolaos	Proceedings of the Eighth ACM Conference on Learning @ Scale					ConflictExcluded	Excluded	new_screen			2		2021				
764		ModelGuidance	EcoKnow: Engineering Effective, Co-Created and Compliant Adaptive Case Management Systems for Knowledge Workers	We report on a new approach to co-creating adaptive case management systems jointly with end-users, developed in the context of the Effective co-created and compliant adaptive case Management Systems for Knowledge Workers (EcoKnow.org) research project. The approach is based on knowledge from prior ethnographic field studies and research in the declarative Dynamic Condition Response (DCR) technology for model-driven design of case management systems. The approach was tested in an operational environment jointly with the danish municipality of Syddjurs by conducting a service-design project and implementing an open source case manager tool and a new highlighter tool for mapping between textual specifications and the DCR notation. The design method and technologies were evaluated by understandability studies with end-users. The study showed that the development could be done in just 6 months, and that the new highlighter tool in combination with the traditional design and simulation tools, supports domain experts formalise and provide traceability between their interpretations of textual specifications and the formal models.		Hildebrandt, Thomas T.; Andaloussi, Amine Abbad; Christensen, Lars R.; Debois, Søren; Healy, Nicklas Pape; López, Hugo A.; Marquard, Morten; Møller, Naja L. H.; Petersen, Anette C. M.; Slaats, Tijs; Weber, Barbara	Proceedings of the International Conference on Software and System Processes					ConflictExcluded	Excluded	new_screen			2		2020				
765		ModelGuidance	SLGPT: Using Transfer Learning to Directly Generate Simulink Model Files and Find Bugs in the Simulink Toolchain	Finding bugs in a commercial cyber-physical system (CPS) development tool such as Simulink is hard as its codebase contains millions of lines of code and complete formal language specifications are not available. While deep learning techniques promise to learn such language specifications from sample models, deep learning needs a large number of training data to work well. SLGPT addresses this problem by using transfer learning to leverage the powerful Generative Pre-trained Transformer 2 (GPT-2) model, which has been pre-trained on a large set of training data. SLGPT adapts GPT-2 to Simulink with both randomly generated models and models mined from open-source repositories. SLGPT produced Simulink models that are both more similar to open-source models than its closest competitor, DeepFuzzSL, and found a super-set of the Simulink development toolchain bugs found by DeepFuzzSL.		Shrestha, Sohil Lal; Csallner, Christoph	Evaluation and Assessment in Software Engineering					ConflictExcluded	Excluded	new_screen			2		2021				
766		ModelGuidance	Modeling A Business Intelligence System For Determining Investment Efficiency	This paper presents a software system for investment efficiency that serves as an actual example to students learning financial development. Companies need computer specialists who can understand and develop applications in the financial field to provide better tools for the needs of the financial department. Engineering students have difficulty grasping financial concepts and need good examples to supplement their learning. The main aim is to enhance students’ capability to think in design, choose appropriate visualizing tools, and represent data correctly and efficiently. The most challenging part is applying formulas from an unfamiliar area and calculating and showing data precisely. The development of such a software system and its integration into the curriculum of engineering students studying financial system development is explained. It was possible to combine different capital budgeting methods that simplified the application design during the development. A survey among students was conducted on the application’s value, which resulted in positive feedback. The software system has positively influenced the students’ opinion about their own skills and confidence.		Ibryamova, Elitsa; Popgeorgiev, Angel	Proceedings of the 23rd International Conference on Computer Systems and Technologies					ConflictExcluded	Excluded	new_screen			2		2022				
767		ModelGuidance	HAI-GEN 2022: 3rd Workshop on Human-AI Co-Creation with Generative Models	Recent advances in generative AI have resulted in a rapid and dramatic increase to the fidelity of created artifacts, from realistic-looking images of faces&nbsp;[9] to antimicrobial peptide sequences that treat diseases&nbsp;[5] to faked videos of prominent business leaders&nbsp;[4, 10]. We believe that people skilled within their creative domain can realize great benefits by incorporating generative models into their own work: as a source of inspiration, as a tool for manipulation, or as a creative partner. Our workshop will bring together researchers and practitioners from both the HCI and AI disciplines to explore and better understand the opportunities and challenges in building, using, and evaluating human-AI co-creative systems.		Weisz, Justin D.; Maher, Mary Lou; Strobelt, Hendrik; Chilton, Lydia B.; Bau, David; Geyer, Werner	27th International Conference on Intelligent User Interfaces					ConflictExcluded	Excluded	new_screen			2		2022				
768		ModelGuidance	An Architectural Style for Internet of Things Systems	In recent years, we have witnessed the emergence of the Internet of Things (IoT) paradigm as means of allowing for connectivity, interaction, and integration of smart objects, which collaborate with each other to achieve common goals. The characteristics of IoT have challenged Software Engineering, including how to successfully architect complex systems while meeting business goals and satisfying important quality attributes. The use of software architectural styles provides a solid foundation for mitigating risks arisen from the complexity of these systems. In this paper, we propose an architectural style for IoT systems in conformance with the IoT conceptual model defined by the ISO/IEC 30141 International Standard. We specify the style by using the SysADL language in terms of the description of its architectural elements, structure, behavior, and constraints. We validated the style through the architectural design of a real-world IoT system and evaluated its use through an exploratory experiment.		Santos, Lidiane; Silva, Eduardo; Batista, Thais; Cavalcante, Everton; Leite, Jair; Oquendo, Flavio	Proceedings of the 35th Annual ACM Symposium on Applied Computing					ConflictExcluded	Excluded	new_screen			2		2020				
769		ModelGuidance	Towards Reliable AI for Source Code Understanding	Cloud maturity and popularity have resulted in Open source software (OSS) proliferation. And, in turn, managing OSS code quality has become critical in ensuring sustainable Cloud growth. On this front, AI modeling has gained popularity in source code understanding tasks, promoted by the ready availability of large open codebases. However, we have been observing certain peculiarities with these black-boxes, motivating a call for their reliability to be verified before offsetting traditional code analysis. In this work, we highlight and organize different reliability issues affecting AI-for-code into three stages of an AI pipeline- data collection, model training, and prediction analysis. We highlight the need for concerted efforts from the research community to ensure credibility, accountability, and traceability for AI-for-code. For each stage, we discuss unique opportunities afforded by the source code and software engineering setting to improve AI reliability.		Suneja, Sahil; Zheng, Yunhui; Zhuang, Yufan; Laredo, Jim A.; Morari, Alessandro	Proceedings of the ACM Symposium on Cloud Computing					ConflictExcluded	Excluded	new_screen			2		2021				
770		ModelGuidance	ArTIC-M&S: An Architecture for Tosca-Based Inter-Cloud Modeling and Simulation	Modeling &amp; Simulation (M&amp;S) techniques have proven their effectiveness for several intended uses, from complex systems analysis to innovative training activities. The emerging M&amp;S-as-a-Service (MSaaS) paradigm deals with the adoption of service-orientation and cloud computing to ease the development and provision of M&amp;S applications. Due to its relevance for the military domain, the NATO MSG-164 is investigating how the MSaaS potential can be exploited to support NATO objectives. In this context, this work proposes ArTIC-MS, a MSaaS architecture that aims at investigating innovative approaches to ease the building of inter-cloud MSaaS applications. ArTIC-MS's main objective is to provide an effective interoperability among M&amp;S services provided by different nations to seamlessly build complex MSaaS applications. Specifically, the work addresses the use of the TOSCA (Topology and Orchestration Specification for Cloud Applications) standard, and also discusses how ArTIC-MS may cope with the orchestration of M&amp;S services available on non-TOSCA infrastructures.		Bocciarelli, Paolo; D'Ambrogio, Andrea; Durak, Umut	Proceedings of the Winter Simulation Conference					ConflictExcluded	Excluded	new_screen			2		2021				
771		ModelGuidance	Making Sense of the Unknown: How Managers Make Cyber Security Decisions	Managers rarely have deep knowledge of cyber security, and yet are expected to make decisions with cyber security implications for software-based systems. We investigate the decision-making conversations of 7 teams of senior managers from the same organisation, as they complete the Decisions&amp;Disruptions (D-D) cyber security exercise. We use Grounded Theory to situate our analysis of their decision-making and help us explore how these complex socio-cognitive interactions occur. We have developed a goal-model (using iStar 2.0) of the teams’ dialogue which illustrates what cyber security goals teams identify and how they operationalise their decisions to reach these goals. We complement this with our model of cyber security reasoning which describes how these teams make their decisions, showing how each team members’ experience, intuition and understanding affects the team’s overall shared reasoning and decision-making. Our findings show how managers with little cyber security expertise are able to use logic and traditional risk management thinking to make cyber security decisions. Despite their lack of cyber security specific training they demonstrate reasoning which closely resembles the decision-making approaches espoused in cyber security specific standards (e.g., NIST/ISO). Our work demonstrates how organisations and practitioners can enrich goal modelling to capture not only what security goals an organisation has (and how they can operationalise them) but also how and why these goals have been identified. Ultimately, non-cyber security experts can develop their cyber security model based on their current context (and update it when new requirements appear or new incidents happen), whilst capturing their reasoning at every stage.		Shreeve, Ben; Gralha, Catarina; Rashid, Awais; Araujo, João; Goulão, Miguel	ACM Trans. Softw. Eng. Methodol.					ConflictExcluded	Excluded	new_screen			2		2022				
772		ModelGuidance	SCG_FBS: A Code Grading Model for Students’ Program in Programming Education	With the development of computer science and technology, programming has become one of the college students’ essential abilities. The increasing number of students brings a big challenge to evaluating students’ programs. For saving human resources in checking code, most works attempt to design software to judge code automatically. However, these works focus on the best way to extract the semantic and syntax features of the correct programs, ignoring that judging for wrong programs is equally important to students. We design a grading model named SCG_FBS (Students’ Code Grading model, based on semantic Features analysis and Black-box testing, with a Select function) to extract semantic features of the code and evaluate codes based on the semantic features and black-box testing. We standardize the source code and translate it into a vector sequence by a pre-trained instruction embedding. Then we extract semantic features by a neural network with the attention method and concatenate semantic features with black-box testing results as the dependence for grading. Furthermore, we propose a select function to pick up significant sentences in each code, which can reduce the length of the input sequence and accelerate training. We gather two data sets from the OJ (Online Judge) platform, which is widely used in colleges to test students’ programs as a black-box. Our SCG_FBS model gets 87.92% accuracy on one data set and gets 84.28% accuracy on another. Meanwhile, our SCG_FBS model reduces 53.7% training time compared with baseline, significantly improving efficiency.		Qin, Yuze; Sun, Guangzhong; Li, Jianfeng; Hu, Tianyu; He, Yu	2021 13th International Conference on Machine Learning and Computing					ConflictExcluded	Excluded	new_screen			2		2021				
773		ModelGuidance	A Generic Model for Software Documentation and Its Application in Embedded Systems Developed with Scrum	Software development life cycle (SDLC) depicts the necessary software development activities while applying methods in different software types. Previous works documented the software activities either by taking into account the development method or the software type. However, the documentation of development activities depends on the choice of the method as well as the software type. This paper presents a generic model of software documentation as well as its case study that applies Scrum in the development of an embedded system. The model provides guidelines for engineers to well choose and structure the development of software documents.		Berhouma, Hajer	Proceedings of the 2020 9th International Conference on Software and Information Engineering (ICSIE)					ConflictIncluded	Excluded	new_screen			2		2021				
774		ModelGuidance	A Framework for Representing Internet of Things Security and Privacy Policies and Detecting Potential Problems	The Internet of Things (IoT), together with cloud computing, is increasingly being utilized to deliver innovative use cases in diverse application domains, such as in its use in the vaccine cold-chain supply and healthcare delivery. Ensuring security and privacy in the IoT is complicated and requires a policy-based approach that captures and validates policies in the early stages of IoT application development. However, IoT security and privacy are often implemented as an afterthought or add-on, and policies are often stated in an informal and ad-hoc manner, leading to policy conflicts, incompleteness, ambiguity, and inconsistencies. This paper proposes a framework for representing IoT security and privacy policies and detecting potential problems in the policies. Our framework adopts an object-oriented and goal-oriented approach and offers (1) A domain-specific ontology for modeling IoT security and privacy policies, (2) a notation for representing cloud security and privacy policies, (3) a set of guidelines and rules for detecting IoT policy errors, and (4) a tool for visually modeling and discovering problems with policies. An application of our framework on a collection of policies shows that it indeed helps to discover policy errors, which otherwise would go undetected or, in many cases, would be detected at runtime, leading to a possible undesirable outcome.		Opara, Anthony; Johng, Haan; Hill, Tom; Chung, Lawrence	Proceedings of the 37th ACM/SIGAPP Symposium on Applied Computing					ConflictExcluded	Excluded	new_screen			2		2022				
775		ModelGuidance	PhyDSL(K): a model-driven framework for generating exergames	In recent years, we have been witnessing a rapid increase of research on exergames-i.e., computer games that require users to move during gameplay as a form of physical activity and rehabilitation. Properly balancing the need to develop an effective exercise activity with the requirements for a smooth interaction with the software system and an engaging game experience is a challenge. Model-driven software engineering enables the fast prototyping of multiple system variants, which can be very useful for exergame development. In this paper, we propose a framework, PhyDSL(K), which eases the development process of personalized and engaging Kinect-based exergames for rehabilitation purposes, providing high-level tools that abstract the technical details of using the Kinect sensor and allows developers to focus on the game design and user experience. The system relies on model-driven software engineering technologies and is made of two main components: (i) an authoring environment relying on a domain-specific language to define the exergame model encapsulating the gameplay that the exergame designer has envisioned and (ii) a code generator that transforms the exergame model into executable code. To validate our approach, we performed a preliminary empirical evaluation addressing development effort and usability of the PhyDSL(K) framework. The results are promising and provide evidence that people with no experience in game development are able to create exergames with different complexity levels in one hour, after a less-than-two-hour training on PhyDSL(K). Also, they consider PhyDSL(K) usable regardless of the exergame complexity.		Baldassarre, MT; Caivano, D; Romano, S; Cagnetta, F; Fernandez-Cervantes, V; Stroulia, E	MULTIMEDIA TOOLS AND APPLICATIONS					ConflictExcluded	Excluded	new_screen			2		2021				
776		ModelGuidance	Single-state state machines in model-driven software engineering: an exploratory study	Context Models, as the main artifact in model-driven engineering, have been extensively used in the area of embedded systems for code generation and verification. One of the most popular behavioral modeling techniques is the state machine. Many state machine modeling guidelines recommend that a state machine should have more than one state in order to be meaningful. However, single-state state machines (SSSMs) violating this recommendation have been used in modeling cases reported in the literature. Objective We aim for understanding the phenomenon of using SSSMs in practice as understanding why developers violate the modeling guidelines is the first step towards improvement of modeling tools and practice. Method To study the phenomenon, we conducted an exploratory study which consists of two complementary studies. The first study investigated the prevalence and role of SSSMs in the domain of embedded systems, as well as the reasons why developers use them and their perceived advantages and disadvantages. We employed the sequential explanatory strategy, including repository mining and interview, to study 1500 state machines from 26 components at ASML, a leading company in manufacturing lithography machines from the semiconductor industry. In the second study, we investigated the evolutionary aspects of SSSMs, exploring when SSSMs are introduced to the systems and how developers modify them by mining the largest state-machine-based component from the company. Results We observe that 25 out of 26 components contain SSSMs. Our interviews suggest that SSSMs are used to interface with the existing code, to deal with tool limitations, to facilitate maintenance and to ease verification. Our study on the evolutionary aspects of SSSMs reveals that the need for SSSMs to deal with tool limitations grew continuously over the years. Moreover, only a minority of SSSMs have been changed between SSSM and multiple-state state machine (MSSM) during their evolution. The most frequent modifications developers made to SSSMs is inserting events with constraints on the execution of the events. Conclusions Based on our results, we provide implications for developers and tool builders. Furthermore, we formulate hypotheses about the effectiveness of SSSMs, the impacts of SSSMs on development, maintenance and verification as well as the evolution of SSSMs.		Yang, N; Cuijpers, P; Schiffelers, R; Lukkien, J; Serebrenik, A	EMPIRICAL SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2021				
777		ModelGuidance	A model-driven approach to reengineering processes in cloud computing	"Context: The reengineering process of large data-intensive legacy software applications (""legacy applications"" for brevity) to cloud platforms involves different interrelated activities. These activities are related to planning, architecture design, re-hosting/lift-shift, code refactoring, and other related ones. In this regard, the cloud computing literature has seen the emergence of different methods with a disparate point of view of the same underlying legacy application reengineering process to cloud platforms. As such, the effective interoperability and tailoring of these methods become problematic due to the lack of integrated and consistent standard models. Objective: We design, implement, and evaluate a novel framework called MLSAC (Migration of Legacy Software Applications to the Cloud). The core aim of MLSAC is to facilitate the sharing and tailoring of reengineering methods for migrating legacy applications to cloud platforms. MLSAC achieves this by using a collection of coherent and empirically tested cloud-specific method fragments from the literature and practice. A metamodel (or meta-method) together with corresponding instantiation guidelines is developed from this collection. The metamodel can also be used to create and maintain bespoke reengineering methods in a given scenario of reengineering to cloud platforms. Approach: MLSAC is underpinned by a metamodeling approach that acts as a representational layer to express reengineering methods. The design and evaluation of MLSAC are informed by the guidelines from the design science research approach. Results: Our framework is an accessible guide of what legacy-to-cloud reengineering methods can look like. The efficacy of the framework is demonstrated by modeling real-world reengineering scenarios and obtaining user feedback. Our findings show that the framework provides a fully-fledged domain-specific, yet platformindependent, foundation for the semi-automated representing, maintaining, sharing, and tailoring reengineering methods. MLSAC contributes to the state of the art of cloud computing and model-driven software engineering literature through (a) providing a collection of mainstream method fragments for incorporate into various scenarios of reengineering processes and (b) enabling a basis for consistent creation, representation, and maintenance of reengineering methods and processes within the cloud computing community."		Fahmideh, M; Grundy, J; Beydoun, G; Zowghi, D; Susilo, W; Mougouei, D	INFORMATION AND SOFTWARE TECHNOLOGY					ConflictExcluded	Excluded	new_screen			2		2022				
778		ModelGuidance	Empowering the Human as the Fitness Function in Search-Based Model-Driven Engineering	In Search-Based Software Engineering, more than 100 works have involved the human in the search process to obtain better results. However, the case where the human completely replaces the fitness function remains neglected. There is a good reason for that; no matter how intelligent the human is, humans cannot assess millions of candidate solutions as heuristics do. In this work, we study the influence of using the Human as the Fitness Function (HaFF) on the quality of the results. To do that, we focus on Search-Based Model-Driven Engineering (SBMDE) because inspecting models should require less human effort than inspecting code thanks to the abstraction of models. Therefore, we analyze the impact of HaFF in a real-world industrial case study of feature location in models. Furthermore, we also consider a reformulation operation (replacement) in the evaluation because a recent work reported that this operation significantly reduces the number of iterations required in comparison to the widespread crossover and mutation operations. The combination of HaFF and the reformulation operation (HaFF_R) improves the results of the best baseline by 0.15% in recall and 14.26% in precision. Analyzing the results, we learned how to better leverage HaFF_R, which increased the improvement with regard to the best baseline to 1.15% in recall and 20.05% in precision. HaFF_R significantly improves precision because humans are immune to the main limitations of the baselines: vocabulary mismatch and tacit knowledge. A focus group confirmed the acceptance of HaFF. These results are relevant for SBMDE because feature location is one of the main activities performed during maintenance and evolution. Our results, and what we learned from them, can also motivate and help other researchers to explore the benefits of HaFF. In fact, we provide a guideline that further discusses how to apply HaFF to other software engineering problems.		Perez, F; Font, J; Arcega, L; Cetina, C	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2022				
779		ModelGuidance	Model-driven Software Engineering for Construction Engineering: Quo Vadis?	Models are an inherent part of the construction industry, which leverages from the steady advancements in information and communication technology. One of these advancements is Building Information Modeling (BIM), which denotes the move from 2D drawings to having semantically rich models of the objects subject to construction. Additionally, the way stakeholders collaborate in construction projects and their organization is revisited. This is commonly denoted as Integrated Project Delivery (IPD). Both BIM and IPD originate from the basic principles of Lean Construction, the vision to minimize waste, increase value, and continuous improvement. The application of Model-driven Software Engineering (MDSE) to BIM is a natural choice. Although several approaches utilizing MDSE for BIM have been proposed, so far no structured overview of the current state of the art has been conducted. Such an overview is vitally needed, because the existing literature is fragmented among multiple research areas. Consequently, in this paper, we present a systematic literature review on the application of MDSE to BIM, IPD and Lean Construction resulting in a systematically derived taxonomy, which we used to classify 97 papers published between 2008 and 2018. Based on the taxonomy, we provide an analysis of the classified research showing (a) where the discourse on model-driven construction engineering currently is, (b) the state of the art of model-driven techniques in construction engineering and (c) open research challenges.		Gotz, S; Fehn, A; Rohde, F; Kuhn, T	JOURNAL OF OBJECT TECHNOLOGY					ConflictExcluded	Excluded	new_screen			2		2020				
780		ModelGuidance	Clone detection for business process models	Models are key in software engineering, especially with the rise of model-driven software engineering. One such use of modeling is in business process modeling, where models are used to represent processes in enterprises. As the number of these process models grow in repositories, it leads to an increasing management and maintenance cost. Clone detection is a means that may provide various benefits such as repository management, data prepossessing, filtering, refactoring, and process family detection. In model clone detection, highly similar model fragments are mined from larger model repositories. In this study, we have extended SAMOS (Statistical Analysis of Models) framework for clone detection of business process models. The framework has been developed to support different types of analytics on models, including clone detection. We present the underlying techniques utilized in the framework, as well as our approach in extending the framework. We perform three experimental evaluations to demonstrate the effectiveness of our approach. We first compare our tool against the Apromore toolset for a pairwise model similarity using a synthetic model mutation dataset. As indicated by the results, SAMOS seems to outperform Apromore in the coverage of the metrics in pairwise similarity of models. Later, we do a comparative analysis of the tools on model clone detection using a dataset derived from the SAP Reference Model Collection. In this case, the results show a better precision for Apromore, while a higher recall measure for SAMOS. Finally, we show the additional capabilities of our approach for different model scoping styles through another set of experimental evaluations.		Nikoo, MS; Babur, O; van den Brand, M	PEERJ COMPUTER SCIENCE					ConflictExcluded	Excluded	new_screen			2		2022				
781		ModelGuidance	checsdm: A Method for Ensuring Consistency in Heterogeneous Safety-Critical System Design	"Safety-critical systems are highly heterogeneous, combining different characteristics. Effectively designing such systems requires a complex modelling approach that deals with diverse components (e.g., mechanical, electronic, software)-each having its own underlying domain theories and vocabularies-as well as with various aspects of the same component (e.g., function, structure, behaviour). Furthermore, the regulated nature of such systems prescribes the objectives for their design verification and validation. This paper proposes checsdm, a systematic approach, based on Model-Driven Engineering (MDE), for assisting engineering teams in ensuring consistency of heterogeneous design of safety-critical systems. The approach is developed as a generic methodology and a tool framework, that can be applied to various design scenarios involving different modelling languages and different design guidelines. The methodology comprises an iterative three-phased process. The first phase, elicitation, aims at specifying requirements of the heterogeneous design scenario. Using the proposed tool framework, the second phase, codification, consists in building a particular tool set that supports the heterogeneous design scenario and helps engineers in flagging consistency errors for review and eventual correction. The third phase, operation, applies the tool set to actual system designs. Empirical evaluation of the work is presented through two executions of the checsdm approach for the specific cases of a design scenario involving a mix of UML, Simulink and Stateflow, and a design scenario involving a mix of AADL, Simulink and Stateflow. The operation phase of the first case was performed over three avionics systems and the identified inconsistencies in the design models of these systems were compared to the results of a fully manual verification carried out by professional engineers. The evaluation also includes an assessment workshop with industrial practitioners to examine their perceptions about the approach. The empirical validation indicates the feasibility and ""cost-effectiveness"" of the approach. Inconsistencies were identified in the three avionics systems with a greater recall rate over the manual verification. The assessment workshop shows the practitioners found the approach easy to understand and gave an overall likelihood of adoption within the context of their work."		Paz, A; El Boussaidi, G; Mili, H	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					ConflictIncluded	Excluded	new_screen			2		2021				
782		ModelGuidance	Component-Oriented Software Engineering Model for Heterogeneous Internet of Things Systems with Connectors using Machine Learning	Component reuse has been proven both theoretically and empirically to increase software quality and productivity with an economically cost-effective option. This necessitates the use of a graphical editor for project modeling using component-based architecture and development. To aid in the creation of component-oriented software, a graphical editor was proposed for practice. Both machine learning and software engineering employ models based on components architecture. Aside from these smart characteristics, AI models may be able to help with prediction and decision-making. Communication between IoT system components must adhere to a set of guidelines and protocols for effective and predictive perspectives. Components must be able to communicate with one another in the deployed system. The heterogeneity issue in the Internet of Things arises when different IoT devices communicate using distinct sets of rules, features, and contexts. Components that can be reused are found in these or other systems or commercial off-the-shelf. Component-oriented systems rely on connectors to link up their reusable parts with other entities, components, or IoT devices through the use of related interfaces. COSE development tools provide application-level solutions for connectors and component-based development of systems. Linking and hookup ports on connectors are designed to work with the attached component and other interfaces. The communication protocols' packets are identified and organized by the connectors with their installed applications. A simulation feature can be added to the tools in order to show that the idea can be implemented in effective and efficient ways. Connectors allow moving data between different parts of computing systems. ML -based training and prediction have been shown in this work for performance analysis.		Ahamad, S	INTERNATIONAL JOURNAL OF COMPUTER SCIENCE AND NETWORK SECURITY					ConflictExcluded	Excluded	new_screen			2		2022				
783		ModelGuidance	Topic modeling for feature location in software models: Studying both code generation and interpreted models	Context: In the last 20 years, the research community has increased its attention to the use of topic modeling for software maintenance and evolution tasks in code. Topic modeling is a popular and promising information retrieval technique that represents topics by word probabilities. Latent Dirichlet Allocation (LDA) is one of the most popular topic modeling methods. However, the use of topic modeling in model-driven software development has been largely neglected. Since software models have less noise (implementation details) than software code, software models might be well-suited for topic modeling. Objective: This paper presents our LDA-guided evolutionary approach for feature location in software models. Specifically, we consider two types of software models: models for code generation and interpreted model. Method: We evaluate our approach considering two real-world industrial case studies: code-generation models for train control software, and interpreted models for a commercial video game. To study the impact on the results, we compare our approach for feature location in models against random search and a baseline based on Latent Semantic Indexing, which is a popular information retrieval technique. In addition, we perform a statistical analysis of the results to show that this impact is significant. We also discuss the results in terms of the following aspects: data sparsity, implementation complexity, calibration, and stability. Results: Our approach significantly outperforms the baseline in terms of recall, precision and F-measure when it comes to interpreted models. This is not the case for code-generation models. Conclusions: Our analysis of the results uncovers a recommendation towards results improvement. We also show that calibration approaches can be transferred from code to models. The findings of our work with regards to the compensation of instability have the potential to help not only feature location in models, but also in code.		Perez, F; Lapena, R; Marcen, AC; Cetina, C	INFORMATION AND SOFTWARE TECHNOLOGY					ConflictExcluded	Excluded	new_screen			2		2021				
784		ModelGuidance	Facet-oriented Modelling	Models are the central assets in model-driven engineering (MDE), as they are actively used in all phases of software development. Models are built using metamodel-based languages, and so objects in models are typed by a metamodel class. This typing is static, established at creation time, and cannot be changed later. Therefore, objects in MDE are closed and fixed with respect to the class they conform to, the fields they have, and the well-formedness constraints they must comply with. This hampers many MDE activities, like the reuse of model-related artefacts such as transformations, the opportunistic or dynamic combination of metamodels, or the dynamic reconfiguration of models. To alleviate this rigidity, we propose making model objects open so that they can acquire or drop so-called facets. These contribute with a type, fields and constraints to the objects holding them. Facets are defined by regular metamodels, hence being a lightweight extension of standard metamodelling. Facet metamodels may declare usage interfaces, as well as laws that govern the assignment of facets to objects (or classes). This article describes our proposal, reporting on a theory, analysis techniques, and an implementation. The benefits of the approach are validated on the basis of five case studies dealing with annotation models, transformation reuse, multi-view modelling, multi-level modelling, and language product lines.		De Lara, J; Guerra, E; Kienzle, J	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					ConflictIncluded	Excluded	new_screen			2		2021				
785		ModelGuidance	Industry-Academia research collaboration in software engineering: The Certus model	Context: Research collaborations between software engineering industry and academia can provide significant benefits to both sides, including improved innovation capacity for industry, and real-world environment for motivating and validating research ideas. However, building scalable and effective research collaborations in software engineering is known to be challenging. While such challenges can be varied and many, in this paper we focus on the challenges of achieving participative knowledge creation supported by active dialog between industry and academia and continuous commitment to joint problem solving. Objective: This paper aims to understand what are the elements of a successful industry-academia collaboration that enable the culture of participative knowledge creation. Method: We conducted participant observation collecting qualitative data spanning 8 years of collaborative research between a software engineering research group on software V&V and the Norwegian IT sector. The collected data was analyzed and synthesized into a practical collaboration model, named the Certus Model. Results: The model is structured in seven phases, describing activities from setting up research projects to the exploitation of research results. As such, the Certus model advances other collaborations models from literature by delineating different phases covering the complete life cycle of participative research knowledge creation. Conclusion: The Certus model describes the elements of a research collaboration process between researchers and practitioners in software engineering, grounded on the principles of research knowledge co-creation and continuous commitment to joint problem solving. The model can be applied and tested in other contexts where it may be adapted to the local context through experimentation.		Marijan, D; Gotlieb, A	INFORMATION AND SOFTWARE TECHNOLOGY					ConflictExcluded	Excluded	new_screen			2		2021				
786		ModelGuidance	Development of computational models of emotions: A software engineering perspective	Computational Models of Emotions (CMEs) are software systems designed to explain the phenomenon of emotions. The mechanisms implemented in this type of computational models are based on human emotion theories reported in the literature and designed to provide intelligent agents with affective capabilities and improve human-computer interaction. However, despite the growing interest in this type of models, the development process of CMEs does not seem to follow formal software methodologies. In this paper, we present an analysis of CMEs from a software engineering perspective. We aim to identify what elements of software engineering are used in the development process of CMEs and to demonstrate how some software engineering techniques may support and improve their development process. We discuss a series of challenges to be addressed in order to take advantage of software engineering techniques: (1) definition of guidelines to help decide which emotion theories should be implemented computationally, (2) homogenization of terms about human emotions, their components, phases, and cycles implemented in CMEs, (3) design of CMEs whose components can be reusable, (4) definition of standard criteria for comparative analysis between CMEs, (5) identification of software engineering principles, concepts, and design practices useful in the construction of CMEs, and (6) definition of standard frameworks to validate CMEs. (C) 2019 Elsevier B.V. All rights reserved.		Osuna, E; Rodriguez, LF; Gutierrez-Garcia, JO; Castro, LA	COGNITIVE SYSTEMS RESEARCH					ConflictExcluded	Excluded	new_screen			2		2020				
787		ModelGuidance	Insights on the relationship between decision-making style and personality in software engineering	Context: Software development involves many activities, and decision making is an essential one. Various factors can impact a decision-making process, and by understanding such factors, one can improve the process. Since people are the ones making decisions, some human-related aspects are amongst those influencing factors. One such aspect is the decision maker's personality. Objective: This research investigates the relationship between decision-making style and personality within the context of software project development. Method: We conducted a survey in a population of Brazilian software engineers to gather data on their personality and decision-making style. Results: Data from 63 participants was gathered and resulted in the identification of seven statistically significant correlations between decision-making style and personality (personality factor and personality facets). Furthermore, we built a regression model in which decision-making style (DMS) was the response variable and personality factors the independent variables. The backward elimination procedure selected only agreeableness to explain 4.2% of DMS variation. The model accuracy was evaluated and deemed good enough. Regarding the moderation effect of demographic variables (age, educational level, experience, and role) on the relationship between DMS and Agreeableness, the analysis showed that only software engineers' role has such effect. Conclusion: This paper contributes toward understanding the relationship between DMS and personality. Results show that the personality variable agreeableness can explain the variation in decision-making style. Furthermore, someone's role in a software development project can impact the strength of the relationship between DMS and agreeableness.		Mendes, F; Mendes, E; Salleh, N; Oivo, M	INFORMATION AND SOFTWARE TECHNOLOGY					ConflictExcluded	Excluded	new_screen			2		2021				
788		ModelGuidance	Integrated framework for incorporating sustainability design in software engineering life-cycle: An empirical study	Context: Owing to the critical role of software-intensive systems in society, software engineers have the accountability to consider sustainability as a goal while structuring a software system. However, there are no practical guidelines providing a tangible decomposition of the sustainability aspect. Moreover, there are limited quantifiable methods to support sustainable design and analysis. Objectives: The purpose of this study is to help software practitioners to take sustainability into account by providing systematic guidelines for the software engineering process. We propose a framework that presents a meta model to decompose sustainability requirements and an assessment approach to evaluate sustainability achievements. Method: This work presents an integrated framework that combines a goal-based approach, scenario-based approach, and feature modeling to gather sustainability related requirements and corresponding features. For sustainability assessment, software analysis and machine learning techniques are utilized to analyze software products based on sustainability metrics and criteria. Results and Conclusions: The empirical study conducted with participants from academia and industry revealed that the proposed framework improves participant's ability to consider sustainability aspect in their software engineering tasks through focusing on requirements, design, and evaluation. With the provided sustainability meta-model, the participants could extract more stakeholders, requirements, and features in shorter time. Moreover, the empirical study result also demonstrated that this study is capable to indicate specific scenarios that should be redesigned to improve the sustainability achievements level.		Saputri, TRD; Lee, SW	INFORMATION AND SOFTWARE TECHNOLOGY					ConflictIncluded	Excluded	new_screen			2		2021				
789		ModelGuidance	Process Model Metrics for Quality Assessment of Computer-Interpretable Guidelines in PROforma	Background: Clinical Practice Guidelines (CPGs) include recommendations to optimize patient care and thus have the potential to improve the quality and outcomes of healthcare. To achieve this, CPG recommendations are usually formalized in terms of Computer-Interpretable Guideline (CIG) languages. However, a clear understanding of CIG models may prove complicated, due to the inherent complexity of CPGs and the specificities of CIG languages. Drawing a parallel with the Business Process Management (BPM) and the Software Engineering fields, understandability and modifiability of CIG models can be regarded as primary quality attributes, in order to facilitate their validation, as well as their adaptation to accommodate evolving clinical evidence, by modelers (typically teams made up of clinical and IT experts). This constitutes a novel approach in this area of CIG development, where understandability and modifiability aspects have not been considered to date. Objective: In this paper, we define a comprehensive set of process model metrics for CIGs described in the PROforma CIG language, with the main objective of providing tools for quality assessment of CIG models in this language. Methods: To this end, we first reinterpret a set of metrics from the BPM field in terms of PROforma and then we define new metrics to capture the singularities of PROforma models. Additionally, we report on a set of experiments to assess the relationship between the structural and logical properties of CIG models, as measured by the proposed metrics, and their understandability and modifiability from the point of view of modelers, both clinicians and IT staff. For the analysis of the experiment results, we perform statistical analysis based on a generalized linear mixed model with binary logistic regression. Results: Our contribution includes the definition of a comprehensive set of metrics that allow measuring model quality aspects of PROforma CIG models, the implementation of tools and algorithms to assess the metrics for PROforma models, and the empirical validation of the proposed metrics as quality indicators. Conclusions: In light of the results, we conclude that the proposed metrics can be of great value, as they capture the PROforma-specific features in addition to those inspired by the general-purpose BPM metrics in the literature. In particular, the newly defined metrics for PROforma prevail as statistically significant when the whole CIG model is considered, which means that they better characterize its complexity. Consequently, the proposed metrics can be used as quality indicators of the understandability, and thereby maintainability, of PROforma CIGs.		Torres-Sospedra, J; Martinez-Salvador, B; Sancho, CC; Marcos, M	APPLIED SCIENCES-BASEL					ConflictExcluded	Excluded	new_screen			2		2021				
790		ModelGuidance	Industry-Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns	Increasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry-academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research-practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry-academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.		Marijan, D; Sen, S	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					ConflictExcluded	Excluded	new_screen			2		2022				
791		ModelGuidance	Application of Constructive Modeling and Process Mining Approaches to the Study of Source Code Development in Software Engineering Courses	We present an approach of constructing a source code history for a modern code review. Practically, it is supposed to be used in programming training, especially within initial stages. The developed constructor uses constructive-synthesizing modeling tools to classify a source code history by fine-grained changes and to construct an event log file aimed to provide information on students' coding process. Current research applies Process Mining techniques to the software engineering domain to identify software engineering skills. By better understanding of the way students design programs, we will help novices learn programming. This research provides an innovative method of using code and development process review in teaching programming skills and is aimed to encourage using code review and monitoring coding practice in educational purposes. The standard method of evaluation takes into consideration only a final result, which doesn't meet modern requirements of teaching programming.		Shynkarenko, V; Zhevaho, O	JOURNAL OF COMMUNICATIONS SOFTWARE AND SYSTEMS					ConflictExcluded	Excluded	new_screen			2		2021				
792		ModelGuidance	Modeling ecosystems of reference frameworks for assurance: a case on privacy impact assessment regulation and guidelines	To assure certain critical quality properties (e.g., safety, security, or privacy), supervisory authorities and industrial associations provide reference frameworks such as standards or guidelines that in some cases are enforced (e.g., regulations). Given the pace at which both technical advancements and risks appear, there is an increase in the number of reference frameworks. As several frameworks might apply for same systems, certain overlaps appear (e.g., regulations for different countries where the system will operate, or generic standards in conjunction with more concrete standards for a given industrial sector or system type). We propose the use of modelling for alleviating the complexity of these reference frameworks ecosystems, and we provide a tool-supported method to create them for the benefit of different stakeholders. The case study is based on privacy data protection, and more concretely on privacy impact assessment processes. The European GDPR regulates the movement and processing of personal data, and, contrary to available software engineering privacy guidelines, articles in legal texts are usually difficult to translate to the underlying processes, artefacts and roles that they refer to. To facilitate the mutual comprehension of legal experts and engineers, in this work we investigate how mappings can be created between these two domains of expertise. Notably, we rely on modelling as a central point. We modelled the legal requirements of the GDPR on data protection impact assessments, and then, we selected the ISO/IEC 29134, a mainstream engineering guideline for privacy impact assessment, and, taking a concrete sector as example, the EU Smart Grid Data Protection Impact Assessment template. The OpenCert tool was used for providing technical support to both the modelling and the creation of the mapping models in a systematic way. We provide a qualitative evaluation from legal experts and privacy engineering practitioners to report on the benefits and limitations of this approach.		Ruiz, A; Martin, YS; Martinez, J; Quintans, J; Mockly, G; Gyrard, A; Crepax, T	SOFTWARE AND SYSTEMS MODELING					ConflictIncluded	Excluded	new_screen			2						
793		ModelGuidance	Readiness model for DevOps implementation in software organizations	DevOps is a new software engineering paradigm adopted by various software organizations to develop the quality software within time and budget. The implementation of DevOps practices is critical, and there are no guidelines to assess and improve the DevOps activities in software organizations. Hence, there is a need to develop a readiness model for DevOps (RMDevOps) with an aim to assist the practitioners for implementation of DevOps practices in software firms. To achieve the study objective, we conducted a systematic literature review (SLR) study to identify the critical challenges and associated best practices of DevOps. A total of 18 challenges and 73 best practices were identified from the 69 primary studies. The identified challenges and best practices were further evaluated by conducting a survey with industry practitioners. The RMDevOps was developed based on other well-established models in software engineering domain, for example, software process improvement readiness model (SPIRM) and software outsourcing vendor readiness model (SOVRM). Finally, case studies were conducted with three different organizations with an aim to validate the developed model. The results show that the RMDevOps is effective to assess and improve the DevOps practices in software organizations.		Rafi, S; Yu, W; Akbar, MA; Mahmood, S; Alsanad, A; Gumaei, A	JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS					ConflictExcluded	Excluded	new_screen			2		2021				
794		ModelGuidance	Dealing with software complexity in individual-based models	Individual-based models are doubly complex: as well as representing complex ecological systems, the software that implements them is complex in itself. Both forms of complexity must be managed to create reliable models. However, the ecological modelling literature to date has focussed almost exclusively on the biological complexity. Here, we discuss methods for containing software complexity. Strategies for containing complexity include avoiding, subdividing, documenting and reviewing it. Computer science has long-established techniques for all of these strategies. We present some of these techniques and set them in the context of IBM development, giving examples from published models. Techniques for avoiding software complexity are following best practices for coding style, choosing suitable programming languages and file formats and setting up an automated workflow. Complex software systems can be made more tractable by encapsulating individual subsystems. Good documentation needs to take into account the perspectives of scientists, users and developers. Code reviews are an effective way to check for errors, and can be used together with manual or automated unit and integration tests. Ecological modellers can learn from computer scientists how to deal with complex software systems. Many techniques are readily available, but must be disseminated among modellers. There is a need for further work to adapt software development techniques to the requirements of academic research groups and individual-based modelling.		Vedder, D; Ankenbrand, M; Cabral, JS	METHODS IN ECOLOGY AND EVOLUTION					ConflictIncluded	Excluded	new_screen			2		2021				
795		ModelGuidance	A Data-Driven Two-Stage Prediction Model for Train Primary-Delay Recovery Time	Accurate prediction of train delay recovery is critical for railway incident management and providing passengers with accurate journey time. In this paper, a two-stage prediction model is proposed to predict the recovery time of train primary-delay based on the real records from High-Speed Railway (HSR). In Stage 1, two models are built to study the influence of feature space and model framework on the prediction accuracy of buffer time in each section or station. It is found that explicitly inputting the attribute features of stations and sections to the model, instead of implicit simulation, will improve the prediction accuracy effectively. For validation purpose, the proposed model has been compared with several alternative models, namely, Logistic Regression (LR), Artificial Neutral Network (ANN), Support Vector Machine (SVM) and Gradient Boosting Tree (GBT). The results show that its remarkable performance is better than other schemes. Specifically, when the error is extended to 3min, the proposed model can achieve up to the accuracy of 94.63%. It proves that our method has high value in practical engineering application. Considering the delay propagation of trains is a complex process, our future study will focus on building delay propagation knowledge base and dispatcher experience knowledge base.		Gao, BW; Ou, DX; Dong, DC; Wu, YS	INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2020				
796		ModelGuidance	A user-centered behavioral software development model	The concept of usability, which affects the quality and cost of the software projects, has become essential in recent years. There is a need to integrate usability testing activities and techniques into the development processes; however, integration is difficult. Therefore, this study proposes user-centered behavioral (UCB) software development model, which aims to bridge the gap between human-computer interaction (HCI) and software engineering (SE) disciplines. A triangulation methodology of mixed methods is used to understand the current situation in software development companies in terms of usability and user-centered software development by survey and interviews. Their results are then used to inform the development of the proposed model. The UCB software development model proposes a process in which several tools and techniques from SE and HCI are integrated to facilitate the production of highly usable software. In essence, the model proposes an iterative process that combines behavior-driven development (BDD)-an agile approach that enables a better understanding and analysis of the requirements-with the style guides, usability tests, heuristic evaluation, and Wizard of Oz techniques of HCI. The model was evaluated in a pilot project and then is improved based on feedback gathered. Participants' feedback supported the effectiveness of the proposed model.		Guncan, D; Durdu, PO	JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS					ConflictIncluded	Excluded	new_screen			2		2021				
797		ModelGuidance	Business Model Flexibility and Software-intensive Companies: Opportunities and Challenges	Background: Software plays an essential role in enabling digital transformation via digital services added to traditional products or fully digital business offerings. This calls for a better understanding of the relationships between the dynamic nature of business models and their realization using software engineering practices. Aim: In this paper, we synthesize the implications of digitalization on business model flexibility for software-intensive companies based on an extensive literature survey and a longitudinal case study at Ericsson AB. We analyze how software-intensive companies can better synchronize business model changes with software development processes and organizations. Method: We synthesize six propositions based on the literature review and extensive industrial experience with a large software-intensive company working in the telecommunication domain. Conclusions: Our work is designed to facilitate the cross-disciplinary analysis of business model dynamics and business model flexibility by linking value, transaction, and organizational learning to business model change. We believe that software engineering tools and methods can play a crucial role in enabling more automated synchronization between technology and business model changes.		Wilson, M; Wnuk, K; Bengtsson, L	E-INFORMATICA SOFTWARE ENGINEERING JOURNAL					ConflictExcluded	Excluded	new_screen			2		2020				
798		ModelGuidance	Low-Precision Hardware Architectures Meet Recommendation Model Inference at Scale	Tremendous success of machine learning (ML) and the unabated growth in model complexity motivated many ML-specific designs in hardware architectures to speed up the model inference. While these architectures are diverse, highly optimized low-precision arithmetic is a component shared by most. Nevertheless, recommender systems important to Facebook's personalization services are demanding and complex: They must serve billions of users per month responsively with low latency while maintaining high prediction accuracy. Do these low-precision architectures work well with our production recommendation systems? They do. But not without significant effort. In this article, we share our search strategies to adapt reference recommendation models to low-precision hardware, our optimization of low-precision compute kernels, and the tool chain to maintain our models' accuracy throughout their lifespan. We believe our lessons from the trenches can promote better codesign between hardware architecture and software engineering, and advance the state of the art of ML in industry.		Deng, ZX; Park, J; Tang, PTP; Liu, HX; Yang, J; Yuen, H; Huang, JY; Khudia, D; Wei, XH; Wen, EL; Choudhary, D; Krishnamoorthi, R; Wu, CJ; Nadathur, S; Kim, C; Naumov, M; Naghshineh, S; Smelyanskiy, M	IEEE MICRO					ConflictExcluded	Excluded	new_screen			2		2021				
799		ModelGuidance	Multi-level modeling with LML A Contribution to the Multi-Level Process Challenge	This paper presents a solution to the MULTI Process Challenge which was first posed to the participants of the MULTI workshop at the MODELS conference in 2019 and subsequently adapted for this special issue of the EMISA Journal. The structure of the paper therefore follows the guidelines laid out in the Challenge description. The models are represented in the Level-agnostic Modeling Language LML and the DOCL constraint language using the Melanee deep modeling tool. After first outlining the case study and documenting which aspects are supported in the LML solution, the paper presents multi-level models for both the insurance and the software engineering domains. This is followed by a discussion of the strengths and weaknesses of the approach. The presented model covers all mandatory and optional aspects of the Challenge case study.		Lange, A; Atkinson, C	ENTERPRISE MODELLING AND INFORMATION SYSTEMS ARCHITECTURES-AN INTERNATIONAL JOURNAL					ConflictExcluded	Excluded	new_screen			2		2022				
800		ModelGuidance	End-user modeling of quality for web components	With years of frantic development, when release fast and release often was the mandatory rule for web technologies and services, the open source paradigm and online distribution repositories have imposed de facto standards for quality assessment in fast-paced innovation processes. Nowadays, however, in pursuit of productivity, security, and user satisfaction, the industry is beginning, through the introduction of new standards such as ECMAScript 6 or web components, to consider software engineering mandates for web technologies. This article reports a quality model aligned with international standard ISO/IEC 25010, covering web components technology, which ultimately aims to improve adoption by the software engineering industry, traditionally wary of agile Internet practices, the open source paradigm, and public repositories. Our research also presents an experimentation platform on which end users have validated the quality properties, highlighting the implicit connection with the perceived quality. The key result of our research convinces us that user ratings are suitable as a testing mechanism for product quality and quality-in-use metrics in order to define an absolute scale of comparison for web component quality.		Lizcano, D; Martinez-Ortiz, AL; Grignard, A; Lopez, G	JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS					ConflictExcluded	Excluded	new_screen			2						
801		ModelGuidance	An Empirical Study on Software Defect Prediction Using CodeBERT Model	Deep learning-based software defect prediction has been popular these days. Recently, the publishing of the CodeBERT model has made it possible to perform many software engineering tasks. We propose various CodeBERT models targeting software defect prediction, including CodeBERT-NT, CodeBERT-PS, CodeBERT-PK, and CodeBERT-PT. We perform empirical studies using such models in cross-version and cross-project software defect prediction to investigate if using a neural language model like CodeBERT could improve prediction performance. We also investigate the effects of different prediction patterns in software defect prediction using CodeBERT models. The empirical results are further discussed.		Pan, C; Lu, MY; Xu, B	APPLIED SCIENCES-BASEL					ConflictExcluded	Excluded	new_screen			2		2021				
802		ModelGuidance	A Model to Enable the Reuse of Metadata-Based Frameworks in Adaptive Object Model Architectures	The Adaptive Object Model (AOM) is an architectural style in which domain entity types are represented as instances that can be changed at runtime. It can be used to achieve higher flexibility in domain classes. Due to AOM entities having a distinct structure, they are not compatible with most popular frameworks, especially those that use reflection and code annotations. To solve such limitations, this study aims to propose a model that enables the reuse of frameworks designed for classic object-oriented domain models in an AOM application. The proposed model uses dynamically-generated adapters for AOM entities that encapsulate them in a class with the format expected by the frameworks. A reference implementation was developed in the Esfinge AOM RoleMapper framework to evaluate the viability of the proposed model. Initially, to evaluate the solution feasibility, a case study was carried out using the Hibernate framework. Further, an experiment was conducted to assess how the participants perceived the framework functionality reuse through the proposed model. The feasibility study revealed that the solution could be applied in a complex setting for the chosen object-relational mapping frame. It raised some difficulties that can be addressed in future studies. In the experiment, the development time did not present a significant difference compared to the competing approach. Despite the considerable learning curve, most participants considered that the proposed approach has more advantages than the alternative. Based on the evaluations, we can conclude that the proposed model can be successfully employed to use AOM entities with frameworks that were not designed for AOM applications. The possibility of reusing existing frameworks can reduce the effort required to adopt an AOM architecture and, consequently, be a facilitator in implementing more flexible and adaptive approaches.		Guerra, E; Dias, AD; Veras, LGDO; Aguiar, A; Choma, J; Da Silva, TS	IEEE ACCESS					ConflictExcluded	Excluded	new_screen			2		2021				
803		ModelGuidance	Identifying Difficulties of Software Modeling Through Class Diagrams: A Long-Term Comparative Analysis	Software modeling is a creative activity in which software components and their relationships are identified based on customer requirements. Based on the literature, object-oriented software modeling is based on four fundamental pillars which are abstraction, encapsulation, decomposition, and inheritance. However, despite the existence of guidelines and recommendations for implementing the object-oriented approach, novice software designers do not make good design decisions, leading to inefficient designs that cannot be modifiable, understandable, or user-friendly distribute at the development level. The literature reveals that the most common difficulties faced by software designers is a lack of understanding and confusion of concepts related to the object-oriented approach, as well as difficulties in creating Unified Modeling Language diagrams, especially class diagrams. The work presented in this article uses a qualitative and quantitative approach to determine, in a group of university students, what are the most recurrent difficulties and their persistence during the time. The qualitative case study is the method that allowed to generate the documents: diagnostic and evaluation tests. Additionally, a thematic analysis was used to identify, analyze and report patterns within the data. In order to know the occurrences of the problems in the case study, as part of our quantitative approach, a comparative study was applied to compare the results obtained between the diagnostic and evaluation tests and thus establish the similarities and differences among the cases observed, through the hierarchical clustering technique. The findings of this study show us 16 difficulties identified after the qualitative analysis, while the quantitative analysis shows us the number of occurrences and their persistence over time. The difficulties reported in both analyzes focus on these three difficulties: a) Definition of attributes that could be a class, b) Classes with inadequate or insufficient behavior and, c) Incorrect use of multiplicity between classes. Each of these difficulties is analyzed in depth in this study.		Flores, P; Alvarez, M; Torres, J	IEEE ACCESS					ConflictExcluded	Excluded	new_screen			2		2022				
804		ModelGuidance	ProXray: Protocol Model Learning and Guided Firmware Analysis	The number of Internet of Things (IoT) has reached 7 billion globally in early 2018 and are nearly ubiquitous in daily life. Knowing whether or not these devices are safe and secure to use is becoming critical. IoT devices usually implement communication protocols such as USB and Bluetooth within firmware to allow a wide range of functionality. Thus analyzing firmware using domain knowledge from these protocols is vital to understand device behavior, detect implementation bugs, and identify malicious components. Unfortunately, due to the complexity of these protocols, there is usually no formal specification available that can help automate the firmware analysis; as a result significant manual effort is currently required to study these protocols and to reverse engineer the device firmware. In this paper, we propose a new firmware analysis methodology using symbolic execution called ProXray, which can learn a protocol model from known firmware, and apply the model to recognize the protocol relevant fields and detect functionality within unknown firmware automatically. After the training phase, ProXray can fully automate the firmware analysis process while supporting user's queries in the form of protocol relevant constraints. We have applied ProXray to the USB and the Bluetooth protocols by learning protocol constraint models from firmware that implement these protocols. We are then able to map protocol fields and identify USB functionality automatically within all 6 unknown USB firmware while achieving more than an order of magnitude speedup in reaching protocol relevant targets in unknown Bluetooth firmware. Our model achieved high coverage of the USB and Bluetooth specifications for several important protocol fields. ProXray provides a new method to apply domain knowledge to firmware analysis automatically.		Fowze, F; Tian, D; Hernandez, G; Butler, K; Yavuz, T	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2021				
805		ModelGuidance	Traceability Link Recovery between Requirements and Models using an Evolutionary Algorithm Guided by a Learning to Rank Algorithm: Train control and management case	Traceability Link Recovery (TLR) has been a topic of interest for many years within the software engineering community. In recent years, TLR has been attracting more attention, becoming the subject of both fundamental and applied research. However, there still exists a large gap between the actual needs of industry on one hand and the solutions published through academic research on the other. In this work, we propose a novel approach, named Evolutionary Learning to Rank for Traceability Link Recovery (TLR-ELtoR). TLR-ELtoR recovers traceability links between a requirement and a model through the combination of evolutionary computation and machine learning techniques, generating as a result a ranking of model fragments that can realize the requirement. TLR-ELtoR was evaluated in a real-world case study in the railway domain, comparing its outcomes with five TLR approaches (Information Retrieval, Linguistic Rule-based, Feedforward Neural Network, Recurrent Neural Network, and Learning to Rank). The results show that TLR-ELtoR achieved the best results for most performance indicators, providing a mean precision value of 59.91%, a recall value of 78.95%, a combined F-measure of 62.50%, and a MCC value of 0.64. The statistical analysis of the results assesses the magnitude of the improvement, and the discussion presents why TLR-ELtoR achieves better results than the baselines. (C) 2020 Elsevier Inc. All rights reserved.		Marcen, AC; Lapena, R; Pastor, O; Cetina, C	JOURNAL OF SYSTEMS AND SOFTWARE					ConflictExcluded	Excluded	new_screen			2		2020				
806		ModelGuidance	Responsive inclusive design (RiD): a new model for inclusive software development	The design and development of technological solutions based on software for all types of people, including people with disabilities, is still a pending issue in most software application development projects today. Situations like the 2020 pandemic drastically reflect how people with disabilities tend to be left outside the application design and construction guidelines. There are multiple initiatives and previous works that advocate user involvement from the beginning of the project; however, in this work, we go a step further by presenting a model for designing and constructing software applications (RiD-Responsive inclusive Design) defined for inclusive software. RiD extends the involvement of the user with disabilities to the entire software life cycle, in different roles, and taking into account the changing nature of the user profile in the evolution of the product. This article also presents the EDICO case study, an accessible and inclusive scientific editor for the Spanish National Organization of the Blind (ONCE), which was successfully implemented applying the RiD principles.		Martinez, CM; Piorno, JR; Otero, JJE; Mata-Garcia, MG	UNIVERSAL ACCESS IN THE INFORMATION SOCIETY					ConflictIncluded	Excluded	new_screen			2						
807		ModelGuidance	Changeset-Based Topic Modeling of Software Repositories	The standard approach to applying text retrieval models to code repositories is to train models on documents representing program elements. However, code changes lead to model obsolescence and to the need to retrain the model from the latest snapshot. To address this, we previously introduced an approach that trains a model on documents representing changesets from a repository and demonstrated its feasibility for feature location. In this paper, we expand our work by investigating: a second task (developer identification), the effects of including different changeset parts in the model, the repository characteristics that affect the accuracy of our approach, and the effects of the time invariance assumption on evaluation results. Our results demonstrate that our approach is as accurate as the standard approach for projects with most changes localized to a subset of the code, but less accurate when changes are highly distributed throughout the code. Moreover, our results demonstrate that context and messages are key to the accuracy of changeset-based models and that the time invariance assumption has a statistically significant effect on evaluation results, providing overly-optimistic results. Our findings indicate that our approach is a suitable alternative to the standard approach, providing comparable accuracy while eliminating retraining costs.		Corley, CS; Damevski, K; Kraft, NA	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2020				
808		ModelGuidance	Modeling and Recommending Open Source Licenses with findOSSLicense	Open source software is widely used in the software industry and the academia. Licenses applied to open source software provide the terms for its further use and distribution. Decisions regarding licensing for new software systems are essential for the system's future use. In this paper, we introduce findOSSLicense, a license recommender that guides users into choosing the appropriate open source license for their software under creation. We also introduce our license modeling concept that is used in the recommendation process. The license modeling captures the properties usually found in existing open source licenses following an analysis performed on license texts. The recommendation process of findOSSLicense is based on a hybrid recommender that uses constraint-based, content-based and collaborative filtering giving also space for flexibility in the use of the system by its end-users who can adapt some system properties. User input, but also external sources of information including existing open source projects, are considered for the creation of the recommendations, whereas licenses used in third party software employed in the software are examined on a limited basis. findOSSLicense has been evaluated with the participation of users of various expertise.		Kapitsaki, GM; Charalambous, G	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					ConflictIncluded	Excluded	new_screen			2		2021				
809		ModelGuidance	Rural E-Commerce Entrepreneurship Education in Higher Education Institutions: Model Construction via Empirical Analysis	"Rural e-commerce entrepreneurship education (EE) in Higher Education Institutions (HEIs) can effectively enhance the development of the rural e-commerce industry and improve the motivation of students to start or be employed in rural e-commerce, but how to conduct effective evaluation is an issue that remains to be clarified. The research objectives of this paper are as follows: to establish a ""student-centered"" evaluation model for EE in HEIs, to integrate rural e-commerce professional education with EE, and to provide practical guidance for the evaluated HEIs. This paper constructs an evaluation model of rural e-commerce EE in HEIs. The research method combines Analytic Hierarchy Process (AHP) and Fuzzy Comprehensive Evaluation Method. The questionnaire method was used to obtain 384 valid data for the empirical analysis of the education of the Software Engineering Institute of Guangzhou. The study's results found that the final evaluation result of the school's rural e-commerce EE grade was good. The indicators at the level of educational support and feedback effectiveness scored relatively high, but those at the level of learning input and educational process scored low. Based on the findings, recommendations were made in terms of developing more open feedback channels, providing a full range of services, and social flexibility of the training program."		Zeng, ML; Zheng, YL; Tian, Y; Jebbouri, A	SUSTAINABILITY					ConflictExcluded	Excluded	new_screen			2		2022				
810		ModelGuidance	Modeling user concerns in Sharing Economy: the case of food delivery apps	Sharing Economy apps, such as Uber, Airbnb, and TaskRabbit, have generated a substantial consumer interest over the past decade. The unique form of peer-to-peer business exchange these apps have enabled has been linked to significant levels of economic growth, helping people in resource-constrained communities to build social capital and move up the economic ladder. However, due to the multidimensional nature of their operational environments, and the lack of effective methods for capturing and describing their end-users' concerns, Sharing Economy apps often struggle to survive. To address these challenges, in this paper, we examine crowd feedback in ecosystems of Sharing Economy apps. Specifically, we present a case study targeting the ecosystem of food delivery apps. Using qualitative analysis methods, we synthesize important user concerns present in the Twitter feeds and app store reviews of these apps. We further propose and intrinsically evaluate an automated procedure for generating a succinct model of these concerns. Our work provides a first step toward building a full understanding of user needs in ecosystems of Sharing Economy apps. Our objective is to provide Sharing Economy app developers with systematic guidelines to help them maximize their market fitness and mitigate their end-users' concerns and optimize their experience.		Williams, G; Tushev, M; Ebrahimi, F; Mahmoud, A	AUTOMATED SOFTWARE ENGINEERING					ConflictIncluded	Excluded	new_screen			2		2020				
811		ModelGuidance	Modeling Performance of Microservices Systems with Growth Theory	Context The microservices architectural style is gaining momentum in the IT industry. This style does not guarantee that a target system can continuously meet acceptable performance levels. The ability to study the violations of performance requirements and eventually predict them would help practitioners to tune techniques like dynamic load balancing or horizontal scaling to achieve the resilience property. Objective The goal of this work is to study the violations of performance requirements of microservices through time series analysis and provide practical instruments that can detect resilient and non-resilient microservices and possibly predict their performance behavior. Method We introduce a new method based on growth theory to model the occurrences of violations of performance requirements as a stochastic process. We applied our method to an in-vitro e-commerce benchmark and an in-production real-world telecommunication system. We interpreted the resulting growth models to characterize the microservices in terms of their transient performance behavior. Results Our empirical evaluation shows that, in most of the cases, the non-linear S-shaped growth models capture the occurrences of performance violations of resilient microservices with high accuracy. The bounded nature associated with this models tell that the performance degradation is limited and thus the microservice is able to come back to an acceptable performance level even under changes in the nominal number of concurrent users. We also detect cases where linear models represent a better description. These microservices are not resilient and exhibit constant growth and unbounded performance violations over time. The application of our methodology to a real in-production system identified additional resilience profiles that were not observed in the in-vitro experiments. These profiles show the ability of services to react differently to the same solicitation. We found that when a service is resilient it can either decrease the rate of the violations occurrences in a continuous manner or with repeated attempts (periodical or not). Conclusions We showed that growth theory can be successfully applied to study the occurences of performance violations of in-vitro and in-production real-world systems. Furthermore, the cost of our model calibration heuristics, based on the mathematical expression of the selected non-linear growth models, is limited. We discussed how the resulting models can shed some light on the trend of performance violations and help engineers to spot problematic microservice operations that exhibit performance issues. Thus, meaningful insights from the application of growth theory have been derived to characterize the behavior of (non) resilient microservices operations.		Camilli, M; Russo, B	EMPIRICAL SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2022				
812		ModelGuidance	PERSONA: A personalized model for code recommendation	Code recommendation is an important feature of modern software development tools to improve the productivity of programmers. The current advanced techniques in code recommendation mostly focus on the crowd-based approach. The basic idea is to collect a large pool of available source code, extract the common code patterns, and utilize the patterns for recommendations. However, programmers are different in multiple aspects including coding preferences, styles, levels of experience, and knowledge about libraries and frameworks. These differences lead to various usages of code elements. When the code of multiple programmers is combined and mined, such differences are disappeared, which could limit the accuracy of the code recommendation tool for a specific programmer. In the paper, we develop a code recommendation technique that focuses on the personal coding patterns of programmers. We propose Persona, a personalized code recommendation model. It learns personalized code patterns for each programmer based on their coding history, while also combines with project-specific and common code patterns. Persona supports recommending code elements including variable names, class names, methods, and parameters. The empirical evaluation suggests that our recommendation tool based on Persona is highly effective. It recommends the next identifier with top-1 accuracy of 60-65% and outperforms the baseline approaches.		Nguyen, TT; Nguyen, TT	PLOS ONE					ConflictExcluded	Excluded	new_screen			2		2021				
813		ModelGuidance	FENSE: A feature-based ensemble modeling approach to cross-project just-in-time defect prediction	Context: Just-in-time defect prediction (JITDP) leverages modern machine learning models to predict the defect-proneness of commits. Such models require adequate training data, which is unavailable in projects with short histories. To address this problem, cross-project methods reuse the data or models in other projects to make predictions, grounded on the assumption that they share similar defect-related features. However, these features are overlooked, which leads to unsatisfying model performance. Objective: This study aims to investigate the relationship between cross-project JITDP performances and project features, thereby improving the performance of cross-project models. Method: We propose a F eature-based ENSE mble modeling approach (FENSE) to cross-project JITDP. For a target project, FENSE pairs it to each source project and obtains 20 features. Leveraging them, it can predict the transferability of each off-the-shelf JITDP model. Then FENSE identifies the most transferable ones and combines them to make cross-project predictions. To achieve this, we conduct a large-scale empirical study of 113,906 project pairs in GitHub and investigate the impact of project features. Results: The results show that: (1) cross-project transferability is highly related to features including programming language and the defect ratio of the source project; (2) our feature-based model selection scheme can improve the cross-project JITDP performance by 10%; (3) FENSE outperforms other models on five evaluation measures without extra time and space costs. Conclusions: Our study suggests that project features can help identify powerful cross-project JITDP models and improve the performance of ensemble approaches.		Zhang, THR; Yu, Y; Mao, XJ; Lu, Y; Li, ZX; Wang, HM	EMPIRICAL SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2022				
814		ModelGuidance	Workflow Models to Establish Software Baselines in SSMEs	"Capability Maturity Model Integration (CMMI) is used for Software Process Improvement (SPI) worldwide. Research reveals that CMMI adoption needs a lot of resources in terms of training, funds, and professional workers. Software Small & Medium Enterprises (SSMEs) cannot, however, reserve resources for the purpose. One of the challenges of CMMI adoption is that CMMI identifies ""What-to-Do"" as a requirement to fulfill and leaves ""How-To-Do"" to implementers. Implementation of Configuration Management Process Area (CM-PA), being one of the umbrella activities, presents more obstacles generally to the software industry and particularly to SSMEs as compared to other PAs. Establish software baselines is the first Specific Goal (SG-1) needed by CMMI for the effective implementation of CM-PA. Workflow Models (WFMs), an iden-tified set of activities performed in a logical sequence to accomplish a specific practice with probable actors and potential work products, were designed for implementation of its three contributing Specific Practices (SPs). The proposed WFMs were evaluated through the Expert Panel Review (EPR) process. Addition-ally, a case study was conducted to validate the proposed models. The results of the EPR/Case Study showed that the proposed WFMs are useful, easy to use, supportive in the achievement of SG-1, and applicable to SSMEs. It is important to mention that this research work adds to the empirical software engineering body of knowledge as well as contribute to the implementation of CM-PA."		Ali, I; Nisar, W; Mehmood, W; Saleem, MQ; Ahmed, AS; Elamin, HE; Niazi, M; Sha, M	INTELLIGENT AUTOMATION AND SOFT COMPUTING					ConflictExcluded	Excluded	new_screen			2		2021				
815		ModelGuidance	Digital Twin in the IoT Context: A Survey on Technical Features, Scenarios, and Architectural Models	"Digital twin (DT) is an emerging concept that is gaining attention in various industries. It refers to the ability to clone a physical object (PO) into a software counterpart. The softwarized object, termed logical object, reflects all the important properties and characteristics of the original object within a specific application context. To fully determine the expected properties of the DT, this article surveys the state-of-the-art starting from the original definition within the manufacturing industry. It takes into account related proposals emerging in other fields, namely augmented and virtual reality (e.g., avatars), multiagent systems, and virtualization. This survey thereby allows for the identification of an extensive set of DT features that point to the ""softwarization"" of POs. To properly consolidate a shared DT definition, a set of foundational properties is identified and proposed as a common ground outlining the essential characteristics (must-haves) of a DT. Once the DT definition has been consolidated, its technical and business value is discussed in terms of applicability and opportunities. Four application scenarios illustrate how the DT concept can be used and how some industries are applying it. The scenarios also lead to a generic DT architectural model. This analysis is then complemented by the identification of software architecture models and guidelines in order to present a general functional framework for the DT. This article, eventually, analyses a set of possible evolution paths for the DT considering its possible usage as a major enabler for the softwarization process."		Minerva, R; Lee, GM; Crespi, N	PROCEEDINGS OF THE IEEE					ConflictExcluded	Excluded	new_screen			2		2020				
816		ModelGuidance	A hierarchical model for quantifying software security based on static analysis alerts and software metrics	Despite the acknowledged importance of quantitative security assessment in secure software development, current literature still lacks an efficient model for measuring internal software security risk. To this end, in this paper, we introduce a hierarchical security assessment model (SAM), able to assess the internal security level of software products based on low-level indicators, i.e., security-relevant static analysis alerts and software metrics. The model, following the guidelines of ISO/IEC 25010, and based on a set of thresholds and weights, systematically aggregates these low-level indicators in order to produce a high-level security score that reflects the internal security level of the analyzed software. The proposed model is practical, since it is fully automated and operationalized in the form of a standalone tool and as part of a broader Computer-Aided Software Engineering (CASE) platform. In order to enhance its reliability, the thresholds of the model were calibrated based on a repository of 100 popular software applications retrieved from Maven Repository. Furthermore, its weights were elicited in a way to chiefly reflect the knowledge expressed by the Common Weakness Enumeration (CWE), through a novel weights elicitation approach grounded on popular decision-making techniques. The proposed model was evaluated on a large repository of 150 open-source software applications retrieved from GitHub and 1200 classes retrieved from the OWASP Benchmark. The results of the experiments revealed the capacity of the proposed model to reliably assess internal security at both product level and class level of granularity, with sufficient discretion power. They also provide preliminary evidence for the ability of the model to be used as the basis for vulnerability prediction. To the best of our knowledge, this is the first fully automated, operationalized and sufficiently evaluated security assessment model in the modern literature.		Siavvas, M; Kehagias, D; Tzovaras, D; Gelenbe, E	SOFTWARE QUALITY JOURNAL					ConflictIncluded	Excluded	new_screen			2		2021				
817		ModelGuidance	A large-scale empirical study of commit message generation: models, datasets and evaluation	Commit messages are natural language descriptions of code changes, which are important for program understanding and maintenance. However, writing commit messages manually is time-consuming and laborious, especially when the code is updated frequently. Various approaches utilizing generation or retrieval techniques have been proposed to automatically generate commit messages. To achieve a better understanding of how the existing approaches perform in solving this problem, this paper conducts a systematic and in-depth analysis of the state-of-the-art models and datasets. We find that: (1) Different variants of the BLEU metric used in previous works affect the evaluation. (2) Most datasets are crawled only from Java repositories while repositories in other programming languages are not sufficiently explored. (3) Dataset splitting strategies can influence the performance of existing models by a large margin. (4) For pre-trained models, fune-tuning with different multi-programming-language combinations can influence their performance. Based on these findings, we collect a large-scale, information-rich, Multi-language Commit Message Dataset (MCMD). Using MCMD, we conduct extensive experiments under different experiment settings including splitting strategies and multi-programming-language combinations. Furthermore, we provide suggestions for comprehensively evaluating commit message generation models and discuss possible future research directions. We believe our work can help practitioners and researchers better evaluate and select models for automatic commit message generation. Our source code and data are available at https://anonymous.4open. science/r/CommitMessageEmpirical.		Tao, W; Wang, YL; Shi, ES; Du, L; Han, S; Zhang, HY; Zhang, DM; Zhang, WQ	EMPIRICAL SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2022				
818		ModelGuidance	Why My Code Summarization Model Does NotWork: Code Comment Improvement with Category Prediction	"Code summarization aims at generating a code comment given a block of source code and it is normally performed by training machine learning algorithms on existing code block-comment pairs. Code comments in practice have different intentions. For example, some code comments might explain how the methods work, while others explain why some methods are written. Previous works have shown that a relationship exists between a code block and the category of a comment associated with it. In this article, we aim to investigate to which extent we can exploit this relationship to improve code summarization performance. We first classify comments into six intention categories and manually label 20,000 code-comment pairs. These categories include ""what,"" ""why,"" ""how-to-use,"" ""how-it-is-done,"" ""property,"" and ""others."" Based on this dataset, we conduct an experiment to investigate the performance of different state-of-the-art code summarization approaches on the categories. We find that the performance of different code summarization approaches varies substantially across the categories. Moreover, the category for which a code summarization model performs the best is different for the different models. In particular, no models perform the best for ""why"" and ""property"" comments among the six categories. We design a composite approach to demonstrate that comment category prediction can boost code summarization to reach better results. The approach leverages classified code-category labeled data to train a classifier to infer categories. Then it selects the most suitable models for inferred categories and outputs the composite results. Our composite approach outperforms other approaches that do not consider comment categories and obtains a relative improvement of 8.57% and 16.34% in terms of ROUGE-L and BLEU-4 score, respectively."		Chen, QY; Xia, X; Hu, H; Lo, D; Li, SP	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					ConflictExcluded	Excluded	new_screen			2		2021				
819		ModelGuidance	System performance requirements: A standards-based model for early identification, allocation to software functions and size measurement	Background: In practice, the developers focus is on early identification of the functional requirements (FR) allocated to software, while the system non-functional requirements (NFRs) are left to be specified and detailed much later in the development lifecycle. Aim: A standards-based model of system performance NFRs for early identification and measurement of FR-related performance of software functions. Method: 1) Analysis of performance NFR in IEEE and ECSS standards and the modeling of the identified system/software performance functions using Softgoal Interdependency Graphs. 2) Application of the COSMIC-FSM method (e.g., ISO 19761) to measure the functional size of the performance requirements allocated to software functions. 3) Use of the COSMIC-SOA guideline to tailor this framework to service-oriented architecture (SOA) for performance requirements specification and measurement. 4) Illustration of the applicability of the proposed approach for specification and measurement of system performance NFR allocated to the software for an automated teller machine (ATM) in an SOA context. Result: A standards-based framework for identifying, specifying and measuring NFR system performance of software functions. Conclusion: Such a standards-based system performance reference framework at the function and service levels can be used early in the lifecycle by software developers to identify, specify and measure performance NFR.		Al-Sarayreh, KT; Meridji, K; Abran, A; Trudel, S	E-INFORMATICA SOFTWARE ENGINEERING JOURNAL					ConflictIncluded	Excluded	new_screen			2		2020				
820		ModelGuidance	Students' Perception of Scrum in a Course Project	Gaining insight into what students experience in a course in software engineering is essential to the continuous development of the course design. The growing use of agile approaches in professional settings has facilitated their introduction into training and undergraduate courses in software engineering. This paper reports a case study of student participation in a course project by using a previously presented training model. We aimed to assess how students felt with the training model when conducting the 5 Scrum events: Sprint Planning, Daily Meeting, Sprint, Sprint Review, and Sprint Retrospective. To achieve our goal, we applied a 22-item survey to 31 undergraduate students to gather students' opinions. Results showed that most students had a positive opinion about team communication, the position of Scrum Master, Sprint goals definition, and guidance using meetings as a means of checkpoints.		Rodriguez, G; Gasparini, I; Kemczinski, A; de Matos, AV	IEEE REVISTA IBEROAMERICANA DE TECNOLOGIAS DEL APRENDIZAJE-IEEE RITA					ConflictExcluded	Excluded	new_screen			2		2021				
821		ModelGuidance	An Exploratory Study of Software Sustainability at Early Stages of Software Development	"Sustainability incorporation within the field of Software Engineering is an emerging research area. Sustainability, from an academic perspective, has been addressed to a large extent. However, when it comes to the software industry, the topic has not received much-needed attention. Software, being designed and developed in the industry, can benefit society at large, if sustainability is taken into account by the software professionals during the software design and development process. To develop a sustainable software application, knowledge and awareness about sustainability by professional software developers is one of the key elements. This study is an attempt to examine sustainability knowledge, importance, and support from the perspective of South Asian software professionals. Additionally, this study also proposes sustainability guidelines for certain software applications and also a catalog for the identification of sustainability requirements for different software applications. The queries such as 'What does sustainability mean to a professional software developer?', 'How does the software industry identify sustainability requirements?', 'How do software developers incorporate the sustainability parameters within software during software development?', and many other such queries are addressed in this study. To achieve this goal, a survey was carried out among 221 industry practitioners involved in software projects in various application domains such as banking, finance, and management applications. The results pinpoint that even though sustainability is deemed important by 91% of practitioners, still there is a lack of understanding regarding sustainability incorporation in software development. A total of 48% of professionals often misunderstand ""Green software"" as ""sustainable software"". The technical aspect of sustainability is considered most important by professionals (67%) as well as companies (77%). One of the key findings of this study is that 92% of software practitioners are not able to identify sustainability requirements for software applications. The outcomes of the study may be regarded as an initial attempt towards how sustainability is comprehended in software by the South Asian software industry."		Noman, H; Mahoto, NA; Bhatti, S; Abosaq, HA; Al Reshan, MS; Shaikh, A	SUSTAINABILITY					ConflictExcluded	Excluded	new_screen			2		2022				
822		ModelGuidance	Fundamental results for learning deterministic extended finite state machines from queries	"Regular language inference, initiated by Angluin, has many developments, including applications in software engineering and testing. However, the capability of finite automata to model the system data is quite limited and, in many cases, extended finite state machine formalisms, that combine the system control with data structures, are used instead. The application of Angluin-style inference algorithms to extended state machines would involve constructing a minimal deterministic extended finite state machine consistent with a deterministic 3-valued deterministic finite automaton. In addition to the usual, accepting and rejecting, states of finite automaton, a 3-valued deterministic finite automaton may have ""don't care"" states; the sequences of inputs that reach such states may be considered as accepted or rejected, as is convenient. The aforementioned construction reduces to finding a minimal deterministic finite automaton consistent with a 3-valued deterministic finite automaton, that preserves the deterministic nature of the extended model that also handles the data structure associated with it. This paper investigates fundamental properties of extended finite state machines in relation to Angluin's language inference problem and provides an inference algorithm for such models. (C) 2020 Elsevier B.V. All rights reserved."		Ipate, F; Gheorghe, M; Lefticaru, R	THEORETICAL COMPUTER SCIENCE					ConflictExcluded	Excluded	new_screen			2		2021				
823		ModelGuidance	Syntax-based metamorphic relation prediction via the bagging framework	Software testing is an indispensable part of the software engineering industry, which guarantees product reliability and safety. Traditional testing approaches face the testing Oracle problem, they are difficult to construct the expected outputs with the increasing of program complexity. As a result, metamorphic testing, which tests the program by examining the relationship between the execution results, is proposed. However, existing manual metamorphic relation construction requires huge effects of domain experts, and automatic methods are unstable and inefficient due to the insufficient software feature mining. Hence, we proposed a multi-dimensional program structure-based metamorphic relation prediction approach, which is composed of feature extraction and prediction model building. In the feature extraction stage, the testing program is converted to multiple intermediate structures (such as control flow graphs and abstract syntax trees) to explore its features. In the prediction model building stage, the extracted feature set is used as the training set, and a novel semi-supervised support vector machine-bagging-K-nearest neighbors algorithm is designed to train the prediction model. Besides, a two-phase hybrid granularity search algorithm is proposed to improve the prediction performance by selecting the optimal number of weak classifiers. Compared with existing approaches, our proposed model can improve the accuracy by around 14%.		Yin, YY; Ruan, JJ; Li, YHZ; Li, Y; Pan, ZJ	EXPERT SYSTEMS					ConflictExcluded	Excluded	new_screen			2		2022				
824		ModelGuidance	User-centered approaches in software development processes: Qualitative research into the practice of Hungarian companies	Integrating user-centered approaches into development processes is one of the main challenges nowadays that derives from different objectives of software engineering (SE) and human-computer interaction (HCI) fields. For SE experts, the main goal is quality code creation, whereas for HCI professionals, it is the continuous product interaction with the users. The major question is what tools and timings can be used together to achieve these goals effectively. Therefore, this article provides comparative, exploratory, and qualitative research about possible solutions on how practitioners transfer HCI values and practices to SE processes. The current practice of software companies was studied by conducting interviews on a sample of 13 Hungarian Information Technology companies to explore the SE processes in respect of several dimensions (applied development models, the integrity of user-centered methods, and the user experience [UX] maturity). According to preliminary expectations, the development processes of the various companies proceed in different steps; nevertheless, they can be well grouped together based on the UX methods applied. The results representing the various user-centered processes can be considered useful for future decision makers of software companies worldwide.		Szabo, B; Hercegfi, K	JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS					ConflictExcluded	Excluded	new_screen			2						
825		ModelGuidance	Impact of software development processes on the outcomes of student computing projects: A tale of two universities	"Context: Project-based courses are more and more commonly used as an opportunity to teach students structured methods of developing software. Two well-known approaches in this area - traditional and Agile - have been successfully applied to drive academic projects. However too often the default is still to have no organizational process at all. While a large variety of software development life-cycle models exists, little guidance is available on which one to choose to fit the context of working with students. Objective: This paper assesses the impact of iterative, sequential and ""hands-off'' development approaches on the success of student computing projects. A structured, metric-based assessment scheme was applied to investigate team productivity, teamwork and the quality of the final product. Method: Empirical evidence was collected during a controlled experiment carried out at two engineering schools in Europe. More than 100 students at Bachelor's and Master's levels participated in the research, with varied software development and teamwork skill sets. Results: Similar patterns were observed among both sets of subjects, with iterative teams demonstrating the highest productivity and superior team cohesion but a decline in the quality of the final product. Sequential development led to a considerable improvement in the external quality characteristics of the software produced, owing to the method's stress on design activities. Conclusion: The findings of this study will be of use to educators interested in applying software development processes to student groupwork. A set of guidelines is provided for applying a structured way of working in a project-based course."		Wlodarski, R; Poniszewska-Maranda, A; Falleri, JR	INFORMATION AND SOFTWARE TECHNOLOGY					ConflictExcluded	Excluded	new_screen			2		2022				
826		ModelGuidance	Better together: Elements of successful scientific software development in a distributed collaborative community	Many scientific disciplines rely on computational methods for data analysis, model generation, and prediction. Implementing these methods is often accomplished by researchers with domain expertise but without formal training in software engineering or computer science. This arrangement has led to underappreciation of sustainability and maintainability of scientific software tools developed in academic environments. Some software tools have avoided this fate, including the scientific library Rosetta. We use this software and its community as a case study to show how modern software development can be accomplished successfully, irrespective of subject area. Rosetta is one of the largest software suites for macromolecular modeling, with 3.1 million lines of code and many state-of-the-art applications. Since the mid 1990s, the software has been developed collaboratively by the RosettaCommons, a community of academics from over 60 institutions worldwide with diverse backgrounds including chemistry, biology, physiology, physics, engineering, mathematics, and computer science. Developing this software suite has provided us with more than two decades of experience in how to effectively develop advanced scientific software in a global community with hundreds of contributors. Here we illustrate the functioning of this development community by addressing technical aspects (like version control, testing, and maintenance), community-building strategies, diversity efforts, software dissemination, and user support. We demonstrate how modern computational research can thrive in a distributed collaborative community. The practices described here are independent of subject area and can be readily adopted by other software development communities.		Leman, JK; Weitzner, BD; Renfrew, PD; Lewis, SM; Moretti, R; Watkins, AM; Mulligan, VK; Lyskov, S; Adolf-Bryfogle, J; Labonte, JW; Krys, J; Bystroff, C; Schief, W; Gront, D; Schueler-Furman, O; Baker, D; Bradley, P; Dunbrack, R; Kortemme, T; Leaver-Fay, A; Strauss, CEM; Meiler, J; Kuhlman, B; Gray, JJ; Bonneau, R; RosettaCommons Consortium	PLOS COMPUTATIONAL BIOLOGY					ConflictExcluded	Excluded	new_screen			2		2020				
827		ModelGuidance	Architecting Digital Twins	In 2002, Grieves defined the concept of the digital twin as a virtual instance of physical assets capable of continuously mirroring them. Ever since then, driven by remarkable industrial attention, digital twins flourished and ripened in several sectors. The notable industrial adoption has been sided by a growing interest from the software engineering community in general and the software architecture community in particular as demonstrated by the growing number of published peer-reviewed publications and proposed software architectural solutions for digital twins. In this paper, we report on the planning, execution, and results of a systematic mapping study on architecting digital twins. The study captures crucial aspects of software architectures for digital twins as types of architectural solutions, quality attributes, and architectural patterns. It supports practitioners in creating digital twins tailored to their specific needs and researchers in identifying trends and open challenges. Starting from an initial set of potentially relevant 1630 peer-reviewed publications, we selected 140 primary studies. We analysed the set of primary studies using thorough data extraction, analysis, and synthesis process. To compensate for single method limitations and reduce possible threats to conclusion validity, we discussed the results of our study with experts in the software architecture community. Based on our results, the field of software architecture for digital twins is lively and an increasing number of architectural solutions are being proposed. Although there is a lack of widely accepted reference architectural solutions for digital twins, most of them are built using a combination of the layered and service-oriented patterns and address maintainability, performance efficiency, and compatibility quality attributes.		Ferko, E; Bucaioni, A; Behnam, M	IEEE ACCESS					ConflictExcluded	Excluded	new_screen			2		2022				
828		ModelGuidance	A systemic framework for crowdsourced test report quality assessment	In crowdsourced mobile application testing, crowd workers perform test tasks for developers and submit test reports to report the observed abnormal behaviors. These test reports usually provide important information to improve the quality of software. However, due to the poor expertise of workers and the inconvenience of editing on mobile devices, some test reports usually lack necessary information for understanding and reproducing the revealed bugs. Sometimes developers have to spend a significant part of available resources to handle the low-quality test reports, thus severely reducing the inspection efficiency. In this paper, to help developers determine whether a test report should be selected for inspection within limited resources, we issue a new problem of test report quality assessment. Aiming to model the quality of test reports, we propose a new framework named TERQAF. First, we systematically summarize some desirable properties to characterize expected test reports and define a set of measurable indicators to quantify these properties. Then, we determine the numerical values of indicators according to the contained contents of test reports. Finally, we train a classifier by using logistic regression to predict the quality of test reports. To validate the effectiveness of TERQAF, we conduct extensive experiments over five crowdsourced test report datasets. Experimental results show that TERQAF can achieve 85.18% in terms of Macro-average Precision (MacroP), 75.87% in terms of Macro-average Recall (MacroR), and 80.01% in terms of Macro-average F-measure (MacroF) on average in test report quality assessment. Meanwhile, the empirical results also demonstrate that test report quality assessment can help developers handle test reports more efficiently.		Chen, X; Jiang, H; Li, XC; Nie, LM; Yu, DJ; He, TK; Chen, ZY	EMPIRICAL SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2020				
829		ModelGuidance	Studying Task Processes for Improving Programmer Productivity	Productivity of a software development organization can be enhanced by improving the software process, using better tools/technology, and enhancing the productivity of programmers. This work focuses on improving programmer productivity by studying the process used by a programmer for executing an assigned task, which we call the task process. We propose a general framework for studying the impact of task processes on programmer productivity and also the impact of transferring task processes of high-productivity programmers to average-productivity peers. We applied the framework to a few live projects in Robert Bosch Engineering and Business Solutions Limited, a CMMI Level 5 company. In each project, we identified two groups of programmers: high-productivity and average-productivity programmers. We requested each programmer to video capture their computer screen while executing his/her assigned tasks. We then analyzed these task videos to extract the task processes and then used them to identify the differences between the task processes used by the two groups. Some key differences were found between the task processes, which could account for the difference in productivities of the two groups. Similarities between the task processes were also analyzed quantitatively by modeling each task process as a Markov chain. We found that programmers from the same group used similar task processes, but the task processes of the two groups differed considerably. The task processes of high-productivity programmers were transferred to the average-productivity programmers by training them on the key steps missing in their process but commonly present in the work of their high-productivity peers. A substantial productivity gain was found in the average-productivity programmers as a result of this transfer. The study shows that task processes of programmers impact their productivity, and it is possible to improve the productivity of average-productivity programmers by transferring task processes from high-productivity programmers to them.		Jalote, P; Kamma, D	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					ConflictExcluded	Excluded	new_screen			2		2021				
830		ModelGuidance	A Concern-Oriented Software Engineering Methodology for Micro-Service Architectures	Component-Based Systems (CBS) allow for the construction of modular, highly scalable software. Decomposing a system into individually maintainable and deployable components enables a targeted replication of performance bottlenecks, and promotes code modularity. Over the last years, the Micro-Service Architecture (MSA) style has become a popular approach to maximize the benefits of CBS. However, MSA introduces new challenges, by imposing a conceptual and technological stack on adherent projects, which require new critical design choices. Throughout my PhD I want to investigate to which extent a systematic reuse of MSA solutions of various granularity can streamline MSA application development by guiding design decisions.		Schiedermeier, Maximilian	Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					ConflictExcluded	Excluded	new_screen			2		2020				
831		ModelGuidance	Multidimensional modeling driven from a domain language	Purpose: The multidimensional model is based on the concepts of facts (business phenomena to be analyzed), dimensions (coordinates for analyzing a fact), hierarchies (descriptions of each dimension at progressively coarser levels of aggregation), and measures (numerical attributes that quantify a fact), and it is commonly adopted for representing data to support the decision-making process. Though multidimensional modeling has been widely investigated, requirements elicitation is still an open issue mainly due to the poor knowledge end-users have of the multidimensional model on the one hand, to the lack of a domain language shared with designers on the other. In the direction of bridging this gap, this paper proposes an approach to obtain a multidimensional schema from the language of the domain captured through a Language Extended Lexicon (LEL). LELs have been introduced as structured glossaries to describe the language used in the application domain, aimed at facilitating requirements elicitation in software engineering. Our approach consists of two steps. In the first one, end-users apply a set of derivation rules to the LEL in order to obtain draft multidimensional schemata. The second step relies on the interaction of end-users and designers to review and edit these draft multidimensional schemata so as to obtain the final ones. The approach is validated via an experiment made on a case study, showing that end-users who apply our rules tend to produce multidimensional schemata that are more correct than those produced by end-users who work freely. Our rules provide a structured context where subjectivity has a smaller impact than in the case of designing with no guidelines, thus effectively supporting the collaboration between end-users and designers. © 2022, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.		Antonelli, L.; Bimonte, S.; Rizzi, S.	Automated Software Engineering					ConflictExcluded	Excluded	new_screen			2		2023				
832		ModelGuidance	A BPMN-driven framework for Multi-Robot System development	Programming robotic systems is often a challenging task requiring advanced skills, especially when the goal is to ensure loosely-coupled coordination in heterogeneous Multi-Robot Systems (MRSs). Model-driven approaches for robotic system engineering have shown their benefits in facilitating the development of robots’ behavior, controllers, and system components. However, the state of the art still lacks contributions addressing crucial aspects of the model-driven approach applied to MRSs, such as developing robots’ distributed cooperation through models supporting the communication among robots. In this paper, we present a novel framework for modeling, configuring and enacting the cooperative behaviors of MRSs through collaboration diagrams as provided by the BPMN 2.0 standard. The advantages of our solution lie, indeed, in the use of BPMN, which provides easily understandable and highly expressive diagrams for representing the cooperation among distributed robots, and benefits from a wide list of supporting tools. Starting from the selection of BPMNelements, we define a set of guidelines for driving the developer in modeling an MRS mission using BPMN. The developer configures the resulting collaboration diagram to link elements in the model to the robotic middleware, ROS2 in the toolchain we implemented. Finally, the configured model is enacted by BPMN engines integrated into the ROS2 middleware run by each robot involved in the MRS, thus obtaining a fully distributed cooperation. We assess our framework's effectiveness through experiments in simulated and real environments. © 2022 Elsevier B.V.		Corradini, F.; Pettinari, S.; Re, B.; Rossi, L.; Tiezzi, F.	Robotics and Autonomous Systems					ConflictIncluded	Included	new_screen			2		2023				
833		ModelGuidance	Cross-Cutting Methodologies in Learning 3D Modeling	The training of 3D modeling professionals from the complexity of the software itself or the trends of the professional sector, often focuses on the mastery of a single main tool, perhaps complementing it with other more specific tools for texturing or digital sculpting. Students, when entering the labor market, even if they master the techniques in a software, often need to improve or expand their professional profile by learning other tools, adapting their previous knowledge transversely, almost having to start from scratch. In addition to this, there is a certain lack of unity, from the nomenclature, information architecture, or interaction, to make equivalent operations between these softwares. The creation of didactic materials that allow the acquisition of knowledge from the transversal mapping would help to reduce or optimize this adaptation process, while reinforcing the professional profile of 3D modeling students by providing them with complementary skills. © 2023, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.		García Betegón, M.; Perandones Serrano, E.; Gayo Santacecilia, F.J.						ConflictExcluded	Excluded	new_screen			2		2023				
834		ModelGuidance	Building interpretable predictive models with context-aware evolutionary learning	Building prediction models with the right balance between performance and interpretability is currently a great challenge in machine learning. A large number of recent studies have focused on either building intrinsically interpretable models or developing general explainers for blackbox models. Although these methods have been widely adopted, their interpretability or explanations are not always useful because of the lack of contexts considered in training machine learning models and producing explanations. This paper aims to tackle this significant challenge by developing a context-aware evolutionary learning algorithm (CELA) for building interpretable prediction models. A new context extraction method based on unsupervised self-structuring learning algorithms is developed to treat data in contexts. The proposed algorithm overcomes the limitations of existing evolutionary learning methods in handling a large number of features and large datasets by training specialised interpretable models based on the automatically extracted contexts. The new algorithm has been tested on complex regression datasets and a real-world building energy prediction task. The results suggest CELA can outperform well-known interpretable machine learning (IML) algorithms, the state-of-the-art evolutionary algorithm, and can produce predictions much closer to the results of blackbox algorithms such as XGBoost and artificial neural networks than the compared IML methods. Further analyses also demonstrate that the CELA's prediction models are smaller and easier to interpret than those obtained by the evolutionary learning algorithm without context awareness. © 2022 Elsevier B.V.		Tran, B.; Sudusinghe, C.; Nguyen, S.; Alahakoon, D.	Applied Soft Computing					ConflictExcluded	Excluded	new_screen			2		2023				
835		ModelGuidance	A predictive model based on user awareness and multi-type rumors forwarding dynamics	Previous models for predicting rumor-forwarding trends were primarily focused on feature generation and model prediction in two independent directions: message text and user association features. However, the abstraction of user awareness, text contextual feature extraction limitation, and inefficiency of traditional hyperparameter search methods still pose numerous challenges. This study proposes a rumor-forwarding trend prediction model that combines user awareness and multi-type rumor to address such challenges. First, considering the abstraction of user awareness under multi-type rumors, we extract features by cascading user behavior, historical activities, interactions, and activity levels and by fusing features using a two-layer fully connected network to effectively quantify the relevant features of user awareness. Second, considering the limitations of traditional text representation in semantic context understanding, we use the Bidirectional Encoder Representation from Transformers (BERT) pre-training model to characterize the text in the topic, obtain text representation sequence with contextual relationships, and propose an Improved Cuckoo Search (ICS) method that optimizes the hyperparameters of the temporal convolutional network (TCN) model. Finally, an Improved Cuckoo Search-TCN-based rumor-forwarding trend prediction model is constructed based on user awareness features and text representation sequences to predict the rumor-forwarding trend. Certain rumors with a large potential impact range can be monitored at the early dissemination stage. © 2022 Elsevier Inc.		Li, Q.; Yang, J.; Dai, T.; Xiao, Y.	Information Sciences					ConflictExcluded	Excluded	new_screen			2		2023				
836		ModelGuidance	Parallel Training of Pre-Trained Models via Chunk-Based Dynamic Memory Management	The pre-trained model (PTM) is revolutionizing Artificial Intelligence (AI) technology. However, the hardware requirement of PTM training is prohibitively high, making it a game for a small proportion of people. Therefore, we proposed PatrickStar system to lower the hardware requirements of PTMs and make them accessible to everyone. PatrickStar uses the CPU-GPU heterogeneous memory space to store the model data. Different from existing works, we organize the model data in memory chunks and dynamically distribute them in the heterogeneous memory. Guided by the runtime memory statistics collected in a warm-up iteration, chunks are orchestrated efficiently in heterogeneous memory and generate lower CPU-GPU data transmission volume and higher bandwidth utilization. Symbiosis with the Zero Redundancy Optimizer, PatrickStar scales to multiple GPUs on multiple nodes. The system can train tasks on bigger models and larger batch sizes, which cannot be accomplished by existing works. Experimental results show that PatrickStar extends model scales 2.27 and 2.5 times of DeepSpeed, and exhibits significantly higher execution speed. PatricStar also successfully runs the 175B GPT3 training task on a 32 GPU cluster. Our code is available at https://github.com/Tencent/PatrickStar. © 1990-2012 IEEE.		Fang, J.; Zhu, Z.; Li, S.; Su, H.; Yu, Y.; Zhou, J.; You, Y.	IEEE Transactions on Parallel and Distributed Systems					ConflictExcluded	Excluded	new_screen			2		2023				
837		ModelGuidance	Graphical Representation of Parametric Feature-Based MCAD Model Characteristics	Educational reforms and recent trends have pushed CAD education further into the mainstream of higher education. This has resulted in a rapidly increasing number of students enrolling in introductory level CAD courses, producing a flood of digital assignment submissions that need to be evaluated in a timely manner. This overwhelming situation has led to accelerated work on software tools for autonomous analysis and grading. However, the type and complexity of CAD model that can be analyzed, and the quality of the feedback that is generated, are still quite limited. In response to this predicament, and also efforts to reform an actual mechanical engineering CAD (MCAD) course, a new approach, framework, and software tool have been developed, based on visual representation and analysis of metrics. These novel instruments are aimed at supporting a more diverse and inclusive analysis and assessment of MCAD models, with a focus on the overall outcome a student produces, which includes model structure, history of model creation, and modeling strategy. The first part of this paper presents the novel approach and instruments for enhanced feature-based MCAD model analysis in the educational context. The second part of this paper reports on their development and implementation, and on the empirical results obtained during testing and evaluation. © 2023 CAD Solutions, LLC,.		Otto, H.E.; Mandorli, F.	Computer-Aided Design and Applications					ConflictExcluded	Excluded	new_screen			2		2023				
838		ModelGuidance	Creation of a Mobile Application for Navigation for a Potential Use of People with Visual Impairment Exercising the NTRIP Protocol	The global navigation satellite systems (GNSS) have become important in conjunction with the advancement of technology, in order to improve the accuracy of positioning and navigation on mobile devices. In the current project, a mobile application for navigation using the network transport of restricted test case modeling (RTCM) via internet protocol (NTRIP) was developed, and it has been focused on the autonomous mobility of people with visual disabilities. This occurred through a web viewer that stores the base cartography in a genome database (GDB). Such information is integrated into the application interface with Java Script language within the Android Studio platform, with a personalized design. This incorporates a screen reader for selection, navigation and direction of destinations, in addition to an early warning system for obstacles. Additionally, a differential position correction was implemented using the BKG Ntrip Client (BNC) software, for the adjustment of coordinates with the precise point positioning (PPP) method through streams in the format of RTCM with casters EPEC3, IGS03 and BCEP00BKG0. The evaluation of the application was performed using the National Standard for Spatial Data Accuracy (NSSDA), establishing 30 control points. These were obtained through the fast static method, in order to compare the horizontal accuracy of the observations in static and navigation modes between high-end and mid-range mobile devices. © 2022 by the authors.		Beltrán-Iza, E.A.; Noroña-Meza, C.O.; Robayo-Nieto, A.A.; Padilla, O.; Toulkeridis, T.	Sustainability (Switzerland)					ConflictExcluded	Excluded	new_screen			2		2022				
839		ModelGuidance	Building a COVID-Safe Navigation App Using a Meta-Model Based Context Server	Building context-aware applications is an already widely researched topic. It is our belief that context awareness has the potential to supplement the Internet of Things, when a suitable methodology including supporting tools will ease the development of context-aware applications. We believe that a meta-model based approach can be key to achieving this goal. In this paper, we present our meta-model based methodology, which allows us to define and build application-specific context models and the integration of sensor data without any programming. We describe how that methodology is applied with the implementation of a relatively simple context-aware COVID-safe navigation app. The outcome showed that programmers with no experience in context-awareness were able to understand the concepts easily and were able to effectively use it after receiving a short training. Therefore, context-awareness is able to be implemented within a short amount of time. We conclude that this can also be the case for the development of other context-aware applications, which have the same context-awareness characteristics. We have also identified further optimization potential, which we will discuss at the conclusion of this article. © 2022 by the authors.		Wojciechowski, M.; Pogscheba, P.	Sensors					ConflictExcluded	Excluded	new_screen			2		2022				
840		ModelGuidance	The PBC Model: Supporting Positive Behaviours in Smart Environments	Several behavioural problems exist in office environments, including resource use, sedentary behaviour, cognitive/multitasking, and social media. These behavioural problems have been solved through subjective or objective techniques. Within objective techniques, behavioural modelling in smart environments (SEs) can allow the adequate provision of services to users of SEs with inputs from user modelling. The effectiveness of current behavioural models relative to user-specific preferences is unclear. This study introduces a new approach to behavioural modelling in smart environments by illustrating how human behaviours can be effectively modelled from user models in SEs. To achieve this aim, a new behavioural model, the Positive Behaviour Change (PBC) Model, was developed and evaluated based on the guidelines from the Design Science Research Methodology. The PBC Model emphasises the importance of using user-specific information within the user model for behavioural modelling. The PBC model comprised the SE, the user model, the behaviour model, classification, and intervention components. The model was evaluated using a naturalistic-summative evaluation through experimentation using office workers. The study contributed to the knowledge base of behavioural modelling by providing a new dimension to behavioural modelling by incorporating the user model. The results from the experiment revealed that behavioural patterns could be extracted from user models, behaviours can be classified and quantified, and changes can be detected in behaviours, which will aid the proper identification of the intervention to provide for users with or without behavioural problems in smart environments. © 2022 by the authors.		Adewoyin, O.; Wesson, J.; Vogts, D.	Sensors					ConflictIncluded	Excluded	new_screen			2		2022				
841		ModelGuidance	A descriptive study of assumptions in STRIDE security threat modeling	Security threat modeling involves the systematic elicitation of plausible threat scenarios, and leads to the identification and articulation of the security requirements in the early stages of software development. Although they are an important source of architectural knowledge, assumptions made in this context are in practice left implicit or at best, documented informally in an unstructured textual format. As guidelines and best practices are lacking, the nature, purpose and impact of assumptions made in this context is generally not well understood. We present a descriptive study of in total 640 textual assumptions made in 96 STRIDE threat models of the same system. The study mainly focuses on the diversity in how assumptions are used in practice, in terms of (i) the role or function of these assumptions in the threat modeling process, (ii) the degree of coupling between the assumptions and the system under analysis, and (iii) the extent to which these assumptions are exclusively specific to security. We observe large differences on all three investigated aspects: practitioners use the mechanism of assumption-making for diverse purposes, but predominantly to exclude certain threats from further analysis, i.e. to scope the analysis effort by steering it away from threat scenarios that are considered less relevant up front. Based on our findings, we argue against the exclusive use of Data Flow Diagrams as the main basis for threat analysis, and in favor of integrating more expressive attacker and trust models which can co-evolve with the threat model and the system. © 2021, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.		Van Landuyt, D.; Joosen, W.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2022				
842		ModelGuidance	Revise and Resubmit: An Intertextual Model of Text-based Collaboration in Peer Review	Peer review is a key component of the publishing process in most fields of science. Increasing submission rates put a strain on reviewing quality and efficiency, motivating the development of applications to support the reviewing and editorial work. While existing NLP studies focus on the analysis of individual texts, editorial assistance often requires modeling interactions between pairs of texts—yet general frameworks and datasets to support this scenario are miss-ing. Relationships between texts are the core object of the intertextuality theory—a family of approaches in literary studies not yet operationalized in NLP. Inspired by prior theoretical work, we propose the first intertextual model of text-based collaboration, which encompasses three major phenomena that make up a full iteration of the review–revise–and–resubmit cycle: prag-matic tagging, linking, and long-document version alignment. While peer review is used across the fields of science and publication formats, existing datasets solely focus on conference-style review in computer science. Addressing this, we instantiate our proposed model in the first annotated multidomain corpus in journal-style post-publication open peer review, and provide detailed insights into the practical aspects of intertextual annotation. Our resource is a major step toward multidomain, fine-grained applications of NLP in editorial support for peer review, and our intertextual framework paves the path for general-purpose modeling of text-based collaboration. We make our corpus, detailed annotation guidelines, and accompanying code publicly available.1. © 2022 Association for Computational Linguistics.		Kuznetsov, I.; Buchmann, J.; Eichler, M.; Gurevych, I.	Computational Linguistics					ConflictExcluded	Excluded	new_screen			2		2022				
843		ModelGuidance	An automated search-based test model generation approach for structural testing of model transformations	Model transformation testing has become crucial as model-driven engineering has raised the abstraction level for developing software systems. Transformation is written to transform models from one level of abstraction to another, for example, model to model or model to code. A major challenge in testing the transformation is the creation of test models, such that (i) they conform to the source meta-model (i.e., multiplicities and Object Constraint Language [OCL] constraints on meta-model) and (ii) they provide coverage of the complete transformation (solving branch conditions for traversing all paths). Manual creation of test models requires a lot of time and effort. Still, the validity of the developed test models cannot be ensured. This paper aims to solve the above challenges using an automated search-based strategy. The proposed approach is two-stepped. First, valid test models are generated by solving source meta-model constraints. Second, the generated models are evolved for achieving the structural coverage of the transformation by solving the branch conditions. A toolset model transformation testing environment (MOTTER) is developed to automate the search-based solution. The proposed work is empirically evaluated on two case studies using four search algorithms. The result reflects that it successfully generates valid test models for achieving desired structural coverage with high performance on both the case studies. © 2022 John Wiley & Sons Ltd.		Jilani, A.A.; Khan, M.U.; Iqbal, M.Z.; Usman, M.	Journal of Software: Evolution and Process					ConflictExcluded	Excluded	new_screen			2		2022				
844		ModelGuidance	An Online Offline Framework for Anomaly Scoring and Detecting New Traffic in Network Streams	Network data constantly evolves with new network applications and protocols. There is a need for robust techniques to detect anomalous behaviour. Offline models trained with static data lose validity when new variants of traffic emerge. They require retraining but the need for ground truth and lengthy training times make this task challenging. Meanwhile, online models which detect outliers in streaming data are susceptible to the curse of dimensionality and natural variability. Today's anomalies may be tomorrow's new traffic and existing methods do not provide a way to differentiate between them. We propose a framework that makes the most of both approaches: an offline deep learning model extracts features of normal traffic and provides a bias for an online outlier detection model to select data for training. The online model retains its previously learnt knowledge and retrains itself with new data. Online thresholds are updated in a drifting manner and the Mann-Whitney U test is incorporated to prevent inaccurate updates. We perform analysis on the scores, develop heuristics to detect new traffic and evaluate using three deep learning models and four outlier detection methods on the UNSW-NB15 and CTU-13 datasets. The framework improves upon any individual offline or online models in isolation. © 1989-2012 IEEE.		Odiathevar, M.; Seah, W.K.G.; Frean, M.; Valera, A.	IEEE Transactions on Knowledge and Data Engineering					ConflictExcluded	Excluded	new_screen			2		2022				
845		ModelGuidance	Deriving model-based safety and security assurance cases from design rationale of countermeasure patterns	Cyber-physical Systems are computerized systems that control mechanical parts. These systems have to be both, safe and secure. Established safety and security standards therefore mandate the creation of assurance cases (ACs) which argue that the system is safe and secure, i.e., that all safety and security goals have been achieved. However, in practice, safety and security teams often work separated and ACs are usually created late in the development in a manual manner. In addition to the high effort required to reconstruct taken design decisions, this approach leads to conflicts being found late, when changes are hardly possible. As engineers often make use of mitigation strategies and countermeasure patterns to achieve the stated safety and security goals, I propose an approach to augment these patterns with additional design rationale and AC fragments to support the creation of complete ACs in a semi-Automatic manner. With this approach, I want to pave the way towards an integrated Safety & Security by Design process by bringing together safety and security experts in early stages of the development. This objective shall be achieved by allowing them to work on a common design rationale, which shall further be re-used to automatically derive ACs. Thereby, the manual effort of AC creation is reduced and the susceptibility to errors is decreased. © 2022 Owner/Author.		Trentinaglia, R.	Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
846		ModelGuidance	Domain-specific model differencing for graphical domain-specific languages	The evolution of models as a result of collaborative effort must be tracked and maintained. The usage of text-based version control systems is ubiquitous, however, it does not assist domain users in comprehending the semantics of model differences. To overcome these concerns, we propose-called DSMCompare-, a complete solution. It considers both the abstract and concrete syntax of a domain-specific language (DSL) to express model differences and facilitates the definition of domain-specific semantics for specific difference patterns. The method extends the DSL automatically to allow for the description of modifications and adapts its graphical concrete syntax to visualize the differences. It moreover enables the creation of semantic differencing rules for identifying recurrent domain-specific difference patterns. Because these rules may conflict with one another, we provide algorithms for resolving conflicts and scheduling rules. We report on evaluations based on synthetic models and version histories of models provided by third parties to illustrate the applicability and effectiveness of our approach. We also outline an extension of DSMCompare to three-way differencing. © 2022 Owner/Author.		Jafarlou, M.Z.	Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
847		ModelGuidance	Exploiting label semantics for rule-based activity recommendation in business process modeling	Business process modeling is a crucial task in organizations. Yet, the creation of consistent and complete process models is challenging and necessitates the support of process modelers with their task. In previous work, we presented a rule-based activity-recommendation approach, which recommends appropriate labels for a new activity inserted by a modeler in a process model under development. While our method has shown to work well, it is limited by the fact that it only learns rules that describe the inter-relations between complete activity labels. In the case that the model's activities and the ones in the training repository are disjoint, the existing approach will thus not be able to provide any recommendations. In this paper, we overcome this restriction by additionally considering the natural language-based semantics of the process models. In particular, we propose a semantics-aware recommendation approach that extends the existing approach in both central phases, i.e., in the rule-learning phase and in the rule-application phase. We equip the rule learning with novel rule types, which capture action and business-object patterns in process models. For the rule application, we developed an optional similarity extension that allows rules to make recommendations even if the bodies of the rules are not exactly true for the given model. Through an evaluation on a large set of real-world process models, we demonstrate that the semantic extensions can improve the quality of recommendations. © 2022 Elsevier Ltd		Sola, D.; van der Aa, H.; Meilicke, C.; Stuckenschmidt, H.	Information Systems					ConflictIncluded	Excluded	new_screen			2		2022				
848		ModelGuidance	Model-based data integration along the product & service life cycle supported by digital twinning	Currently, a mega-trend on digitization and servitization using digital technologies and digital twins to support digital (business) transformation can be observed. In literature, emerging digital technologies are considered as an enabler for the creation of additional value, the strengthening of the customer relationship, and as an accelerator of the servitization process in manufacturing. The introduction of such technologies may result in adaptations of the product & service life cycle as well as the business model. A generic product & service life cycle consisting of four phases – design, simulation, manufacturing, and usage of products and services – serves as a foundation for the integration of digital technologies and related data. It can be observed that there is a gap with respect to data integration between the manufacturing and the usage of products and services. A model-based approach including digital twinning is applied to bridge this gap and to show how data can be integrated along the product & service life cycle. The conceptual approach of such a model-based digital twin environment is presented in form of a meta model. To depict how the integration could be eased and guided in manufacturing, findings of the European project Change2Twin, where a digital twin is established for a paint production pilot, are introduced. This industrial manufacturing pilot was supported by production process models. Additionally, a physical experiment was created to raise awareness for the challenges of digitization and servitization. © 2022 Elsevier B.V.		Woitsch, R.; Sumereder, A.; Falcioni, D.	Computers in Industry					ConflictExcluded	Excluded	new_screen			2		2022				
849		ModelGuidance	Visual aspect-oriented modeling of explorable extended reality environments	The availability of various extended reality (XR) systems for tracking users’ and objects’ behavior opens new opportunities for analyzing users’ and objects’ interactions and autonomous actions. Such analysis can be especially useful and attainable to domain experts when it is based on domain knowledge related to a particular application, liberating the analysts from going into technical details of 3D content. Analysis of XR users’ and objects’ behavior can provide knowledge about the users’ experience, interests and preferences, as well as objects’ features, which may be valuable in various domains, e.g., training, design and marketing. However, the available methods and tools for building XR focus on 3D modeling and programming rather than knowledge representation, making them unsuitable for domain-oriented analysis. In this paper, a new visual approach to modeling explorable XR environments is proposed. It is based on a semantic representation of aspects, which extend the primary code of XR environments to register their behavior in a form explorable with reasoning and queries, appropriate for high-level analysis in arbitrary domains. It permits domain experts to comprehend and analyze what happened in an XR environment regarding users’ and objects’ actions and interactions. The approach has been implemented as an extension to MS Visual Studio and demonstrated in an explorable immersive service guide for household appliances. The evaluation results show that the approach enables efficient development of explorable XR and may be useful for people with limited technical skills. © 2021, The Author(s).		Flotyński, J.	Virtual Reality					ConflictExcluded	Excluded	new_screen			2		2022				
850		ModelGuidance	Construction 4.0, Industry 4.0, and Building Information Modeling (BIM) for Sustainable Building Development within the Smart City	At present, the smart city offers the most desired state of urban development, encompassing, as it does, the concept of sustainable development. The creation of a smart city is closely associated with upgrading the construction industry to encompass many emerging concepts and technologies, such as Construction 4.0, with its roots in Industry 4.0, and the deployment of building information modeling (BIM) as an essential tool for the construction industry. Therefore, this paper aims to explore the current state of the art and development trajectory of the multidisciplinary integration of Construction 4.0, Industry 4.0, BIM, and sustainable construction in the context of the smart city. It is the first attempt in the literature to use both macro-quantitative analysis and micro-qualitative analysis methods to investigate this multidisciplinary research topic. By using the visual bibliometric tool, VOSviewer, and based on macro keyword co-occurrence, this paper is the first to reveal the five keyword-constructed schemes, research hotspots, and development trends of the smart city, Construction 4.0, Industry 4.0, BIM, and sustainable construction, from 2014 to 2021 (a period of eight years). Additionally, the top 11 productive subject areas have been identified with the help of VOSviewer software keyword-clustering analysis and application. Furthermore, the whole-building life cycle is considered as an aid to identifying research gaps and trends, providing suggestions for future research with the assistance of an upgraded version of BIM, namely, city information modeling (CIM) and the future integration of Industry 5.0 and Construction 5.0, or even of Industry Metaverse with Construction Metaverse. © 2022 by the authors.		Chen, Y.; Huang, D.; Liu, Z.; Osmani, M.; Demian, P.	Sustainability (Switzerland)					ConflictExcluded	Excluded	new_screen			2		2022				
851		ModelGuidance	Can non-developers learn a simplified modeling notation quickly?	The User Interface Transition Diagram (UITD) is a simplified modeling notation to describe the transitions between the UIs of a software system. It is designed to be used for customer-developer s improving the models. This study investigates (i) which concepts of the UITD language are easy to understand and which ones require more effort to be understood and (ii) to what extent UITD comprehensibility depends on the user's programming skill level. A questionnaire was applied to a group of 334 non-developers after they received a very brief explanation of the UITD concepts. The results were analyzed using statistical methods. The overall average score of the group was 70.42%, which is quite acceptable considering the briefness of the explanation. We observed a very low correlation between the subjects' programming skill level and their scores. This suggests that, even for people who have little or no programming skills, the entirety of the UITD symbols and concepts should quickly be understood with little further training. © 2022 John Wiley & Sons Ltd.		Cervantes-Ojeda, J.; Gómez-Fuentes, M.; Chacón-Acosta, G.	Journal of Software: Evolution and Process					ConflictExcluded	Excluded	new_screen			2		2022				
852		ModelGuidance	GoRIM: a model-driven method for enhancing regulatory intelligence	Regulators are under constant pressure to demonstrate if and how the regulations they administer, which impose many requirements on various systems and processes, achieve intended societal outcomes. Traditionally, regulators have relied on impact assessments, risk analysis, and cost–benefit analysis to assess compliance with regulations. These methods, however, are effort and time intensive and focus on the efficiency of regulatory processes rather than on the effectiveness of the regulatory initiatives meant to improve compliance to regulations and the latter’s impact on intended societal outcomes. Goal-oriented modelling and data analytics approaches provide the basis for the development of more sophisticated methods and tools to better address the needs of regulators. This paper introduces the goal-oriented regulatory intelligence method (GoRIM), which enables effective management of regulations through modelling and data analytics. Through continuous monitoring, assessing, and reporting on efficiency and effectiveness aspects, GoRIM is meant to facilitate the analysis of feedback loops between regulations, regulatory initiatives, and societal outcomes. To demonstrate the applicability and perceived usefulness of GoRIM in addressing the first feedback loop between regulations and initiatives, we evaluated it through three case studies involving regulators from different contexts, with positive results. GoRIM extends the concept of regulatory intelligence beyond the analysis of compliance. It also provides practical guidelines and tools to regulators for making, in a timely way, evidence-based decisions related to the addition, modification, or repeal of regulations and related regulatory initiatives. In addition, GoRIM helps better identify software and information needs for enabling such decisions. © 2021, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.		Akhigbe, O.; Amyot, D.; Richards, G.; Lessard, L.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2022				
853		ModelGuidance	A VILLAGE MONOGRAPH INFORMATION SYSTEM MODELING: CASE STUDY MARTAPURA SUB-DISTRICT, SOUTH SUMATERA, INDONESIA	Village monographs are data collection carried out by the village government that is systematic, complete, accurate, and integrated in the administration of government. In Indonesia, one of the local government agencies that are obliged to update their monograph data are villages in the Martapura District, Ogan Komering Ulu Timur Regency, South Sumatra Province. The village monograph aims to make it easier for the government, community or interested parties to obtain data and information from an area, especially village data contained in the Martapura sub-district. In this case, a data and information management model is needed to manage village data which encourages researchers to build a monographic information system. This research focuses on the development of a village monograph information system model which is implemented using a software prototype. The strategy and contribution in this research is the creation of a village monograph information model that can inform all existing village potentials using the Research and Development (R&D) method, while the application prototype development uses the Unified Process (UP). The modeling system used in this study is shown in the form of a UML diagram consisting of activity diagrams, entity relationship diagrams, and use case diagrams, the results of this study are presented in the form of data in the form of village monographs in the Martapura sub-district, Ogan Komering Ulu Timur Regency which are listed in government website, so that the data presented can be reprocessed and can be updated at any time. © 2022 Little Lion Scientific		Marnisah, L.; Setiawan, H.; Coyanda, J.R.	Journal of Theoretical and Applied Information Technology					ConflictIncluded	Excluded	new_screen			2		2022				
854		ModelGuidance	Quality Models for Artificial Intelligence Systems: Characteristic‐Based Approach, Development and Application	The factors complicating the specification of requirements for artificial intelligence systems (AIS) and their verification for the AIS creation and modernization are analyzed. The harmonization of definitions and building of a hierarchy of AIS characteristics for regulation of the development of techniques and tools for standardization, as well as evaluation and provision of requirements during the creation and implementation of AIS, is extremely important. The study aims to develop and demonstrate the use of quality models for artificial intelligence (AI), AI platform (AIP), and AIS based on the definition and ordering of characteristics. The principles of AI quality model development and its sequence are substantiated. Approaches to formulating definitions of AIS characteristics, methods of representation of dependencies, and hierarchies of characteristics are given. The definitions and harmonization options of hierarchical relations between 46 characteristics of AI and AIP are suggested. The quality models of AI, AIP, and AIS presented in analytical, tabular, and graph forms, are described. The so‐called basic models with reduced sets of the most important characteristics are presented. Examples of AIS quality models for UAV video navigation systems and decision support systems for diagnosing diseases are described. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.		Kharchenko, V.; Fesenko, H.; Illiashenko, O.	Sensors					ConflictExcluded	Excluded	new_screen			2		2022				
855		ModelGuidance	Hybrid tree model for root cause analysis of wireless network fault localization	Localizing the root cause of network faults is crucial to network operation and maintenance. Operational expenses will be saved if the root cause can be identified accurately. However, due to the complicated wireless environments and network architectures, accurate root cause localization of network falut meets the difficulties including missing data, hybrid fault behaviors, and short of well-labeled data. In this study, global and local features are constructed to make new feature representation for data sample, which can highlight the temporal characteristics and contextual information of the root cause analysis data. A hybrid tree model (HTM) ensembled by CatBoost, XGBoost and LightGBM is proposed to interpret the hybrid fault behaviors from several perspectives and discriminate different root causes. Based on the combination of global and local features, a semi-supervised training strategy is utilized to train the HTM for dealing with short of well-labeled data. The experiments are conducted on the real-world dataset from ICASSP 2022 AIOps Challenge, and the results show that the global and local feature based HTM achieves the best model performance comparing with other models. Meanwhile, our solution achieves third place in the competition leaderboard which shows the model effectiveness. © 2022 - IOS Press. All rights reserved.		Chen, B.; Yu, L.; Luo, W.; Wu, C.; Li, M.; Tan, H.; Huang, J.; Wan, Z.	Web Intelligence					ConflictExcluded	Excluded	new_screen			2		2022				
856		ModelGuidance	The supply chain of a Living Lab: Modelling security, privacy, and vulnerability issues alongside with their impact and potential mitigation strategies	Worldwide, vulnerabilities and weak security strategies are exploited everyday by adversaries in healthcare organizations. Healthcare is targeted because these crimes are high-reward and low-risk. The attacks differ every time, from hacking medical devices, such as sensors, to stealing patients’ data from electronic health records databases. The effects of these attacks are both short and long term lived, depending on the incidence handling process that each sector is adopting. The Covid-19 pandemic has exposed, in full, that healthcare systems are vulnerable and vastly unprotected while representing a threat to global public health. An important part of the healthcare ecosystem, for the development and validation of innovative tools and methodologies, is the Living Labs which are community-based and adopt co-creation as their primary approach. Because of the many stakeholders involved in the processes of the Living Labs, cybersecurity ought to be in their center. Besides the proven great importance of the Living Labs as part of healthcare, there is no research on security and privacy issues around them. The main purpose of this paper is to explore the supply chain of a Living Lab and identify its security and privacy challenges alongside with its vulnerabilities. The SecTro tool has been used to provide a thorough analysis which follows the Privacy-by-Design approach. The originality and novelty of our work are shown from: (i) moving one step further from desk studies by including requirements from citizens and professionals; (ii) being integrated into an effort from various researchers to supply a holistic approach to Data Privacy Governance; (iii) the first time which a paper is considering and analysing the supply chain of the Living Labs. © 2022, Innovative Information Science and Technology Research Group. All rights reserved.		Kioskli, K.; Dellagiacoma, D.; Fotis, T.; Mouratidis, H.	Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications					ConflictExcluded	Excluded	new_screen			2		2022				
857		ModelGuidance	Construction of a quality model for machine learning systems	Nowadays, systems containing components based on machine learning (ML) methods are becoming more widespread. In order to ensure the intended behavior of a software system, there are standards that define necessary qualities of the system and its components (such as ISO/IEC 25010). Due to the different nature of ML, we have to re-interpret existing qualities for ML systems or add new ones (such as trustworthiness). We have to be very precise about which quality property is relevant for which entity of interest (such as completeness of training data or correctness of trained model), and how to objectively evaluate adherence to quality requirements. In this article, we present how to systematically construct quality models for ML systems based on an industrial use case. This quality model enables practitioners to specify and assess qualities for ML systems objectively. In addition to the overall construction process described, the main outcomes include a meta-model for specifying quality models for ML systems, reference elements regarding relevant views, entities, quality properties, and measures for ML systems based on existing research, an example instantiation of a quality model for a concrete industrial use case, and lessons learned from applying the construction process. We found that it is crucial to follow a systematic process in order to come up with measurable quality properties that can be evaluated in practice. In the future, we want to learn how the term quality differs between different types of ML systems and come up with reference quality models for evaluating qualities of ML systems. © 2021, The Author(s).		Siebert, J.; Joeckel, L.; Heidrich, J.; Trendowicz, A.; Nakamichi, K.; Ohashi, K.; Namba, I.; Yamamoto, R.; Aoyama, M.	Software Quality Journal					ConflictExcluded	Excluded	new_screen			2		2022				
858		ModelGuidance	Recommending metamodel concepts during modeling activities with pre-trained language models	The design of conceptually sound metamodels that embody proper semantics in relation to the application domain is particularly tedious in model-driven engineering. As metamodels define complex relationships between domain concepts, it is crucial for a modeler to define these concepts thoroughly while being consistent with respect to the application domain. We propose an approach to assist a modeler in the design of metamodel by recommending relevant domain concepts in several modeling scenarios. Our approach does not require knowledge from the domain or to hand-design completion rules. Instead, we design a fully data-driven approach using a deep learning model that is able to abstract domain concepts by learning from both structural and lexical metamodel properties in a corpus of thousands of independent metamodels. We evaluate our approach on a test set containing 166 metamodels, unseen during the model training, with more than 5000 test samples. Our preliminary results show that the trained model is able to provide accurate top 5 lists of relevant recommendations for concept renaming scenarios. Although promising, the results are less compelling for the scenario of the iterative construction of the metamodel, in part because of the conservative strategy we use to evaluate the recommendations. © 2022, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.		Weyssow, M.; Sahraoui, H.; Syriani, E.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2022				
859		ModelGuidance	The architectural design and implementation of a digital platform for Industry 4.0 SME collaboration	This paper presents the architectural design and implementation of DIGICOR — a collaborative Industry 4.0 (I4.0) platform aimed at enabling SMEs to dynamically form supply-chain collaborations so as to pool production capacities and capabilities and jointly address complex supply chain requests. The DIGICOR architecture builds on the event-driven service-oriented architecture (EDSOA) model to support the collaboration between SMEs, dynamic modelling of their systems and services, and their integration in the supply chains of large OEMs, enforcing digital platform governance rules for knowledge protection and security. In contrast to the extant platforms assessed through our systematic review, the proposed architecture supports the entire lifecycle of I4.0 collaborations, from creation of viable teams to deployment and operation. The architecture provides an open and extensible solution for (i) creating a marketplace for the collaboration partners, (ii) providing services for planning and controlling the collaborative production, logistics, and risk management, while supporting APIs for third parties to provide complementary services such as advanced analytics, simulation, and optimization; and (iii) seamless connectivity to automation solutions, smart objects and real-time data sources. We report on the design of the architecture and its innovative artefacts such as the component model description and the semantic model constructs created for meaningful event exchanges between architectural end-points. We also describe a running use case demonstrating implementation scenarios. © 2022 Elsevier B.V.		Liu, Z.; Sampaio, P.; Pishchulov, G.; Mehandjiev, N.; Cisneros-Cabrera, S.; Schirrmann, A.; Jiru, F.; Bnouhanna, N.	Computers in Industry					ConflictExcluded	Excluded	new_screen			2		2022				
860		ModelGuidance	Promoting social diversity for the automated learning of complex MDE artifacts	Software modeling activities typically involve a tedious and time-consuming effort by specially trained personnel. This lack of automation hampers the adoption of model-driven engineering (MDE). Nevertheless, in the recent years, much research work has been dedicated to learn executable MDE artifacts instead of writing them manually. In this context, mono- and multi-objective genetic programming (GP) has proven being an efficient and reliable method to derive automation knowledge by using, as training data, a set of examples representing the expected behavior of an artifact. Generally, conformance to the training example set is the main objective to lead the learning process. Yet, single fitness peak, or local optima deadlock, a common challenge in GP, hinders the application of GP to MDE. In this paper, we propose a strategy to promote populations’ social diversity during the GP learning process. We evaluate our approach with an empirical study featuring the case of learning well-formedness rules in MDE with a multi-objective genetic programming algorithm. Our evaluation shows that integration of social diversity leads to more efficient search, faster convergence, and more generalizable results. Moreover, when the social diversity is used as crowding distance, this convergence is uniform through a hundred of runs despite the probabilistic nature of GP. It also shows that genotypic diversity strategies cannot achieve comparable results. © 2022, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.		Batot, E.R.; Sahraoui, H.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2022				
861		ModelGuidance	MDD4CPD: Model Driven Development Approach Proposal for Cyber-Physical Devices	Context: the Internet of Things (IoT) is a paradigm that provides an ecosystem for a fast-growing quantity of connected devices, also defined as cyber-physical devices. Problem: the creation of Internet of Things solutions is fairly complex, having to integrate and communicate between sensors, devices, and larger systems, presenting many technical challenges not present in the same magnitude as other paradigms. One of the most affected segments is the development of cyber-physical devices. Much of its development energy is spent on the connecting and efficacy of these devices, often overlooking the future impacts of the proposed solution, caused by a lack of software quality. SI Theory: this work was designed under the Design Theory, currently found in the Justify/Evaluate stage's refinement process. Methodology: model-driven development (MDD), a software development methodology that allows the generation of software solutions through abstract models, which aims to facilitate development, bringing the abstract solution closer to the problem's implementation. In this work, a custom MDD approach for cyber-physical devices is presented. Results: the proposed approach and tool were able to generate C++ source code for Arduino devices, the generated source code performed better than control when compared using OOP specific software metrics. Contributions: this study presents an MDD approach for cyber-physical devices, where the innovative models are based and coupled to the hardware specifications, being extensible and flexible. © 2022 ACM.		Goncalves, R.F.; Menolli, A.; Dionisio, G.M.	ACM International Conference Proceeding Series					ConflictIncluded	Included	new_screen			2		2022				
862		ModelGuidance	A unifying framework for the systematic analysis of Git workflows	Context: Git is a popular distributed version control system that provides flexibility and robustness for software development projects. Several workflows have been proposed to codify the way project contributors work collaboratively with Git. Some workflows are highly prescriptive while others allow more leeway but do not provide the same level of code quality assurance, thus, preventing their comparison to determine the most suitable for a specific set of requirements, or to ascertain if a workflow is being properly followed. Objective: In this paper, we propose a novel feature-based framework for describing Git workflows, based on a study of 26 existing instances. The framework enables workflows’ comparison, to discern how, and to what extent, they exploit Git capabilities for collaborative software development. Methods: The framework uses feature-based modelling to map Git capabilities, regularly expressed as contribution guidelines, and a set of features that can be impartially applied to all the workflows considered. Through this framework, each workflow was characterised based on their publicly available descriptions. The characterisations were then vectorised and processed using hierarchical clustering to determine workflows’ similarities and to identify which features are most popular, and more relevant for discriminatory purposes. Results: Comparative analysis evidenced that some workflows claiming to be closely related, when described and then characterised, turned out to have more differences than similarities. The analysis also showed that most workflows focus on the branching and code integration strategies, whilst others emphasise subtle differences from other popular workflows or describe a specific development route and are, thus, widely reused. Conclusion: The characterisation and clustering analysis demonstrated that our framework can be used to compare and analyse Git workflows. © 2022 Elsevier B.V.		Cortés Ríos, J.C.; Embury, S.M.; Eraslan, S.	Information and Software Technology					ConflictExcluded	Excluded	new_screen			2		2022				
863		ModelGuidance	Improved model for knowledge representation: TransMR	Knowledge graphs have developed rapidly in recent years, and knowledge representation learning is a fundamental task of knowledge graphs, so knowledge representation learning has likewise received widespread attention. Therefore, a series of knowledge representation models based on TransE methods have been proposed by scholars one after another, among which, the translation model TransE has low model complexity, high computational efficiency, and strong semantic representation ability for knowledge representation of triples. However, the TransE method cannot handle dealing with complex relations. In view of this, this paper proposes an improved knowledge representation model TransMR based on the TransE method, which uses the Marxian distance instead of Euclidean distance to calculate the distance between vectors, and builds entity and relationship models in entity space and relationship space respectively, in which the back propagation and nonlinear operation of single layer neural network are used to enhance the semantic connection between them. Meanwhile, during the model training process, experiments are conducted to improve the fault tolerance of negative example triples by using substitution for the most similar entities. © 2022 ACM.		Wang, X.; Zhang, Y.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2022				
864		ModelGuidance	Parameterised robotic system meta-model expressed by Hierarchical Petri nets	The paper presents a model-based approach to developing robotic system controllers. Central to this approach is a parameterised meta-model that describes the generic robotic system from two points of view: structure and activity. By appropriate parameterisation of the meta-model one can obtain a particular model of a robotic system performing desired tasks. The meta-model is expressed using the Robotic System Hierarchical Petri Net (RSHPN), a 6-layer Petri net tailored for robotics. Each layer describes the activity of the robotic system at a completely different level of abstraction. This guarantees the separation of concerns. The required model emerges from the meta-model by appropriate parameterisation of the layers of the RSHPN. Introduction of parameterisation enables the robot designer to focus only on the concepts derived from the domain. It greatly facilitates the robotic system development process as it gives the designer clear guidance on what needs to be defined and what is imposed by the design pattern. The resulting single RSHPN model is used both to verify some properties of the system, e.g. lack of deadlocks, but also to automatically generate controller code. The presented approach is illustrated by examples of the creation of two different robotic systems. © 2021 The Author(s)		Figat, M.; Zieliński, C.	Robotics and Autonomous Systems					ConflictExcluded	Excluded	new_screen			2		2022				
865		ModelGuidance	Software Architecture Design of Animation Studies Platform Using Structure-Behavior Coalescence Method	Animation education in the new media era is moving toward the goal of cultivating high-end talents. The development of an architecture-oriented animation studies platform provides guarantee for the training of talents in terms of teaching quality. This research uses the Internet as the medium and mobile phones and computer clients as the main technology platforms, starting from the software architecture and constructing the system model of the animation studies platform according to the Structure-Behavior Coalescence (SBC) method. The core theme of Model-Based Systems Engineering (MBSE) is a modeling language with model consistency of systems structure and systems behavior. This paper developed Structure-Behavior Coalescence State Machine (SBC-SM) as the formal language for the MBSE animation studies platform design model singularity. The model consistency will be fully guaranteed in the MBSE animation studies platform design when the SBC state machine approach is adopted. It not only improves the efficiency of platform development but also reduces the difficulty and risk of platform development. © 2022 World Scientific Publishing Company.		Chen, R.-R.; Lin, C.-C.; Wang, L.; Chao, W.S.	Journal of Circuits, Systems and Computers					ConflictIncluded	Excluded	new_screen			2		2022				
866		ModelGuidance	A novel approach with an extensive case study and experiment for automatic code generation from the XMI schema Of UML models	Software models at different levels of abstraction and from different perspectives contribute to the creation of compilable code in the implementation phase of the SDLC. Traditionally, the development of the code is a human-intensive act and prone to misinterpretation and defects. The defect elimination process is again an arduous time-consuming task with increased time-to-deliver and cost. Hence, a novel approach is proposed to generate the code with the activity diagram and sequence diagram as the focus. The activity diagram and sequence diagrams and are defined as part of the UML definition to define the object flow of the system and interaction between the objects, respectively. An XMI schema is a text representation of any software model that is exported from a modeling tool. The modeling tool BoUML exports the required schema from the given input models such as sequence diagrams and activity diagrams. The proposed JC_Gen extracts artifacts from the XMI schema of these two models to generate the code automatically. The focus is mainly on class definition, member declaration, methods’ definition, and function call in generated code. © 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.		Durai, A.D.; Ganesh, M.; Mathew, R.M.; Anguraj, D.K.	Journal of Supercomputing					ConflictExcluded	Excluded	new_screen			2		2022				
867		ModelGuidance	FAME: 3D Shape Generation Via Functionality-Aware Model Evolution	We introduce a modeling tool which can evolve a set of 3D objects in a functionality-aware manner. Our goal is for the evolution to generate large and diverse sets of plausible 3D objects for data augmentation, constrained modeling, as well as open-ended exploration to possibly inspire new designs. Starting with an initial population of 3D objects belonging to one or more functional categories, we evolve the shapes through part recombination to produce generations of hybrids or crossbreeds between parents from the heterogeneous shape collection. Evolutionary selection of offsprings is guided both by a functional plausibility score derived from functionality analysis of shapes in the initial population and user preference, as in a design gallery. Since cross-category hybridization may result in offsprings not belonging to any of the known functional categories, we develop a means for functionality partial matching to evaluate functional plausibility on partial shapes. We show a variety of plausible hybrid shapes generated by our functionality-aware model evolution, which can complement existing datasets as training data and boost the performance of contemporary data-driven segmentation schemes, especially in challenging cases. Our tool supports constrained modeling, allowing users to restrict or steer the model evolution with functionality labels. At the same time, unexpected yet functional object prototypes can emerge during open-ended exploration owing to structure breaking when evolving a heterogeneous collection. © 1995-2012 IEEE.		Guan, Y.; Liu, H.; Liu, K.; Yin, K.; Hu, R.; Van Kaick, O.; Zhang, Y.; Yumer, E.; Carr, N.; Mech, R.; Zhang, H.	IEEE Transactions on Visualization and Computer Graphics					ConflictExcluded	Excluded	new_screen			2		2022				
868		ModelGuidance	Smart Contract Vulnerability Detection Model Based on Multi‐Task Learning	The key issue in the field of smart contract security is efficient and rapid vulnerability detection in smart contracts. Most of the existing detection methods can only detect the presence of vulnerabilities in the contract and can hardly identify their type. Furthermore, they have poor scalability. To resolve these issues, in this study, we developed a smart contract vulnerability detection model based on multi‐task learning. By setting auxiliary tasks to learn more directional vulnerability features, the detection capability of the model was improved to realize the detection and recognition of vulnerabilities. The model is based on a hard‐sharing design, which consists of two parts. First, the bottom sharing layer is mainly used to learn the semantic information of the input contract. The text representation is first transformed into a new vector by word and positional embedding, and then the neural network, based on an attention mechanism, is used to learn and extract the feature vector of the contract. Second, the task‐specific layer is mainly employed to realize the functions of each task. A classical convolutional neural network was used to construct a classification model for each task that learns and extracts features from the shared layer for training to achieve their respective task objectives. The experimental results show that the model can better identify the types of vulnerabilities after adding the auxiliary vulnerability detection task. This model realizes the detection of vulnerabilities and recognizes three types of vulnerabilities. The multi‐task model was observed to perform better and is less expensive than a single‐task model in terms of time, computation, and storage. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.		Huang, J.; Zhou, K.; Xiong, A.; Li, D.	Sensors					ConflictExcluded	Excluded	new_screen			2		2022				
869		ModelGuidance	Modelling human-centric aspects of end-users with iStar	Purpose: Human-centric characteristics of the end-users of software systems, such as gender, age, emotions, personality, language, culture, and physical and mental impairments, play an essential role in the uptake and usage of the software. Current software tools suffer from the lack of in-depth elicitation and understanding of these human-centric requirements during the design and modelling of the system. This can lead to ineffective and hard to use software for some users. Methods: In this paper, to be able to account for contextual variables in human interaction with diverse characteristics, we propose an approach for using personas and contexts to model human-centric aspects of the software in goal models. To achieve this, we select the iStar language due to its ability to model social, intentional and strategic dimensions, and propose an extension of it to model human-centric aspects of the software. Our novel approach is illustrated with two examples. Results: We conducted user evaluation studies to understand how users model human aspects, and also to measure the effectiveness of our approach. Results show the lack of consideration of the human-centric aspects in existing modelling frameworks and how our extended model can simplify the understanding and addressing of such aspects. Conclusions: This shows and encourages that more research on modelling human aspects of the end-users is required to achieve human-centred modelling. © 2022 Elsevier Ltd		Singh, H.; Khalajzadeh, H.; Paktinat, S.; Graetsch, U.M.; Grundy, J.	Journal of Computer Languages					ConflictIncluded	Excluded	new_screen			2		2022				
870		ModelGuidance	Using of i∗(iStar) 2.0 for Improving the Use Cases Derivation	The process of deriving use cases from organizational models built using the i ∗ framework has been presented in previous works. However, the guidelines used to derive use cases are based on the elements of the original version of i*. More recently, the new version i ∗ 2.0 has been proposed incorporating important changes which must be evaluated in relation to their impact on the use case derivation process. In this work, this evaluation is carried out, the guidelines modified and applied to an example showing the improvements obtained. © 2003-2012 IEEE.		Casarotto, B.L.; Lopes Geraldino, G.C.; Araya Santander, V.F.; Freitas Da Silva, I.; Toranzo Cespedes, M.A.	IEEE Latin America Transactions					ConflictExcluded	Excluded	new_screen			2		2022				
871		ModelGuidance	Dynamic Models – The MetaMorph Formalism and Model-Operations	Models unfolding their full power are not static but dynamic, interactive artifacts. Mature modeling methods offer means to operationalize models, amplifying their value beyond mere visualizations. Nevertheless, operations on models are regularly not an integral part of the language specification, even less an object of formalization. In this approach, we demonstrate how to capture the core concepts of operations on models in our formalism MetaMorph to allow for an extension of the formal definition of a language’s syntax with a precise but platform-independent specification of language functionality. We understand as a model a series of model states that flow into one another through the interaction of the modeler and provided operations. Thereby, we distinguish structural events for the basic changes and domain events for the semantic-aware operations on models, as well as model operations in the creation phase and the operationalization phase of a model. To examine our considerations on an example, we employ ProVis, a modeling method for stochastic education. © 2022, IFIP International Federation for Information Processing.		Döller, V.; Karagiannis, D.						ConflictExcluded	Excluded	new_screen			2		2022				
872		ModelGuidance	Generating structurally realistic models with deep autoregressive networks	Model generators are important tools in model-based systems engineering to automate the creation of software models for tasks like testing and benchmarking. Previous works have established four properties that a generator should satisfy: consistency, diversity, scalability, and structural realism. Although several generators have been proposed, none of them is focused on realism. As a result, automatically generated models are typically simple and appear synthetic. This work proposes a new architecture for model generators which is specifically designed to be structurally realistic. Given a dataset consisting of several models deemed as real models, this type of generators is able to produce new models which are structurally similar to the models in the dataset, but are fundamentally novel models. Our implementation, named <sc>ModelMime</sc> (M2), is based on a deep autoregressive model which combines a Graph Neural Network with a Recurrent Neural Network. We decompose each model into a sequence of edit operations, and the neural network is trained in the task of predicting the next edit operation given a partial model. At inference time, the system produces new models by sampling edit operations and iteratively completing the model. We have evaluated M2 with respect to three state-of-the-art generators, showing that 1) our generator outperforms the others in terms of the structurally realistic property 2) the models generated by M2 are most of the time consistent, 3) the diversity of the generated models is at least the same as the real ones and, 4) the generation process is scalable once the generator is trained. IEEE		Lopez, J.A.H.; Cuadrado, J.S.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2022				
873		ModelGuidance	Mastering Agile Practice Adoption through a Model-Driven Approach for the Combination of Development Methods	Many software companies are adapting their traditional development processes to incorporate agile practices. In this context, it is necessary to count on expert knowledge to evaluate different agile practices and configure them according to project needs. However, this expert knowledge is scarce, difficult to validate, and time-consuming, since it is applied manually. As a solution, the paper presents a model-driven approach, called SIAM, which automatically generates guidelines for the adoption of agile practices through the combination of different development methods. SIAM is supported by a meta-model architecture to implement a knowledge repository that characterizes method configuration decisions, which can be reused in different development projects. SIAM has been implemented in a tool suite that facilitates the specification of models and the identification of issues during the definition of the development processes. The approach has been successfully applied to reconfigure an industrial development process with agile methods, showing that the effort required for tailoring agile practices according to organizational standards is considerably reduced. © 2022, The Author(s), under exclusive licence to Springer Fachmedien Wiesbaden GmbH.		Giachetti, G.; de la Vara, J.L.; Marín, B.	Business and Information Systems Engineering					ConflictIncluded	Excluded	new_screen			2		2022				
874		ModelGuidance	A Hybrid Multiple Models Transfer Approach for Cross-Project Software Defect Prediction	For a new project, it is impossible to get a reliable prediction model because of the lack of sufficient training data. To solve the problem, researchers proposed cross-project defect prediction (CPDP). For CPDP, most researchers focus on how to reduce the distribution difference between training data and test data, and ignore the impact of class imbalance on prediction performance. This paper proposes a hybrid multiple models transfer approach (HMMTA) for cross-project software defect prediction. First, several instances that are most similar to each target project instance are selected from all source projects to form the training data. Second, the same number of instances as that of the defected class are randomly selected from all the non-defect class in each iteration. Next, instances selected from the non-defect classes and all defected class instances are combined to form the training data. Third, the transfer learning method called ETrAdaBoost is used to iteratively construct multiple prediction models. Finally, the prediction models obtained from multiple iterations are integrated by the ensemble learning method to obtain the final prediction model. We evaluate our approach on 53 projects from AEEEM, PROMISE, SOFTLAB and ReLink four defect repositories, and compare it with 10 baseline CPDP approaches. The experimental results show that the prediction performance of our approach significantly outperforms the state-of-the-art CPDP methods. Besides, we also find that our approach has the comparable prediction performance as within-project defect prediction (WPDP) approaches. These experimental results demonstrate the effectiveness of HMMTA approach for CPDP. © 2022 World Scientific Publishing Company.		Zhang, S.; Jiang, S.; Yan, Y.	International Journal of Software Engineering and Knowledge Engineering					ConflictExcluded	Excluded	new_screen			2		2022				
875		ModelGuidance	The Use of a Framework to Support Gamification Evaluation in Knowledge Management Teaching in Software Engineering	This Research to Practice Full Paper presents that the use of gamification - the adoption of game elements in non- game contexts - is a recurring theme in software engineering education literature in the last decade. Gamification has been largely used to increase the engagement and motivation of students and professionals in their organizations, with a variety of models/frameworks for developing gamified approaches. Studies report positive and negative outcomes from the adoption of gamification. However, generalization is difficult because: (i) the evaluation data are heavily coupled to context and individual characteristics of participants, (ii) there are often insufficient detail on the design of evaluation procedures, hampering replication, (iii) there is lack of significant statistical data and imprecision of qualitative data, and (iv) there are no standard models in use to support the evaluation of gamification, hence there are no standardization in design, data analysis and report of gamification evaluation. The empirical data published so far are not sufficient to elucidate the phenomena resulting from the use of gamification, as there is no standardization in the specification of evaluation strategies, methods of analysis and reporting of results. Therefore, the objective of this study is to present and discuss the use of a framework for the evaluation of gamification in the context of software engineering education and training. For this, we executed a case study, in which the framework was used to support the design of an evaluation study for a gamification case in a knowledge management research group in a public university. Our main findings are: the framework helped streamlining the design of the evaluation study, considering the consistency between data to be collected, evaluation questions, and the goals of the evaluation study, that different rounds of analysis are supported, and that analysis of data relating to one evaluation question can complement analysis of other questions. © 2022 IEEE.		Monteiro, R.H.B.; Oliveira, S.R.B.; De Almeida, M.R.; Da Silva Alcantara, A.	Proceedings - Frontiers in Education Conference, FIE					ConflictExcluded	Excluded	new_screen			2		2022				
876		ModelGuidance	Research and Construction of Image Classification Model Based on Deep Adaptive Network Method	Due to the limitations of convolutional neural network in the process of image classification, this paper proposes an image classification model fused with deep multi-feature transfer network based on the existing image classification models, and improves the accuracy of image classification by optimizing the convolutional neural network model. The convolutional model optimized in this paper adopts an eight-layer network structure, and the eighth layer is regarded as an adaptive layer. The loss value of the network is about 81% accurate. Finally, the deep network adaptation algorithm is used to compare the accuracy of the two pre-training models, AlexNet and ResNet, and it is obtained that the migration rate of ResNet after adaptive layer processing is significantly higher than that of AlexNet, and the accuracy rate is increased from 75% to 80%, the classification effect is significantly improved. © 2022 IEEE.		Tang, Y.; Zhou, W.; Tian, L.; Guo, R.; Ma, J.; Lv, D.	2022 2nd International Conference on Computer Science, Electronic Information Engineering and Intelligent Control Technology, CEI 2022					ConflictExcluded	Excluded	new_screen			2		2022				
877		ModelGuidance	UML to code, and code to UML, a view inside implementation challenges and cost	Due to benefits such as cost savings and accuracy, automated translation of UML models to executable code is becoming more popular. However, important issues in this field include maintainability and efficiency of the produced code, as well as evaluating the consistency of UML models. This paper describes a mechanism for automatically translating UML models into code in a specific programming language. For automatic code creation, the program UML to Code employs UML class diagrams for structural reference. The program creates code structure based on the class diagram, having as backbone, a state machine that converts the XML into code. The code generating tool is experimentally validated using a case study. The resulting code is compatible with UML models, functional, efficient and intelligible, according to the results. © 2022 IEEE.		Apostol, D.-C.; Rusovan, P.-D.; Marcu, M.	2022 26th International Conference on System Theory, Control and Computing, ICSTCC 2022 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
878		ModelGuidance	Who owns the address? A performant block storage model for hybrid cloud	Rapidly growing data volumes stimulate the migration of block storage from on-premise to hybrid cloud. Hybrid cloud block storage is composed of both on-premise and remote cloud storage. Unfortunately, the heterogeneity of on-premise clients (e.g., laptops, mobile devices, etc.) with various operating systems encumber the hybrid cloud architecture design. What's worse, the demanding fault-tolerance and latency requirements pose challenges to the block storage system. Under the premise of strong consistency and availability, there are two mainstream models of hybrid storage systems: the low latency but low throughput 'active-standby' model where only one node can provide reads and writes, and the high throughput but high latency 'active-active' model where all nodes can provide reads and writes. To address the dilemma between throughput and latency, we design a novel storage model called the 'logical-active' model, which partitions the input data into shards in terms of the block address ranges and selects one owner node called 'logical-active' for each shard. A unique 'logical-active' node manages the creation and deletion of the shard and provides reads and writes for the clients, while one or more borrower nodes called 'logical-standby' provide only reads after synchronization with the 'logical-active' node. In this way, the 'logical-active' model achieves low latency close to the 'active-standby' model and high throughput close to the 'active-active' model. © 2022 IEICE.		Jiang, F.; Cheng, Y.; Qin, B.; Hui, Z.	APNOMS 2022 - 23rd Asia-Pacific Network Operations and Management Symposium: Data-Driven Intelligent Management in the Era of beyond 5G					ConflictIncluded	Excluded	new_screen			2		2022				
879		ModelGuidance	XGBoost-Based Risk Assessment Model for Hazardous Chemical Company	In order to improve the risk identification ability and the accident prevention ability of hazardous chemical companies, a XGBoost-based risk assessment model was proposed. Model training was conducted with the data of 31,827 hazardous chemical companies in China in June 2022, verified with the data of these companies in July 2022. The accuracy of the XGBoost-based risk assessment model is over 90 percent, and the recall rate is around 80 percent. © 2022 IEEE.		Lin, L.; Guo, W.; Weng, Z.; Tian, L.	Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS					ConflictExcluded	Excluded	new_screen			2		2022				
880		ModelGuidance	Software Engineering Intelligent Education Platform Based on LSTM Training Model	With the rapid development of the Internet, the way of education is gradually tending to the network platform, so the intelligent education platform plays an extremely important role in the diversified way of education. It has always been an important issue in software engineering teaching to provide learners with reading materials of appropriate complexity. At present, the automatic classification of text complexity is still mainly based on the construction of linear model formulas. But due to the limited number of features eventually entering the model, the accuracy is generally not high, and it is difficult to extend to other data sets. This paper aims to explore the performance of neural network technology in the text complexity classification models with the help of multi-dimensional features and feature optimization. After comparative experiments, the text complexity classification model based on the neural network has the best performance. Its accuracy, recall, and F1 comprehensive evaluation indicators in cross-validation are better than other methods, which not only have higher prediction accuracy, but also have more stable performance. The model established from that has a strong generalization ability for new data, with obvious advantages. © 2022 SPIE.		Qin, F.; Li, L.; Zeng, W.; Wang, T.; Wang, L.	Proceedings of SPIE - The International Society for Optical Engineering					ConflictExcluded	Excluded	new_screen			2		2022				
881		ModelGuidance	Stra2Bis: A Model-Driven Method for Aligning Business Strategy and Business Processes	MDA-based initiatives for software development have included computation-independent models to align information system models with business knowledge which is important in the development process. One source of business knowledge is the business strategy, which, traditionally, has had a long-term perspective; changes in the organisational structure and their high-level ends and means were less frequent and arguably not relevant for software development. However, organisations that aim to accelerate their software development cycles define their business strategy and reconfigure their structure on a short-term, continuous basis, fusing, splitting and creating as independent as possible organisation units. These changes directly affect the business processes and the design of software components of the organisation. Based on this approach to business strategy, we propose Stra2Bis, a method for designing strategically aligned business processes in an MDA-based context. Stra2Bis proposes a business strategy modelling step when redesigning business processes and three transformation guidelines to support the analysis of the alignment of processes with the organisational structure and the measurement of the units’ outcomes. We discussed the effect of the guidelines on the software design with five professionals who supported the proposal’s feasibility and usefulness. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.		Noel, R.; Panach, J.I.; Ruiz, M.; Pastor, O.						ConflictIncluded	Excluded	new_screen			2		2022				
882		ModelGuidance	The Adoption of a Framework to Support the Evaluation of Gamification Strategies in Software Engineering Education	Context: gamification has been largely used to increase the engagement and motivation of students and professionals in their organizations, with a variety of models/frameworks for developing gamified approaches. Problem: the empirical data published so far are not sufficient to elucidate the phenomena resulting from the use of gamification, as there is no standardization in the specification of evaluation strategies, methods of analysis and reporting of results. Objective: therefore, the objective of this study is to present and discuss the use of a framework for the evaluation of gamification in the context of software engineering education and training. Method: for this, we executed a case study, in which the framework was used to support the design of an evaluation study for a gamification case in a software process improvement research group in a public university. Results: We report the main findings from observations and reports from the applicator of the case study, and 11 recommendations for the design of evaluation studies supported by the framework. Our main findings are: providing examples of usage of the framework improves its understanding, the framework helped the applicator in understanding that qualitative and quantitative data could be use in compliment to each other, and it helped streamlining the design of the evaluation study, considering the consistency between data to be collected, evaluation questions, and the goals of the evaluation study. Copyright © 2022 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.		Monteiro, R.H.B.; De Almeida Souza, M.R.; Oliveira, S.R.B.; Soares, E.M.	International Conference on Computer Supported Education, CSEDU - Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
883		ModelGuidance	Method for Joining Information and Adapting Content from Gamified Systems and Serious Games in Organizations	In some work fields, the number of various knowledge and skills one must master can be tremendous. Therefore, we decided to make work and training more rewarding and motivating. The skills and knowledge mustered by the employees in both those situations are the same, but the systems responsible for the tracking and the adaptation of the content are not. Therefore, our contribution is twofold. First, a system that centralizes the learner’s game, learning and professional profiles and provides the other systems connected to it with the necessary information to adapt their content thanks to various modules. Secondly, a generic model that should be respected by any system connecting to our first element. We argue that it is necessary to use both our method and model to be able to fully exploit the information provided by our system. We tested our model and method on three different implementations but could not measure the impact of said implementations on our learners. Copyright © 2022 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.		Guinebert, M.; Fabiani, J.; Cherdieu, M.; Holat, P.; Grosman, C.	International Conference on Computer Supported Education, CSEDU - Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
884		ModelGuidance	Modeling Concretizations in Software Design	This paper discusses preliminary results of an investigation of technologies that could enable rapid adaptation of software to changes in requirements and/or operating environments. Specifically, a new approach of modeling concretizations and automatic reasoning about the satisfaction of the specific concretizations is introduced and demonstrated. The main aspects addressed relate to software architecture styles and software design principles. The initial formalization of the layered architecture style and the universal base class design principle is provided. Also, the impact of specific concretizations on the development efforts in case of requirements change during development is discussed. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.		Tazin, A.; Lu, S.; Chen, Y.; Kokar, M.M.; Smith, J.						ConflictExcluded	Excluded	new_screen			2		2022				
885		ModelGuidance	A Visual Modeling Environment for the nuXmv Model Checker Intended for Novice Users	We develop a visual modeling environment aimed at assisting novice users to perform model checking using nuXmv. We propose a node-graph style visual modeling language that represents the data flow of the system to be checked in terms of nodes and edges, and provide an interface for describing it. The proposed visual modeling environment enables even novice users without expertise in model checking to easily describe models, and allows them to conduct nuXmv verification. © 2022 IEEE.		Toyota, K.; Yokogawa, T.; Amasaki, S.; Aman, H.; Arimoto, K.	Proceedings - 2022 12th International Congress on Advanced Applied Informatics, IIAI-AAI 2022					ConflictExcluded	Excluded	new_screen			2		2022				
886		ModelGuidance	Neural Machine Translation Transfer Model Based on Mutual Domain Guidance	The neural machine translation (NMT) model is a data hungry and domain-sensitive model but it is almost impossible to obtain a large number of labeled data for training it. This requires the use of domain transfer strategy. In order to solve the problem of domain data mismatch, this paper proposes a neural machine translation transfer model based on domain mutual guidance and establishes the continuous impact through the framework of mutual guidance. At the same time, self-ensemble and self-knowledge-distillation are used in these independent domains so that the model will not deviate from the domain too much. Furthermore, the model can better train the models from the batching way of domain data. It mainly uses the pretraining model out of domain, distillation of existing models in domain and data selection in the training process to guide the in-domain model. These are unified in the training framework, so that model training can be continuously and effectively guided in and out of domain. In this study, three typical experiment scenarios were comprehensive tested and our model was compared with many conventional classic methods. The experiment results showed that our proposed 'inter-domain transfer training' and 'curriculum scheduling agent' was effective and robust. The most important results and findings are that this comprehensive guided training framework (intra-domain and inter-domain) is suitable for the domain transfer in different scenarios, and this framework doesn't increase the decoding cost. © 2013 IEEE.		Liu, Y.; Zhang, L.; Zhang, Y.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2022				
887		ModelGuidance	Base Station Anomaly Prediction Leveraging Model-Driven Framework for Classification in Neo4j	Machine learning is one of key-enablers in case of novel usage scenarios and adaptive behavior within next generation mobile networks. In this paper, it is examined how model-driven approach can be adopted to automatize machine learning tasks aiming mobile network data analysis. The framework is evaluated on classification task for purpose of base station anomaly detection relying on Neo4j graph database. According to the experiments performed on publicly available dataset, such approach shows promising results when it comes to both classification performance and reducing the time required for operations related to data import and model training. © 2022 IEEE.		Petrovic, N.; Al-Azzoni, I.; Krstic, D.; Alqahtani, A.	2022 International Conference on Broadband Communications for Next Generation Networks and Multimedia Applications, CoBCom 2022					ConflictExcluded	Excluded	new_screen			2		2022				
888		ModelGuidance	Emulating a Tech Startup in a University : Everything but the Code	This paper describes the instructional techniques used in a sequence of courses in the MS program in Software Management at Carnegie Mellon's Silicon Valley campus. Students form 4-5 person teams around their own project ideas, and work through those ideas for two semesters. The class assignments cover everything from ideation of product ideas through financial models for the envisioned company, including identification of the pain points faced by prospective users, the target market, customer validation of the project ideas, creation of a product roadmap, competitive analysis, estimation of engineering effort, strategies for marketing and sales, and financial models. Many of the students intend to become product managers, and these tasks offer experience with what should be done as part of creating a startup business. This paper focuses on the first course, Product Definition and Validation, of the course sequence. © 2022 ACM.		Wasserman, A.I.T.	Proceedings - Designing and Running Project-Based Courses in Software Engineering Education, DREE 2022					ConflictExcluded	Excluded	new_screen			2		2022				
889		ModelGuidance	Formal Modelling and Security Analysis of Inter-Operable Systems	Emerging technologies utilised in building modern systems make them inter-operable but potentially exposed to security threats. Thus, engineers need to consider the system structure and behaviour at the design level. This paper addresses the security risk assessment of inter-operable IoT systems designed in BIP (Behaviour-Interaction-Priority). For this purpose, we model different attacks scenarios from Microsoft STRIDE threats catalogue and identify the threats entry points in the component-port-connector architecture. Using standards communication styles such as message passing, we compose architectural components to model data flow between communication entities. We use BIP statistical model checking to assess the architecture conformance regarding security properties expressed in temporal logic. © 2022, Springer Nature Switzerland AG.		Baouya, A.; Ouchani, S.; Bensalem, S.						ConflictIncluded	Excluded	new_screen			2		2022				
890		ModelGuidance	A Formal Model and Verification for HESTIA: An Automated, Adversary-Aware Risk Assessment Process for Cyber Infrastructure	Due to the characteristics and connectivity of today's critical infrastructure systems, cyber-attacks on these systems are currently difficult to prevent in an efficient and sustainable manner. Prevention and mitigation strategies need accurate identification and evaluation of: system vulnerabilities, potential threats and attacks, and applicable hardening measures. Furthermore, the ability to prioritize hardening measures based on accurate assessments of risk is needed. In addition, the consideration of the availability, applicability, and cost of potential mitigation strategies is also needed. To address this challenge we created HESTIA: High-level and Extensible System for Training and Infrastructure risk Assessment. In this article we present a formal model of the HESTIA system. We then also present a formal verification of the HESTIA semantic model. © 2013 IEEE.		Jillepalli, A.A.; De Leon, D.C.; Alves-Foss, J.; Jeffery, C.L.; Sheldon, F.T.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2022				
891		ModelGuidance	Semantic Robustness of Models of Source Code	Deep neural networks are vulnerable to adversarial examples-small input perturbations that result in incorrect predictions. We study this problem for models of source code, where we want the neural network to be robust to source-code modifications that preserve code functionality. To facilitate training robust models, we define a powerful and generic adversary that can employ sequences of parametric, semantics-preserving program transformations. We then explore how, with such an adversary, one can train models that are robust to adversarial program transformations. We conduct a thorough evaluation of our approach and find several surprising facts: we find robust training to beat dataset augmentation in every evaluation we performed; we find that a state-of-the-art architecture (code2seq) for models of code is harder to make robust than a simpler baseline; additionally, we find code2seq to have surprising weaknesses not present in our simpler baseline model; finally, we find that robust models perform better against unseen data from different sources (as one might hope)-however, we also find that robust models are not clearly better in the cross-language transfer task. To the best of our knowledge, we are the first to study the interplay between robustness of models of code and the domain-adaptation and cross-language- transfer tasks. © 2022 IEEE.		Henke, J.; Ramakrishnan, G.; Wang, Z.; Albarghouth, A.; Jha, S.; Reps, T.	Proceedings - 2022 IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2022					ConflictExcluded	Excluded	new_screen			2		2022				
892		ModelGuidance	An Investigation into Educational Process Models for Teaching Secure Programming	Despite the many advantages that software applications provide in our daily lives, there are also numerous threats that target vulnerabilities in these applications. There is therefore a demand for new technologies and approaches to secure software development. Educational institutions are responsible for equipping computing graduates with the requisite secure programming knowledge, skills and abilities. However, despite various curricula guidelines being provided by the ACM and other professional bodies, many educational institutions have not successfully implemented such changes within their curricula. One of the problems is that the available curricula guidelines focus more on what secure programming concepts should be taught, rather than how. This paper therefore investigates how educational process models could be used for teaching secure programming. It further identifies various themes and sub-themes from different educational process models and argues how these can be used to teach secure programming. © 2022, IFIP International Federation for Information Processing.		Mdunyelwa, V.; Futcher, L.; van Niekerk, J.						ConflictExcluded	Excluded	new_screen			2		2022				
893		ModelGuidance	Towards an Automatic Generation of UML Class Diagrams from Textual Requirements using Case-based Reasoning Approach	Nowadays automatic information extraction plays a major roles in software development life cycle. It allows producing automated tools that help humans in routine tasks. The automatic extraction of Unified Modeling Language (UML) class diagrams from textual requirements can help in reducing the design time and cost. This paper proposes a novel case-based reasoning model to facilitate the process of generating the UML class diagrams from textual requirements. The result of this work can help on minimizing the manual work, and can be employed to extract other type of information from documents that we cope with during software development life cycle. © 2022 IEEE.		Dawood Omer, O.S.; Eltyeb, S.	Proceedings - 2022 4th International Conference on Applied Automation and Industrial Diagnostics, ICAAID 2022					ConflictIncluded	Excluded	new_screen			2		2022				
894		ModelGuidance	Selection and Modeling of a Formal Heuristic Evaluation Process Through Comparative Analysis	Due to the importance of usability, multiple usability evaluation methods have been proposed that help Human-Computer Interaction (HCI) specialists determine whether the interfaces of a software product are usable, easy to use, understandable, and attractive. Among these methods, the heuristic evaluation proposed by Jakob Nielsen is the one that stands out. Although Nielsen offers general guidelines for the execution of heuristic evaluations, very few authors of different studies present a formal agreement or process on how the evaluations should be carried out, which leads us to the problem of the absence of a comparative analysis that allows determining the most appropriate formal evaluation process to carry out heuristic inspections. To complement, some proposals found in the literature compare the results of the execution of heuristic evaluations, the definition of new heuristics, qualification forms, and the formalization of the complete process in 5 phases. Although these proposals contribute to the formalization of the heuristic evaluation process, the literature review has not provided a comparative analysis that allows determining which is the most appropriate, which could cause usability evaluators to interpret and carry out their own procedure, which would lead to inaccuracies in the results and increase the probability of improperly executing the inspection. The purpose of this study was to elaborate a comparative table of the formal processes; this allowed the grouping of the various studies found in the literature, to select a process, and thus, and to model by a BPMN tool the whole process. Finally, this process modeled was validated by expert judgement of HCI specialists. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.		Lecaros, A.; Moquillaza, A.; Falconi, F.; Aguirre, J.; Tapia, A.; Paz, F.						ConflictExcluded	Excluded	new_screen			2		2022				
895		ModelGuidance	Online Model Updating with Analog Aggregation in Wireless Edge Learning	We consider federated learning in a wireless edge network, where multiple power-limited mobile devices collaboratively train a global model, using their local data with the assistance of an edge server. Exploiting over-the-air computation, the edge server updates the global model via analog aggregation of the local models over noisy wireless fading channels. Unlike existing works that separately optimize computation and communication at each step of the learning algorithm, in this work, we jointly optimize the training of the global model and the analog aggregation of local models over time. Our objective is to minimize the accumulated training loss at the edge server, subject to individual long-term transmit power constraints at the mobile devices. We propose an efficient algorithm, termed Online Model Updating with Analog Aggregation (OMUAA), to adaptively update the local and global models based on the time-varying communication environment. The trained model of OMUAA is channel- and power-aware, and it is in closed form with low computational complexity. We study the mutual impact between model training and analog aggregation over time, to derive performance bounds on the computation and communication performance metrics. Simulation results based on real-world image classification datasets and typical Long-Term Evolution network settings demonstrate substantial performance gain of OMUAA over the known best alternatives. © 2022 IEEE.		Wang, J.; Dong, M.; Liang, B.; Boudreau, G.; Abou-Zeid, H.	Proceedings - IEEE INFOCOM					ConflictExcluded	Excluded	new_screen			2		2022				
896		ModelGuidance	Learning to Build Accurate Service Representations and Visualization	With the boom of Web services, there is a growing need for visualizing service ecosystems to help people browse services and understand their functionalities and positions in the systems. One foundational step of building a proper visualization is to ensure accurate representations for the comprising services. However, it is not a trivial task as service profiles may not be sufficient for two significant reasons. First, while the services themselves being used in various scenarios, their profiles may not always precisely reflect all of them. Second, service profiles usually comprise quite a few universal background terms that cannot distinguish services. To address these two issues, we apply machine learning techniques to incrementally learn service representations in a whole. A tailored topic model is developed, named Service Representation-Latent Dirichlet Allocation (SR-LDA). The core idea is to learn more comprehensive and up-to-date information about services from the profiles of the involved service compositions (i.e., mashup profiles), while introducing a global filter to identify and filter out background terms. Both quantitative and qualitative experiments on a real-world dataset demonstrate that the proposed SR-LDA builds higher-quality service representations comparing with baselines. We further generate a knowledge map to visualize a service ecosystem based on the learned service representations. Such a knowledge map directly leads to the detection of four typical functionality patterns of Web services and serves the purpose of mashup creation. © 2008-2012 IEEE.		Zhang, J.; Fan, Y.; Zhang, J.; Bai, B.	IEEE Transactions on Services Computing					ConflictExcluded	Excluded	new_screen			2		2022				
897		ModelGuidance	Scaffolding, State-Based Modeling, and Multiple Representation: User Interface Concepts Implemented in an Interactive Online Learning Environment for Synergistic Learning of Physics and Computational Thinking	With funding from the NSF STEM + Computing Program, an interdisciplinary team of faculty and student researchers collaborated on development of our Scaffolded Training Environment for Physics Programming (STEPP). STEPP is a synergistic learning environment for high school and college students in introductory physics courses to acquire physics concepts and Computational Thinking (CT) through formative experiences modeling and simulating kinematics using modeling tools based on Finite State Machines (FSMs). Three STEPP learning modules have been developed on 1D kinematics, 2D kinematics, and the Newton’s Laws of Motion. The modules have been field tested with physics teachers and students at several high schools and a university and are available to the public. The use of FSMs, coupled with the scaffolded approach of STEPP, allows STEPP to provide students with simulations that are physically accurate yet initially described by natural-language states in accord with their intuition. The STEPP architecture is based on scaffolding. Scaffolding in the modules allows the student to understand physics concepts through increasingly detailed module designs. Such concepts include displacement, velocity, and acceleration. In each level of each module, students model physics problems as FSMs and see the resulting simulations displayed in a variety of representation methods: animations, graphs, vectors, free-body diagrams, numbers, and equations, all of which are displayed synchronously. We focus on three user-interface features grounded in educational theories and implemented in STEPP: FSM-based modeling, software-enabled scaffolding, and multiple representations, all of which are applicable to educational applications in many disciplines. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.		Kitagawa, M.; Fishwick, P.; Urquhart, M.; Kesden, M.; Guadagno, R.; Gryder, K.; Tran, N.; Najera, A.; Ochoa, D.						ConflictExcluded	Excluded	new_screen			2		2022				
898		ModelGuidance	Initial Development of a Roadmap for Digital Engineering Simulations Curriculum	This paper describes the context and approach for a research task developing a digital engineering (DE) simulation environment. The purpose of the simulation environment is to create a learning platform that can be used to help students attain higher levels of proficiency in critical digital engineering skills beyond what is possible in a traditional classroom setting. This task leverages the existing literature in the community and builds on the extensive digital engineering research portfolio of the Systems Engineering Research Center (SERC). The initial research results are described within. This research is funded by the Defense Acquisition University (DAU). The goals are the development of DE simulations for teaching DAU students and the development of an accompanying set of teachable modules that will significantly enhance the capabilities of DAU students who complete the DAU training in the evaluation and acquisition of complex systems from a broad range of domains including cyber resilience, AI systems, and weapon systems. The architecture of the DE simulation is developed in a manner that allows adaptability and extensibility into other disciplinary areas beyond the engineering, acquisition, and sustainment areas. In addition, the team aims to contribute to the body of knowledge on DE and systems engineering education through this research. © 2022 IEEE.		Tao, H.Y.S.; Hutchison, N.; Beling, P.; Arndt, C.; Blackburn, M.R.; Sherburne, T.; Wach, P.; Long, D.; Verma, D.; McDermott, T.A.	SysCon 2022 - 16th Annual IEEE International Systems Conference, Proceedings					ConflictExcluded	Excluded	new_screen			2		2022				
899		ModelGuidance	Design of Modular Generation of Human Behaviour in a Collaborative Context	Training people for facing dangerous situations has always been expensive and difficult or dangerous to organize. New approaches use virtual environments and simulation in which the role of collaborative people is played by cognitive agents, which allows making training sessions when they were not previously possible, or else decreasing their cost. Two problems arise: firstly, it is necessary to simulate teams, composed of virtual agents and the learner, interacting in a collaborative context. Secondly, we need to support the definition of a variety of explainable and professional behaviours (i.e. representative of the expected behaviours of an expert in a given profession). It is extremely complex and time consuming. To facilitate the design of tools allowing to build adequate agents model, we propose a meta-model of human behavior simulation. The originality of this meta-model is to make the cognitive models, used for explainability, and the agent model completely independent, to avoid repeated implementations of various behaviours. We show how task selection works on a simple agent model, by means of a graph of influences and preferences. This means has the advantage of being intelligible by its visual nature and of facilitating the addition of new behaviours impacting on the selection. A preliminary evaluation has shown that human users perceive the variability of behaviour and that the provided explanations are relevant. © 2022 IEEE.		De Blauwe, T.; Lourdeaux, D.; Sabouret, N.	2022 IEEE 25th International Conference on Computer Supported Cooperative Work in Design, CSCWD 2022					ConflictExcluded	Excluded	new_screen			2		2022				
900		ModelGuidance	Static Profiling Alloy Models	Modeling of software-intensive systems using formal declarative modeling languages offers a means of managing software complexity through the use of abstraction and early identification of correctness issues by formal analysis. Alloy is one such language used for modeling systems early in the development process. Little work has been done to study the styles and techniques commonly used in Alloy models. We present the first static analysis study of Alloy models. We investigate research questions that examine a large corpus of 1,652 Alloy models. To evaluate these research questions, we create a methodology that leverages the power of ANTLR pattern matching and the query language XPath. Our research questions are split into two categories depending on their purpose. The Model Characteristics category aims to identify what language constructs are used commonly. Modeling Practices questions are considerably more complex and identify how modelers are using Alloy's constructs. We also evaluate our research questions on a subset of models from our corpus written by expert modelers. We compare the results of the expert corpus to the results obtained from the general corpus to gain insight into how expert modelers use the Alloy language. We draw conclusions from the findings of our research questions and present actionable items for educators, language and environment designers, and tool developers. Actionable items for educators are intended to highlight underutilized language constructs and features, and help student modelers avoid discouraged practices. Actionable items aimed at language designers present ways to improve the Alloy language by adding constructs or removing unused ones based on trends identified in our corpus of models. The actionable items aimed at environment designers address features to facilitate model creation. Actionable items for tool developers provide suggestions for back-end optimizations. IEEE		Eid, E.; Day, N.A.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2022				
901		ModelGuidance	Lean requirements traceability automation enabled by model-driven engineering	Background: The benefits of requirements traceability, such as improvements in software product and process quality, early testing, and software maintenance, are widely described in the literature. Requirements traceability is a critical, widely accepted practice. However, very often it is not applied for fear of the additional costs associated with manual efforts or the use of additional tools. Methods: This article presents a “low-cost” mechanism for automating requirements traceability based on the model-driven paradigm and formalized by a metamodel for the creation and monitoring of traces and an integration process for traceability management. This approach can also be useful for information fusion in industry insofar that it facilitates data traceability. Results: This article extends an existing model-driven development methodology to incorporate traceability as part of its development tool. The tool has been used successfully by several companies in real software development projects, helping developers to manage ongoing changes in functional requirements. One of those projects is cited as an example in the paper. The authors’ current work leads them to conclude that a model-driven engineering approach, traditionally used only for the automatic generation of code in a software development process, can also be used to successfully automate and integrate traceability management without additional costs. The systematic evaluation of traceability management in industrial projects constitutes a promising area for future work. © 2022 Escalona et al.		Escalona, M.-J.; Koch, N.; Garcia-Borgoñon, L.	PeerJ Computer Science					ConflictIncluded	Excluded	new_screen			2		2022				
902		ModelGuidance	Effective ANN Model based on Neuro-Evolution Mechanism for Realistic Software Estimates in the Early Phase of Software Development	There is no doubt that the software industry is one of the fastest-growing sectors on the planet today. As the cost of the entire development process continues to rise, an effective mechanism is needed to estimate the required development cost to control better the cost overrun problem and make the final software product more competitive. However, in the early stages of planning, the project managers have difficulty estimating the realistic value of the effort and cost required to execute development activities. Software evaluation prior to development can minimize risk and upsurge project success rates. Many techniques have been suggested and employed for cost estimation. However, computations based on several of these techniques show that the estimation of development effort and cost vary, which may cause problems for software industries in allocating overall resources costs. The proposed research study proposes the artificial neural network (ANN) based Neural-Evolution technique to provide more realistic software estimates in the early stages of development. The proposed model uses the advantages of the topology augmentation using an evolutionary algorithm to automate and achieve optimality in ANN construction and training. Based on the results and performance analysis, it is observed that software effort prediction using the proposed approach is more accurate and better than other existing approaches. © 2022, (IJACSA) International Journal of Advanced Computer Science and Applications. All Rights Reserved.		Kumar, B.N.R.; Suresh, Y.	International Journal of Advanced Computer Science and Applications					ConflictExcluded	Excluded	new_screen			2		2022				
903		ModelGuidance	Research knowledge utilisation for societal impact: Information practices based on abductive topic modelling	Information science researchers are increasingly seeking to understand the utilisation of knowledge generated through scientific research outside of academia. Although the conceptual levels of knowledge utilisation are well established, our understanding of the various information practices for knowledge utilisation employed by researchers remains limited. This study identified such information practices by text-mining 6637 case studies documented under the United Kingdom’s Research Excellence Framework. The results were augmented with expert judgement to develop a framework consisting of nine types based on the theoretical framework of research knowledge utilisation. Three emerging types were identified: deliberation, co-creation and foresighting. They indicate the rise of information practices leveraging social media and analytical capabilities to engage potential beneficiaries in using and realising the value of research. © The Author(s) 2022.		Zheng, H.; Pee, L.G.	Journal of Information Science					ConflictExcluded	Excluded	new_screen			2		2022				
904		ModelGuidance	Using the Methods of Statistical Data Analysis to Improve the Trustworthiness of Software Reliability Modeling	In the past, several software reliability growth models (SRGMs) have been proposed to predict various aspects of software reliability, and non-homogeneous Poisson process (NHPP)-based SRGMs have drawn much attention. However, it should be noted that, in practice, blindly applying SRGMs might not lead to meaningful results when the characteristics of the data (i.e., data type) do not fit the characteristics of selected SRGMs. Moreover, there currently exist no guidelines for project managers or developers to follow in selecting the most appropriate SRGMs for a particular failure dataset. On the other hand, waiting to collect a substantial amount of failure data before fitting SRGMs might be unfeasible in many cases. In this paper, we propose useing statistical data analysis methods to investigate the characteristics of software failure data and to improve the accuracy of software reliability growth modeling. Here, SRGMs will be broadly partitioned into two categories: 'NHPP models' and 'non-NHPP models.' Similarly, software failure data can be classified into two categories: 'NHPP-type data' and 'non-NHPP-type data.' We propose a two-phase method to verify the hypothesis that failure data follow an NHPP. Through the proposed two-phase and Laplace trend tests, we will be able to infer whether a dataset is the NHPP type and whether it is properly used by NHPP-based SRGMs. In this case, the final choice for the most suitable NHPP model for the software failure process would be made, and the software reliability prediction result can be deemed trustworthy and helpful after correctly judging whether the dataset can be classified or not as being NHPP based. Experiments based on 25 real software failure data were presented and analyzed. Using our proposed method, project managers and/or developers will be able to analyze and use collected failure data to help improve both planning accuracy and software quality. © 2013 IEEE.		Hou, Y.-F.; Huang, C.-Y.; Fang, C.-C.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2022				
905		ModelGuidance	UML Templates Distilled	UML templates are possibly the most neglected and misused piece of knowledge in UML modelling. This subject has been disregarded in the research and practice literature and even by modelling tools providers. This paper suggests that such oblivion results from a general misunderstanding that UML templates are just graphical representations of genericity like it is found in programming languages, and from the insufficient support from the modelling tools, with a consequence of poor usage of UML templates in practice. Indeed, the capabilities and potential of UML templates are far-reaching. Increasing awareness around them could bring significant benefits for UML users, namely, higher-level abstraction and reuse. Therefore, this paper provides a distilling tutorial on UML templates to highlight their flexibility and advantages. That presentation follows a tutorial style and is supported by several illustrative examples, varying from simpler to more complex ones. This tutorial reviews the Template construct's core concepts and terminology, presents constraining classifiers and shows how to define properties and operations as template parameters. Then, it presents and discusses advanced aspects such as operation templates, parameter defaults, the relationship between binding and generalization, and the specific semantics of package templates. Furthermore, the paper discusses the related work and uncovers some of the UML templates' limitations and opportunities for improvement. This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/		Farinha, J.; da Silva, A.R.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2022				
906		ModelGuidance	An applying colored petri net for computerized accounting system and ledger accounts instruction	Many learners who are not familiar with the accounting terms find blended learning very complex to understand with respect to the computerized accounting system, the journal entries process, and tracing the accounting transaction flows of accounting system. A simulation-based model is a viable option to help instructors and learners make understanding the accounting system components and monitoring the accounting transactions easier. This paper proposes a colored Petri net (CPN)-based model for the instruction of an accounting system focused on the journal entries processes, accounting modules, and accounting transaction flows. The CPN-based language and the model checking tool named CPN are used to represent the accounting system components: a chart of accounts, an account mapping profile, the journal and ledgers system, and the financial report creations. We evaluated the designed CPN models by creating the simulation cases from ground truth data of the retail department store system and the mortgage loan system, using the decision-table-based testing technique. The results show that the designed CPN model and provided simulation cases help the learners to animate, verify, trace back accounting transactions and data flows, and increase the learner’s understanding. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.		Dechsupa, C.; Vatanawood, W.; Poolsawasdi, W.; Thongtak, A.	Computers					ConflictExcluded	Excluded	new_screen			2		2021				
907		ModelGuidance	A tale of two graph models: a case study in wireless sensor networks	Designing and reasoning about complex systems such as wireless sensor networks is hard due to highly dynamic environments: sensors are heterogeneous, battery-powered, and mobile. While formal modelling can provide rigorous mechanisms for design/reasoning, they are often viewed as difficult to use. Graph rewrite-based modelling techniques increase usability by providing an intuitive, flexible, and diagrammatic form of modelling in which graph-like structures express relationships between entities while rewriting mechanisms allow model evolution. Two major graph-based formalisms are Graph Transformation Systems (GTS) and Bigraphical Reactive Systems (BRS). While both use similar underlying structures, how they are employed in modelling is quite different. To gain a deeper understanding of GTS and BRS, and to guide future modelling, theory, and tool development, in this experience report we compare the practical modelling abilities and style of GTS and BRS when applied to topology control in WSNs. To show the value of the models, we describe how analysis may be performed in both formalisms. A comparison of the approaches shows that although the two formalisms are different, from both a theoretical and practical modelling standpoint, they are each successful in modelling topology control in WSNs. We found that GTS, while featuring a small set of entities and transformation rules, relied on entity attributes, rule application based on attribute/variable side-conditions, and imperative control flow units. BRS on the other hand, required a larger number of entities in order to both encode attributes directly in the model (via nesting) and provide tagging functionality that, when coupled with rule priorities, implements control flow. There remains promising research mapping techniques between the formalisms to further enable flexible and expressive modelling. © 2021, The Author(s).		Archibald, B.; Kulcsár, G.; Sevegnani, M.	Formal Aspects of Computing					ConflictExcluded	Excluded	new_screen			2		2021				
908		ModelGuidance	Applying Model-Driven Engineering to Stimulate the Adoption of DevOps Processes in Small and Medium-Sized Development Organizations: The Case for Microservice Architecture	Microservice architecture (MSA) denotes an increasingly popular architectural style in which business capabilities are wrapped into autonomously developable and deployable software components called microservices. Microservice applications are developed by multiple DevOps teams each owning one or more services. In this article, we explore the state of how DevOps teams in small and medium-sized organizations (SMOs) cope with MSA and how they can be supported. We show through a secondary analysis of an exploratory interview study comprising six cases, that the organizational and technological complexity resulting from MSA poses particular challenges for small and medium-sized organizations (SMOs). We apply model-driven engineering to address these challenges. As results of the second analysis, we identify the challenge areas of building and maintaining a common architectural understanding, and dealing with deployment technologies. To support DevOps teams of SMOs in coping with these challenges, we present a model-driven workflow based on LEMMA—the Language Ecosystem for Modeling Microservice Architecture. To implement the workflow, we extend LEMMA with the functionality to (i) generate models from API documentation; (ii) reference remote models owned by other teams; (iii) generate deployment specifications; and (iv) generate a visual representation of the overall architecture. We validate the model-driven workflow and our extensions to LEMMA through a case study showing that the added functionality to LEMMA can bring efficiency gains for DevOps teams. To develop best practices for applying our workflow to maximize efficiency in SMOs, we plan to conduct more empirical research in the field in the future. © 2021, The Author(s).		Sorgalla, J.; Wizenty, P.; Rademacher, F.; Sachweh, S.; Zündorf, A.	SN Computer Science					ConflictExcluded	Excluded	new_screen			2		2021				
909		ModelGuidance	A Common Formal Framework for Factorial and Probabilistic Topic Modelling Techniques	Topic modelling is nowadays one of the most popular techniques used to extract knowledge from texts. There are several families of methods related to this problem, among them 1) Factorial methods, 2) Probabilistic methods and 3) Natural Language Processing methods. In this paper a common conceptual framework is provided for Factorial and probabilistic methods by identifying common elements and describing them with common and homogeneous notation and 7 different methods are described accordingly. Under a common notation it is easy to make a comparative analysis and see how flexible or more or less realistic assumptions are made by the different methods. This is the first step to a wider analysis where all families can be related to this common conceptual framework and to go in depth in the understanding of stengths and weakenesses of each method and ellaboration of general guidelines to provide application criteria. The paper ends with a discussion comparing the presented methods and future research lines. © 2021 The authors and IOS Press.		Gibert, K.; Hernandez-Potiomkin, Y.						ConflictExcluded	Excluded	new_screen			2		2021				
910		ModelGuidance	Accessibility Metadata: A Proposal for the OER's Evaluation Considering Quality Models	The collaborative approach which are born OER (Open Educational Resource) is the joint search for pedagogical and technological challenges to achieve improved quality reconstruction. It is necessary to demonstrate defined metrics that support processes and provide guidelines or instructions related to design for all. The open feature of the OERs must demonstrate accessibility, guaranteeing their interoperability. The incorporation of intelligent systems based on the efficient publication of accessibility information, contributes to the evaluation of accessible resources, knowledge modeling and future trends based on the feedback of profiles, and personalization from the user experience through. This paper presents the proposal for an expert system based on the ISO 40500, ISO 24751 and UDL standards. © 2021 IEEE.		Chimbo, B.; Ingavélez-Guerra, P.; Otón-Tortosa, S.	ETCM 2021 - 5th Ecuador Technical Chapters Meeting					ConflictExcluded	Excluded	new_screen			2		2021				
911		ModelGuidance	Screen Parsing: Towards Reverse Engineering of UI Models from Screenshots	Automated understanding of user interfaces (UIs) from their pixels can improve accessibility, enable task automation, and facilitate interface design without relying on developers to comprehensively provide metadata. A first step is to infer what UI elements exist on a screen, but current approaches are limited in how they infer how those elements are semantically grouped into structured interface definitions. In this paper, we motivate the problem of screen parsing, the task of predicting UI elements and their relationships from a screenshot. We describe our implementation of screen parsing and provide an effective training procedure that optimizes its performance. In an evaluation comparing the accuracy of the generated output, we find that our implementation significantly outperforms current systems (up to 23%). Finally, we show three example applications that are facilitated by screen parsing: (i) UI similarity search, (ii) accessibility enhancement, and (iii) code generation from UI screenshots. © 2021 Owner/Author.		Wu, J.; Zhang, X.; Nichols, J.; Bigham, J.P.	UIST 2021 - Proceedings of the 34th Annual ACM Symposium on User Interface Software and Technology					ConflictExcluded	Excluded	new_screen			2		2021				
912		ModelGuidance	Ontology-Based Scenario Modeling for Cyber Security Exercise	The growing demand for cyber security professionals with practical knowledge is boosting the development and conduct of cyber security exercises around the world. Scenarios stand a central position of the exercise, which sets the stage for later action by providing contextual information that the participants will need during the exercise. To manage the increasing numbers of scenario creation in the different contexts, we propose an ontology to model scenarios for cyber security exercises. This ontology identifies aspects of scenario modeling relevant to cyber security that can be used as a means to achieve a defined taxonomy of knowledge items and a standard vocabulary for cyber scenarios. With the semantic framework based on RDF/OWL, this ontology provides a common structure at a semantic level that allows scenarios to be shared and reused across applications and community boundaries. In this paper, we present the design, implementation, and evaluation of the proposed ontology. © 2021 IEEE.		Wen, S.-F.; Yamin, M.M.; Katt, B.	Proceedings - 2021 IEEE European Symposium on Security and Privacy Workshops, Euro S and PW 2021					ConflictIncluded	Excluded	new_screen			2		2021				
913		ModelGuidance	A multi-model based microservices identification approach	Microservices are hailed for their capabilities to tackle the challenge of breaking monolithic business systems down into small, cohesive, and loosely-coupled services. Indeed, these systems are neither easy to maintain nor to replace undermining organizations’ efforts to cope with user's changing needs and governments’ complex regulations. Microservices constitute an architectural style for developing a new generation of systems as a suite of services that, although they are separate, engage in collaborative execution and communication sessions. However, microservices success depends, among many other things, on the existence of an approach that would automatically identify the necessary microservices according to organizations’ requirements. In this paper, we present such an approach and demonstrate its technical doability in the context of a case study, Bicing, for renting bikes. Some salient features of this approach are business processes as input for the identification needs, three models known as control, data, and semantic to capture dependencies between these processes’ activities, and, finally, a collaborative clustering technique that recommends potential microservices. Conducted experiments in the context of Bicing clearly indicate that our approach outperforms similar ones for microservices identification and reinforce the important role of business processes in this identification. The approach constitutes a major milestone towards a better architectural style for future microservices systems. © 2021 Elsevier B.V.		Daoud, M.; El Mezouari, A.; Faci, N.; Benslimane, D.; Maamar, Z.; El Fazziki, A.	Journal of Systems Architecture					ConflictExcluded	Excluded	new_screen			2		2021				
914		ModelGuidance	Towards a workflow for model-based testing of embedded systems	Model-based testing (MBT) has been previously used to validate embedded systems. However, (i) creation of a model conforming to the behavioural aspects of an embedded system, (ii) generation of executable test scripts and (iii) assessment of test verdict, re-quires a systematic process. In this paper, we have presented a three-phase tool-supported MBT workflow for the testing of an embedded system, that spans from requirements specification to test verdict assessment. The workflow starts with a simplistic, yet practical, application of a Domain-Specific Language (DSL) based on Gherkin-like style, which allows the requirements engineer to specify requirements and to extract information about model elements(i.e. states and transitions). This is done to assist the graphical modelling of the complete system under test (SUT). Later stages of the workflow generates an executable test script that runs on a domain-specific simulation platform. We have evaluated this tool-supported workflow by specifying the requirements, extracting information from the DSL and developing a model of a subsystem of the train control management system developed at Alstom Transport AB in Sweden. The C# test script generated from the SUT model is successfully executed at the Software-in-the-Loop (SIL) execution platform and test verdicts are visualized as a sequence of passed and failed test steps. © 2021 ACM.		Zafar, M.N.; Afzal, W.; Enoiu, E.	A-TEST 2021 - Proceedings of the 12th International Workshop on Automating TEST Case Design, Selection, and Evaluation, co-located with ESEC/FSE 2021					ConflictExcluded	Excluded	new_screen			2		2021				
915		ModelGuidance	Improving security in NoSQL document databases through model-driven modernization	NoSQL technologies have become a common component in many information systems and software applications. These technologies are focused on performance, enabling scalable processing of large volumes of structured and unstructured data. Unfortunately, most developments over NoSQL technologies consider security as an afterthought, putting at risk personal data of individuals and potentially causing severe economic loses as well as reputation crisis. In order to avoid these situations, companies require an approach that introduces security mechanisms into their systems without scrapping already in-place solutions to restart all over again the design process. Therefore, in this paper we propose the first modernization approach for introducing security in NoSQL databases, focusing on access control and thereby improving the security of their associated information systems and applications. Our approach analyzes the existing NoSQL solution of the organization, using a domain ontology to detect sensitive information and creating a conceptual model of the database. Together with this model, a series of security issues related to access control are listed, allowing database designers to identify the security mechanisms that must be incorporated into their existing solution. For each security issue, our approach automatically generates a proposed solution, consisting of a combination of privilege modifications, new roles and views to improve access control. In order to test our approach, we apply our process to a medical database implemented using the popular document-oriented NoSQL database, MongoDB. The great advantages of our approach are that: (1) it takes into account the context of the system thanks to the introduction of domain ontologies, (2) it helps to avoid missing critical access control issues since the analysis is performed automatically, (3) it reduces the effort and costs of the modernization process thanks to the automated steps in the process, (4) it can be used with different NoSQL document-based technologies in a successful way by adjusting the metamodel, and (5) it is lined up with known standards, hence allowing the application of guidelines and best practices. © 2021, The Author(s).		Maté, A.; Peral, J.; Trujillo, J.; Blanco, C.; García-Saiz, D.; Fernández-Medina, E.	Knowledge and Information Systems					ConflictExcluded	Excluded	new_screen			2		2021				
916		ModelGuidance	Model-driven round-trip engineering for TinyOS-based WSN applications	Wireless Sensor Network (WSN) applications working on TinyOS operating system is widely used in various areas. However, the requirement of managing the power constraints makes TinyOS different from ordinary systems and hence building WSNs with TinyOS can be a challenging and time-consuming task. As successfully applied in many other domains, model-driven engineering (MDE) can facilitate the design and implementation of such applications. Within this context, the researchers have performed noteworthy studies on deriving various MDE approaches and tools. However, these studies do not support the synchronization between TinyOS application models and the generated programs especially when any change is made in the programs. Hence, in this paper, we introduce a model-driven round-trip engineering (RTE) methodology in which both the MDE of TinyOS applications and synchronization between TinyOS instance models and corresponding code are provided with the use of a toolchain. A domain-specific modeling language, called DSML4TinyOS is used for the MDE of such applications while existing TinyOS programs can be reverse engineered in an environment, called RE4TinyOS. Models retrieved from the existing programs can be automatically processed again with DSML4TinyOS. Evaluation results showed that it is possible to obtain the configurations of the TinyOS applications completely just modeling with DSML4TinyOS whereas the same process leads the automatic creation of almost half of the module parts of these applications. Moreover, the time required for developing such systems from scratch decreased approximately to its half. The results also showed that both model-code synchronization and the integration of existing TinyOS applications which do not have system models previously, into the proposed MDE are possible with using RE4TinyOS. RE4TinyOS succeeded in the reverse engineering of all main parts of the TinyOS applications taken from the official TinyOS Github repository and generated models were able to be visually processed in the MDE environment for further modifications. © 2021 Elsevier Ltd		Marah, H.; Kardas, G.; Challenger, M.	Journal of Computer Languages					ConflictExcluded	Excluded	new_screen			2		2021				
917		ModelGuidance	A framework for modeling structural association among De-Motivators of scaling agile	Usage of agile methods for software development has increased in recent times. Rapid delivery of software products is ensured by these methods with less expense and high user gratification. Application of these methods on a large scale causes many De-Motivators or challenges as initially these methods were aimed at those developmental teams that worked on small scale. However, no effort has been made yet to hand out the various correlations among the challenges. To fill the space, the Interpretive Structural Model (ISM) approach is used to reconnoiter the correlations among the De-Motivators regarding Scaling Agile Software Development Methodologies (ASDM) from the management perspective. Creation of a framework for structural modeling association among the De-Motivators is the aim of this study. To attain the goal, a hybrid methodology was applied based on a Systematic literature review (SLR), empirical survey, and ISM. First, we pointed out 15 De-Motivators of Scaling ASDM from management perspectives through SLR study. Second, with the help of 59 experts from different countries, a questionnaire survey was conducted to empirically examine the correlations among the detected De-Motivators. Further, correlations among the challenges are discovered with the usage of ISM through review of the panel, and they accomplish the categorization through CrossImpact Matrix Multiplication Applied Approach. © 2021 John Wiley & Sons, Ltd.		Abrar, M.F.; Ali, S.; Majeed, M.F.; Khan, S.; Khan, M.; Ullah, H.; Khan, M.A.; Baseer, S.; Asshad, M.	Journal of Software: Evolution and Process					ConflictIncluded	Excluded	new_screen			2		2021				
918		ModelGuidance	RoBMEX: ROS-based modelling framework for end-users and experts	Autonomous vehicles, such as drones, are gaining great popularity due to their usability and versatility. Nowadays, a significant number of them operate using open source software, such as Robot Operating System (ROS) and the de facto standard MAVLink communication protocol, as they are free and many of them are reusable enough that they can be deployed in various different vehicles. Although these technologies offer a wide variety of resources, using them requires a reasonable background of programming and system engineering. Often, this is not achievable by common drone end-users in the short-term, as they would need to acquire a considerably large amount of know-how before working on specific domains. However, a graphical Domain Specific Modelling Language (DSML) might provide a shortcut to design drone missions using already known concepts to the end-users (or, at least, ones easier to learn). Pursuing this shortcut, RoBMEX is presented as a top-down methodology based on a set of domain specific languages able to enhance the autonomy of ROS-based systems, by allowing the creation of missions graphically, and then generating automatically executable source codes conforming to the designed missions. © 2021		Ladeira, M.; Ouhammou, Y.; Grolleau, E.	Journal of Systems Architecture					ConflictExcluded	Excluded	new_screen			2		2021				
919		ModelGuidance	Topic Modeling Enhancement using Word Embeddings	Latent Dirichlet Allocation(LDA) is one of the powerful techniques in extracting topics from a document. The original LDA takes the Bag-of-Word representation as the input and produces topic distributions in documents as output. The drawback of Bag-of-Word is that it represents each word with a plain one-hot encoding which does not encode the word level information. Later research in Natural Language Processing(NLP) demonstrate that word embeddings technique such as Skipgram model can provide a good representation in capturing the relationship and semantic information between words. In recent studies, many NLP tasks could gain better performance by applying the word embedding as the representation of words. In this paper, we propose Deep Word-Topic Latent Dirichlet Allocation(DWT-LDA), a new process for training LDA with word embedding. A neural network with word embedding is applied to the Collapsed Gibbs Sampling process as another choice for word topic assignment. To quantitatively evaluate our model, the topic coherence framework and topic diversity are the metrics used to compare between our approach and the original LDA. The experimental result shows that our method generates more coherent and diverse topics. © 2021 IEEE.		Limwattana, S.; Prom-On, S.	JCSSE 2021 - 18th International Joint Conference on Computer Science and Software Engineering: Cybernetics for Human Beings					ConflictExcluded	Excluded	new_screen			2		2021				
920		ModelGuidance	Communication Oriented Modeling of Evolving Systems of Systems	Systems of Systems (SoSs) are composed of systems characterized by operational and managerial independence, but that can perform tasks together that they could not do by themselves. Given their potential complexity, modeling and testing such systems can be a daunting task, which is repeated when any system is evolved into a new one, especially when SoSs pertain to different owners. We propose a framework for modeling SoSs using only observable communication properties and dataflow. In this paper, we propose a framework that supports SoS design and discuss how it can support the creation of complex use cases pertaining to multiple owners. We implemented a proof-of-concept for the framework that focuses on REST-based communication and combines design using the model-based engineering tool Papyrus, and verification of communication properties using the Uppaal model checker. We showcase our approach by designing a Bluetooth-driven tracker system, which uses smart devices' Bluetooth-IDs to analyze patterns in the stores that people visit. © 2021 IEEE.		Harbo, S.K.R.; Kristensen, M.K.; Voldby, E.P.; Andersen, S.V.; Petersen, F.C.; Albano, M.	2021 16th International System of Systems Engineering Conference, SoSE 2021					ConflictIncluded	Included	new_screen			2		2021				
921		ModelGuidance	A Declarative Approach for Transforming SysML Models to Executable Simulation Models	Systems Modeling Language (SysML) is an object management group standard for systems-of-systems engineering. It enables the description of complex system models; however, it cannot effectively support all system engineering activities. For instance, system performance evaluation is usually performed via simulation. In this case, the transformation of SysML system models to executable simulation models for specific simulation methodologies and tools is required. Model transformation is a key component for addressing the challenges of seamless integration of SysML model simulation in model-based system engineering. In this paper, we explore a declarative approach, based on the query/view/transformation-relations (QVT-R) standard, for the transformation of SysML models to executable simulation models, fully adhering model-driven architecture (MDA) concepts. It is supported by a framework implemented to provide executable simulation model and code generation. Methodological guidelines, for the effective use of a declarative language as QVT-R, for model transformation, are provided, emphasizing the utilization of existing domain-specific SysML profiles, as well as executable simulation library components. The experience obtained from two different domains, namely, enterprise information and railway transportation systems, modeled as systems-of-systems via SysML, is discussed, based on a quantitative analysis of the respective QVT-R transformations. © 2013 IEEE.		Kapos, G.-D.; Tsadimas, A.; Kotronis, C.; Dalakas, V.; Nikolaidou, M.; Anagnostopoulos, D.	IEEE Transactions on Systems, Man, and Cybernetics: Systems					ConflictIncluded	Excluded	new_screen			2		2021				
922		ModelGuidance	An improved text classification modelling approach to identify security messages in heterogeneous projects	Security remains under-addressed in many organisations, illustrated by the number of large-scale software security breaches. Preventing breaches can begin during software development if attention is paid to security during the software’s design and implementation. One approach to security assurance during software development is to examine communications between developers as a means of studying the security concerns of the project. Prior research has investigated models for classifying project communication messages (e.g., issues or commits) as security related or not. A known problem is that these models are project-specific, limiting their use by other projects or organisations. We investigate whether we can build a generic classification model that can generalise across projects. We define a set of security keywords by extracting them from relevant security sources, dividing them into four categories: asset, attack/threat, control/mitigation, and implicit. Using different combinations of these categories and including them in the training dataset, we built a classification model and evaluated it on industrial, open-source, and research-based datasets containing over 45 different products. Our model based on harvested security keywords as a feature set shows average recall from 55 to 86%, minimum recall from 43 to 71% and maximum recall from 60 to 100%. An average f-score between 3.4 and 88%, an average g-measure of at least 66% across all the dataset, and an average AUC of ROC from 69 to 89%. In addition, models that use externally sourced features outperformed models that use project-specific features on average by a margin of 26–44% in recall, 22–50% in g-measure, 0.4–28% in f-score, and 15–19% in AUC of ROC. Further, our results outperform a state-of-the-art prediction model for security bug reports in all cases. We find using sound statistical and effect size tests that (1) using harvested security keywords as features to train a text classification model improve classification models and generalise to other projects significantly. (2) Including features in the training dataset before model construction improve classification models significantly. (3) Different security categories represent predictors for different projects. Finally, we introduce new and promising approaches to construct models that can generalise across different independent projects. © 2021, The Author(s).		Oyetoyan, T.D.; Morrison, P.	Software Quality Journal					ConflictExcluded	Excluded	new_screen			2		2021				
923		ModelGuidance	Influence of diagram layout and scrolling on understandability of BPMN processes: an eye tracking experiment with BPMN diagrams	Business process modeling is an important activity for developing software systems—especially within digitization projects and when realizing digital business models. Specifying requirements and building executable workflows is often done by using BPMN 2.0 process models. Although there are several style guides available for BPMN, e.g., by Silver and Richard (BPMN method and style, vol 2, Cody-Cassidy Press, Aptos, 2009), there has not been much empirical research done into the consequences of the diagram layout. In particular, layouts that require scrolling have not been investigated yet. The aim of this research is to establish layout guidelines for business process modeling that help business process modelers to create more understandable business process diagrams. For establishing benefits and penalties of different layouts, a controlled eye tracking experiment was conducted, in which data of 21 professional software developers was used. Our results show that horizontal layouts are less demanding and that as many diagram elements as possible should be put on the initially visible screen area because such diagram elements are viewed more often and longer. Additionally, diagram elements related to the reader’s task are read more often than those not relevant to the task. BPMN modelers should favor a horizontal layout and use a more complex snake or multi-line layout whenever the diagrams are too large to fit on one page in order to support BPMN model comprehension. © 2021, The Author(s).		Lübke, D.; Ahrens, M.; Schneider, K.	Information Technology and Management					ConflictExcluded	Excluded	new_screen			2		2021				
924		ModelGuidance	Formal security analysis for software architecture design: An expressive framework to emerging architectural styles	Analysing security in the architecture design of modern software systems is a challenging task. Emerging technologies utilised in building software systems may pose security threats, so software engineers need to consider both the structure and behaviour of architectural styles that employ these supporting technologies. This paper presents an automated approach to security analysis that helps to identify security characteristics at the architectural level. Key techniques used by our approach include the use of metrics, vulnerability identification and attack scenarios. Our modelling is expressive in defining architectural styles and security characteristics. Our analysis approach gives insightful results that allow software engineers to trace through the design to find parts of the system that may be impacted by attacks. We have developed an analysis tool that allows user to seamlessly model the software architecture design and analyse security. The evaluation has been conducted to assess the accuracy and performance of our approach. The results show that our analysis approach performs reasonably well to analyse the security in the architectural design. © 2021 Elsevier B.V.		Chondamrongkul, N.; Sun, J.; Warren, I.	Science of Computer Programming					ConflictIncluded	Excluded	new_screen			2		2021				
925		ModelGuidance	Wodel-Test: a model-based framework for language-independent mutation testing	Mutation testing (MT) targets the assessment of test cases by measuring their efficiency to detect faults. This technique involves modifying the program under test to emulate programming faults, and assessing whether the existing test cases detect such mutations. MT has been extensively studied since the 70’s, and many tools have been proposed for widely used languages like C, Java, Fortran, Ada and SQL; and for notations like Petri-nets. However, building MT tools is costly and error-prone, which may prevent their development for new programming and domain-specific (modelling) languages. In this paper, we propose a framework called Wodel-Test to reduce the effort to create MT tools. For this purpose, it follows a model-driven approach by which MT tools are synthesized from a high-level description. This description makes use of the domain-specific language Wodel to define and execute model mutations. Wodel is language-independent, as it allows the creation of mutation operators for any language defined by a meta-model. Starting from the definition of the mutation operators, Wodel-Test generates a MT environment which parses the program under test into a model, applies the mutation operators, and evaluates the test-suite against the generated mutants, offering a rich collection of MT metrics. We report on an evaluation of the approach based on the creation of MT tools for Java and the Atlas transformation language. © 2020, Springer-Verlag GmbH Germany, part of Springer Nature.		Gómez-Abajo, P.; Guerra, E.; Lara, J.; Merayo, M.G.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2021				
926		ModelGuidance	Towards a Model-Integrated Runtime Monitoring Infrastructure for Cyber-Physical Systems	Runtime monitoring is essential for ensuring the safe operation and enabling self-adaptive behavior of Cyber-Physical Systems (CPS). It requires the creation of system monitors, instrumentation for data collection, and the definition of constraints. All of these aspects need to evolve to accommodate changes in the system. However, most existing approaches lack support for the automated generation and setup of monitors and constraints for diverse technologies and do not provide adequate support for evolving the monitoring infrastructure. Without this support, constraints and monitors can become stale and become less effective in long-running, rapidly changing CPS. In this 'new and emerging results' paper we propose a novel framework for model-integrated runtime monitoring. We combine model-driven techniques and runtime monitoring to automatically generate large parts of the monitoring framework and to reduce the maintenance effort necessary when parts of the monitored system change. We build a prototype and evaluate our approach against a system for controlling the flights of unmanned aerial vehicles. © 2021 IEEE.		Vierhauser, M.; Marah, H.; Garmendia, A.; Cleland-Huang, J.; Wimmer, M.	Proceedings - International Conference on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2021				
927		ModelGuidance	Business process management approach for improving agile software process and agile maturity	Continuous improvement of agile software processes is inevitable in order to reach sustainable and high-quality project outcomes. In this sense, organizations need guidance on how to apply agile software process improvement effectively; comprehensive approaches with in-depth analysis and guidelines are required to keep software processes in balance and to continuously improve them, as in a typical business process, over time. This research aims to explore the implementation of Business Process Management approach for improving an agile software process and accordingly agile maturity level. Many organizations utilize from Business Process Management approach in order to improve workflows and to discover organization-specific weaknesses. For this purpose, the study presents a practical, flexible model based on Business Process Management approach for agile software process improvement, which also incorporates maturity assessment for measuring the agile maturity level. Furthermore, an exploratory case study with a triangulation methodology of mixed methods was carried out for implementation of the model. The research puts forward that Business Process Management approach can be used for in-depth analysis of agile software process, discovery of problems, and redesign of the process. The research roadmap introduces worthwhile insights on agile software process improvement for researchers and practitioners. © 2020 John Wiley & Sons, Ltd.		Ozdenizci Kose, B.	Journal of Software: Evolution and Process					ConflictIncluded	Excluded	new_screen			2		2021				
928		ModelGuidance	Model-based Safety Assessment of a Triple Modular Generator with xSAP	The system design process needs to cope with the increasing complexity and size of systems,motivating the replacement of labor intensivemanual techniques with automated and semi-automated approaches.Recently, formal methods techniques, such as model-based verification and safety assessment, have been increasingly used to model systems under fault and to analyze them, generating artifacts such as fault trees and FMEA tables. In this paper, we show how to apply model-based techniques to a realistic case study from the avionics domain: a high integrity power distribution system, the Triple Modular Generator (TMG). The TMG is composed of a redundant and reconfigurable plant and a controller that must guarantee a high level of reliability. The case study is a significant challenge, from the modeling perspective, since it implements a complex reconfiguration policy, specified via a number of requirements in natural language, including a set of mutually dependent and potentially conflicting priority constraints. Moreover, from the verification standpoint, the controller must be able to handle an exponential number of possible faulty configurations. Our contribution is twofold. First, we formalize and validate the requirements and, using a constraint-based modeling style, we synthesize a correct by construction controller, avoiding the enumeration of all possible fault configurations, as is currently done by manual approaches. Second, we describe a comprehensive methodology and process, supported by the xSAP safety analysis platform that targets the modeling and safety assessment of faulty systems. Using xSAP, we are able to automatically extract minimal cut sets for the TMG. We demonstrate the scalability of our approach by analyzing a parametric version of the TMG case study that contains more than 700 variables and 90 faults. © 2021, British Computer Society.		Bozzano, M.; Cimatti, A.; Gario, M.; Jones, D.; Mattarei, C.	Formal Aspects of Computing					ConflictIncluded	Excluded	new_screen			2		2021				
929		ModelGuidance	Behavioral modeling based on cloud computing and target user recommendation for English cloud classroom	The English cloud classroom learning system provides a simple and effective way to access cloud-based training and learning materials. Student records based on behavioral modeling and interactive volume are assumed that the degree of student participation in the course measure. Previous studies, typically the frequency of student activities while ignoring temporary information. Analysis of Students' Activities in the course over time. According to the online classroom activity data, similar behavior change with time students are clustered. These results are three different groups. A large majority of inactive students. Another group to active throughout the students. However, a group of students to the event, but their activity will be reduced throughout the course. These student groups exhibit different performance. Overall students more active, the better the results. In addition to these general trends, also identified a trend of alternative courses that can be found, for example, becomes an active group of students in the course. It suggests that students' behavior is identified from a single course of conduct than the more complex, multi-mode learning activities course. More research is essential. In this study, investigated the Portuguese teachers 'views on classroom management, the relationship between self-off and the efficacy of teachers' and teachers' perception of classroom behavioral teachers' perception of time. Use mediator and moderator variables on the cloud classroom management, and teachers of English teachers perceive the relationship between classroom conditions were cheating process analysis. © 2020		Xiong, L.; Li, M.	Microprocessors and Microsystems					ConflictExcluded	Excluded	new_screen			2		2021				
930		ModelGuidance	A System Architecture in Multiple Views for an Image Processing Graphical User Interface	Medical images are important components in modern health institutions, used mainly as a diagnostic support tool to improve the quality of patient care. Researchers and software developers have difficulty when building solutions for segmenting, filtering and visualizing medical images due to the learning curve, complexity of installation and use of image processing tools. VisionGL is an open source library that facilitates programming through the automatic generation of C++ wrapper code. The wrapper code is responsible for calling parallel image processing functions or shaders on CPUs using OpenCL, and on GPUs using OpenCL, GLSL and CUDA. An extension to support distributed processing, named VGLGUI, involves the creation of a client with a workflow editor and a server, capable of executing that workflow. This article presents a description of architecture in multiple views, using the architectural standard ISO/IEC/IEEE 42010:2011, the 4+1 View Model of Software Architecture and the Unified Modeling Language (UML), for a visual programming language with parallel and distributed processing capabilities. Copyright © 2021 by SCITEPRESS - Science and Technology Publications, Lda.		Maciel, R.W.S.; Soares, M.S.; Dantas, D.O.	International Conference on Enterprise Information Systems, ICEIS - Proceedings					ConflictExcluded	Excluded	new_screen			2		2021				
931		ModelGuidance	Classification of UML Diagrams to Support Software Engineering Education	There is a huge necessity for tools that implement accessibility in Software Engineering (SE) education. The use of diagrams to teach software development is a very common practice, and there are a lot of UML diagrams represented as images in didactic materials that need an accessible version for visually impaired or blind students. Machine learning techniques, such as deep learning, can be used to automate this task. The practical application of deep learning in many classification problems in the context of SE is problematic due to the large volumes of labeled data required for training. Transfer learning techniques can help in this type of task by taking advantage of pre-trained models based on Convolutional Neural Networks (CNN), so that better results may be achieved even with few images. In this work, we applied transfer learning and data augmentation for UML diagrams classification on a dataset specially created for the development of this work, containing six types of UML diagrams. The dataset was also made available as a contribution of this work. We experimented three widely-known CNN architectures: VGG16, RestNet50, and InceptionV3. The results demonstrated that the use of transfer learning contributes for achieving good results even using scarce data. However, there is still a room for improvement regarding the successful classification of the UML diagrams addressed in this work. © 2021 IEEE.		Tavares, J.F.; Costa, Y.M.G.; Colanzi, T.E.	Proceedings - 2021 36th IEEE/ACM International Conference on Automated Software Engineering Workshops, ASEW 2021					ConflictExcluded	Excluded	new_screen			2		2021				
932		ModelGuidance	Towards an adaptive gamification Model Based on Ontologies	Gamification used in e-learning platforms is considered as a very valuable process forasmuch as it helps students to focus on their study manner, improve their educational experiences, boost their motivation and engagement and facilitate the learning mechanism. However, the one-size-fits-all approach could be inadequate for all learners. Whereas learners are educated regardless of their concerns, cognitive capacities, learning styles, attitudes, and personalities, which are all unique to them. Adaptive gamification has emerged, focusing on adaptive learning and cognitive science research and is providing personalized learning according to what the learner has for skills and interests. In this article, we present a personalized gamification model based on ontologies. The potential of our model is that it combines, at the same time, adaptive learning and adaptive gamification. Also, it considers both player context and learner context to adapt learning scenarios. The first implementation steps of our proposed approach will be presented in this article. © 2021 IEEE.		Bennani, S.; Maalel, A.; Ghezala, H.B.	Proceedings of IEEE/ACS International Conference on Computer Systems and Applications, AICCSA					ConflictExcluded	Excluded	new_screen			2		2021				
933		ModelGuidance	Cyber-Physical Automation Systems Modelling with IEC 61499 for their Formal Verification	This paper introduces a problem-oriented notation within the IEC 61499 syntax to be used for creating formal closed-loop models of cyber-physical automation systems. The proposed notation enables creation of a comprehensive tool-chain that can combine design, simulation, formal verification and distributed deployment of automation software. The proposed notation allows for definition of non-deterministic transitions in ECC of basic function blocks of IEC 61499. The tool chain includes an IEC 61499 compliant engineering environment, fb2smv converter of functions blocks to SMV code, the NuSMV model-checker and utilities for interpreting counterexamples. © 2021 IEEE.		Xavier, M.; Patil, S.; Vyatkin, V.	IEEE International Conference on Industrial Informatics (INDIN)					ConflictIncluded	Excluded	new_screen			2		2021				
934		ModelGuidance	Model of Supporting an Individual Training Pathway for Software Engineers	The article discusses the features of building an individual learning pathway in intelligent training systems through the competence-based approach. The model proposed in the article makes it possible to increase the efficiency of training specialists in software engineering by choosing the optimal training pathway based on the reference model. It also introduces the method for formalizing the assessment of student competencies, where the initial data are data on the most popular technologies and programming tools in the IT labor market, their ranking, as well as the results of testing students. © 2021 IEEE.		Polibina, E.	2021 IEEE 4th International Conference on Advanced Information and Communication Technologies, AICT 2021 - Proceedings					ConflictExcluded	Excluded	new_screen			2		2021				
935		ModelGuidance	A model-driven middleware approach to reduce the semantic gap between application domains and the generic infrastructure of smart cities	In Smart Cities, the city's IT infrastructure must facilitate the development, deployment and operation of smart city applications for a number of different application domains that need to access a variety of heterogeneous resources. Building these applications becomes a great challenge since: they are used on large scale systems, have dynamic behavior, must access heterogeneous resources, can share resources from different domains, and must deal with the semantics of different domains. In this sense, platforms are commonly used to support application development, but they do not reduce complexity, are generic and deal with resource abstractions, while applications deal with domain abstractions. To overcome this semantic gap, this work proposes the use of domain specific middleware (DSM) with support for the development of model-driven applications defined in terms of a domain specific modeling language (DSML). To facilitate the definition of languages in different domains and, consequently, the execution of applications built according to these languages, a meta-meta language was defined that wraps the generic concepts used for the management of several domains. Furthermore, operational semantics are represented by models that describe domain-specific operations. The set of these elements associated with a middleware built according to the model-driven approach is defined as Model-Driven Domain-Specific Middleware (MDDSM). Therefore, this work proposes an integrated architecture that combines the use of MD-DSM and a smart cities platform to provide a flexible, robust and complete approach to facilitating the creation and execution of applications for different smart city domains. Thus, in the context of Smart Cities, middleware must deal with both application domain-related abstractions and platform-related abstractions (resources). Furthermore, the use of the model-driven approach allows representing such abstractions and relating domain semantics to generic resources. As a result, we have the construction of middleware and related elements in different domains and associated with a smart cities platform, demonstrating the expressiveness of the proposed approach. © 2021 IEEE.		Melo, P.C.F.	Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021					ConflictIncluded	Excluded	new_screen			2		2021				
936		ModelGuidance	Wodel-Edu: An MDE Solution for the Generation and Evaluation of Diagram-based Exercises	The creation and correction of exercises are two of the most time-consuming tasks performed by teachers. When done by hand, they are error-prone, too. Several approaches have been devised to automate such tasks. In the case of exercises based on diagrams, we can represent them as models, generate a set of variations - called mutants - and automate the process. In this tool demo paper, we showcase WODEL-EDU, a domain independent framework for the generation and automated grading of diagram-based exercises. This framework offers a family of DSLs enabling the specification and configuration of five different kinds of such exercises, and extensible code generation facilities targeting environments like the MOODLE platform, the web and mobile applications. © 2021 IEEE.		Gomez-Abajo, P.; Rico-Fernandez, A.; Guerra, E.; Lara, J.D.	Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021					ConflictExcluded	Excluded	new_screen			2		2021				
937		ModelGuidance	A process-oriented, multi-agent information system architecture	In this work, we present AAdapt, an intelligent multi-agent system architecture that proposes a mechanism to work together with Process-Aware Information Systems (PAIS) systems. The AAdapt allows the monitoring of context elements of the process, identifying situations that may be unwanted, and execute plans to work around these situations. The agents in AAdapt were modeled using the methodology O-MaSE (Organization-based Multiagent Software Engineering) and reasoning based on Belief, Desire, and Intentions (BDI) to allow flexibility to adapt business processes and make decisions according to available background information. In the modeling of the Adapt agents, the goals model, the role/function model, and the agent class model were created, which guided the implementation of the Java / Jadex code. Adapt makes decisions according to context information obtained from the process engine (PAIS), external sensors, and the ontology of the process domain. The implementation of AAdapt was held to a process vessel to dock and had the Protégé software for the process domain ontology creation, the software Camunda (PAIS), and development codes in Java / Jadex. © CIbSE 2021. All rights reserved.		de Moraes Gonçalves, G.F.; Medaber Jambo, C.H.; Benjamim Werneck, V.M.; Santoro, F.M.	CIbSE 2021 - XXIV Ibero-American Conference on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2021				
938		ModelGuidance	MoDALAS: Model-Driven Assurance for Learning-Enabled Autonomous Systems	Increasingly, safety-critical systems include artificial intelligence and machine learning components (i.e., Learning-Enabled Components (LECs)). However, when behavior is learned in a training environment that fails to fully capture real-world phenomena, the response of an LEC to untrained phenomena is uncertain, and therefore cannot be assured as safe. Automated methods are needed for self-assessment and adaptation to decide when learned behavior can be trusted. This work introduces a model-driven approach to manage self-adaptation of a Learning-Enabled System (LES) to account for run-time contexts for which the learned behavior of LECs cannot be trusted. The resulting framework enables an LES to monitor and evaluate goal models at run time to determine whether or not LECs can be expected to meet functional objectives. Using this framework enables stakeholders to have more confidence that LECs are used only in contexts comparable to those validated at design time. © 2021 IEEE.		Langford, M.A.; Chan, K.H.; Fleck, J.E.; Mckinley, P.K.; Cheng, B.H.C.	Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS 2021					ConflictExcluded	Excluded	new_screen			2		2021				
939		ModelGuidance	Software sustainability requirements: A unified method for improving requirements process for software development	As one of the most important concepts in the software engineering process, requirements engineering plays an important task in sustainability engineering by understanding the nature of software system and their impacts on the entire dimension of sustainable development. Unfortunately, the process for incorporating sustainability concerns is not a trivial task. Sustainability is a concept with a high level of abstraction and is mostly treated as an afterthought. This work discusses a practical approach on how to capture requirements with sustainability concern related to software development. A stepwise guideline is presented to ease the requirements engineering process that can address sustainability issues. The proposed guideline combined well-known approaches such as the goal-scenario-based approach, analytical hierarchical approach, and feature modeling to capture sustainability requirements as an integrated framework. altogether, this tutorial shows a practical methodology in which the engineer can see which aspects or features that they need to improve to meet the required sustainability indicator and baseline. © 2021 IEEE.		Dewi Saputri, T.R.; Lee, S.-W.	Proceedings of the IEEE International Conference on Requirements Engineering					ConflictExcluded	Excluded	new_screen			2		2021				
940		ModelGuidance	Automated Model Transformation in modeling Digital Twins of Industrial Internet-of-Things Applications utilizing AutomationML	In recent years, the manufacturing industry sector has undergone major changes. Better known by the term Industry 4.0, this trend describes the transformation of centrally managed production systems towards decentralized value creation networks. As this leads to a strong increase regarding complexity, engineering such current or future manufacturing systems becomes a difficult task. An example for such a challenging engineering process is the selection of technical implementations fulfilling all requirements and performing the needed functions. In order to support this process, model-based systems engineering (MBSE) and its expressions like model-driven architecture (MDA) proved to be promising approaches. However, semi or fully automated model transformations, which could deal with the aforementioned issue, are still yet widely unexplored in the industrial area. Therefore, this paper introduces an approach transforming the logical architecture of a system into its technical implementation by utilizing AutomationML. As the goal is to perform this step automatically, additional tool support is provided by developing specific software. The results of this approach are thereby evaluated by a real-world case study, which is applied according to the concepts of the Reference Architecture Model Industrie 4.0 (RAMI 4.0). © 2021 IEEE.		Binder, C.; Cala, A.; Vollmar, J.; Neureiter, C.; Luder, A.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					ConflictExcluded	Excluded	new_screen			2		2021				
941		ModelGuidance	Prolegomena of a Multi-Level Modeling Method Illustrated with the FMMLx	Against the background of selected general design principles, the paper presents a preliminary draft of a multilevel modeling method. The proposal focuses on two parts. First, it offers design principles and guidelines for supporting design decisions to support the design of appropriate models. The guidelines are illustrated with examples created with the FMMLx. Second, it includes a process model, which comprises various micro processes that describe prototypical procedures to the design of multi-level models. © 2021 IEEE.		Frank, U.	Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021					ConflictIncluded	Included	new_screen			2		2021				
942		ModelGuidance	Modeling and Evaluating Personas with Software Explainability Requirements	This work focuses on the context of software explainability, which is the production of software capable of explaining to users the dynamics that govern its internal functioning. User models that include information about their requirements and their perceptions of explainability are fundamental when building software with such capability. This study investigates the process of creating personas that include information about users’ explainability perceptions and needs. The proposed approach is based on data collection with questionnaires, modeling of empathy maps, grouping the maps, generating personas from them and evaluation employing the Persona Perception Scale method. In an empirical study, personas are created from 61 users’ response data to a questionnaire. The generated personas are evaluated by 60 users and 38 designers considering attributes of the Persona Perception Scale method. The results include a set of 5 distinct personas that users rate as representative of them at an average level of 3.7 out of 5, and designers rate as having quality 3.5 out of 5. The median rate is 4 out of 5 in the majority of criteria judged by users and designers. Both the personas and their creation and evaluation approach are contributions of this study to the design of software that satisfies the explainability requirement. © 2021, Springer Nature Switzerland AG.		Ramos, H.; Fonseca, M.; Ponciano, L.						ConflictExcluded	Excluded	new_screen			2		2021				
943		ModelGuidance	Aligning Software System Level with Business Process Level through Model-Driven Architecture	Information systems are intended to provide organisations with a new way of sustaining themselves, by helping them manage their activities using innovative technologies. Information systems require aligned levels for maximum effectiveness. In this context, business and information technology (IT) alignment is an important issue for the success of organisations. This paper presents the first step of the proposed approach to align the software system level, modelled by a Unified Modeling Language (UML) class diagram, with the business process level, modelled by the Business Process Model and Notation (BPMN) model. A model-driven architecture approach is proposed as a means to transform a set of BPMN models into a UML class diagram. A set of transformation rules is proposed, followed by guidelines that help apply those rules. © 2021		Habba, M.; Fredj, M.; Chaouni, S.B.	International Journal of Advanced Computer Science and Applications					ConflictIncluded	Excluded	new_screen			2		2021				
944		ModelGuidance	Service oriented architecture-based design of bank-ATM and its verification with Petri-net	In the present era, IT-enabled business applications are very much observed to be pervasive and felt to be essential to manage an organisation. An organisation needs to update and upgrade its strategies to meet the challenges by adopting an IT-enabled solution to meet the agile customer requirements and market demand. Service-oriented architecture (SOA) is one of the various architectural styles that provides agility to the organisation. SOA can help to meet different changes in requirements, viz., service composition, model-driven development, and service virtualisation. This paper illustrates the application of SOA in designing and implementing automated teller machine (ATM) services, helpful in banking transactions. The incorporation of various services and their orchestration is implemented by using business process execution language (BPEL). It is very much essential to develop a proper BPEL process and validate it. In this study, the validation of the BPEL model is carried out by using the Petri-net tool. © 2021 Inderscience Enterprises Ltd.		Nath, A.; Rath, S.K.	International Journal of Simulation and Process Modelling					ConflictExcluded	Excluded	new_screen			2		2021				
945		ModelGuidance	Enterprise Modeling: A Multi-perspective Tool-Supported Approach	Enterprises are inherently complex systems, which involve a multitude of components working dynamically and in coordination to obtain a desired end goal. The intricacy of an enterprise and how the different components can be modeled is the area of research of Enterprise Modeling (EM). When holistically modeling an enterprise, it is required to use more than one modeling language, including general and domain specific modeling languages (DSML), to boost the comprehension of different enterprise areas. However, the use of multiple languages can lead to a lack of detail and understanding of the relationships between enterprise components that are modeled in different domains. Analyzing the relationships between various enterprise domains can generate valuable insight into understanding the uncertainty, complexity, and operations of an enterprise. In this paper, we present an approach to enable EM from multiple perspectives allowing enterprises to use different languages to describe various domains. This approach supports the creation of relationships and dependencies between domains, to analyze from different depths and viewpoints desired enterprise perspectives. Considering the needed requirements for multi-perspective modeling, we developed a workbench that allows the composition and merger of different EM languages and creates ad-hoc EM tools based on the necessities of the enterprise. © 2021, Springer Nature Switzerland AG.		Lara Machado, P.; Sánchez, M.; Villalobos, J.						ConflictExcluded	Excluded	new_screen			2		2021				
946		ModelGuidance	Search-Based Automated Play Testing of Computer Games: A Model-Based Approach	Computer game technology is increasingly more complex and applied in a wide variety of domains, beyond entertainment, such as training and educational scenarios. Testing games is a difficult task requiring a lot of manual effort since the interaction space in the game is very fine grained and requires a certain level of intelligence that cannot be easily automated. This makes testing a costly activity in the overall development of games. This paper presents a model-based formulation of game play testing in such a way that search-based testing can be applied for test generation. An abstraction of the desired game behaviour is captured in an extended finite state machine (EFSM) and search-based algorithms are used to derive abstract tests from the model, which are then concretised into action sequences that are executed on the game under test. The approach is implemented in a prototype tool EvoMBT. We carried out experiments on a 3D game to assess the suitability of the approach in general, and search-based test generation in particular. We applied 5 search algorithms for test generation on three different models of the game. Results show that search algorithms are able to achieve reasonable coverage on models: between 75% and 100% for the small and medium sized models, and between 29% and 56% for the bigger model. Mutation analysis shows that on the actual game application tests kill up to 99% of mutants. Tests have also revealed previously unknown faults. © 2021, Springer Nature Switzerland AG.		Ferdous, R.; Kifetew, F.; Prandi, D.; Prasetya, I.S.W.B.; Shirzadehhajimahmood, S.; Susi, A.						ConflictExcluded	Excluded	new_screen			2		2021				
947		ModelGuidance	Quality Guidelines for Research Artifacts in Model-Driven Engineering	Sharing research artifacts is known to help people to build upon existing knowledge, adopt novel contributions in practice, and increase the chances of papers receiving attention. In Model-Driven Engineering (MDE), openly providing research artifacts plays a key role, even more so as the community targets a broader use of AI techniques, which can only become feasible if large open datasets and confidence measures for their quality are available. However, the current lack of common discipline-specific guidelines for research data sharing opens the opportunity for misunderstandings about the true potential of research artifacts and subjective expectations regarding artifact quality. To address this issue, we introduce a set of guidelines for artifact sharing specifically tailored to MDE research. To design this guidelines set, we systematically analyzed general-purpose artifact sharing practices of major computer science venues and tailored them to the MDE domain. Subsequently, we conducted an online survey with 90 researchers and practitioners with expertise in MDE. We investigated our participants' experiences in developing and sharing artifacts in MDE research and the challenges encountered while doing so. We then asked them to prioritize each of our guidelines as essential, desirable, or unnecessary. Finally, we asked them to evaluate our guidelines with respect to clarity, completeness, and relevance. In each of these dimensions, our guidelines were assessed positively by more than 92% of the participants. © 2021 IEEE.		Damasceno, C.D.N.; Struber, D.	Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS 2021					ConflictExcluded	Excluded	new_screen			2		2021				
948		ModelGuidance	Experiments for Linking the Complexity of the Business UML Class Diagram to the Quality of the Associated Code	A relevant goal of software engineering is to assure the quality of object oriented software from the conceptual modeling phase. UML Class diagrams constitute a key artifact at that stage. Among existing models for iterative and incremental development of software systems, Model Driven Architecture (MDA) has reached a leadership position. MDA enables model-driven software development which treats models as primary development artifacts. The present empirical study answers the following three research questions: (RQ1) are there available in the literature class complexity metrics that can be adopted at the business level? (RQ2) Is it possible to adopt those metrics (if any) to predict the quality of the code returned by xGenerator? The latter is a Java technology platform for the creation of MVC Web applications, which implements the model-driven approach. (RQ3) Is it possible to identify a threshold for the adopted metrics (if any) that might suggest when a business Class diagram should be refactored?. © 2021, Springer Nature Switzerland AG.		Paolone, G.; Marinelli, M.; Paesani, R.; Di Felice, P.						ConflictIncluded	Excluded	new_screen			2		2021				
949		ModelGuidance	AdaptiveSystems: An Integrated Framework for Adaptive Systems Design and Development Using MPS JetBrains Domain-Specific Modeling Environment	This paper contains the design and development of an adaptive systems (AdaptiveSystems Domain-Specific Language - DSL) framework to assist language developers and data scientists in their attempt to apply Artificial Intelligence (AI) algorithms in several application domains. Big-data processing and AI algorithms are at the heart of autonomics research groups among industry and academia. Major advances in the field have traditionally focused on algorithmic research and increasing the performance of the developed algorithms. However, it has been recently recognized by the AI community that the applicability of these algorithms and their consideration in context is of paramount importance for their adoption. Current approaches to address AI in context lie in two areas: adaptive systems research that mainly focuses on implementing adaptivity mechanisms (technical perspective) and AI in context research that focuses on business aspects (business perspective). There is currently no approach that combines all aspects required from business considerations to an appropriate level of abstraction. In this paper, we attempt to address the problem of designing adaptive systems and therefore providing AI in context by utilising DSL technology. We propose a new DSL (AdaptiveSystems) and a methodology to apply this to the creation of a DSL for specific application domains such as AdaptiveVLE (Adaptive Virtual Learning Environment) DSL. The language developer will be able to instantiate the AdaptiveSystems DSL to any application domain by using the guidelines in this paper with an integrated path from design to implementation. The domain expert will then be able to use the developed DSL (e.g. AdaptiveVLE DSL) to design and develop their application. Future work will include extension and experimentation of the applicability of this work to more application domains within British Telecom (BT) and other areas such as health care, finance, etc. © 2013 IEEE.		Meacham, S.; Pech, V.; Nauck, D.	IEEE Access					ConflictExcluded	Excluded	new_screen			2		2021				
950		ModelGuidance	Design of UML Diagrams for Intervention for Autism Children (IAC System)	Autism Spectrum Disorder (ASD) or Autism is a complex developmental disability that typically appears during early childhood and can impact a person’s social skills, communication, relationships, and self-regulation. Early recognition, as well as behavioural, educational and family therapies may reduce symptoms and support development and learning. Parent as well as the affected child faces severe challenges. IAC system enables the autistic child to overcome such challenges. The main functionalities of this system includes Training parent, Communicator, ABA, Schools nearby, Apprisal Provision, Financial Resources and Emotional Analyser. For this system, StarUML an open source software modelling tool is used to develop UML diagrams and provide users with ready-to-use, expressive modelling. The interesting quality of IAC is that it provides services both to the parent as well as the child affected by ADS. © 2021, Springer Nature Singapore Pte Ltd.		Suriya, S.; Asmitha, R.; Darshanaa, V.G.; Priyadarshini, S.; Priyanga, K.; Sanjeetha, J.R.						ConflictExcluded	Excluded	new_screen			2		2021				
951		ModelGuidance	Model-Driven Engineering: A State of Affairs and Research Agenda	The Model-Driven Architecture has been launched in 2001 by the OMG. Since then, model-driven engineering has been embraced by the research community but less than hoped for by practitioners. To ensure the relevance of a research agenda, we need a good understanding of practitioners’ problems, in particular with modelling. We therefore performed a literature review on the state of practice in the use of modelling languages for software engineering in the last 5 years according to Kitchenham’s guidelines. This paper serves as orientation within the research field and as a basis for further research. It contributes to literature by focusing on papers discussing practical use of modelling languages and the benefits and problems perceived by practitioners. The main finding presented in this paper is that while practitioners experience benefits of modelling for analysis and design, requirements engineering, quality management, implementation and deployment, they still struggle with external tool integration/model transformation and export, cognitive fit, visual expressiveness, high effort required in acquiring skills, automated analysis and high effort required in using tools. Other findings are that modelling is mostly used for documentation and requirements elicitation, the most used modelling language is UML. © 2021, Springer Nature Switzerland AG.		Verbruggen, C.; Snoeck, M.						ConflictExcluded	Excluded	new_screen			2		2021				
952		ModelGuidance	A model-driven engineering: From relational database to document-oriented database in big data context	In today’s world multiple players in digital technology produce infinite amounts of data. Sensors, social networks or e-Commerce, they all generate information that is incremented in real time according to Gartner's 5V: in Volume, Velocity, Variety, Value, and Veracity. The digital transformation of companies leads an evolution of databases towards Big Data whose power has become increasingly strategic. The exploitation of the data is a key to a better understanding and management of the company and its markets. This obviously imposes an ability to generate data, to store it, to give it meaning and then to exploit it. At the same time, the modernization of the Big Data platform is essential to automate this process. In this paper, we explain how to design and apply transformation rules to transfer from an SQL relational database to a Big Data solution within NoSQL. For this, we use the Model Driven Architecture and the transformation languages as MOF 2.0 QVT (Meta-Object Facility 2.0 Query-View-Transformation) and Acceleo for describing the meta-models for the development of transformation model. The transformation rules defined in this work can generate, from the class diagram, a JSON files for creation document-oriented NoSQL database. Copyright © 2021 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved		Belkadi, F.Z.; Esbai, R.	Proceedings of the 16th International Conference on Software Technologies, ICSOFT 2021					ConflictExcluded	Excluded	new_screen			2		2021				
953		ModelGuidance	Using BPMN for ETL conceptual modelling: A case study	One of the most important parts of a Data Warehousing System is the Extract-Transform-Load (ETL) component. It is responsible for extracting, transforming, conciliating, and loading data for supporting decision-making requirements. Usually, due to the complexity of managing heterogeneous data, this component is responsible for consuming most of the resources required for implementing a Data Warehousing System, representing a critical component that compromises the adequacy of the system. Despite their importance, the ETL development method is essentially ad-hoc, which does not always follow or embodies the best practices. With the emergence of Big Data and associated tools, script-based ETL became, even more, a common approach. In the last years, BPMN - Business Process Model and Notation - have been proposed and used to support ETL conceptual models. Still, as an expressive language, it provides different approaches for representing the same requirements. In this paper, we explore the use of BPMN for ETL conceptual modelling, analyzing existing approaches, and proposing a set of guidelines for using this notation in a more consistent way. Copyright © 2021 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved		Oliveira, B.; Oliveira, Ó.; Belo, O.	Proceedings of the 10th International Conference on Data Science, Technology and Applications, DATA 2021					ConflictExcluded	Excluded	new_screen			2		2021				
954		ModelGuidance	Model-driven Approach To Align Heterogeneous Models Of A Complex System	To understand and manipulate a complex system, it is necessary to apply the separation of concerns and produce separate models, called viewpoints models. These models represent views on the system that correspond to distinct business domains. They are generally heterogeneous, i.e. conform to different meta-models. The management of the system’s global model (a complete view of the system) requires the identification of the existing correspondences among the viewpoints models. However, in practice these correspondences are either incompletely identified or not sufficiently formalized to be maintained when models evolve. This restricts their use and does not allow their full exploitation for managing the global model. To fix this issue, we propose AHM (Alignment of Heterogeneous Models), an approach to organize the source models as a network of models through a virtual global model called M1C (Model of correspondences between models) that conforms to a Meta-Model of Correspondences (MMC). AHM proposes also a process, allowing for both the creation of the global model, and its consistency control. Partial automation of this process is done through a refining mechanism supported by a semantics expression described in a Domain Specific Language (DSL). The application of AHM is illustrated by the example of a conference management system. A prototype of a tool called Heterogeneous Matching and Consistency management Suite (HMCS) has been developed to support this approach. © 2021. All Rights Reserved.		Hamlaoui, M.E.; Ebersold, S.; Bennani, S.; Anwar, A.; Dkaki, T.; Nassar, M.; Coulette, B.	Journal of Object Technology					ConflictExcluded	Excluded	new_screen			2		2021				
955		ModelGuidance	Comparing UML-Based and DSL-Based Modeling from Subjective and Objective Perspectives	In the last two decades, researchers have conducted several empirical evaluations, involving thousands of subjects, to understand the use of models in software development. The results of these evaluations show that most of the subjects make informal use of the models, which is known as ‘modeling as sketch’. In this paper, we present an experiment that compares UML-based and DSL-based modeling when subjects model a part of a commercial video game. In the comparison, we have used objective and subjective measures, in contrast to other works that focus either on objective measures to evaluate modeling performance or on subjective measures to analyze modeling styles. Our results reveal that subjects underestimate the potential of their own models. Our finding is relevant for the design of future evaluations and for the teaching and adoption of modeling. If users correctly assess their models, they might leverage their potential as programs. © 2021, Springer Nature Switzerland AG.		Domingo, Á.; Echeverría, J.; Pastor, Ó.; Cetina, C.						ConflictExcluded	Excluded	new_screen			2		2021				
956		ModelGuidance	UML Sequence Diagram: An Alternative Model	The UML sequence diagram is the second most common UML diagram that represents how objects interact and exchange messages over time. Sequence diagrams show how events or activities in a use case are mapped into operations of object classes in the class diagram. The general acceptance of sequence diagrams can be attributed to their relatively intuitive nature and ability to describe partial behaviors (as opposed to such diagrams as state charts). However, studies have shown that over 80% of graduating students were unable to create a software design or even a partial design, and many students had no idea how sequence diagrams were constrained by other models. Many students exhibited difficulties in identifying valid interacting objects and constructing messages with appropriate arguments. Additionally, according to authorities, even though many different semantics have been proposed for sequence diagrams (e.g., translations to state machines), there exists no suitable semantic basis refinement of required sequence diagram behavior because direct style semantics do not precisely capture required sequence diagram behaviors; translations to other formalisms disregard essential features of sequence diagrams such as guard conditions and critical regions. This paper proposes an alternative to sequence diagrams, a generalized model that provides further understanding of sequence diagrams to assimilate them into a new modeling language called thinging machine (TM). The sequence diagram is extended horizontally by removing the superficial vertical-only dimensional limitation of expansion to preserve the logical chronology of events. TM diagramming is spread nonlinearly in terms of actions. Events and their chronology are constructed on a second plane of description that is superimposed on the initial static description. The result is a more refined representation that would simplify the modeling process. This is demonstrated through remodeling sequence diagram cases from the literature. © 2021. All Rights Reserved.		Al-Fedaghi, S.	International Journal of Advanced Computer Science and Applications					ConflictIncluded	Excluded	new_screen			2		2021				
957		ModelGuidance	Metamodel based approach to generate user interface mockup from UML class diagram	Interface and interaction design take up most of the times in software creation. Human Computer Interaction (HCI) is mainly the best way to interact with a computer. During software development, class diagram is the only required step and process to design an information system according to UML notation. In addition, creating class diagram is a mandatory activity during the software creation process. The aim of this paper is to automatically generate the HCI mockup from class diagram to make easy and extremely fast software design. For example, the SEF (Schéma d'Enchaînement de Fenêtre), is an interface model allowing to create a new interface mockup. It offers more widgets to design the HCI. And MACAO (Méthode d'Analyse et de Conception d'Applications Orientées-objets) is one of the methods which helps computer scientist to easily create software. The model transformation is based on Model Driven Engineering (MDE). We use UML notation to design the class diagrams. We also adopt MDA architecture to create the model-based transformation process. Transformation rules are created using Atlas Transformation Language (ATL) to automatically generate a specific interface from the class diagram. © 2021 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/)		Thomas, M.; Mihaela, I.; Andrianjaka, R.M.; Germain, D.W.; Sorin, I.	Procedia Computer Science					ConflictExcluded	Excluded	new_screen			2		2021				
958		ModelGuidance	Applying an MDA-based approach for enhancing the validation of business process models	Business process modeling is a key activity during the development of complex and large information systems, such as enterprise management systems. These systems deal with a wide number of business processes; thus, the modeling and validation of processes becomes a challenging task. This entails dealing with issues such as the precedence between tasks and activities within a process, as well as resources, roles and enterprise assets involved. Moreover, undetected mistakes in this phase will be propagated to the system design phase and consequently will have a negative effect in the final system quality. On the other hand, the scientific literature advocates the suitability of formal models to address some issues during the process modeling. However, the adoption of formal models leads to new problems because formal languages are difficult to understand and process stakeholders usually lack of knowledge about them. In that direction, the Model-Driven Architecture (MDA) paradigm includes specifications that may alleviate some difficulties in the adoption of formal languages. Hence, in this paper we introduce an approach which combines MDA-specifications and ontologies to support process modeling. These technologies have great acceptance between both software researchers and developers. The use of ontologies permits to semantically validate the models. Furthermore, the application of MDA-guidelines could facilitate the integration of BPMN, a graphical notation for describing business process models widely accepted among business analysts, with a formal language to automate the analysis of business process models. © 2021 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/)		Silega, N.; Noguera, M.	Procedia Computer Science					ConflictExcluded	Excluded	new_screen			2		2021				
959		ModelGuidance	Using BPMN to Identify Indicators for Teacher Intervention in Support of Self-regulation and Co-regulation of Learning in Asynchronous e-learning	We used BPMN diagrams to identify indicators that can assist teachers in their intervention actions to support students' self-regulation and co-regulation in an asynchronous e-learning context. The use of BPMN modeling, by making explicit the tasks and procedures implicit in the intervention of the e-learning teacher, also exposed which data were available for developing decision-support indicators, as well as the relevant moments for carrying out interventions. Such indicators can help e-learning teachers focus their interventions to support self-regulation and co-regulation of learning, as well as enabling the creation of live data dashboards to support decision-making for those interventions, thus this process can contribute to devise better instruments for teacher intervention in support of self-regulation and co-regulation of student learning. © 2021, Springer Nature Switzerland AG.		Morais, C.; Pedrosa, D.; Rocio, V.; Cravino, J.; Morgado, L.						ConflictIncluded	Excluded	new_screen			2		2021				
960		ModelGuidance	Model-driven Framework for Requirement Traceability	In software development, requirements traceability is often mandated. It is important to apply to support various software development activities like result evaluation, regression testing and coverage analysis. Model-Driven Testing is one approach to provide a way to verify and validate requirements. However, it has many challenges in test generation in addition to the creation and maintenance of traceability information across test-related artifacts. This paper presents a model-based methodology for requirements traceability that relies on leveraging model transformation traceability techniques to achieve compliance with DO-178C standard as defined in the software verification process. This paper also demonstrates and evaluates the proposed methodology using avionics case studies focusing on the functional aspects of the requirements specified with the UCM (Use Case Maps) modeling language. © 2021. All Rights Reserved.		Kesserwan, N.; Al-Jaroodi, J.	International Journal of Advanced Computer Science and Applications					ConflictIncluded	Excluded	new_screen			2		2021				
961		ModelGuidance	Composable Finite State Machine-based Modeling for Quality-of-Information-aware Cyber-physical Systems	"Time plays a major role in the specification of Cyber-physical Systems (CPS) behavior with concurrency, timeliness, asynchrony, and resource limits as their main characteristics. In addition to timeliness, the specification of CPS needs to assess and unambiguously define its behavior with respect to the other Quality-of-Information (QoI) properties: (1) Correctness, (2) Completeness, (3) Consistency, and (4) Accuracy. Very often, CPS need to handle these QoI properties, and any combination thereof, multiple times when performing computation and communication processes. However, a model-driven and systematic approach to specify CPS behavior that jointly considers combined QoI aspects is possible but missing in existing methodologies. As the first contribution of this work, we provide an extension to an established model of computation (MoC) based on ""Functions driven by Finite State Machine""(FunState) to enable a model-driven composition mechanism to create CPS behavior specifications from reusable components. Second, we present a novel set of design patterns to illustrate the modeling of QoI-aware CPS specifications that can be applied in several state-of-the-art Electronic System Level (ESL) methodologies. The time semantics of the MoC are formalized using the tagged-signal-model, and the presented model-driven approach enables the composition of multiple design patterns. The main benefits of the presented model-driven approach and design patterns to create CPS specifications are as follows: (a) reduce modeling effort, errors, and time through the reuse of known recipes to re-incurring tasks and allow to automatically generate repetitive control flows based on extended Finite State Machines; (b) increase system robustness and facilitate the creation of holistic QoI management allowing to unambiguously define system behavior for scenarios with single/multiple QoI requirement violations in different models of computation; (c) dynamically validate timing behavior of system implementations to enable a multi-objective optimization of nonfunctional properties that influence CPS timing. We demonstrate the aforementioned benefits through the modeling and evaluation of an infrastructure-assisted automated driving case study using Infrastructure-to-Vehicle (I2V) communications to distribute QoI critical road environment information. © 2021 Owner/Author."		Rosales, R.; Paulitsch, M.	ACM Transactions on Cyber-Physical Systems					ConflictIncluded	Excluded	new_screen			2		2021				
962		ModelGuidance	Research on Various Software Development Lifecycle Models	Software development life cycle models define a guideline for the design, development and testing of the software. These models ensure that software meets the customer requirements and is developed within the given timeframe and budget. There are various SDLC models used for software development. This paper describes various types of traditional SDLC models like waterfall mode, v model and spiral model. It also describes contemporary models like agile model and RAD model. The paper also highlights the importance of security procedures in software development life cycle process. The basic motive of this paper is to study variety of models and make a relative study of them to understand their advantages and disadvantages. © 2021, Springer Nature Switzerland AG.		Khan, N.A.						ConflictExcluded	Excluded	new_screen			2		2021				
963		ModelGuidance	Socio-technical scales in socio-environmental modeling: Managing a system-of-systems modeling approach	System-of-systems approaches for integrated assessments have become prevalent in recent years. Such approaches integrate a variety of models from different disciplines and modeling paradigms to represent a socio-environmental (or social-ecological) system aiming to holistically inform policy and decision-making processes. Central to the system-of-systems approaches is the representation of systems in a multi-tier framework with nested scales. Current modeling paradigms, however, have disciplinary-specific lineage, leading to inconsistencies in the conceptualization and integration of socio-environmental systems. In this paper, a multidisciplinary team of researchers, from engineering, natural and social sciences, have come together to detail socio-technical practices and challenges that arise in the consideration of scale throughout the socio-environmental modeling process. We identify key paths forward, focused on explicit consideration of scale and uncertainty, strengthening interdisciplinary communication, and improvement of the documentation process. We call for a grand vision (and commensurate funding) for holistic system-of-systems research that engages researchers, stakeholders, and policy makers in a multi-tiered process for the co-creation of knowledge and solutions to major socio-environmental problems. © 2020 Elsevier Ltd		Iwanaga, T.; Wang, H.-H.; Hamilton, S.H.; Grimm, V.; Koralewski, T.E.; Salado, A.; Elsawah, S.; Razavi, S.; Yang, J.; Glynn, P.; Badham, J.; Voinov, A.; Chen, M.; Grant, W.E.; Peterson, T.R.; Frank, K.; Shenk, G.; Barton, C.M.; Jakeman, A.J.; Little, J.C.	Environmental Modelling and Software					ConflictExcluded	Excluded	new_screen			2		2021				
964		ModelGuidance	Domain-specific scenarios for refinement-based methods	Formal methods use abstraction and rigorously verified refinement to manage the design of complex systems, ensuring that they satisfy important invariant properties. However, formal verification is not sufficient: models must also be tested to ensure that they behave according to the informal requirements and validated by domain experts who may not be expert in formal modelling. This can be satisfied by scenarios that complement the requirements specification. The model can be animated to check whether the scenario is feasible in the model and that the model reaches the states expected in the scenario. However, there are two problems with this approach. 1) The natural language used to describe the scenarios is often verbose, ambiguous and therefore difficult to understand; especially if the modeller is not a domain expert. 2) Provided scenarios are typically at the most concrete level corresponding to the full requirements and cannot be used until all the refinements have been completed in the model. We show by example how a precise and concise domain specific language can be used for writing these abstract scenarios in a style that can be easily understood by the domain expert (for validation purposes) as well as the modeller (for behavioural verification) and can be used as the persistence for automated tool support. We propose two alternative approaches to using scenarios during formal modelling: A method of refining scenarios before the model is refined so that the scenarios guide the modelling, and a method of abstracting scenarios from provided concrete ones so that they can be used to test early refinements of the model. We illustrate the two approaches on the ‘Tokeneer’ secure enclave example and the ERTMS/ETCS Hybrid Level 3 specification for railway controls. We base our approach on the Cucumber framework for scenarios and the Event-B modelling language and tool set. We have developed a new ‘Scenario Checker’ plugin to manage the animation of scenarios.1 © 2020		Snook, C.; Hoang, T.S.; Dghaym, D.; Fathabadi, A.S.; Butler, M.	Journal of Systems Architecture					ConflictIncluded	Excluded	new_screen			2		2021				
965		ModelGuidance	Initial results of Software Development Models based on Service Oriented Architecture	Organizations have challenges to innovate their software developments. Service Oriented Architecture is a style of Information Technology Architecture that is based on service orientation. The objective of the work is to show the results obtained from models related to software developments based on the Service Oriented Architecture for Organizations. A review is made to analyze articles published in prestigious journals during the last five years. 866 potential articles were extracted, from which 15 were selected based on inclusion and exclusion criteria. It is concluded that there are several software development models based on the Service Oriented Architecture for Organizations with positive results. © 2020 IEEE.		Flores-Rodriguez, C.; Aguilar-Alonso, I.	Proceedings - IEEE 2020 2nd International Conference on Advances in Computing, Communication Control and Networking, ICACCCN 2020					ConflictExcluded	Excluded	new_screen			2		2020				
966		ModelGuidance	Modeling the software prototyping process in a research context	The paper examines the Third Mission of universities from the point of view of company collaboration in the prototype development process. The paper presents an implementation of university-enterprise collaboration in prototype development described by means of process modeling notation. In this article, the focus is on modeling the software prototyping process in a research context. This research paper introduces prototype development in a university environment. The prototypes are made in collaboration with companies, which offered real-world use cases. The prototype development process is introduced by a modeling procedure with four example prototype cases. The research method used is an eight-step process modeling approach. The goal was to find instances of activity, artifact, resource, and role. The results of modeling are presented using textual and graphical notation. This paper describes the data elicitation, where the process knowledge is collected using stickers-on-the-wall technique, and the creation of the model is described. Finally, the shortcomings found in our existing practices and possibilities for improving our prototype development processes and practices are discussed. © 2021 The authors and IOS Press.		Saari, M.; Soini, J.; Grönman, J.; Rantanen, P.; Mäkinen, T.; Sillberg, P.						ConflictExcluded	Excluded	new_screen			2		2020				
967		ModelGuidance	Comprehensive Model-Driven Complexity Metrics for Software Systems	Measuring software complexity is key in managing the software lifecycle and in controlling its maintenance. While there are well-established and comprehensive metrics to measure the complexity of the software code, assessment of the complexity of software designs remains elusive. Moreover, there are no clear guidelines to help software designers chose alternatives that reduce design complexity, improve design comprehensibility, and improve the maintainability of the software. This paper outlines a language independent approach to measuring software design complexity using objective and deterministic metrics. The paper outlines the metrics for two major software design notations; UML Class Diagrams and UML State Machines. The approach is based on the analysis of the design elements and their mutual interactions. The approach can be extended to cover other UML design notations. © 2020 IEEE.		Masmali, O.; Badreddin, O.	Proceedings - Companion of the 2020 IEEE 20th International Conference on Software Quality, Reliability, and Security, QRS-C 2020					ConflictExcluded	Excluded	new_screen			2		2020				
968		ModelGuidance	Development of a Unified and Dynamic Geometric Framework for Modelling Plant Leaf Spots	The use of computer vision and image processing techniques have proven to be effective in detecting and classifying plant diseases from symptoms, such as leaf spots or mosaic leaf patterns caused by pathogens. To identify these symptoms, these techniques typically utilize a static geometry specified by a human expert via pixels or image objects. Thus, the results rely on generic parameters defined by the user before or after classification. In this paper, a dynamic geometry is proposed that can be applied to identify plant disease symptoms without setting any geometric parameters. The offered method consists of two primary phases established based on the notion of Vector Agents (VAs): construction of a unified geometry, and creation of a dynamic geometry. In the construction step, the method utilises a set of geometric rules to link the raster space to the vector space during the simulation process. These rules specify the growth direction of a leaf in the simulation space and the maximum length of each edge specified based on the image spatial resolution and size. The creation step includes four main geometric operators: 1) vertex displacement, 2) half-edge joining, 3) converging vertex displacement, and 4) edge remove. This enables the leaves to automatically change their geometry in the simulation space without setting any geometric parameters. This structure allows a classifier to model a wide range of leaf shapes in the image space. The proposed geometry method was tested to model different leaves and the results demonstrate its effectiveness in generating different leaf shapes. © 2020 ACM.		Alshadli, D.; Borna, K.; Lador, C.	ACM International Conference Proceeding Series					ConflictExcluded	Excluded	new_screen			2		2020				
969		ModelGuidance	Capturing software architecture knowledge for pattern-driven design	Context: Software architecture is a knowledge-intensive field. One mechanism for storing architecture knowledge is the recognition and description of architectural patterns. Selecting architectural patterns is a challenging task for software architects, as knowledge about these patterns is scattered among a wide range of literature. Method: We report on a systematic literature review, intending to build a decision model for the architectural pattern selection problem. Moreover, twelve experienced practitioners at software-producing organizations evaluated the usability and usefulness of the extracted knowledge. Results: An overview is provided of 29 patterns and their effects on 40 quality attributes. Furthermore, we report in which systems the 29 patterns are applied and in which combinations. The practitioners confirmed that architectural knowledge supports software architects with their decision-making process to select a set of patterns for a new problem. We investigate the potential trends among architects to select patterns. Conclusion: With the knowledge available, architects can more rapidly select and eliminate combinations of patterns to design solutions. Having this knowledge readily available supports software architects in making more efficient and effective design decisions that meet their quality concerns. © 2020 Elsevier Inc.		Farshidi, S.; Jansen, S.; van der Werf, J.M.	Journal of Systems and Software					ConflictExcluded	Excluded	new_screen			2		2020				
970		ModelGuidance	Towards the adoption of OMG standards in the development of SOA-based IoT systems	A common feature of the Internet of Things (IoT) is the high heterogeneity, regarding network protocols, data formats, hardware and software platforms. Aiming to deal with such a degree of heterogeneity, several frameworks have applied the Model-Driven Development (MDD) to build IoT applications. On the software architecture viewpoint, the literature has shown that the Service-Oriented Architecture (SOA) is a promising style to address the interoperability of entities composing these solutions. Some features of IoT make it challenging to analyze the impact of design decisions on the SOA-based IoT applications behavior. Thus, it is a key requirement to simulate the model to verify whether the system performs as expected before its implementation. Although the literature has identified that the SOA style is suitable for addressing the interoperability, existing modeling languages do not consider SOA elements as first-class citizens when designing IoT applications. Furthermore, although existing MDD frameworks provide modeling languages comprising well-defined syntax, they lack execution semantics, thus, are not suitable for model execution and analysis. This work aims at addressing these issues by introducing IoTDraw. The framework provides a fully OMG-compliant executable modeling language for SOA-based IoT systems; thus, its specifications can be implemented by any tool implementing OMG standards. © 2020 Elsevier Inc.		Costa, B.; Pires, P.F.; Delicato, F.C.	Journal of Systems and Software					ConflictExcluded	Excluded	new_screen			2		2020				
971		ModelGuidance	Constructive Modeling of the Software Development Process for Modern Code Review	The preeminent point of this work is to construct a model of the software development process for automatic analysis. Utilizing constructive-synthesizing modeling (CSM) tools, a code-writing history constructor was proposed. This research provides an innovative method for code and development process review in the preparation of teaching programs. This work aims to encourage the use of code review and monitoring the coding practice in educational institutions. The standard approach to evaluation, which takes into consideration only the result, no longer complies with the modern specifications for teaching programming. Practically, it is supposed to be utilized in programming training, particularly in initial stages. © 2020 IEEE.		Shynkarenko, V.; Zhevaho, O.	International Scientific and Technical Conference on Computer Sciences and Information Technologies					ConflictExcluded	Excluded	new_screen			2		2020				
972		ModelGuidance	From Lustre to Graphical Models and SCCharts	We introduce a systematic approach for automatically creating a visual diagram, akin to a SCADE model, from a Lustre program. This not only saves tedious manual drawing effort but also allows the creation of different views for the same program. Furthermore, we present an extension of the SCCharts language with data-flow constructs that adhere to the Lustre semantics, which in turn permits a translation from Lustre to graphical SCCharts. This allows to use the SCCharts simulation and code synthesis machinery as an alternative to existing Lustre compilation techniques. Finally, we investigate how the sequentially constructive model of computation underlying SCCharts can be used to conservatively extend Lustre, thus providing a deterministic semantics to some Lustre programs that would be rejected under its original semantics. We have implemented and validated this work with the Eclipse-based open-source KIELER framework. © 2020 IEEE.		Grimm, L.; Smyth, S.; Schulz-Rosengarten, A.; Von Hanxleden, R.; Pouzet, M.	Forum on Specification and Design Languages					ConflictExcluded	Excluded	new_screen			2		2020				
973		ModelGuidance	Intelligent content driving of engineering model system in modeling platform	Engineering modeling software systems have been developed during a long integration process from separated partial solutions to current modeling software platforms (MSPs). MSP is expected to provide all necessary model creation and application capabilities during integrated innovation and the life cycle of commercial and industrial products (CIP). Recently, advanced CIP is operated by component systems organized within an increasingly autonomous cyber physical system (CPS). CIP is represented by the engineering model system (EMS). EMS is driven by active contexts between the outside world and EMS, between component models of EMS, and between objects in a component model. EMS reacts to any new contribution using all formerly represented contexts. Consistent structure of contexts gives autonomous operation capability for EMS. Active contexts between the outside world and EMS make EMS sensitive to outside world changes. In the other direction, EMS can generate advice for the outside world using high level and well-organized active knowledge as context. Contributing to research in key issues around EMS and the relevant software technology, this paper introduces results in requirements against MSP capabilities to represent intelligent driving content (IDC) in EMS. A novel organized structure of IDC and continuous engineering (CE) aspects of IDC development are explained and discussed placing the main emphasis on situation awareness. Finally, a new concept is introduced in which purposeful EMS acts as the only media in communication of researchers. Specially configured MSP facilitates participation from industrial, institutional, and academic organizations. The research proceeds at the Laboratory of Intelligent Engineering Systems (IESL) in the organization of the Óbuda University. © 2020 The authors and IOS Press. All rights reserved.		Horváth, L.						ConflictExcluded	Excluded	new_screen			2		2020				
974		ModelGuidance	Automatic generation of UML profile graphical editors for Papyrus	UML profiles offer an intuitive way for developers to build domain-specific modelling languages by reusing and extending UML concepts. Eclipse Papyrus is a powerful open-source UML modelling tool which supports UML profiling. However, with power comes complexity, implementing non-trivial UML profiles and their supporting editors in Papyrus typically requires the developers to handcraft and maintain a number of interconnected models through a loosely guided, labour-intensive and error-prone process. We demonstrate how metamodel annotations and model transformation techniques can help manage the complexity of Papyrus in the creation of UML profiles and their supporting editors. We present Jorvik, an open-source tool that implements the proposed approach. We illustrate its functionality with examples, and we evaluate our approach by comparing it against manual UML profile specification and editor implementation using a non-trivial enterprise modelling language (Archimate) as a case study. We also perform a user study in which developers are asked to produce identical editors using both Papyrus and Jorvik demonstrating the substantial productivity and maintainability benefits that Jorvik delivers. © 2020, The Author(s).		Wei, R.; Zolotas, A.; Hoyos Rodriguez, H.; Gerasimou, S.; Kolovos, D.S.; Paige, R.F.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2020				
975		ModelGuidance	Is There a Need to Address Human Values in Domain Modelling?	Consideration of human values during software development can improve technology acceptance and minimize its negative societal implications. However, important human values often get ignored during requirements analysis and specification. Modelling is a fundamental requirements engineering (RE) activity. As a pilot study, we consider domain modelling, an RE modelling technique which often forms the basis of system design and hence significantly impacts the whole software development process. This position paper presents initial evidence that human values are indeed reflected in domain models. Consequently, paying inadequate attention to human values during domain modelling may result in negative financial or reputational implications for software organizations. We posit that human values-enriched domain modelling guidelines may help in identifying what stakeholders really want to avoid system rejection and negative social implications and call upon the RE community to integrate human values-enriched guidelines into RE modelling techniques. © 2020 IEEE.		Mussbacher, G.; Hussain, W.; Whittle, J.	Proceedings - 10th International Model-Driven Requirements Engineering Workshop, MoDRE 2020					ConflictIncluded	Excluded	new_screen			2		2020				
976		ModelGuidance	Supporting the Process of Learning and Teaching Process Models	The creation of a process model is primarily a formalization task that faces the challenge of constructing a syntactically correct entity, which accurately reflects the semantics of reality, and is understandable to the model reader. This article proposes a framework called Model Judge, focused toward the two main actors in the process of learning process model creation: Novice modelers and instructors. For modelers, the platform enables the automatic validation of the process models created from a textual description, providing explanations about quality issues in the model. Model Judge can provide diagnostics regarding model structure, writing style, and semantics by aligning annotated textual descriptions to models. For instructors, the platform facilitates the creation of modeling exercises by providing an editor to annotate the main parts of a textual description, which is empowered with natural language processing capabilities so that the annotation effort is minimized. So far around 300 students in process modeling courses of five different universities around the world have used the platform. The feedback gathered from some of these courses shows good potential in helping students to improve their learning experience, which might, in turn, impact process model quality and understandability. Moreover, our results show that instructors can benefit from getting insights into the evolution of modeling processes, including arising quality issues of single students, but also discovering tendencies in groups of students. Although the framework has been applied to process model creation, it could be extrapolated to other contexts where the creation of models based on a textual description plays an important role. © 2020 IEEE.		Sanchez-Ferreres, J.; Delicado, L.; Andaloussi, A.A.; Burattin, A.; Calderon-Ruiz, G.; Weber, B.; Carmona, J.; Padro, L.	IEEE Transactions on Learning Technologies					ConflictIncluded	Excluded	new_screen			2		2020				
977		ModelGuidance	QuickSel: Quick Selectivity Learning with Mixture Models	Estimating the selectivity of a query is a key step in almost any cost-based query optimizer. Most of today's databases rely on histograms or samples that are periodically refreshed by re-scanning the data as the underlying data changes. Since frequent scans are costly, these statistics are often stale and lead to poor selectivity estimates. As an alternative to scans, query-driven histograms have been proposed, which refine the histograms based on the actual selectivities of the observed queries. Unfortunately, these approaches are either too costly to use in practice - -i.e., require an exponential number of buckets - -or quickly lose their advantage as they observe more queries. In this paper, we propose a selectivity learning framework, called QuickSel, which falls into the query-driven paradigm but does not use histograms. Instead, it builds an internal model of the underlying data, which can be refined significantly faster (e.g., only 1.9 milliseconds for 300 queries). This fast refinement allows QuickSel to continuously learn from each query and yield increasingly more accurate selectivity estimates over time. Unlike query-driven histograms, QuickSel relies on a mixture model and a new optimization algorithm for training its model. Our extensive experiments on two real-world datasets confirm that, given the same target accuracy, QuickSel is 34.0x - 179.4x faster than state-of-the-art query-driven histograms, including ISOMER and STHoles. Further, given the same space budget, QuickSel is 26.8% - 91.8% more accurate than periodically-updated histograms and samples, respectively. © 2020 Association for Computing Machinery.		Park, Y.; Zhong, S.; Mozafari, B.	Proceedings of the ACM SIGMOD International Conference on Management of Data					ConflictExcluded	Excluded	new_screen			2		2020				
978		ModelGuidance	Evaluating a SysML-based Graphical Notation for Modeling Internet of Things System Architectures	Internet of Things (IoT) is bringing important challenges to the different activities of software engineering, including software architecture. Addressing the challenges surrounding IoT system development on the architectural level prevents them from reaching the implementation level. To support architecture specification of IoT systems, we have proposed an IoT Style for SysADL, a SysML-based language. In this paper, we apply the style to model the architecture of SmartPlace, a real IoT system. We also evaluate the qualitative aspects related to the concrete syntax of the language and the expressiveness of its abstract syntax. We conclude the SysADL+IoT Style is easy to use and is expressive enough to represent the IoT-specific needs. © 2020 IEEE.		Santos, L.; Silva, E.; Batista, T.; Leite, J.; Cavalcante, E.; Oquendo, F.	IEEE World Forum on Internet of Things, WF-IoT 2020 - Symposium Proceedings					ConflictExcluded	Excluded	new_screen			2		2020				
979		ModelGuidance	A Proposal of Case-Based Approach to Clinical Pathway Modeling Support	In this work, we analyze the formalization and the role of the Clinical Pathway (CP): it is growing up as a main instrument for the implementation of clinical guidelines and evidence-based medicine. Its primary objective is the improvement of the care process monitoring the unjustified variations in clinical practices to reach faster the best fit care and to reduce the costs of the health system. In a generalized context of an aging population and the ever-increasing diffusion of chronic diseases, we introduce a CP methodological and technological approach with the aim to improve the way patients are monitored during their pathway, to help physicians to read the clinical picture in the best and fast way and to reduce the general clinical complexity. © 2020 IEEE.		Ardito, C.; Bellifemine, F.; Di Noia, T.; Lofu, D.; Mallardi, G.	IEEE Conference on Evolving and Adaptive Intelligent Systems					ConflictExcluded	Excluded	new_screen			2		2020				
980		ModelGuidance	Automatic modeling system for skeleton model of aircraft with complex surfaces	There are complex and repeated modeling works during the process of aircraft design, which leads to the heavy workload and low working efficiency. In order to improve the quality and efficiency of aircraft structure design, an automatic modeling system for skeleton model of aircraft with complex surfaces is developed based on CATIA VBA. The system can provide the generation of the main structure skeleton model of the aircraft, the creation/output of skeleton model properties and the automatic splitting of the aircraft skin. Besides, an aircraft design template is proposed to formalize the design standardization of aircraft structure and rapid modeling procedure. The efficiency and accuracy of the aircraft structure design are improved, and the finite element pre-processing time is shortened by the system. © 2020 IEEE.		Zheng, D.; Han, B.; Liu, G.; Tong, R.	2020 5th International Conference on Computer and Communication Systems, ICCCS 2020					ConflictIncluded	Excluded	new_screen			2		2020				
981		ModelGuidance	The Influence of Using Collapsed Sub-processes and Groups on the Understandability of Business Process Models	Many factors influence the creation of business process models which are understandable for a target audience. Understandability of process models becomes more critical when size and complexity of the models increase. Using vertical modularization to decompose such models hierarchically into modules is considered to improve their understandability. To investigate this assumption, two experiments were conducted. The experiments involved 2 large-scale real-life business process models that were modeled using BPMN v2.0 (Business Process Model and Notation) in the form of collaboration diagrams. Each process was modeled in 3 modularity forms: fully-flattened, flattened where activities are clustered using BPMN groups, and modularized using separately viewed BPMN sub-processes. The objective was to investigate if and how different forms of modularity representation (used for vertical modularization) in BPMN collaboration diagrams influence the understandability of process models. In addition to the forms of modularity representation, the presentation medium (paper vs. computer) and model reader’s level of business process modeling competency were investigated as factors that potentially influence model comprehension. 60 business practitioners from a large organization and 140 graduate students participated in our experiments. The results indicate that, when these three modularity representations are considered, it is best to present the model in a ‘flattened’ form (with or without the use of groups) and in the ‘paper’ format in order to optimally understand a BPMN model. The results also show that the model reader’s business process modeling competency is an important factor of process model comprehension. © 2019, The Author(s).		Turetken, O.; Dikici, A.; Vanderfeesten, I.; Rompen, T.; Demirors, O.	Business and Information Systems Engineering					ConflictIncluded	Excluded	new_screen			2		2020				
982		ModelGuidance	Modeling microservice architecture: A comparative experiment towards the effectiveness of two approaches	Microservice Architecture denotes an architectural style for software systems whereby business capabilities are encapsulated in autonomous services. Model-driven Development is considered as means to foster the efficient development of such systems. It can be used to address complexity and tedious development tasks, e.g., by using code generation. In this short paper, we present two modeling approaches for describing microservice architecture and compare them. The first is based on domain-specific modeling languages, the second on the Unified Modeling Language. We comparatively evaluated both approaches in a student experiment with 32 participants. First results of the experiment indicate that students commit fewer modeling errors while using the set of domain-specific modeling languages. © 2020 Owner/Author.		Sorgalla, J.; Rademacher, F.; Sachweh, S.; Zündorf, A.	Proceedings of the ACM Symposium on Applied Computing					ConflictExcluded	Excluded	new_screen			2		2020				
983		ModelGuidance	A Further Step towards Automatic Domain Modelling by Relevant Information Extraction	A still unsolved issue in human activity recognition, as it is being used in many smart systems, is the availability of labeled training data or, in other words, information about what sensors actually are recording. A possible solution to this problem is to build detailed semantic domain models specifying, in different detail, complex compound activities. Such models would allow retrieving the required information without the necessity of time-consuming labeling. On our way to develop a method to leverage text-based domain descriptions automatically to build such domain models, we previously introduced a method to extract domain-relevant information from texts. However, this method still included the requirement to hand-craft socalled 'regular expressions,' which have to be adjusted or rebuilt for different languages and different styles. Even though only done once for a language or style, the necessity of handcrafting regular expressions (and their fine-tuning by experts) still requires extensive work. In this paper, we present the next step to automatize information extraction by substituting the regular expressions with an automated neural network. All steps in this method are now fully automatic and do not require any hand-crafting. The performance of this new method is equal to the performance of the regular expressions method before (70 % precision and recall). © 2020 IEEE.		Krupp, L.; Bahle, G.; Gruenerbl, A.; Lukowicz, P.	2020 IEEE International Conference on Pervasive Computing and Communications Workshops, PerCom Workshops 2020					ConflictExcluded	Excluded	new_screen			2		2020				
984		ModelGuidance	Enterprise Information Systems in Academia and Practice: Lessons learned from a MBSE Project	The development of domain-specific information systems, especially web information systems, takes a certain amount of time, needs intensive testing to ensure a certain quality and lacks the consistency of front- and backend. Using model-based strategies for the creation of information systems helps to overcome these problems by fastening the development process, facilitating testing and ensuring consistency-by-construction. In practice, however, they are still rarely used. In this paper, we show that model-based engineering is beneficial for the creation of an enterprise information system and improves the quality of the resulting product. We present the basic functionalities of our Generator for Enterprise Management (MontiGEM) and discuss identified problems and lessons learned in a project in practice. The generator was developed simultaneously with and for an enterprise management system. Our research shows that the use of generative methods and MBSE improves the adaptability and reusability of parts of the application on the one hand but on the other hand, there are still obstacles that slow down its broad application in practice. © 2020 Gesellschaft fur Informatik (GI). All rights reserved.		Adam, K.; Michael, J.; Netz, L.; Rumpe, B.; Varga, S.	Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)					ConflictIncluded	Excluded	new_screen			2		2020				
985		ModelGuidance	Uncertainty Entangled; Modelling Safety Assurance Cases for Autonomous Systems.	When designing and analysing autonomous systems and their environment it is necessary to consider uncertainty and multiple potential states (of the system and its environment). In this position paper, we explore the idea of notations and modelling tools that are based on ‘superpositions’ of states. More concretely, we present a treatment of uncertainty in autonomous systems inspired by quantum physics and propose an extension of the Goal Structuring Notation (GSN), a common approach for the modelling of safety arguments, to model ’superposition’ and ’entangled’ nodes; and, incorporate guidelines of the emerging UL 4600 standard for autonomous systems. © 2020 Electronic Communications of the EASST. All rights reserved		Mjeda, A.; Botterweck, G.	Electronic Communications of the EASST					ConflictIncluded	Excluded	new_screen			2		2020				
986		ModelGuidance	Safety Patterns for SysML: What Does OMG Specify?	The Systems Modeling Language (SysML) represents a significant and increasing segment of industrial support for building critical systems. The Object Management Group (OMG) has been releasing and revising the formal specification of SysML since 2007, with version 1.6 recently formalized in November 2019. However, little is known about what OMG specifies and how the official specification influences model-driven engineering (MDE). To fill the gap, we present a new way of analyzing the OMG SysML specification (version 1.6) to uncover reusable guidelines and constraints for safe MDE practice. We illustrate our approach with the discovery of the recurring “Asset Leakage” safety pattern and the development of a semantic-role-based theory to support practitioners’ identification, formulation, and verification of critical properties in their modeling contexts. © 2020, Springer Nature Switzerland AG.		Niu, N.; Johnson, L.; Diltz, C.						ConflictExcluded	Excluded	new_screen			2		2020				
987		ModelGuidance	BPMN Extensions and Semantic Annotation in Public Administration Service Design	Internet of Things (IoT), and in general the Internet of Everything (IoE), are deeply influencing the business processes Digital Transformation, also in the Public Administration context, introducing new actors and interactions among People, Process, Data and Things. Therefore, a re-design of the processes or the creation of new ones is necessary, in a way that the design of a public service meets needs and skills of different end users (citizens, business managers, experts, etc.). This paper presents a framework for the design of public service user interfaces that, on the basis of domain ontologies and BPMn extensions, support the modeling of new interactions with IoT and bot services, in particular Telegram Bots, in the context of public administration processes. A service semantic annotation model can be shared with and reused by other organizations, thus reducing the user interface design and implementation time, and consequently the overall service development time. © 2020, IFIP International Federation for Information Processing.		Ardito, C.; Caivano, D.; Colizzi, L.; Verardi, L.						ConflictIncluded	Excluded	new_screen			2		2020				
988		ModelGuidance	Modeling Interactive Smart Spaces	The Internet of Things (IoT) enables the creation of Interactive Smart Spaces (ISSs) where different types of digital devices are integrated in the ambient or embedded in physical objects, and can sense human actions to control equipment, modify environmental parameters, or create multi-sensory effects. These IoT-enhanced interactive systems can support human activities in different contexts, e.g., education, entertainment, home assistance, rehabilitation, to name a few. This paper explores a human-centered perspective in the design of ISSs, which takes into account some salient characteristics of these systems and introduces new conceptual modeling issues going beyond representing hardware, software, and connectivity features of IoT devices. Interaction in particular emerges as a crucial modeling dimension, needed to capture the interplay occurring not only among multiple connected IoT devices but also among the users and the materials or the spaces embedding such devices. The paper presents a novel conceptual model for Interactive Smart Spaces and exemplifies the identified abstractions through a case study, modelling a complex ISS for children’ play and learning that has been installed at two local schools and two therapeutic centers in our country. © 2020, Springer Nature Switzerland AG.		Gianotti, M.; Riccardi, F.; Cosentino, G.; Garzotto, F.; Matera, M.						ConflictExcluded	Excluded	new_screen			2		2020				
989		ModelGuidance	Modeling platform ecosystems	Platforms facilitate the creation of complementary modules by third parties and act as intermediaries between dieffrent groups of actors. Due to the high degree of collaboration between actors, ecosystems evolve around such platforms. As a result of digitalization, platform business models are becoming viable in more and more domains. Despite the increasing variety of different platform ecosystems, means to clearly specify them are scarce. This conceptual ambiguity impedes comparability of research and knowledge accumulation. To solve this problem, we propose a domain-specific platform ecosystems modeling language (PEML) which builds on seminal platform ecosystem literature. We demonstrate PEML by modeling two real-life platform ecosystems based on online case studies. Our results support researchers and practitioners alike in clearly specifying platform ecosystems. Copyright © 2020 for this paper by its authors.		Pauli, T.; Marx, E.; Dunzer, S.; Matzner, M.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2020				
990		ModelGuidance	Conceptual modeling of multisensory smart spaces	The Internet of Things (IoT) enables the creation of Interactive Smart Spaces (ISSs) where different types of digital devices are integrated in the ambient or embedded in physical objects, and can sense human actions to control equipment, modify environmental parameters, or create multi-sensory effects. These IoT-enhanced interactive systems can support human activities in different contexts, e.g., education, entertainment, home assistance, rehabilitation, to name a few. We argue that a human-centered perspective in the design of ISSs is needed to take into account some salient characteristics of these systems. New conceptual modeling issues also need to be investigated to go beyond representing hardware, software, and connectivity features of IoT devices and to capture the user interaction. © 2020 CEUR-WS. All rights reserved.		Gianotti, M.; Riccardi, F.; Cosentino, G.; Garzotto, F.; Matera, M.	CEUR Workshop Proceedings					ConflictExcluded	Excluded	new_screen			2		2020				
991		ModelGuidance	Development of software decision-making modules based on a model-driven approach	The computer-aided engineering software modules for decision-making intelligent systems requires the development of specialized methods, algorithms and software. The use of a model-driven approach that implements the principles of generative and visual programming as well as model transformations, is promising. In this paper, we propose an approach for the development of rule-based intelligent system software components in the form of decision-making modules by specializing and using main principles of a model-driven development. The proposed specialization includes using a step-by-step development scheme (chain of model transformations) from information models to source codes and specifications; a method for the automated creation of computation-independent models based on the transformation of spreadsheets; domain-specific tools for formalization, visualization and generation of codes. The developed approach was applied for creating decision-making modules for rule-based intelligent systems. © 2020 Copyright for this paper by its authors.		Yurin, A.Yu.; Dorodnykh, N.O.	CEUR Workshop Proceedings					ConflictIncluded	Excluded	new_screen			2		2020				
992		ModelGuidance	Format and usage model of security patterns in ontology-driven threat modelling	To provide security for modern computer systems (i.e. identify threats and employ countermeasures) threat modelling is used on early stages of life cycle (requirements, design). Security patterns can be applied as security design decisions. However there are some challenges, related to management of security patterns, in particular, lack of methods to identify the necessity of security patterns and weak integration with security risk-based models. To overcome these restrictions we have developed an ontological format (schema), which allows a) creating security pattern catalogs, and b) defining context labels to map patterns with design decisions and security problems. We have proposed a usage model of security pattern catalogs. The usage model enables creation of domain-specific threat models, used for ontology-driven threat modelling. Also, OWL ontology and a free toolset (Java, OWL API) have been developed to manage security pattern catalogs and motivate development of high-level software tools for maintenance of security pattern catalogs. © Springer Nature Switzerland AG 2020.		Brazhuk, A.; Olizarovich, E.						ConflictIncluded	Excluded	new_screen			2		2020				
993		ModelGuidance	Model-Based Risk Analysis for an Open-Source PCA Pump Using AADL Error Modeling	Risk management is a key part of the development of medical devices to achieve acceptable product safety and pass regulatory scrutiny. As model-based development (MBD) techniques gain ground in the medical device industry, the medical device industry needs guidelines on the best practices of integrating risk management principles and activities in MBD-driven product development. In this paper, we demonstrate how the SAE standard Architecture, Analysis, and Definition Language (AADL) and its Error Modeling (EM) annex can be applied in the development of an open-source patient-controlled analgesic (PCA) pump to support the risk management tasks of ISO 14971 - the primary risk management standard in the medical device domain. While AADL EM has been applied in other domains, our work provides the first mapping of AADL EM to ISO 14971 concepts. It not only represents one of the largest applications to-date of AADL’s EM framework, but also provides the industry and academia an example with considerable complexity to investigate methodologies and methods of integrating MBD and risk management. This work is part of the Open PCA Pump project, which presents a variety of open source integrated development artifacts for a realistic medical device. © 2020, Springer Nature Switzerland AG.		Thiagarajan, H.; Larson, B.; Hatcliff, J.; Zhang, Y.						ConflictExcluded	Excluded	new_screen			2		2020				
994		ModelGuidance	A workflow for automatically generating application-level safety mechanisms from UML stereotype model representations	Safety-critical systems operate in contexts where failure may lead to serious harm for humans or the environment. Safety standards, e.g., IEC 61508 or ISO 26262, provide development guidelines to improve the safety of such systems. For this, they recommend a variety of safety mechanisms to mitigate possible safety hazards. While these standards recommend certain safety mechanisms, they do not provide any concrete development or implementation assistance for any of these techniques. This paper presents a detailed workflow, how such safety mechanisms may be automatically generated from UML model representations in a model-driven development process. We illustrate this approach by applying it to the modeling and automatic generation of voting mechanisms, which are a wide-spread safety mechanism in safety-critical systems that employ some form of redundancy for fault detection or fault masking. Finally, we study the scalability of the proposed code generation via quantitative experiments. © Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.		Huning, L.; Iyenghar, P.; Pulvermueller, E.	ENASE 2020 - Proceedings of the 15th International Conference on Evaluation of Novel Approaches to Software Engineering					ConflictExcluded	Excluded	new_screen			2		2020				
995		ModelGuidance	Towards Modeling Framework for DevOps: Requirements Derived from Industry Use Case	To succeed with the development, deployment, and operation of the new generation of complex systems, organizations need the agility to adapt to constantly evolving environments. In this context, DevOps has emerged as an evolution of the agile approaches. It focuses on optimizing the flow of activities involved in the creation of end-user value, from idea to deployed functionality and operating systems. However, in spite of its popularity, DevOps still lacks proper engineering frameworks to support continuous improvement. One of our key objectives is to contribute to the development of a DevOps engineering framework composed of process, methods, and tools. A core part of this framework relates to the modeling of the different aspects of the DevOps system. To better understand the requirements of modeling in a DevOps context, we focus on a Product Build use case provided by an industry partner. © 2020, Springer Nature Switzerland AG.		Bordeleau, F.; Cabot, J.; Dingel, J.; Rabil, B.S.; Renaud, P.						ConflictExcluded	Excluded	new_screen			2		2020				
996		ModelGuidance	An SOA design patterns recommendation system based on ontology	Service-Oriented Architecture is an architectural style for building systems based on interacting services. For more performance, Service-oriented architectures (SOA) systems must have some quality requirements (e.g., reliability, availability, and performance). SOA design patterns are proven solutions to specific problems in this context. Given the benefits they offer for software development, the SOA design patterns use is in an increasing expansion. Nonetheless, without assistance, any inexperienced designer may not take advantage of SOA design patterns due to their overwhelming number. In this paper, we propose a new approach that recommends the SOA design pattern that is adequate to the designer’s modeling context. For this purpose, a new ontology created to classify the different SOA patterns problems and their corresponding solutions. Then this ontology will be interrogated by SPARQL to search for the adequate pattern in the repository of SOA patterns and present the appropriate solution. © Springer Nature Switzerland AG 2020.		Abdelhedi, K.; Bouassidar, N.						ConflictExcluded	Excluded	new_screen			2		2020				
997		ModelGuidance	Experiential Learning for Software Engineering using Agile Modeling in Umple	In this tutorial we will discuss a method of teaching a variety of software engineering topics in an integrated and experiential manner. Topics covered include agile processes, software modeling, open source development tools and processes, code generation and testing. Our approach involves using a textual modeling language called Umple that enables agile, model-driven, test-driven development. Students are introduced to this tool in an introduction to software engineering course, where they learn the basics of the above topics. Then in their capstone course they are able to actually contribute to the tool itself.		T. C. Lethbridge	2020 IEEE 32nd Conference on Software Engineering Education and Training (CSEE&T)					ConflictExcluded	Excluded	new_screen			2		2020				
998		ModelGuidance	An Interactive Learning Method to Engage Students in Modeling	Modeling is an important skill in software engineering. However, it is often not tangible for students and not appreciated. Students prefer coding because they receive immediate feedback from the compiler. Engaging students in modeling is difficult, especially in large introductory courses. We have developed an interactive learning method for modeling which is based on an easy to use online editor. Students learn modeling in guided tutorials in the lecture right after the theory is introduced and deepen their modeling skills in group work and homework exercises. This learning method was applied in a large introductory course with more than 1000 students. An empirical evaluation of the method demonstrated that the students' learning outcome in modeling improved significantly by up to 87 %. Students are motivated to use models in their future projects and understand how to approach problems with models. The use of interactive models in programming exercises improves their understanding of the taught concepts.		S. Krusche; L. M. Reimer; N. von Frankenberg; B. Bruegge	2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)					ConflictIncluded	Excluded	new_screen			2		2020				
999		ModelGuidance	A modeling assistant for cognifying MBSE tools	The steep learning curve of tools for Model-Based Software Engineering still slows down its widespread adoption. Users indeed encounter a variety of technical difficulties when modeling, including using modeling tools that are often considered too complex. Because they usually require too much advanced or diverse skills, modeling tools push users to focus on how to model with the tool instead of on what to model with the tool, and hence curb users’ creativity and productivity. Our goal is to address this issue by refocusing the modeling activity on the content of the model, and by facilitating the creation of new model elements. In this tool demonstration, we present our modeling assistant, which gathers knowledge from model repositories and provides in-editor modeling recommendations for users to complete their models. Our system cognifies the Papyrus modeling tool by augmenting its users with a recommender system fed with more than 90,000 models to assist UML class diagrams authoring. It features an architecture scalable to multiple recommendation clients, and can be deployed locally to ensure the confidentiality of the source models. We showcase our modeling assistant with a use case and discuss preliminary measures.		M. Savary-Leblanc; X. Le-Pallec; S. Gérard	2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)					ConflictIncluded	Excluded	new_screen			2		2021				
1000		ModelGuidance	Guiding Peer-feedback in Learning Software Design using UML	Students find learning to design software challenging. There are often multiple ways to solve a problem, and it is not easy to recognise how well one is doing. Feedback from the lecturer, teaching assistant, or peers may help students learn from their mistakes. In this paper, we study students giving and receiving peer feedback on software design to discover the type of feedback that students find helpful, to provide guidance in giving good feedback, and to learn how students use the feedback they receive to improve their design. We examine data from a software project course for third-year informatics bachelor students. We asked students to give peer feedback and respond to the feedback they received. We discovered that students value i) explicit positive feedback, ii) feedback with specific examples, and iii) separate feedback on syntax and semantics. We present guidelines for stimulating helpful peer feedback and found that students’ motivation or seriousness in working with the assignment affects their willingness to incorporate the feedback they received into their design.		S. A. Rukmono; M. R. V. Chaudron	2022 IEEE/ACM 44th International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)					ConflictExcluded	Excluded	new_screen			2		2022				
1001		ModelGuidance	A model-based approach to develop a mechatronic system	Model-based engineering or model-based design engineering is one of the approaches of Mechatronic system development and it was developed in last period of time. Nowadays this method is frequently used for developing also software taking into consideration some standards and guidelines, making model-based design to be a trustworthy and a secure development method concerning quality of the developed product.		V. G. Şandru; R. Bălan	2020 IEEE International Conference on Automation, Quality and Testing, Robotics (AQTR)					ConflictExcluded	Excluded	new_screen			2		2020				
1002		ModelGuidance	Model Driven Approach for Neural Networks	This paper presents new meta-models for addressing machine learning problems using artificial neural networks. Models conforming to these meta-models can capture the main elements of learning problems and neural networks. This serves as the foundation step for the use of Model-Driven Engineering (MDE) based approach to machine learning using neural networks. The aim is to reap the same benefits which MDE brings to solving software engineering problems. This includes solutions to tool interoperability and standardization challenges, in addition to helping users to develop solutions with less dependence on a particular set of tools and technologies. The presented framework is implemented using Eclipse Modeling Framework (EMF), and several features are demonstrated, including model validation, model transformation, and code generation.		I. Al-Azzoni	2020 International Conference on Intelligent Data Science Technologies and Applications (IDSTA)					ConflictExcluded	Excluded	new_screen			2		2020				
1003		ModelGuidance	Insights in Students’ Problems during UML Modeling	UML (Unified Modeling Language) is the current de facto as well as de jure standard (ISO/IEC 19505:2012) notation to visualize models in software development. UML provides essential guidelines and rules to visualize and understand complex software systems. This is the reason why it has become part of curricula for software engineering courses at many universities worldwide. It is well known, however, that UML is hard to grasp for novices, mainly due to its complexity. In order to tackle the problem of teaching UML to novice students appropriately, it is inevitable to understand their needs and problems much better than we do now. This paper presents empirical insights into students’ problems when developing common UML diagrams. Identified problems are generalized, giving rise to a problem catalogue that is derived from our empirical findings, thus establishing a basis for addressing these problems through focused learning arrangements.		R. Reuter; T. Stark; Y. Sedelmaier; D. Landes; J. Mottok; C. Wolff	2020 IEEE Global Engineering Education Conference (EDUCON)					ConflictExcluded	Excluded	new_screen			2		2020				
1004		ModelGuidance	How do I model my system? A Qualitative Study on the Challenges that Modelers Experience	Model-Driven Software Engineering relies both on domain-expertise as well as software engineering expertise to fully grasp its representative power in modeling complex systems. As is typical in the development of any system, modelers face similar challenges to classic software developers, whether with general modeling concepts or specific features of existing tools such as the Eclipse Modeling Framework. In this work, we aim to understand the issues that modelers face by analyzing discussions from Eclipse's modeling tool forums, MATLAB Central, and Stack Overflow. By performing a qualitative study using an open-coding process, we created a taxonomy of common issues faced by modelers. We considered both difficulty experienced when modeling a system and issues faced using existing modeling tools; these form the basis of our two research questions. Based on the taxonomy, we propose nine suggestions and enhancements, in three overarching groups, to improve the experience of modelers, at all levels of experience.		C. Vendome; E. J. Rapos; N. DiGennaro	2022 IEEE/ACM 30th International Conference on Program Comprehension (ICPC)					ConflictExcluded	Excluded	new_screen			2		2022				
1005		ModelGuidance	Simple Modeling Method for Complex Processes to Improve Teaching in Engineering	This document will present a simple method for modeling complex multiple input and output (MIMO) processes to improve the teaching of engineering students. The proposed method allows us to improve the application of theoretical and academic knowledge in real industrial processes. The method can be applied in professional training subjects in various branches of engineering, especially those that develop analysis and design of instrumentation, control, automation, and process optimization systems. Improving teaching is because there is a closer approximation of the process model used in the academic field with that found in the industry. COMSOL (finite element simulation software) and MATLAB are used as tools and the advantages of the method in simplicity, flexibility, versatility, and effectiveness in engineering education are developed.		J. Tisza; D. Ortega; J. Asencio	2020 IEEE International Symposium on Accreditation of Engineering and Computing Education (ICACIT)					ConflictIncluded	Excluded	new_screen			2		2020				
1006		ModelGuidance	Software design for the evaluation of competency based learning in engineering careers Ontological approach for modeling	Nowadays, in engineering careers, it is necessary to carry out activities that allow evaluation of the training process based on professional skills. This implies generating mechanisms that enable the assessment of learning based on quantitative and qualitative criteria from which competence levels of learning are defined. In this sense, it is necessary to arbitrate the means to determine performance of students before real or simulated activities of the future professional context. In this work, authors propose an ontological model as part of the design of a software. It involves the definition of the evaluation activities for the learning process based on competencies in engineering careers, such as definition of level of domain indicators, criteria and evidence determination, weights and scores specification, which accredit professional performance and stimulate the necessary feedback to complete this process. In this way, authors seek to collaborate with professors, academic management staff and other university actors who want to improve the quality of learning through new educational paradigms such as learning by competencies, since carrying out an appropriate evaluation is a task pending in education in general, and in the training of engineers in particular, mainly because of its complexity.		L. Romero; M. Gutiérrez	2020 15th Iberian Conference on Information Systems and Technologies (CISTI)					ConflictIncluded	Excluded	new_screen			2		2020				
1007		ModelGuidance	A holonic approach of manufacturing systems modeling and simulation	The paper presents a solution for holonic control of smart manufacturing systems, using a mix of digitization procedures that capitalize on the possibilities offered by a Digital Twin simulation environment in modeling and simulating both the physical entities of the industrial plant and of the execution phases of the production process. The main novelty is the creation of software assets by encapsulating FBs in holon-type containers, which can be used both in the design phase and in the production control phase. The validation of the solution was performed on a mechatronic laboratory line, specialized for assembly and disassembly operations.		G. Cristescu; O. Chenaru; R. Dobrescu	2021 23rd International Conference on Control Systems and Computer Science (CSCS)					ConflictExcluded	Excluded	new_screen			2		2021				
1008		ModelGuidance	Towards privacy-aware software design in small and medium enterprises	The legal definition of privacy regulations, like GDPR in the European Union, significantly impacted on the way in which software, systems and organizations should be designed or maintained to be compliant to rules. While the privacy community stated proper risk assessment and mitigation approaches to be applied, literature seems to suggest that the software engineering community, with special reference to companies, did actually concentrate on the specification phase, with less attention for the test phase of products. In coherence with the privacy-by-design approach, we believe that a bigger methodological effort must be put in the systematic adaptation of software development cycles to privacy regulations, and that this effort might be promoted in the industrial community by focusing on the relation between organizational costs vs technical features, also leveraging the benefits of targeted testing as a mean to lower operational privacy enforcement costs.		L. Campanile; M. Iacono; M. Mastroianni	2022 IEEE Intl Conf on Dependable, Autonomic and Secure Computing, Intl Conf on Pervasive Intelligence and Computing, Intl Conf on Cloud and Big Data Computing, Intl Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)					ConflictExcluded	Excluded	new_screen			2		2022				
0		ModelGuidance	Model-based performance risk analysis	Performance is a nonfunctional software attribute that plays a crucial role in wide application domains spreading from safety-critical systems to e-commerce applications. Software risk can be quantified as a combination of the probability that a software system may fail and the severity of the damages caused by the failure. In this paper, we devise a methodology for estimation of performance-based risk factor, which originates from violations of performance requirements ( namely, performance failures). The methodology elaborates annotated UML diagrams to estimate the performance failure probability and combines it with the failure severity estimate which is obtained using the Functional Failure Analysis. We are thus able to determine risky scenarios as well as risky software components, and the analysis feedback can be used to improve the software design. We illustrate the methodology on an e-commerce case study using step-by-step approach and then provide a brief description of a case study based on large real system.		Cortellessa, V; Goseva-Popstojanova, K; Appukkutty, K; Guedem, AR; Hassan, A; Elnaggar, R; Abdelmoez, W; Ammar, HH	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2005				
1		ModelGuidance	The Möbius framework and its implementation	"The Möbius framework is an environment for supporting multiple modeling formalisms and solution techniques. Models expressed in formalisms that are compatible with the framework are translated into equivalent models using Möbius framework components. This translation preserves the structure of the models, allowing efficient solutions. The framework is implemented in the tool by a well-defined abstract functional interface. Models and solution techniques interact with one another through the use of the standard interface, allowing them to interact with Möbius framework components, not formalism components. This permits novel combinations of modeling techniques, and will be a catalyst for new research in modeling techniques. This paper describes our approach, focusing on the ""atomic model."" We describe the formal description of the Möbius components as well as their implementations in our software tool."		Deavours, D.D.; Clark, G.; Courtney, T.; Daly, D.; Derisavi, S.; Doyle, J.M.; Sanders, W.H.; Webster, P.G.	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2002				
2		ModelGuidance	Modeling system integrity of a security critical system using colored petri nets	Recently, the need for techniques for quantification of security attributes of IKT systems has been raised. This relates both to security requirements in QoS architectures, as well as input to trade-off analysis regarding the design and choice of security mechanisms to comply with an established security policy. Early research in this area has focused on state transitionmodels, such asMarkov or semi-Markov models. In the dependability domain these techniques are used to measure values such as mean time between failures (MTBF), and to quantify frequency and consequences of risks. The dynamics of security attacks makes it intractable to use, due to the problems with state explosions. To be able to express the complete state space of a security critical system, one needs to consider not only hardware, operating system, and application/services faults, but also the survivability of the system in terms of intentional and accidental security breaches. In this paper, we build a stochastic prediction system to estimate the system integrity of a security critical system. We make use of Colored Petri Nets (CPN), a higher-level formalism for stochastic modeling, analysis, and simulation. The prediction system is implemented as a generic and hierarchic CPN model. © 2005 WIT Press.		Houmb, S.H.; Sallhammar, K.	WIT Transactions on the Built Environment					Excluded	Excluded	new_screen			2		2005				
3		ModelGuidance	Socio-Technical Modelling for GDPR Principles: an Extension for the STS-ml	Compliance with data protection regulations is vital for organizations and starts at the requirements level. The General Data Protection Regulation (GDPR) has been the European Union (EU) regulation on the topic since 2018. Organizations that operate within the territorial scope of the GDPR are expected to be compliant; otherwise, they can get high fines, and their reputation can be damaged. Thus, GDPR compliance sets challenges for the design of information systems that must be tackled starting from the requirements level.Given the difficulties of translating regulations and the drawbacks of natural language requirements, modeling languages can help requirements engineers analyze data protection. Socio-Technical Security modeling language (STS-ml) is a security modeling method that has been already extended for modeling privacy issues such as personal data, data controllers and processors, and specifying the legal basis for data processing. However, information critical for complying with GDPR principles still lacks modeling support. This article presents a proposal for extending the STS-ml to address GDPR principles. We show the need for modeling data protection requirements for each GDPR principle through a working privacy case and propose a set of five lightweight but meaningful extensions for the method. The extended language is intended to help requirements engineering practitioners with privacy requirements with little additional effort while preventing significant fines for EU organizations. © 2022 IEEE.		Negri-Ribalta, C.; Noel, R.; Herbaut, N.; Pastor, O.; Salinesi, C.	Proceedings of the IEEE International Conference on Requirements Engineering					Excluded	Excluded	new_screen			2		2022				
4		ModelGuidance	Modeling and reasoning Event-B models based on mathematica	Event-B is a formal method for modeling and reasoning about complex systems, its open toolset Rodin supports integer numbers, but does not support real numbers and mathematical notations like trigonometric functions. The mathematical software Mathematica provides built-in data types and plenty of predicates and functions. In this paper, an approach for modeling and reasoning Event-B models based on Mathematica is proposed, both integer and real numbers, built-in mathematical notations in Mathematica can be utilized directly for modeling, and the simplification and reduction functions in Mathematica are proposed to reason about the generated proof obligations. The experimental results demonstrate the practicability of modeling and reasoning Event-B models based on Mathematica. © 2019 Association for Computing Machinery.		Pan, G.; Li, M.; Ou, G.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2019				
5		ModelGuidance	Solution of grid computing flow using MDA methodology	This paper presents an approach to build a flow of grid services named GFlow. This approach converts all of the services' interfaces in globus toolkit 3 into platform independent model format. The conversion uses eclipse modeling framework plug-ins and graphical editing framework plug-ins to parse the models into platform specific models, which are responsible for implementation of grid services' clients and servers and their automatic deployment. This paper emphasizes on design method, which uses model drive architecture, and design process, which uses model-view-control.		Ji, Y.-M.; Wang, R.-C.	Journal of China Universities of Posts and Telecommunications					Excluded	Excluded	new_screen			2		2006				
6		ModelGuidance	Towards realizing a formal RBAC model in real systems	There still exists an open question on how formal models can be fully realized in the system development phase. The Model Driven Development (MDD) approach has been recently introduced to deal with such a critical issue for building high assurance software systems. There still exists an open question on how formal models can be fully realized in the system development phase. The Model Driven Development (MDD) approach has been recently introduced to deal with such a critical issue for building high assurance software systems. The MDD approach focuses on the transformation of high-level design models to system implementation modules. However, this emerging development approach lacks an adequate procedure to address security issues derived from formal security models. In this paper, we propose an empirical framework to integrate security model representation, security policy specification, and systematic validation of security model and policy, which would be eventually used for accommodating security concerns during the system development. We also describe how our framework can minimize the gap between security models and the development of secure systems. In addition, we overview a proof-of-concept prototype of our tool that facilitates existing software engineering mechanisms to achieve the above-mentioned features of our framework. Copyright 2007 ACM.		Ahn, G.-J.; Hu, H.	Proceedings of ACM Symposium on Access Control Models and Technologies, SACMAT					Excluded	Excluded	new_screen			2		2007				
7		ModelGuidance	An approach to class diagram design	An approach to class diagram design is suggested in this paper. The approach is based on the analysis of behavioral software models represented by collaboration diagrams. An analytical form of collaboration diagrams representation is suggested. Rules that define relations between class diagram constituents by analyzing the analytical representation of collaboration diagrams are presented. An approach to defining the relations between class diagram constituents that is based on these rules is suggested. An example of class diagram design by analyzing collaboration diagrams according to the suggested approach is presented. Copyright © 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.		Elena, C.	MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development					Included	Excluded	new_screen			2		2014				
8		ModelGuidance	Attack-driven Test Case Generation Approach using Model-checking Technique for Collaborating Systems	The formal verification technique of model-checking can be used to derive test cases. This approach has become popular as it provides the capabilities of exhaustively exploring the state space of the modeled system and generates counterexamples for properties specified over the model. However, counterexamples only show states, transitions and the values of their parameters. In addition, its semantics are also dependent on input model specification languages and trace representation notations. In this paper, we present a focused test case generation approach from PAT model checker for collaborating systems. The focus is driven by specific and putative attack behaviours. To this end, we devised test specification rules/algorithm to translate counterexamples to test cases. The translation aims at reducing semantic gaps between counterexamples and the corresponding test cases. We assess the viability of the test cases generated from our approach by using JADE simulation framework for aircraft landing scenario in air traffic control domain. © 2021 IEEE.		Mihret, Z.; Liu, L.	Proceedings - 2021 IEEE/ACM 2nd International Workshop on Engineering and Cybersecurity of Critical Systems, EnCyCriS 2021					Excluded	Excluded	new_screen			2		2021				
9		ModelGuidance	A semi-automated BPMN-based framework for detecting conflicts between security, data-minimization, and fairness requirements	Requirements are inherently prone to conflicts. Security, data-minimization, and fairness requirements are no exception. Importantly, undetected conflicts between such requirements can lead to severe effects, including privacy infringement and legal sanctions. Detecting conflicts between security, data-minimization, and fairness requirements is a challenging task, as such conflicts are context-specific and their detection requires a thorough understanding of the underlying business processes. For example, a process may require anonymous execution of a task that writes data into a secure data storage, where the identity of the writer is needed for the purpose of accountability. Moreover, conflicts not arise from trade-offs between requirements elicited from the stakeholders, but also from misinterpretation of elicited requirements while implementing them in business processes, leading to a non-alignment between the data subjects’ requirements and their specifications. Both types of conflicts are substantial challenges for conflict detection. To address these challenges, we propose a BPMN-based framework that supports: (i) the design of business processes considering security, data-minimization and fairness requirements, (ii) the encoding of such requirements as reusable, domain-specific patterns, (iii) the checking of alignment between the encoded requirements and annotated BPMN models based on these patterns, and (iv) the detection of conflicts between the specified requirements in the BPMN models based on a catalog of domain-independent anti-patterns. The security requirements were reused from SecBPMN2, a security-oriented BPMN 2.0 extension, while the fairness and data-minimization parts are new. For formulating our patterns and anti-patterns, we extended a graphical query language called SecBPMN2-Q. We report on the feasibility and the usability of our approach based on a case study featuring a healthcare management system, and an experimental user study. © 2020, The Author(s).		Ramadan, Q.; Strüber, D.; Salnitri, M.; Jürjens, J.; Riediger, V.; Staab, S.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2020				
10		ModelGuidance	Verifying protocol conformance using software model checking for the model-driven development of embedded systems	To facilitate modular development, the use of state machines has been proposed to specify the protocol (i.e., the sequence of messages) that each port of a component can engage in. The protocol conformance checking problem consists of determining whether the actual behavior of a component conforms to the protocol specifications on its ports. In this paper, we consider this problem in the context of the model-driven development (MDD) of embedded systems based on UML 2, in which UML 2 state machines are used to specify component behavior. We provide a definition of conformance which slightly extends those found in the literature and reduce the conformance check to a state space exploration. We describe a tool implementing the approach using the Java PathFinder software model checker and the MDD tool IBM Rational RoseRT, discuss its application to three case studies, and show how the tool repeatedly allowed us to find unexpected conformance errors with encouraging performance. We conclude that the approach is promising for supporting the modular development of embedded components in the context of industrial applications of MDD. © 1976-2012 IEEE.		Moffett, Y.; Dingel, J.; Beaulieu, A.	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2013				
11		ModelGuidance	Deriving Complexity Metric based on Use Case Diagram and its validation	Use Case based requirements analysis has attained vast acceptance in requirements engineering. Use Case Diagram represents the functional requirements of the system to be developed from user's perspective and also forms the starting point for documenting requirements using Unified Modeling Language (UML). Therefore the quality of Use Case Diagram has substantial impact on the quality of the resulting system. This paper presents a novel approach for deriving a Use Case Complexity Metric based on dependency and association relationships in the Use Case Diagram. The proposed Use Case Complexity Metric can be used to measure the complexity of the software to be developed and will be particularly useful for early software development estimations. © 2014 IEEE.		Sabharwal, S.; Sibal, R.; Kaur, P.	2014 IEEE International Symposium on Signal Processing and Information Technology, ISSPIT 2014					Included	Excluded	new_screen			2		2015				
12		ModelGuidance	Towards the automated generation of abstract test cases from requirements models	In a testing process, the design, selection, creation and execution of test cases is a very time-consuming and error-prone task when done manually, since suitable and effective test cases must be obtained from the requirements. This paper presents a model-driven testing approach for conceptual schemas that automatically generates a set of abstract test cases, from requirements models. In this way, tests and requirements are linked together to find defects as soon as possible, which can considerably reduce the risk of defects and project reworking. The authors propose a generation strategy which consists of: two meta-models, a set of transformations rules which are used to generate a Test Model, and the Abstract Test Cases from an existing approach to communication-oriented Requirements Engineering; and an algorithm based on Breadth-First Search. A practical application of our approach is included. © 2014 IEEE.		Granda, M.F.; Condori-Fernández, N.; Vos, T.E.J.; Pastor, O.	2014 IEEE 1st International Workshop on Requirements Engineering and Testing, RET 2014 - Proceedings					Excluded	Excluded	new_screen			2		2014				
13		ModelGuidance	AHL: Model-driven engineering of android applications with BLE peripherals	Today, an increasing number of “smart devices” are becoming available to consumers, enabling them to quantify their physical activity and health status and to receive updates from their environment and applications. The preferred method of tethering these devices to the Internet is through the BLE (Bluetooth Low Energy) communication protocol connecting them to special-purpose mobile applications. The efficient development of high-quality applications of this type can present challenges to developers who have to familiarize themselves with a number of new technologies and platform-specific architectural patterns. A combination of domain-specific languages and code-generation techniques is a potential solution to this problem. In this paper, we present (a) a generic reference architecture for Android BLE-enables applications, and (b) our AHL (Android Health Language), a domain-specific language and a corresponding codegeneration framework that enables the easy and rapid development of the core elements of a typical BLE-enabled data-collection application in this architecture. The generated code is functional and does not need any modifications. This model-driven application-construction process relieves developers from the burden of dealing with complex Android concepts and components. Thus, AHL can save time and reduce the cost of Android application development for developers. In this paper, we explain the AHL framework, its models, its underlying DSL, and the methodology we used to design and implement it. We evaluate our work with two functional applications and compare them to the existing ones developed from scratch. © Springer International Publishing AG 2017.		Veisi, P.; Stroulia, E.	Lecture Notes in Business Information Processing					Excluded	Excluded	new_screen			2		2017				
14		ModelGuidance	An Overview of Ontologies and Tool Support for COVID-19 Analytics	Context: The outbreak of the SARS-CoV-2 pandemic of the new COVID-19 disease (COVID-19 for short) demands empowering existing medical, economic, and social emergency backend systems with data analytics capabilities. An impediment in taking advantages of data analytics in these systems is the lack of a unified framework or reference model. Ontologies are highlighted as a promising solution to bridge this gap by providing a formal representation of COVID-19 concepts such as symptoms, infections rate, contact tracing, and drug modelling. Ontology-based solutions enable the integration of diverse data sources that leads to a better understanding of pandemic data, management of smart lockdowns by identifying pandemic hotspots, and knowledge-driven inference, reasoning, and recommendations to tackle surrounding issues.Objective: This study aims to investigate COVID-19 related challenges that can benefit from ontology-based solutions, analyse available tool support, and identify emerging challenges that impact research and development of ontologies for COVID-19. Moreover, reference architecture models are presented to facilitate the design and development of innovative solutions that rely on ontology-based solutions and relevant tool support to address a multitude of challenges related to COVID-19.Method: We followed the formal guidelines of systematic mapping studies and systematic reviews to identify a total of 56 solutions - published research on ontology models for COVID-19 - and qualitatively selected 10 of them for the review.Results: Thematic analysis of the investigated solutions pinpoints five research themes including telehealth, health monitoring, disease modelling, data intelligence, and drug modelling. Each theme is supported by tool(s) enabling automation and user-decision support. Furthermore, we present four reference architectures that can address recurring challenges towards the development of the next generation of ontology-based solutions for COVID-19 analytics. © 2021 IEEE.		Ahmad, A.; Bandara, M.; Fahmideh, M.; Proper, H.A.; Guizzardi, G.; Soar, J.	Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOCW					Excluded	Excluded	new_screen			2		2021				
15		ModelGuidance	A decision framework for enterprise resource planning maintenance and upgrade: A client perspective	Over the last decade, many large organizations have been shifting from developing their own information system (IS) to licensing and installing large software packages known as enterprise resource planning (ERP) systems. These organizations now face the challenge of maintaining these costly systems and many are about to make their first upgrade decisions. The study reported herein aims to address the following research questions from the ERP-client perspective: (1) What are the fundamental factors driving ERP maintenance and upgrade decisions? (2) How do these factors differ from those for traditional custom, in-house software? and (3) Do existing software and hardware replacement models suffice for ERP maintenance and upgrade decision modeling? A single case study method and empirical data analysis were conducted and are presented here. We observe that ERP maintenance and upgrade characteristics are indeed unique in three ways: (1) most organizations maintain and upgrade their ERP systems in order to realize increased business benefits from the systems; (2) a new version upgrade reduces the number of ERP-client-done enhancement modifications; and (3) a new version upgrade potentially reduces future legal change patch (LCP) maintenance distributed by the ERP vendor. It was also found that on average LCP maintenance is almost as costly as user enhancements. Based on these findings, we conclude that the existing in-house software and hardware replacement models are insufficient for ERP situations. We propose a preliminary ERP decision model that overcomes the observed insufficiencies.		Ng, C.S.P.	Journal of Software Maintenance and Evolution					Excluded	Excluded	new_screen			2		2001				
16		ModelGuidance	A Cost Model for Compilers Based on Transfer Learning	Today, automatic optimization by compilers is used to obtain high-performance programs for a variety of computing systems without hand-tuning by programmers. Compilers need to select the sequence of optimization passes that maximizes performance by estimating the performance gain obtained by each optimization pass using analytical cost models. Since analytical modeling of complex computing systems is challenging, data-driven cost modeling methods based on machine learning have been proposed. Building a cost model using machine learning requires a large number of programs and their performance data obtained by running the programs on the target system to be modeled. However, the performance measurement of a large number of programs enough for machine learning is time-consuming. In recent years, as the application of machine learning to software engineering has expanded, large datasets of programs along with their execution performance have become available. In this study, we propose a method to build a cost model of a target system from as few data as possible. To reduce the number of training data, the proposed method adopts transfer learning to build a cost model of the target system from a pretrained cost model of another system. The evaluation results show that our method improves the accuracy of performance prediction, and achieves the same accuracy as the conventional method with only 25% of the training data.		Y. Sasaki; K. Takahashi; Y. Shimomura; H. Takizawa	2022 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)					Excluded	Excluded	new_screen			2		2022				
17		ModelGuidance	Automatic generation of implementation in SysML-based model-driven development for IEC 61131-3 control software	Control software is commonly used in various branches of industry. Its still increasing size and complexity indicates that it is crucial to propose various development processes that could make the work easier and faster. In this paper, the Model-Driven Development approach is presented, together with the mechanism of automatic generation of implementation, dedicated to projects created according to the IEC 61131-3 standard. The modeling phase uses the SysML graphical modeling language. The prepared model is analyzed by the dedicated mechanism, which creates the ordered list of operations that should be performed in the implementation. After their sequential execution, engineers receive the implementation part with automatically generated elements. This paper covers topics of generating templates for Program Organization Units, as well as complete implementation for ones that are based on state machines. To make understanding of the presented approach easier, the paper uses the simple running example. The expanded version of the mechanism of automatic implementation generation has been introduced into the CPDev engineering environment for programming various industrial controllers. © 2014 IEEE.		Jamro, M.	2014 19th International Conference on Methods and Models in Automation and Robotics, MMAR 2014					Excluded	Excluded	new_screen			2		2014				
18		ModelGuidance	Ensuring consistent dynamic adaptation: An approach from design to runtime	Adaptive software is a class of software which is able to dynamically modify at run-time its own internal structure and hence its behavior in response to changes in its operating environment. Adaptive software development has been an emerging research area of software engineering in the last decade. Many existing approaches use techniques issued from software product line to develop adaptive software. They use models to specify variability and architecture of a product family and generate product architecture. These models are also used in a generation process to deduce reconfiguration actions carried out at runtime. However, the replacement of components by another ones at runtime remains a complex task since it must ensure the validity of new version, in addition to preserving the correct completion of ongoing activities. In this paper, we propose an approach to specify the necessary information at design time for identifying the best moment to reconfigure the system. Moreover, we define an adaptation mechanism to take this information and realize a consistent dynamic adaptation to guarantee the system consistency. © 2016 IEEE.		Huynh, N.-T.; Segarra, M.-T.; Beugnard, A.	Proceedings of IEEE/ACS International Conference on Computer Systems and Applications, AICCSA					Excluded	Excluded	new_screen			2		2016				
19		ModelGuidance	An object-oriented approach to automateweb applications development	This paper presents the Object-OrientedWeb-Solutions Modeling approach (OOWS), which provides mechanisms to deal with the development of hypermedia information systems and e-commerce applications in web environments. It is proposed as an extension of an object-oriented method for automatic code generation based on conceptual models (OO-Method). The main contribution of this work is the introduction of a navigational model that is completely embedded in the process of conceptual modeling, to specify navigational features as a main part of what is conventionally specified during the conceptual modeling process. This navigational model provides abstraction primitives that allow to capture and represent navigational semantics in a precise way. We show how to put into practice the OOWS approach through a successful practical example developed within the context of e-commerce applications. © Springer-Verlag Berlin Heidelberg 2001.		Pastor, O.; Abrahão, S.; Fons, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2001				
20		ModelGuidance	Requirement analysis for event-B modeling	Event-B, a system level modeling language, models a system using a formalism based on a set theoretical first order logic. Refinement plays an important part for reducing system complexity in Event-B modeling. A poor refinement strategy may lead to plaguing errors. System components are the most important factor for building a good refinement strategy. We view that requirement analysis is vital to get a good refinement strategy. This paper discusses finding system components by analyzing system requirements as a preliminary step for modeling. We explain our requirement analysis method. © 2013 IEEE.		Batjargal, B.; Lee, K.H.	2013 International Conference on Information Science and Applications, ICISA 2013					Excluded	Excluded	new_screen			2		2013				
21		ModelGuidance	Designing a framework for the development of domain-specific process modelling languages	Domain-specific process modelling has gained increased attention, since traditional modelling languages struggle to meet the demands of highly specialized businesses. However, methodological support on the development of such domain-specific languages is still scarce, which hampers the specification of adequate modelling support. To this end, the paper applies a design-oriented research approach to create an integrated framework that facilitates the development of domain-specific process modeling languages. The framework is a result of 23 consolidated requirements from relevant literature and contains essential building blocks that need to be considered during the development process. It is demonstrated that the framework satisfies the identified requirements by structuring and systematizing the development of domain-specific languages, which increases language adequacy and quality. © Springer International Publishing AG 2017.		Jannaber, S.; Riehle, D.M.; Delfmann, P.; Thomas, O.; Becker, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2017				
22		ModelGuidance	Extracting UML Class Diagrams from Object-Oriented Fortran: ForUML	Many scientists who implement computational science and engineering software have adopted the object-oriented (OO) Fortran paradigm. One of the challenges faced by OO Fortran developers is the inability to obtain high level software design descriptions of existing applications. Knowledge of the overall software design is not only valuable in the absence of documentation, it can also serve to assist developers with accomplishing different tasks during the software development process, especially maintenance and refactoring. The software engineering community commonly uses reverse engineering techniques to deal with this challenge. A number of reverse engineering-based tools have been proposed, but few of them can be applied to OO Fortran applications. In this paper, we propose a software tool to extract unified modeling language (UML) class diagrams from Fortran code. The UML class diagram facilitates the developers' ability to examine the entities and their relationships in the software system. The extracted diagrams enhance software maintenance and evolution. The experiments carried out to evaluate the proposed tool show its accuracy and a few of the limitations.		Nanthaamornphong, Aziz; Carver, Jeffrey; Morris, Karla; Filippone, Salvatore	SCIENTIFIC PROGRAMMING					Excluded	Excluded	new_screen			2		2015				
23		ModelGuidance	Effective software project management education through simulation models: An externally replicated experiment	It is an undeniable fact that software project managers need reliable techniques and robust tool support to be able to exercise a fine control over the development process so that products can be delivered in time and within budget. Therefore, managers need to be trained so that they could learn and use new techniques and be aware of their possible impacts. In this context, effective learning is an issue. A small number of empirical studies have been carried out to study the impact of software engineering education. One such study is by Pfahl et al [11] in which they have performed a controlled experiment to evaluate the learning effectiveness of using a process simulation model for educating computer science students in software project management. The experimental group applied a Systems Dynamics simulation model while the control group used the COCOMO model as a predictive tool for project planning. The results indicated that students using the simulation model gain a better understanding about typical behaviour patterns of software development projects. Experiments need to be externally replicated to both verify and generalise original results. In this paper, we will discuss an externally replicated experiment in which we keep the design and the goal of the above experiment intact. We then analyse our results in relation to the original experiment and another externally replicated experiment, discussed in [12].		Rodriguez, D; Satpathy, M; Pfahl, D	PRODUCT FOCUSED SOFTWARE PROCESS IMPROVEMENT					Excluded	Excluded	new_screen			2		2004				
24		ModelGuidance	Detecting design flaws in UML state charts for embedded software	Embedded systems are used in various critical devices and correct functioning of these devices is crucial. For non-trivial devices, exhaustive testing is costly, time consuming and probably impossible. A complementary approach is to perform static model checking to verify certain design correctness properties. Though static model checking techniques are widely used for hardware circuit verification, the goal of model checking software systems remains elusive. However embedded systems fall in the category of concurrent reactive systems and can be expressed through communicating state machines. Behavior of concurrent reactive systems is more similar to hardware than general software. So far, this similarity has not been exploited sufficiently. IBM®1 Rational® Rose® RealTime (RoseRT) is widely used for designing concurrent reactive systems and supports UML State Charts. IBM RuleBase is an effective tool for hardware model checking. In this paper, we describe our experiments of using RuleBase for static model checking RoseRT models. Our tool automatically converts RoseRT models to the input for RuleBase, allows user to specify constraints graphically using a variation of sequence diagrams, and presents model checking results (counterexamples) as sequence diagrams consisting of states and events in the original UML model. The model checking step is seamlessly integrated with RoseRT. Prior knowledge of model checking or formal methods is not expected, and familiarity of UML sequence diagram is exploited to make temporal constraint specification and counterexample presentation more accessible. This approach brings the benefits of model checking to embedded system developers with little cost of learning. © Springer-Verlag Berlin Heidelberg 2007.		Elamkulam, J.; Glazberg, Z.; Rabinovitz, I.; Kowlali, G.; Gupta, S.C.; Kohli, S.; Dattathrani, S.; Macia, C.P.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2007				
25		ModelGuidance	Multimedia ontology modeling: An approach based on MPEG-7	The MPEG-7 standard provides a description of multimedia data, however high-level semantic of multimedia data is beyond the scope of the MPEG-7 standard. As ontology is an effective tool of semantic modeling, high-level semantic of multimedia data can be modeled using ontology. In this study, we propose a multimedia ontology modeling approach based on the MPEG-7 standard. The three main features of the proposed approach are: 1) A multimedia ontology is created by combining semantic hierarchy of multimedia content and the MPGE-7 standard. 2) We pay attention on three parts of MPEG-7: MDS, Visual-Audio and Classification Schemes (CS, especially TemporalRelation CS and SpatialRelation CS). 3) We extend the proposed multimedia ontology to support spatial-temporal relation of multimedia data. We show the way of analyzing high-level semantic of multimedia data using the proposed ontology. © 2011 IEEE.		Li, Q.; Lu, Z.; Yu, Y.; Liang, L.	2011 3rd International Conference on Advanced Computer Control, ICACC 2011					Excluded	Excluded	new_screen			2		2011				
26		ModelGuidance	A Game Theoretic Model and Tree Analysis Method for Fair Exchange Protocols	Exchange protocols are an important theoretic basis to make secure electronic commerce and electronic business transactions possible, in which the fairness is a crucial property. To ensure and verify the property, a specific model is proposed, based on the extensive game with imperfect information. Fairness is built in the protocol game and the corresponding game tree. To verify the property, a tree analysis method is offered, and a linear time algorithm is given. As a case study, some flaws of ASW protocol are found.		G. Li; Y. Gu; X. Tao; J. Tao	2011 Fifth International Conference on Theoretical Aspects of Software Engineering					Excluded	Excluded	new_screen			2		2011				
27		ModelGuidance	Modeling of open normative multiagent systems	A major challenge in the research of multiagent systems (MAS) is the design and implementation of open MAS in which norms can be effectively applied to their agents and easily managed. These tasks are arduous because norms are usually written for general purposes, hindering a more precise regulation. The motivation for this research came forth from the need to resolve this challenge, providing an approach applicable in open systems. In such systems, heterogeneity and autonomy rule out any assumption concerning the way third-party entities are implemented and behaved. This paper summarizes the result of a study done on solutions for the modeling of MAS. That study motivates the development of our DynaCROM approach.		Felicíssimo, C.H.; De Lucena, C.J.P.; Briot, J.-P.	ICAART 2009 - Proceedings of the 1st International Conference on Agents and Artificial Intelligence					Excluded	Excluded	new_screen			2		2009				
28		ModelGuidance	Class Schema Evolution for Persistent Object-Oriented Software: Model, Empirical Study, and Automated Support	With the wide support for object serialization in object-oriented programming languages, persistent objects have become commonplace and most large object-oriented software systems rely on extensive amounts of persistent data. Such systems also evolve over time. Retrieving previously persisted objects from classes whose schema has changed is, however, difficult, and may lead to invalidating the consistency of the application. The ESCHER framework addresses these issues through an IDE-integrated approach that handles class schema evolution by managing versions of the code and generating transformation functions automatically. The infrastructure also enforces class invariants to prevent the introduction of potentially corrupt objects. This paper describes a model for class attribute changes, a measure for class evolution robustness, four empirical studies, and the design and implementation of the ESCHER system.		Piccioni, Marco; Oriol, Manuel; Meyer, Bertrand	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2013				
29		ModelGuidance	An approach to feature based modelling by dependency alignment for the maintenance of the trustworthy system	Functionalities in a software system can be categorized as accidental or essential, where accidental functionalities are dependent on essential ones, but not vice versa. Distinguishing essential functionalities from accidental ones in the development can lead to the reduction of maintenance effort and to the trustworthy system. In this paper, we propose Feature Based Modelling (FBM) in which accidental functionalities are aligned with essential functionalities. The feature in this approach, as a logical unit, provides traceability from a functionality in the requirements to an implemented module with effective dependency management, thus the accidental features can be modified with minimal disruption to the essential features. FBM enables us to limit working boundary of maintenance activities, thus helps to keep the trustworthiness of the system against unskillful modification. © 2004 IEEE.		Kim, J.; Bae, D.H.	Proceedings - International Computer Software and Applications Conference					Excluded	Excluded	new_screen			2		2004				
30		ModelGuidance	Requirements management process model for software development based on legacy system functionalities	Poor or incomplete requirement specification as well as inadequate requirement management is one of the major reasons for project failure and an ongoing source of issues in business application development. These problems cause schedule and budget overruns as well as low level of quality in applications. This paper describes a process model for requirements elicitation, specification, analysis and management in a domain of back-office data entry Web applications meant to replace poorly documented legacy applications. The proposed process model is connected with the subsequent software change management process. The relationship between requirements and business process modelling is presented in business process artefacts which are acquired through requirement activities. The proposed process models are intended for a newly formed development department without an adopted process methodology, aiming at software development based on legacy system functionalities.		Zagajšek, B.; Šeparovič, K.; Car, Ž.	Proceedings of the 9th International Conference on Telecommunications, Con℡ 2007					Excluded	Excluded	new_screen			2		2007				
31		ModelGuidance	COOL: A model-driven and automated system for guided and verifiable cloud solution design	In this paper, we present COOL (ClOud sOlution design tooL), which is a model-driven cloud solution design tool for automatic solution generation, and solution verification. It offers a guided solutioning and customization method starting from complex client business and IT requirements, and enables verification of solution correctness by leveraging constraint satisfaction solvers. © Springer International Publishing AG 2017.		Motahari Nezhad, H.R.; Yorov, K.; Yin, P.; Nakamura, T.; Trent, S.; Shurek, G.; Kushida, T.; Subramanian, U.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2017				
32		ModelGuidance	Evaluating the suitability of state-based formal methods for industrial deployment	After a number of success stories in safety-critical domains, we are starting to witness applications of formal methods in contemporary systems and software engineering. However, one thing that is still missing is the evaluation criteria that help software practitioners choose the right formal method for the problem at hand. In this paper, we present the criteria for evaluating and comparing different formal methods. The criteria were chosen through a literature review, discussions with experts from academia and practitioners from industry, and decade-long personal experience with the application of formal methods in industrial and academic projects. The criteria were then evaluated on several model-oriented state-based formal methods. Our research shows that besides technical grounds (eg, modeling capabilities and supported development phases), formal methods should also be evaluated from social and industrial perspectives. We also found out that it is not possible to generate a matrix that renders the selection of the right formal method an automatic process. However, we can generate several pointers, which make this selection process a lot less cumbersome. © 2018 The Authors. Software: Practice and Experience Published by John Wiley & Sons Ltd.		Mashkoor, A.; Kossak, F.; Egyed, A.	Software - Practice and Experience					Excluded	Excluded	new_screen			2		2018				
33		ModelGuidance	A model-based approach to impact analysis using model differencing	Impact analysis is concerned with the identification of consequences of changes and is therefore an important activity for software evolution. In modelbased software development, models are core artifacts, which are often used to generate essential parts of a software system. Changes to a model can thus substantially affect different artifacts of a software system. In this paper, we propose a modelbased approach to impact analysis, in which explicit impact rules can be specified in a domain specific language (DSL). These impact rules define consequences of designated UML class diagram changes on software artifacts and the need of dependent activities such as data evolution. The UML class diagram changes are identified automatically using model differencing. The advantage of using explicit impact rules is that they enable the formalization of knowledge about a product. By explicitly defining this knowledge, it is possible to create a checklist with hints about development steps that are (potentially) necessary to manage the evolution. To validate the feasibility of our approach, we provide results of a case study. © Software Quality and Maintainability 2014.		Müller, K.; Rumpe, B.	Electronic Communications of the EASST					Included	Excluded	new_screen			2		2014				
34		ModelGuidance	Extending SOFL features for AOP modeling	SOFL is a formal language and method for software system analysis, specification and design, and it fully supports structured techniques and object-oriented techniques. AOP (Aspect-Oriented Programming) is a new technique for software development. Since AOP leads a completely different way from structured or object-oriented techniques, original SOFL can not been used for AOP modeling. In this paper, we extend SOFL and introduce several new features which will enable SOFL to be used to fully and clearly specify AOP features, such as aspects, pointcuts and advices. © 2005 IEEE.		Shen, Y.; Chen, H.	Proceedings of the IEEE International Conference on Engineering of Complex Computer Systems, ICECCS					Excluded	Excluded	new_screen			2		2005				
35		ModelGuidance	Petri net-based scheduling strategy and energy modeling for the cylinder block remanufacturing under uncertainty	Scheduling has been extensively applied to remanufacturing for the organization of production activities, and it would directly influence the overall performance of the remanufacturing system. Since the conjunction of Petri net (PN) and artificial intelligence (AI) searching technique was demonstrated to be a promising approach to solve the scheduling problems in manufacturing systems, this study built a transition timed PN combined with heuristic A* algorithm to deal with the scheduling in remanufacturing. The PN was applied to the formulation of remanufacturing process, while the A* algorithm generated and searched for an optimal or near optimal feasible schedule through the reachability graph (RG). We took the high value-added cylinder block of engine as a research object to minimize the makespan of reprocessing a batch used components. This scheduling problem involved in batch and parallel processing machines, and the uncertain processing time and routes will complicate the scheduling problem. Three heuristics were designed to guide the search process through the RG in PN. To avoid state space explosion and select promising nodes, a new rule-based dynamic window was developed to improve the efficiency of the algorithm, and this rule was examined to outperform the conventional one. Under the determined scheduling strategy, the dynamic behavior of energy consumption rate during the processing time was simulated using PN tool, which would assist remanufacturers to develop potential strategies for energy efficiency improvement. Considering the uncertainty of processing time, the Monte Carlo simulation method was adopted to statistically analyze the distributions of makespan and total energy consumption, which would contribute to the comprehensive production scheduling and energy profile assessment for sustainable remanufacturing. © 2019 Elsevier Ltd		Peng, S.; Li, T.; Zhao, J.; Guo, Y.; Lv, S.; Tan, G.Z.; Zhang, H.	Robotics and Computer-Integrated Manufacturing					Excluded	Excluded	new_screen			2		2019				
36		ModelGuidance	Use Cases Modeling for Scalable Model-Checking	Formal methods are effective techniques for automating software verifications to satisfy quality and reliability. However, the application of these techniques within industrial settings remains limited due to the complexity of produced models. Context-aware verification can circumvent this complexity by reducing the scope of the verification to some specific environmental conditions. We previously proposed a Context Description Language (CDL) to facilitate the formalization of requirements and contexts. However, the number of CDL models required to precisely formalize contexts grow rapidly according to the complexity of the system and manually writing CDL models is difficult and error prone task. In this paper, we propose a tool-supported framework that assists engineers in describing system contexts. We extended UML use cases with scenarios descriptions and we linked a domain specification vocabulary to automatically generate CDL models. An industrial case study is presented to illustrate the effectiveness of our approach.		A. Raji; P. Dhaussy	2011 18th Asia-Pacific Software Engineering Conference					Excluded	Excluded	new_screen			2		2011				
37		ModelGuidance	A Method for Constructing a Company Specific Enterprise Architecture Model Framework	Good IT decision making is a highly desirable property that can be furthered by the use of enterprise architecture, an approach to IT management using diagrammatic models. In order to support decision making, the models must contain only relevant information since creation of enterprise architecture models often is a demanding task. This paper suggests a method for constructing an enterprise architecture model framework where enterprises in need of architecture and rational decision making are designated. The paper also describes the outcome of the method at a case for a Swedish utility company, Vattenfall AB.		A. Kallgren; J. Ullberg; P. Johnson	2009 10th ACIS International Conference on Software Engineering, Artificial Intelligences, Networking and Parallel/Distributed Computing					Excluded	Excluded	new_screen			2		2009				
38		ModelGuidance	Business analysts' contributions to the dynamic capabilities of agile software development teams	Purpose: Literature reveals ongoing debates around the role of business analysts in agile software development (ASD) teams. This can be attributed, in part, to a knowledge gap concerning how business analysts contribute to overall team capabilities, particularly those which are essential in enabling teams to respond to fast-paced environmental changes. The purpose of this study was to address this gap by investigating how business analysts (BAs) contribute to the dynamic capabilities of ASD teams. Design/methodology/approach: Through a deductive approach, this study adapted and applied a research model based on the team dynamic capabilities (DC) theory to explore the contributions of BAs in agile teams. The study was executed using a qualitative, single case study research strategy directed at an ASD team in the financial services industry. Moreover, data were collected through face-to-face, semi-structured interviews; a focus group; non-participant observation and physical artefacts review. The thematic analysis technique was used to analyse the data. Findings: The study contributes to teams DC theory through four theoretical propositions centred on the role of BAs. The proposition highlights how BAs relationship management, tacit knowledge sharing, task mental models and transactive memory are key contributors of ASD teams' DC. The study also found that BAs contribute to ASD teams' ability to embrace agile principles 2, 4, 6 and 12. This study can inform the design of capacity development programmes for individual team members and BAs and thus help managers curate teams that will best promote DC. Practical implications: This study can inform the design of capacity development programmes for individual team members and BAs and thus help managers curate teams that will best promote DC. Originality/value: This study builds on the relatively few studies which focus on DC within software development (SD) teams and ASD project teams. Moreover, the study explores how an individual (i.e. a BA) can contribute to the DC of a team. © 2022, Emerald Publishing Limited.		Ndlela, M.; Tanner, M.	Information Technology and People					Excluded	Excluded	new_screen			2		2022				
39		ModelGuidance	Diagrammatic knowledge modeling for managers: Ontology-based approach	Diagrams are an effective and popular tool for visual knowledge structuring. Managers also often use them to acquire and transfer business knowledge. There are many currently available diagrams or visual modeling languages for managerial needs, unfortunately the choice between them is frequently error-prone and inconsistent. This situation raises the next questions. What diagrams/ visual modeling languages are the most suitable for the specific type of business content? What domain-specific diagrams are the most suitable for the visualization of the particular elements of organizational ontology? In order to provide the answers, the paper suggests light-weight specification of diagrams and knowledge content types, which is based on the competency questions and ontology design patterns. The proposed approach provides the classification of qualitative business diagrams.		Kudryavtsev, D.; Gavrilova, T.	KEOD 2011 - Proceedings of the International Conference on Knowledge Engineering and Ontology Development					Included	Excluded	new_screen			2		2011				
40		ModelGuidance	SM2PIA: A model to support the development of pragmatic interoperability requirements	Companies have increasingly distributed their teams to increase productivity and quality, and to reduce their costs in software development processes. This scenario has brought new challenges to effective collaboration and to enhance communication across peers. Pragmatic interoperability has been considered as one of the key requirements to tackle these challenges. However, there is lack of research investigating how to support development of pragmatic interoperability across globally dispersed groups. This paper proposes a model to support pragmatic interoperability in software projects to foster collaboration in distributed environments. The proposed model was implemented and evaluated in a collaborative architecture which supports collaborative scientific experiments development. © 2016 IEEE.		Neiva, F.W.; David, J.M.N.; Braga, R.; Borges, M.R.S.; Campos, F.	Proceedings - 11th IEEE International Conference on Global Software Engineering, ICGSE 2016					Excluded	Excluded	new_screen			2		2016				
41		ModelGuidance	Providing support for starting collaboration in distributed software development: A multi-agent approach	Developing a system to provide support for distributed software developers (DSD) to get into collaboration is very complicated. On the first hand, it is necessary to know the characteristics of their daily work activities. On the other hand, technical aspects must be considered, such as obtaining information on the context and on the data flow of their activities. This requires information from the individual and group work environment. Therefore, we propose a model to help in the development of this type of system. Firstly, our work aims at modeling the information flow of DSD workers based on a literature survey and on our own experience. Secondly, we describe a projected implementation scenario based on the multi-agent proposed system. © 2008 IEEE.		Palacio, R.R.; Morán, A.L.; González, V.M.; Vizcaíno, A.	2009 WRI World Congress on Computer Science and Information Engineering, CSIE 2009					Excluded	Excluded	new_screen			2		2009				
42		ModelGuidance	UML class diagrams - A comparative study on approaches to finite satisfiability verification	Unified Modeling Language class diagrams are widely used for modeling, playing a key role in the analysis and design of information systems, especially in development contexts that use modeling oriented methodologies. Therefore, it is relevant to ensure the creation and maintenance of correct class diagrams. With the use of class diagrams it is possible to specify classes, relations and restrictions, however, such diagrams are subject to modeling errors made by their authors and may degenerate into incorrect diagrams. A common cause of incorrect diagrams refers to the definition of contradictory and inconsistent constraints, leading to finite satisfiability problems. Several approaches to the verification of finite satisfiability are currently available, supported by different tools. Through this work, we proceed with the identification and comparison of the existing approaches for the verification of finite satisfiability in class diagrams, determining the effectiveness and efficiency of the proposed tools. © 2013 IADIS.		Bastos, P.; Ramos, P.	Proceedings of the IADIS International Conference Information Systems 2013, IS 2013					Excluded	Excluded	new_screen			2		2013				
43		ModelGuidance	Switching control and modeling of mobile robots formation	This paper presents the design of a decentralized cooperative control law, based on a leader-follower approach. This control law generates formation trajectories that should follow each mobile robot to establish and maintain a specific geometry formation while the robots formation moves along a predefined trajectory. By taking advantage of the continuous and discrete dynamics of the leader-following approach, we model the formation control as a switching control. This allows any robot to be part of the formation as leader or follower any time. The control law is validated through simulation. © 2011 IEEE.		Bravo, F.; Patino, D.; Melo, K.; Parra, C.	2011 IEEE 9th Latin American Robotics Symposium and IEEE Colombian Conference on Automatic Control, LARC 2011 - Conference Proceedings					Excluded	Excluded	new_screen			2		2011				
44		ModelGuidance	Inferring sparse genetic regulatory networks based on maximum-entropy probability model and multi-objective memetic algorithm	Maximum-entropy probability models (MEPMs) have been widely used to reveal the structure of genetic regulatory networks (GRNs). However, owing to the inherent network sparsity and small sample size, most of the existing MEPMs use convex optimization to approximate the inference of GRNs which tend to be trapped in less accurate local optimal solutions. Evolutionary algorithms (EAs) can help address this issue thanks to their superior global search capability, yet the conventional EA-based methods cannot handle the sparsity of GRNs efficiently. To overcome this problem, we propose a multi-objective memetic algorithm in this study to infer the sparse GRNs with MEPMs. Particularly, the target inferring problem is formulated as a multi-objective optimization problem where the maximum entropy and the constraints of the MEPM are formulated as two objectives. We employ Graphical LASSO (Glasso) to generate prior knowledge for population initialization. The genetic operators are adopted to ensure the diversity and sparsity of the inferred GRNs. Local search based on the spatial relations among solutions and different Glasso results in the decision space is incorporated into the algorithm to improve the search efficiency. Experimental results on both simulated and real-world data sets suggest that the proposed method outperforms other state-of-the-art GRN inferring methods in terms of effectiveness and efficiency. © 2022, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.		Yin, F.; Zhou, J.; Xie, W.; Zhu, Z.	Memetic Computing					Excluded	Excluded	new_screen			2		2022				
45		ModelGuidance	Software process modeling and enactment: An experience report related to problem tracking in an industrial project	The paper provides an overview of process research and the application of research results to practice and then describes process models using FUNSOFT nets and a workflow management system LEU. The example from which the experience is drawn is that of a problem tracking system and the components of the model are described and illustrated. The experience reported comes in three flavors: the appropriateness of FUNSOFT nets as a modeling mechanisms and the alternative use of state transition diagrams; the benefits of the model and its support on the business process; and finally some implications for process research.		Gruhn, Volker; Urbainczyk, Juri	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		1998				
46		ModelGuidance	Collaborative modelling and co-simulation with DESTECS: A pilot study	This paper describes a collaborative modelling exercise using the DESTECS framework. The DESTECS approach allows engineers and software designers to collaborate to produce system models that contain a discrete-event (DE) model of a controller and continuous-time (CT) model of a plant. We call these models co-models and call their execution co-simulation. The DESTECS tool couples existing DE and CT tools (Overture and 20-sim, respectively) allowing engineers to use paradigms and tools with which they are familiar, while collaborating to construct these shared system models. The work involved collaborative modelling of a line-following robot. We report on both the details of the models and experience in producing them. © 2012 IEEE.		Pierce, K.; Gamble, C.; Ni, Y.; Broenink, J.F.	Proceedings of the Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises, WETICE					Excluded	Excluded	new_screen			2		2012				
47		ModelGuidance	What's inside the box? Prospects and limitations of semantic verification in process modeling	Business process models support the optimization, reengineering and implementation of IT applications in administration and economics. In this area, models are important to manage complexity. In order to realize their full potential, the correctness of business process models is of significant importance. The paper applies an ontology-driven approach that aims at supporting semantic verification of process models. The approach is based on the formalization of the semantics of individual model elements by annotating them with concepts of a formal ontology. In order to ensure semantic correctness, semantic verification rules are introduced and it is demonstrated how machine reasoning provides for the automation of verification tasks. The approach is demonstrated using real-life process models taken from a capital city.		Fellmann, M.; Hogrebe, F.; Thomas, O.; Nüttgens, M.	EMISA 2010 -Beitrage des Workshops der GI-Fachgruppe Entwicklungsmethoden fur Informationssysteme und Deren Anwendung					Excluded	Excluded	new_screen			2		2010				
48		ModelGuidance	Collaborative creativity: From hand drawn sketches to formal domain specific models and back again	Most of the time developers make extensive use of software tools in a software development process to support them in their day-to-day work. One of the first and most important phases is the design phase. Here tools are missing which support the creative and collaborative workflow (parallel/distributed). At the moment software designers uses classic whiteboards in team meetings to express their ideas. Subsequently a coworker uses a mobile phone or a camera to take photos of the work and remodel the picture with a modeling tool. That process is very inconvenient, error-prone and hinders a creative modeling cycle. For overcoming this ineffective process this paper shows a new approach to use digital whiteboards to transform free hand sketches in formal models and back again while modeling in a distributed team. The approach is completely independent from a pre-defined modeling language. It provides an interactive training mode to learn new graphical syntax elements and map these elements to formal metamodel entities. Based on the approach a collaborative sketch and modeling infrastructure was implemented. Copyright © 2013 for the individual papers by the papers' authors.		Bartelt, C.; Vogel, M.; Warnecke, T.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2013				
49		ModelGuidance	Discovering and Mining Use Case Model in Reverse Engineering	Use case model is normally used to model software requirement. Reverse engineering of the high-level requirement model from the source code of target system is an important way to promote the program comprehension. In this paper, an approach of discovering and mining the use case model from the source code of object-oriented software is presented. Based on dynamic information, which could be obtained based on instrumentation techniques during the execution of target system, the approach discovers the basic use cases by specifying the beginning methods of method calling sequences of the dynamic information, and then utilizes some rules to mine the relations among basic use cases to build the whole use case model. This approach has been implemented in the XDRE (XiDian reverse engineering) tool. At the end a case study is provided to show the accuracy and usefulness of discovered use case model.		Q. Li; S. Hu; P. Chen; L. Wu; W. Chen	Fourth International Conference on Fuzzy Systems and Knowledge Discovery (FSKD 2007)					Excluded	Excluded	new_screen			2		2007				
50		ModelGuidance	Supporting the verification of compliance to safety standards via model-driven engineering: Approach, tool-support and empirical validation	Context: Many safety-critical systems are subject to safety certification as a way to provide assurance that these systems cannot unduly harm people, property or the environment. Creating the requisite evidence for certification can be a challenging task due to the sheer size of the textual standards based on which certification is performed and the amenability of these standards to subjective interpretation. Objective: This paper proposes a novel approach to aid suppliers in creating the evidence necessary for certification according to standards. The approach is based on Model-Driven Engineering (MDE) and addresses the challenges of using certification standards while providing assistance with compliance. Method: Given a safety standard, a conceptual model is built that provides a succinct and explicit interpretation of the standard. This model is then used to create a UML profile that helps system suppliers in relating the concepts of the safety standard to those of the application domain, in turn enabling the suppliers to demonstrate how their system development artifacts comply with the standard. Results: We provide a generalizable and tool-supported solution to support the verification of compliance to safety standards. Empirical validation of the work is presented via an industrial case study that shows how the concepts of a sub-sea production control system can be aligned with the evidence requirements of the IEC61508 standard. A subsequent survey examines the perceptions of practitioners about the solution. Conclusion: The case study indicates that the supplier company where the study was performed found the approach useful in helping them prepare for certification of their software. The survey indicates that practitioners found our approach easy to understand and that they would be willing to adopt it in practice. Since the IEC61508 standard applies to multiple domains, these results suggest wider applicability and usefulness of our work. © 2012 Elsevier B.V. All rights reserved.		Panesar-Walawege, R.K.; Sabetzadeh, M.; Briand, L.	Information and Software Technology					Included	Excluded	new_screen			2		2013				
51		ModelGuidance	Towards unifying existing requirements engineering approaches into a unified model	Several approaches have been developed to clearly identify software system requirements that satisfy their stakeholders and can be implemented, deployed and maintained. These approaches can be distinguished from one another. Indeed, some of them focus on goals and how to achieve them, others focus on scenarios and illustrations, others rely on stakeholders' viewpoints, and so on. Nevertheless, these approaches rely on more or less shared concepts. In this paper, we build graphs that represent some of these approaches. Then we compare these approaches by computing and analysing similarities between the graphs vertices. As a result, we put forward the core concepts needed in requirements engineering. This will pave the way for a unified model that will provide flexible software requirements identification, management and changes.		Eddine, S.I.; Dkaki, T.; Zarour, N.E.; Charrel, P.-J.	KMIS 2012 - Proceedings of the International Conference on Knowledge Management and Information Sharing					Excluded	Excluded	new_screen			2		2012				
52		ModelGuidance	A petri net extension for formal modelling of information systems	Being a powerful instrument for modelling, analysing, and simulating dynamic systems, Petri Nets have been used many times in the past to solve software engineering problems and to model different aspects of information system. However, none of these research attempts have succeeded in modelling complete information system's behaviour in formal and executable way, at the same time. In the field of requirement specification and modelling of the information systems, it is usual to find object-oriented (OO) methodologies (UML) instead of some formal methods such as Petri Nets. In this paper, we propose a model based on extension of Petri Nets for creating formal static and dynamic models of information systems. The proposed model was designed as an executable replacement of the UML dynamic diagrams. For modelling static structure of the system we still suggest using OO methods, but proposed Petri Nets extension provides complete integration of the OO static elements into Petri Nets used as a dynamic model. The main contribution of the proposed Petri Nets extension is that we get the formal model that is, unlike other known formal models, directly and completely executable. More precisely, we created a model of a Petri Net that represents real information system with all its functionalities. Moreover, we created a CASE tool that allows modelling and execution of a system using the proposed model. © 2016 CRL Publishing Ltd.		Kresoja, S.; Rackovic, M.; Škrbic, S.; Surla, B.D.	Computer Systems Science and Engineering					Included	Excluded	new_screen			2		2016				
53		ModelGuidance	Analyzing software process models with AVISPA	Software process models are sophisticated and large specifications aimed at organizing and managing software development. Their formal specification demands an enormous effort, but once specified there are few approaches and even fewer tools that aid the process engineer to analyze the quality of the process. For the last five years we have aided software companies in specifying their software processes and we have found a series of error patterns that indicate the potential presence of misconceptions or misspecifications. This paper presents these patterns, characterizes the kinds of errors they potentially reveal, and details how errors could be localized within a software process model. To assist process engineers to analyze the quality of their processes, we provide Avispa, a tool that graphically renders different aspects of a process model and highlights potential errors as intuitive and comprehensible indicators. The approach and the supporting tool are illustrated by applying them for analyzing the software process models of three Chilean software companies. © 2011 ACM.		Hurtado Alegría, J.A.; Bastarrica, M.C.; Bergel, A.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2011				
54		ModelGuidance	Towards a new Framework for building a whole user-defined system from a Colored Petri Networks: Class diagram to a colored Petri networks Towards a new framework	In this paper we provide a discussion of designing a new Framework for building a whole system from a colored Petri Network. This framework will integrate the translation process of a multiview class to a colored Petri network developed in [1]. With two examples, we will extend this process by using fields, methods and access control. The advantages of using colored Petri networks compared to ordinary ones are also discussed as well as our new framework design.		A. Zeddari; A. Ettalbi	2014 International Conference on Multimedia Computing and Systems (ICMCS)					Included	Excluded	new_screen			2		2014				
55		ModelGuidance	A formal security model for microprocessor hardware	The paper introduces a formal security model for a microprocessor hardware system. The model has been developed as part of the evaluation process of the processor product according to ITSEC assurance level E4. Novel aspects of the model are the need for defining integrity and confidentiality objectives on the hardware level without the operating system or application specification and security policy being given, and the utilization of an abstract function and data space. The security model consists of a system model given as a state transition automaton on infinite structures and the formalization of security objectives by means of properties of automaton behaviors. Validity of the security properties is proved. The paper compares the model with published ones and summarizes the lessons learned throughout the modeling process.		Lotz, V; Kessler, V; Walter, GH	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2000				
56		ModelGuidance	TCOZ approach to OWL-s process model design	Complex Semantic Web (SW) services may have intricate data state, autonomous process behavior and concurrent interactions. The design of such Slf services systems requires precise and powerful modelling techniques to capture not only the ontology domain properties but also the services' process behavior and functionalities. Timed Communicating Object Z (TCOZ) is an integrated formal design language which builds on the strengths of Object- Z in modelling complex data stale and strength of Timed CSP in modelling concurrent interaction. In this paper, we illustrate how TCOZ can be used as a high level design language lo design SW sen-ices. Furthermore, the paper presents the development of the systematic translation rules and too! which can automatically extract the services semantic markup (OWL-S) from the formal TCOZ design model The online talk discovery system is used as a demonstrating case study.		Wang, H.; Sun, J.; Dong, J.S.; Li, Y.F.	17th International Conference on Software Engineering and Knowledge Engineering, SEKE 2005					Excluded	Excluded	new_screen			2		2005				
57		ModelGuidance	Modular construction and power modelling of dynamic memory managers for embedded systems	Portable embedded devices must presently run multimedia and wireless network applications with enormous computational performance requirements at a low energy consumption. In these applications, the dynamic memory subsystem is one of the main sources of power consumption and its inappropriate management can severely affect the performance of the system. In this paper, we present a new system-level approach to cover the large space of dynamic memory management implementations without a time-consuming programming effort and to obtain power consumption estimates that can be used to refine the dynamic memory management subsystem in an early stage of the design flow. © Springer-Verlag 2004.		Atienza, D.; Mamagkakis, S.; Catthoor, F.; Mendias, J.M.; Soudris, D.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2004				
58		ModelGuidance	Modeling of I/O performance interference in virtualized environments with queueing petri nets	Virtualization technology allows to share the physical resources used in IT infrastructures for efficient and flexible system operation. Sharing of physical resources, however, comes usually at the cost of performance and poses significant challenges to respect the Quality-of-Service of consolidated data-intensive applications due to the mutual performance interference among the applications. The non-trivial impact of workload consolidation on the I/O performance can be anticipated using explicit performance analysis techniques. In current practice, however, explicit modeling of I/O performance interference effects in virtualized environments is usually avoided due to their complexity. In this paper, we present an explicit performance modeling approach of I/O performance interference in virtualized environments with queueing Petri nets (QPNs). More specifically, we first highlight major challenges when modeling I/O performance in virtualized environments. Then, we create a single-VM I/O performance model calibrated with response time measurements to capture the complex behavior of a representative, real-world environment based on IBM System z and IBM DS8700 server hardware. Finally, we use the I/O performance model to evaluate the I/O performance when the workload is distributed heterogeneously on colocated virtual machines. Overall, we effectively create an I/O performance interference model capturing the I/O performance effects in a multi-VM environment with less than 10% prediction error on average. © 2014 IEEE.		Noorshams, Q.; Rostami, K.; Kounev, S.; Reussner, R.	Proceedings - IEEE Computer Society's Annual International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunications Systems, MASCOTS					Excluded	Excluded	new_screen			2		2015				
59		ModelGuidance	Schema-based conversation modeling for agent-oriented manufacturing systems	In agent-oriented manufacturing systems, an efficient and flexible computational conversation model can enable more effective and robust communication, cooperation, and negotiation among agents. This paper therefore describes a schema-based agent conversation model for intelligent agent-oriented manufacturing systems. Conversation schemata are constructed by (1) identifying agent types and their interactions; (2) capturing and formalizing interaction constraints; (3) verifying schemata using colored petri net (CPN) (to prevent deadlock and livelock of conversations); (4) translating the schemata into production rule sets and Java thread classes; (5) identifying inter-schema relationships and building class hierarchies of schemata; (6) constructing conversation managers (CMs) to control and coordinate the schema thread-based dynamic execution. An application example in distributed production planning, implemented in the Java environment, shows the effectiveness of the method. © 2001 Elsevier Science B.V. All rights reserved.		Lin, F.; Norrie, D.H.	Computers in Industry					Excluded	Excluded	new_screen			2		2001				
60		ModelGuidance	Experiences in threading UML throughout a computer science program	The Department of Electrical Engineering and Computer Science of the United States Military Academy at West Point, NY, decided to standardize its computer science program on the unified modeling language (UML) for all software design representations. Converting the appropriate courses to support formal teaching of reinforcement of UML concepts was planned as a phased approach over four academic years. Formal UML instruction was planned for Computer Science courses and the senior two-course software engineering,capstone sequence. Reinforcement of UML would be in the intervening courses. Once implementation began, it became apparent that A prolonged period between formal blocks of instruction was, insufficient. Instead, some additional courses were redesigned to support formal UML instruction. The end result was a richer and deeper exposure to UML than anticipated over the same timeframe.		Ruocco, AS	IEEE TRANSACTIONS ON EDUCATION					Excluded	Excluded	new_screen			2		2003				
61		ModelGuidance	Towards reverse-engineering of UML views from structured formal developments	Formal methods, such as B, were elaborated in order to ensure a high level of precision and coherence. Their major advantage is that they are based on mathematics, which allow, on the one hand, to neutralize risks of ambiguity and uncertainty, and on the other hand, to guarantee the conformance of a specification and its realization. However, these methods use specific notations and concepts which often generate a weak readability and a difficulty of integration in the development and the certification processes. In order to overcome this shortcoming several research works have proposed to bridge the gap between formal developments and alternate UML models which are more intuitive and readable. In this paper we are interested by the B method, which is a formal method used to model systems and check their correction by refinements. Existing works which tried to combine UML and B notations don't deal with the composition aspects of formal models. This limitation upsets their use for large scale specifications, such as those of information systems, because such specifications are often developed by structured modules. This paper improves the state of the art by proposing an evolutive MDA-based framework for reverse-engineering of UML static diagrams from B specifications built by composing abstract machines.		Idani, A.; Coulette, B.	ICEIS 2008 - Proceedings of the 10th International Conference on Enterprise Information Systems					Excluded	Excluded	new_screen			2		2008				
62		ModelGuidance	Model-based security metrics using ADversary VIew Security Evaluation (ADVISE)	System architects need quantitative security metrics to make informed trade-off decisions involving system security. The security metrics need to provide insight on weak points in the system defense, considering characteristics of both the system and its adversaries. To provide such metrics, we formally define the ADversary View Security Evaluation (ADVISE) method. Our approach is to create an executable state-based security model of a system and an adversary that represents how the adversary is likely to attack the system and the results of such an attack. The attack decision function uses information about adversary attack preferences and possible attacks against the system to mimic how the adversary selects the most attractive next attack step. The adversary's decision involves looking ahead some number of attack steps. System architects can use ADVISE to compare the security strength of system architecture variants and analyze the threats posed by different adversaries. We demonstrate the feasibility and benefits of ADVISE using a case study. To produce quantitative model-based security metrics, we have implemented the ADVISE method in a tool that facilitates user input of system and adversary data and automatically generates executable models. © 2011 IEEE.		LeMay, E.; Ford, M.D.; Keefe, K.; Sanders, W.H.; Muehrcke, C.	Proceedings of the 2011 8th International Conference on Quantitative Evaluation of Systems, QEST 2011					Excluded	Excluded	new_screen			2		2011				
63		ModelGuidance	Modelling and distributing individual and collective activities in a workflow system	This paper deals with the modelling and the dispatching of individual and collective work in a workflow system. It particularly, focuses on workflow processes of organizations where actors are organized by teams. In such a system, participants must interact with each other, coordinate, exchange informations, cooperate and synchronize their work. To do that, it is essential to define firstly, the way of dispatching individual and collective parts of work to all participants in the system. We describe some static and dynamic aspects of the system and we propose a simple algorithm for managing human resources at the runtime of the process. The algorithm aims to balance the workload between human actors in the system, it is based on a workload criteria computed according to the activities durations.		Boukhedouma, S.; Alimazighi, Z.	ICEIS 2008 - Proceedings of the 10th International Conference on Enterprise Information Systems					Excluded	Excluded	new_screen			2		2008				
64		ModelGuidance	Modeling of architectures with UML panel	A critical level of abstraction in the modeling of a large, complex system is its architecture. At an architectural level one models the principal system elements and their interaction. Architectural models are typically used to provide an intellectually tractable, birds-eye view of a system and to permit design-time reasoning about system-level concerns such as performance, reliability, portability, and conformance to external standards and architectural styles. In practice most architectural descriptions are informal documents. They are usually centered on box-and-line diagrams, with explanatory prose. Visual conventions are idiosyncratic, and usually project specific. As a result, architectural descriptions are only vaguely understood by developers, they cannot be analyzed for consistency or completeness, they are only hypothetically related to implementations, their properties cannot be enforced as a system evolves, and they cannot be supported by tools to help software architects with their tasks. There exist several architecture description languages, but we are interested in the use of UML. We aim to identify requirements on architectural modeling and how different modeling concepts of UML meet these requirements. This paper is not intended as a critique of the UML but as a discussion of approaches to modeling architectures that have been tried, more or less successfully. © Springer-Verlag Berlin Heidelberg 2000.		Weigert, T.; Garlan, D.; Knapman, J.; Møller-Pedersen, B.; Selic, B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2000				
65		ModelGuidance	Describing software specification by combining SysML with the B method	This paper shows a methodology to describe software specifications combining SysML with the B method. Modeling languages of a system such as SysML do not guarantee the correctness of the specification. In addition, formal methods including the B method are generally difficult to use for describing software specifications from ambiguous requirements at the start of the development, because it is not easy for software developers to denote the formal notations. Our methodology redeems those shortcomings by iterating processes which translate SysML diagrams to the abstract machine notations of the B method. At the last part of this paper, we showed the effectiveness of our methodology with an example. © 2014 IEEE.		Kinoshita, S.; Nishimura, H.; Takamura, H.; Mizuguchi, D.	Proceedings - IEEE 25th International Symposium on Software Reliability Engineering Workshops, ISSREW 2014					Excluded	Excluded	new_screen			2		2014				
66		ModelGuidance	Automatic classification of uml class diagrams using deep learning technique: Convolutional neural network	Unified Modeling Language (UML) includes various types of diagrams that help to study, analyze, document, design, or develop any software efficiently. Therefore, UML diagrams are of great advantage for researchers, software developers, and academicians. Class diagrams are the most widely used UML diagrams for this purpose. Despite its recognition as a standard modeling language for Object-Oriented software, it is difficult to learn. Although there exist repositories that aids the users with the collection of UML diagrams, there is still much more to explore and develop in this domain. The objective of our research was to develop a tool that can automatically classify the images as UML class diagrams and non-UML class diagrams. Earlier research used Machine Learning techniques for classifying class diagrams. Thus, they are required to identify image features and investigate the impact of these features on the UML class diagrams classification problem. We developed a new approach for automatically classifying class diagrams using the approach of Convolutional Neural Network under the domain of Deep Learning. We have applied the code on Convolutional Neural Networks with and without the Regularization technique. Our tool receives JPEG/PNG/GIF/TIFF images as input and predicts whether it is a UML class diagram image or not. There is no need to tag images of class diagrams as UML class diagrams in our dataset. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.		Gosala, B.; Chowdhuri, S.R.; Singh, J.; Gupta, M.; Mishra, A.	Applied Sciences (Switzerland)					Excluded	Excluded	new_screen			2		2021				
67		ModelGuidance	Model-driven performance prediction of systems of systems	Systems of systems exhibit characteristics that pose difficulty in modelling and predicting their overall performance capabilities, including the presence of operational independence, emergent behaviour, and evolutionary development. When considering systems of systems within the autonomous defence systems context, these aspects become increasingly critical, as constraints on the performance of the final system are typically driven by hard constraints on space, weight and power. System execution modelling languages and tools permit early prediction of the performance of model-driven systems; however, the focus to date has been on understanding the performance of a model rather than determining whether it meets performance requirements, and only subsequently carrying out analysis to reveal the causes of any requirement violations. Moreover, such an analysis is even more difficult when applied to several systems cooperating to achieve a common goal—a system of systems. In this article, we propose an integrated approach to performance prediction of model-driven real-time embedded defence systems and systems of systems. Our architectural prototyping system supports a scenario-driven experimental platform for evaluating model suitability within a set of deployment and real-time performance constraints. We present an overview of our performance prediction system, demonstrating the integration of modelling, execution and performance analysis, and discuss a case study to illustrate our approach. © 2016, Springer-Verlag Berlin Heidelberg.		Falkner, K.; Szabo, C.; Chiprianov, V.; Puddy, G.; Rieckmann, M.; Fraser, D.; Aston, C.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2018				
68		ModelGuidance	High-level abstraction modeling for detailed analysis of avionic real-time systems	"The main objective in the MDE1 approach is to consider all handled items as models (they are ""first class"" entities). Then the second objective is to automate the integration of heterogeneous models, thanks to efficient model transformation techniques. In the field of avionic real-time and embedded systems, two modeling languages are now standardized and widely used. The UML2 profile for MARTE3, version β3 is standardized by the OMG4 and the AADL5 v2.0 is standardized by the SAE6. The MARTE profile is used in the first steps of the analysis for more abstract models (e.g. independent of the platforms), the AADL is more used in last steps of the design phase, in order to generate efficient code, mainly for the execution platforms. This paper focuses on the growing role of high-level abstraction modeling in the detailed analysis phase through an intensive the use of the MARTE profile. © 2010 IEEE."		Perseil, I.; Pautet, L.	17th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, ECBS 2010					Excluded	Excluded	new_screen			2		2010				
69		ModelGuidance	Model Matching for Trace Link Generation in Model-Driven Software Development	With the advent of Model-driven Software Engineering, the advantage of generating trace links between source and target model elements automatically, eases the problem of creating and maintaining traceability data. Yet, an existing transformation engine as in the above case is not always given in model-based development, (i.e. when transformations are implemented manually) and can not be leveraged for the sake of trace link generation through the transformation mapping. We tackle this problem by using model matching techniques to generate trace links for arbitrary source and target models. Thereby, our approach is based on a novel, language-agnostic concept defining three similarity measures for matching. To achieve this, we exploit metamodel matching techniques for graph-based model matching. Furthermore, we evaluate our approach according to large-scale SAP business transformations and the ATL Zoo.		Grammel, Birgit; Kastenholz, Stefan; Voigt, Konrad	Proceedings of the 15th International Conference on Model Driven Engineering Languages and Systems					Excluded	Excluded	new_screen			2		2012				
70		ModelGuidance	Extending SysML with Refinement and Decomposition Mechanisms to Generate Event-B Specifications	SysML, dedicated to system design, provides graphical models. One of the strengths of these graphical models is that they can be validated by domain experts. However, the semantics of SysML is given in natural language, which does not allow formal and rigorous reasoning necessary for critical systems for which safety and security are major concerns. Our project aims at modeling and verifying high-level architectures of critical complex systems, in particular railways systems, that must be validated by domain experts. For that, we propose to combine SysML and the Event-B formal method. To master the complexity of such systems, Event-B provides refinement and decomposition mechanisms that allow a step-by-step design and make proofs easier to discharge. This paper proposes to extend SysML with safety relevant Event-B mechanisms that enable an automatic translation from SysML diagrams to Event-B specifications. We focus on diagrams that facilitate high-level architecture design, namely package, block-definition, state-transition and sequence diagrams. © 2022, Springer Nature Switzerland AG.		Bougacha, R.; Laleau, R.; Collart-Dutilleul, S.; Ayed, R.B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2022				
71		ModelGuidance	The enrichment of BPMN business process model with SBVR business vocabulary and rules	Aspects of business process models' integration with structured business vocabularies & rules are analyzed in this paper. Despite the fact that business process (BP) modeling has its long-lasting traditions in various areas of application, this discipline remains in the constant process of improvement and issue-solving. The paper deals with one of such issues, namely, the existing gap between BP modeling and specification of business vocabularies & rules. In not dealt appropriately, this may lead to some issues while developing, reading and interpreting business models themselves, also to miscommunication issues within and among the organizations dependent on such models, and so on. The gap could be diminished by the means of integration of BP models with business vocabularies & rules; the paper presents some argumentation to back such statements. Later, basic principles of the approach for BPMN BP model integration with SBVR business vocabulary & rules are presented and briefly described in this paper. © 2012 SRCE UNIV.		Skersys, T.; Tutkute, L.; Butleris, R.	Proceedings of the International Conference on Information Technology Interfaces, ITI					Excluded	Excluded	new_screen			2		2012				
72		ModelGuidance	Model-driven design plus artificial intelligence for wireless sensor networks software development	To date, software development for wireless sensor network nodes is still characterized by low-level ad-hoc programming to a large extent. This short-paper argues for a methodologically more systematic approach on the basis of Model-Driven Engineering with CASE-Tool support, in combination with AI-based design choice optimizations during the MDE-steps of model-refinement and information-enrichment. Our work in this project is ongoing. © 2011 ACM.		Mülders, P.; Gruner, S.; Thang, N.X.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2011				
73		ModelGuidance	MPLM - MaTeLo Product Line Manager: [Relating Variability Modelling and Model-Based Testing]	The diversity of requirements elicited from different customers leads to the development of many variants. Furthermore, compliance with safety standards as mandated for safety-critical systems requires high test efforts for each variant. Model-based testing aims to reduce test efforts by automatically generating test cases from test models.In this paper, we introduce variability management to usage models, a widely used model-based testing formalism. We present an approach that allows to derive usage model variants from a desired set of features and thus generate test cases for each variant. The approach is integrated in the industrial model-based testing tool chain MaTeLo and exemplified using an industrial case study from the aerospace domain.		Samih, Hamza; Bogusch, Ralf	Proceedings of the 18th International Software Product Line Conference: Companion Volume for Workshops, Demonstrations and Tools - Volume 2					Excluded	Excluded	new_screen			2		2014				
74		ModelGuidance	Formal modeling of space shuttle software change requests using SCR	This paper describes a feasibility study into the use of a formal requirements modeling method (SCR) to assist with Independent Verification and Validation of change requests for Space Shuttle flight software. The goal of the study was to determine whether a formal modeling technique could automate some of the manual analysis tasks performed on change requests, including consistency checking. To analyze the change request, the key part of the original functionality was modeled in SCR. The model was then updated to reflect the proposed changes. Tool support was used to perform consistency checking and to validate the model against domain properties. The study showed that as an analysis tool, formal modeling offers some advantages over inspection-based approaches. However, the problem of analyzing change requests is sufficiently different from other requirements modeling tasks that some specialist tools will be needed. The paper ends with a discussion of the demands of these needs.		Wiels, Virginie; Easterbrook, Steve	Proceedings of the IEEE International Conference on Requirements Engineering					Excluded	Excluded	new_screen			2		1999				
75		ModelGuidance	UML-based modeling of OPC UA address spaces for power systems	Automation technologies are a key enabler to realize the vision of so called Smart Grids. They realize the interface between the power system infrastructure that is used to reliably deliver electric power and the information- and communication infrastructure that is utilized to exchange digital information. Thus, analyzing if and how existing automation technologies can be adopted for the energy domain is of key importance. Furthermore, Smart Grids will be highly heterogeneous systems having to address various interoperability issues and thus have to deal with standardization. Therefore, this paper proposes the integration of the established IT-modeling language UML with the OPC Unified Architecture, which is a future-oriented automation standard (and already established in industry automation). It will be explained how UML-models can be used to generate Address Spaces in general and examples will be given introducing the generation of Address Spaces based on Smart Grid semantics in particular. © 2013 IEEE.		Rohjans, S.; Piech, K.; Lehnhoff, S.	Proceedings - 2013 IEEE International Workshop on Intelligent Energy Systems, IWIES 2013					Excluded	Excluded	new_screen			2		2013				
76		ModelGuidance	A models@runtime framework for designing and managing Service-Based Applications	Coordinating the configurations of Services, Orchestrations, Execution Platform and Infrastructure layers in a Service-Based environment is a significant challenge for software industry. In recent years, it has become even more difficult, because infrastructure solutions such as AmazonEC2, Cloudstack or RackSpace have increasingly rich capabilities, allowing for example, the infrastructure/platform/application dynamic adaptations. To address this challenge, in the context of the S-Cube Network of Excellence, we have proposed a domain specific modelling language to describe the whole Service-Based Applications layers entities using a models@runtime-based approach to cover the life-cycle of such applications. Our approach allows (i) to keep a representation of all the layers of a services-based applications, (ii) to coordinate the cross-layer reconfiguration and adaptations and (iii) to provide a support for infrastructure elasticity and (re)configuration to meet the resource requirements and some applications-specific constraints. The approach is implemented by a framework, named Kevoree. This paper summarizes the main concepts used in Kevoree and the main features designed in the context of the S-Cube project. © 2012 IEEE.		Daubert, E.; Fouquet, F.; Barais, O.; Nain, G.; Sunye, G.; Jezequel, J.-M.; Pazat, J.-L.; Morin, B.	2012 1st International Workshop on European Software Services and Systems Research - Results and Challenges, S-Cube 2012 - Proceedings					Excluded	Excluded	new_screen			2		2012				
77		ModelGuidance	Automated prioritization of metrics-based design flaws in UML class diagrams	The importance of software architecture in software development prolongs throughout the entire software life cycle. This is because quality of the architectural design defines the structural aspects of the system that are difficult to change, and hence will affect most of the subsequent development and maintenance activities. This paper considers software design flaws (related to the system structure) and not flaws identified at run time (by testing). These design flaws are akin to what is described in the literature as anti-patterns, bad smells or rotting design. Recently, two tools that have been developed for quality assurance of software designs represented in the UML notation: SDMetrics and Metric View. However these tools are not considered practical because they report many design flaws which are not considered by developers (false positives). This paper explores an approach that tries to identify which design flaws should be considered important and which are not. To this end, we propose an approach for automated prioritization of software design flaws (BX approach), to facilitate developers to focus on important design flaws more effectively. We designed and implemented a tool (PoSDef) that implements this approach. The BX approach and the PoSDef tool have been validated using two open source projects and one large industrial system. Our validation consists of comparing our approach and tool with the existing design flaw tools. The evaluation has shown that the proposed approach could facilitate developers to identify and prioritize important design flaws effectively. © 2014 IEEE.		Chaudron, M.R.V.; Katumba, B.; Ran, X.	Proceedings - 40th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2014					Excluded	Excluded	new_screen			2		2014				
78		ModelGuidance	Managing organisational system evolution through model-based systems engineering approaches	Modern systems engineering projects have moved from the development of new virgin, standalone products, to the upgrade and adaptation of existing systems to new capabilities. Enterprise systems are in a state of flux as new capabilities and improvements are implemented over time. They are characterized by complex technology acquisition and supply chains, variable, overlapping timescales, and numerous asset management and maintenance processes all whilst dealing with the pressures of minimal system downtime, maintaining operability and safety, and providing a reliable service. The organisations within the enterprise delivering these capabilities will evolve over time in order to meet these challenges. Whilst enterprise architectures are commonly used to manage the complexity and plan/design the strategic, operational and technical views in detail, attention to the holistic, organisational aspects is oft considered to a lesser degree. This paper demonstrates how Model-Based Systems Engineering principles can be used to manage the complexity of the introduction of new capabilities from an integrated organisational standpoint. © 2020 IEEE		Kennedy, G.; Shirvani, F.; Scott, W.; Campbell, P.	SYSCON 2020 - 14th Annual IEEE International Systems Conference, Proceedings					Excluded	Excluded	new_screen			2		2020				
79		ModelGuidance	Real-world semantics of conceptual models	Conceptual modelling is the addition of more real-world semantics to the computations performed by a computer. It is argued that in a proper engineering approach to computing, three kinds of conceptual modelling need to be distinguished,(1) modelling a software solution, (2)modelling the domain in which it operates, and (3) modelling the impact of the software solution on the domain. Nearly 40 years of research in conceptual modelling has yielded a wealth of concepts and notations for conceptual modelling of the second variety, which we call domainoriented. A summary and framework of these results are presented. Conceptual modelling of the third variety, which we call impact-oriented, has been developed less. A framework for this is provided too, and promising directions for impact-oriented conceptual modelling are identified. © 2011 Springer-Verlag Berlin Heidelberg.		Wieringa, R.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2011				
80		ModelGuidance	Modeling the hybrid ERTMS/ETCS level 3 standard using a formal requirements engineering approach	This paper presents a specification of the hybrid ERTMS/ETCS level 3 standard in the framework of the case study proposed for ABZ2018. The specification is based on methods and tools, developed in the ANR FORMOSE project, for the modeling and formal verification of critical and complex system requirements. The requirements are specified with SysML/KAOS goal diagrams and are automatically translated into B System specifications, in order to obtain the architecture of the formal specification. Domain properties are specified by ontologies with the SysML/KAOS domain modeling language, based on OWL and PLIB. Their automatic translation completes the structural part of the formal specification. The only part of the specification that must be manually completed is the body of events. The construction is incremental, based on refinement mechanisms that exist within the involved methods. Regarding the case study, the formal specification includes seven refinement levels and all proofs have been discharged under the Rodin platform. © 2019, Springer-Verlag GmbH Germany, part of Springer Nature.		Tueno Fotso, S.J.; Frappier, M.; Laleau, R.; Mammar, A.	International Journal on Software Tools for Technology Transfer					Excluded	Excluded	new_screen			2		2020				
81		ModelGuidance	Interactive model driven graphical user interface generation	The current multitude of devices with different screen resolutions or graphic toolkits requires different user interfaces (UIs) for the same application. Model Driven UI Development solves this problem by transforming one target device independent specification into several target device dependent UIs. However, the established Model Driven Architecture (MDA) transformation process is not flexible enough to fully support all requirements of UI development. The vision of this thesis is to bridge the gap between the capabilities of model driven software engineering and the requirements of UI development. This work introduces an interactive model driven UI development approach that gives the designer control over the UI during the development process. Additional interactive support enables the designer to make informed design decisions which will ultimately lead to more satisfying UIs. © 2010 ACM.		Raneburger, D.	EICS'10 - Proceedings of the 2010 ACM SIGCHI Symposium on Engineering Interactive Computing Systems					Included	Excluded	new_screen			2		2010				
82		ModelGuidance	Engineering models and software quality models: An example and a discussion	"The paper compares the models used for software quality evaluation to the modelling approach of other engineering fields. The conclusion is that, while large efforts have been devoted to the definition of measurable attributes and related measures, product models specifically developed for measuring quality characteristics are until now not sufficiently explored. We explore the concept of ""quality-oriented specialized product models"" and we claim that this is an important ingredient for an engineering approach to the software quality measurement. We describe an example of this type of models for measuring the security of a specific type of copy protection mechanisms. The model forecasts the amount of time a hypothetical attacker would need to break the protection. Copyright 2008 ACM."		Salvaneschi, P.; Piazzalunga, U.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2008				
83		ModelGuidance	A model driven framework for portable cloud services	Cloud Computing is an evolving technology as it offers significant benefits like pay only for what you use, scale the resources according to the needs and less in-house staff and resources. These benefits have resulted in tremendous increase in the number of applications and services hosted in the cloud which inturn has resulted in increase in the number of cloud providers in the market. Cloud service providers have a lot of heterogeneity in the resources they use. They have their own servers, different cloud infrastructures, API's and methods to access the cloud resources. Despite its benefits; lack of standards among service providers has caused a high level of vendor lock-in when a software developer tries to change its cloud provider. In this paper we give an overview on the ongoing and current trends in the area of cloud service portability and we also propose a new cloud portability platform. Our new platform is based on establishing feature models which offers the desired cloud portability. Our solution DSkyL uses feature models and domain model analysis to support development, customization and deployment of application components across multiple clouds. The main goal of our approach is to reduce the effort and time needed for porting applications across different clouds. This paper aims to give an overview on DSkyL. Copyright © 2016 Institute of Advanced Engineering and Science. All rights reserved.		Vijaya, A.; Neelanarayanan, V.	International Journal of Electrical and Computer Engineering					Excluded	Excluded	new_screen			2		2016				
84		ModelGuidance	An approach for the semi-automated derivation of UML interaction models from scenario-based runtime tests	Documenting system behavior explicitely using graphical models (e.g. UML activity or sequence diagrams) facilitates communication about and understanding of software systems during development or maintenance. Creating graphical models manually is a time-consuming and often error-prone task. Deriving models from system-execution traces, however, suffers from the problem of model-size explosion. We propose a model- driven approach for deriving behavior documentation in terms of UML interaction models from runtime tests in a semi-automated manner. Key to our approach is leveraging the structure of scenario-based tests for model and diagram derivation. Each derived model represents a particular view on the test-execution trace. This way, one can benefit from derived graphical models while making the resulting model size manageable. In this paper, we define conceptual mappings between a test-execution trace metamodel and the UML2 metamodel. In addition, we provide means to turn selected details of test specifications and of testing environment into views on the test-execution trace (scenario-test viewpoint). The feasibility of our approach is demonstrated by a prototype implementation (KaleidoScope), which builds on an existing software-testing framework (STORM) and model transformations (Eclipse M2M/QVTo).		Haendler, T.; Sobernig, S.; Strembeck, M.	ICSOFT-EA 2015 - 10th International Conference on Software Engineering and Applications, Proceedings; Part of 10th International Joint Conference on Software Technologies, ICSOFT 2015					Excluded	Excluded	new_screen			2		2015				
85		ModelGuidance	Model-driven engineering for development-time QoS validation of Component-based software systems	"Model-driven engineering (MDE) techniques are increasingly being used to address many of the development and operational lifecycle concerns of large-scale component-based systems. One such concern lacking significant research deals with the validation of quality-of-service (QoS) properties of component-based systems throughout their development lifecycle instead of waiting until system integration time, which is very late and can be detrimental to project schedules and costs. This paper describes our novel MDE-based solution to address this challenge. At the core of our solution approach are (1) a set of domain-specific modeling languages that allow us to mimic component ""business logic,"" and (2) a generative programming framework that synthesizes empirical benchmarking code for system emulation and continuous QoS evaluation. © 2007 IEEE."		Hill, J.H.; Tambe, S.; Gokhale, A.	Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems					Excluded	Excluded	new_screen			2		2007				
86		ModelGuidance	Modeling urban road risky driving behaviors in China with multi-agent microscopic traffic simulation	"Typical driving behaviors such as car-following and lane-changing can be described based on common concepts. But these behaviors could be different from driver to driver, from nation to nation due to different individual influencing factors (e.g. age, gender, driving age, mood) and situational influencing factors (e.g. weather, congestion, respect for law). Studies show that drivers who have higher level of ""driving discourtesy"" (i.e rudeness and aggressiveness) have higher probability of performing risky driving behaviors including traffic rule violations. In this paper, we propose a model named Driving Discourtesy Model (DDM). In this model, a new indicator is defined to measure the ""driving discourtesy"". With a probability distribution method, we are able to estimate the probability of performing risky driving behaviors of each vehicle based on a vehicle's individual influencing factors and situational factors. A multi-agent traffic simulation is developed to test DDM. The experiment results show that risky driving behaviors including speeding, lane-changing for taking speed advantages and driving on hard shoulder can be simulated effectively using DDM. © 2014 IEEE."		Li, X.; Bai, R.; Siebers, P.-O.; Wagner, C.	2014 17th IEEE International Conference on Intelligent Transportation Systems, ITSC 2014					Excluded	Excluded	new_screen			2		2014				
87		ModelGuidance	Modeling and simulating Chinese cross-border e-commerce: an agent-based simulation approach	Chinese cross-border e-commerce has become the largest in the world, overtaking US e-commerce and representing about 40% of total global e-commerce spending in 2018. This market is highly complex, uncertain, and poorly understood. Surveys and statistics have been used to characterise it, but new approaches are required to better understand its complexity. To address this gap, we present an agent-based model of Chinese cross-border e-commerce. For a realistic representation of the buyers’ decision-making mechanism and some elements of their communication, including word of mouth (WOM), we use endorsements theory, and a survey is used to specify the model. The aim of the study is twofold: (1) to present an agent-based simulation (ABS) model of the Chinese cross-border e-commerce market; and (2) to illustrate the potential of the model to explore future possible configurations of the market and to guide stakeholders’ decision making. © Operational Research Society 2022.		Terán, O.; Leger, P.; López, M.	Journal of Simulation					Excluded	Excluded	new_screen			2		2022				
88		ModelGuidance	Partial behaviour modelling: Foundations for incremental and iterative model-based software engineering	Rigorous modelling of the intended behaviour of software intensive systems has been shown to be successfull in uncovering requirements and design flaws. However, the impact that behaviour modelling has had among practitioners is limited. The construction of behaviour models remains a difficult and laborious task that requires significant expertise. In addition, traditional approaches to behaviour models require complete descriptions of the system behaviour up to some level of abstraction. This completeness assumption is limiting in the context of software development process best practices which include iterative development, adoption of use-case and scenario-based techniques and viewpoint- or stakeholder-based analysis; practices which require modelling and analysis in the presence of partial information about system behaviour. Our aim is to support the iterative and incremental construction of behaviour models by means of construction, composition and analysis of partial, heterogeneous, yet formal, descriptions of behaviour. In this talk we discuss how modal transitions systems can provide the basis for such support and present some of the model synthesis and composition techniques we have developed. © 2009 Springer-Verlag Berlin Heidelberg.		Uchitel, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
89		ModelGuidance	Automatic Configuration of Video-Surveillance Applications: A Model-Driven Experience	The number of video-surveillance applications has increased in the last years due to the increasing security requirements, especially in public buildings. In that sense, new types of applications have appeared with new services. As an example, digital applications allow the possibility of remotely controlling the video through internet. However, most of these applications are implemented ad-hoc. They are very tied to the programming level reducing thus their reusability, configurability and maintainability. In this setting, we propose a Model-Driven approach to develop video-surveillance applications. This approach is based on the utilization of a Domain Specific Language (DSL) that allows the design of these applications at the modeling level. The utilization of models enhance the reusability of the services provided by the systems but also aims at managing their variability making them highly configurable. The models built based on this DSL are then used by model transformations that are able to automatically generate the configuration of the applications so that they may be dynamically reconfigured. Moreover, the approach provides different versions of the system, namely a standalone application, a web application or an application for mobile devices. All these applications allow the remote control of the video installation and the integration of external services such as SMS alerts, vehicles' plate recognition or smart home control. © 2015 IEEE.		Conejero, J.M.; Hernández, J.; Clemente, P.J.; Echeverría, R.R.; Preciado, J.C.; Figueroa, F.S.	IEEE Latin America Transactions					Excluded	Excluded	new_screen			2		2015				
90		ModelGuidance	Cost Analysis of Collaboration Interfaces in an Interdisciplinary Engineering Workflow: A Model Based Approach Using BPMN+I	In multi-team engineering projects with multi-team collaborations and frequent changes, decision-makers can hardly keep an overview of cost. Standard decision support in industry focuses either solely on workflow cost or the performance of multi-team labor, leaving out a holistic view. This paper proposes an approach to analyze cost at multi-team work interfaces using the Business Process Modeling Notation (BPMN). Such interfaces are crucial for the success of an interdisciplinary engineering effort, representing frequent interactions of different teams (multi-team systems) during one working tasks like the interaction of mechanical and electrical engineering teams choosing sensors fulfilling both the mechanical and electrical requirements. The approach is evaluated using an industrial use case with two different multi-team interface alternatives: a human expert versus an IT-based assistance system. To support decision-making whether the IT-based solution with its software license costs is beneficial the interface cost of both alternatives are assessed exemplarily. © 2021 IEEE.		Vogel-Heuser, B.; Herrmann, T.; Zou, M.	2021 IEEE International Conference on Industrial Engineering and Engineering Management, IEEM 2021					Excluded	Excluded	new_screen			2		2021				
91		ModelGuidance	SimulML: A DSML for simulating SysML models	SysML language offers strong capabilities to specify, analyze and design complex systems. However, the operational semantics of the diagrams is not precisely defined, which affects the implementation of SysML models. Furthermore, the SysML models are insufficient for system verification addressing various stakeholders' requirements. This aspect is managed by the simulation process. As system modeling and simulation analysis are used during the system development process, its efficiency is considerably reduced. This study integrates SysML modeling and simulation, through a defined intermediate domain-specific language, namely Simulation Modeling Language, which is intended to link SysML and simulation environments. The defined intermediate modeling language permits modeling complex systems via specification of its syntax and semantics, using simulation principles and constructs, in addition to bridging the gap between SysML models and different simulation environments. Utilizing the defined intermediate language, the proposed integration approach is facilitated by the potential and strength of both SysML modeling and simulation. Moreover, this integration approach is based on the concepts of Model-Driven Engineering ensuring an efficient passage between different models. © 2019. The Korean Institute of Information Scientists and Engineers.		Chabibi, B.; Nassar, M.; Anwar, A.	Journal of Computing Science and Engineering					Excluded	Excluded	new_screen			2		2019				
92		ModelGuidance	Model-based computing: Developing flexible machine control software	In the conventional approach to simulating, controlling, and diagnosing a real-world physical system, engineers typically analyze the interactions of the system's components and processes, and then develop new and dedicated code for that system. Instead, building on principles from model-based reasoning and constraint programming research, we propose an integrated approach to software development we call model-based computing. We present this approach in the context of control software for modular electro-mechanical systems. Our approach is used in commercial systems and has been shown to both simplify the development of machine control software, and make the software and the controlled systems more flexible and effective. In this paper, building on a generic control software architecture, we first develop a domain theory with corresponding modeling language. Models capture a system's capabilities from first principles and independently of the control task. We then introduce modeling technology using concurrent constraint programming, which gives our modeling approach a sound and powerful theoretical foundation. Constraint programming also brings with it a host of generic reasoning techniques such as deduction, abduction, and search, and we show how such techniques can be applied to the model-based configuration and control of our systems. We end with a review of how model-based computing can be extended to other tasks such as design and testing. We believe that together, models, task architecture, and reasoners offer a compelling framework for building software for computationally controlled systems. © 1999 Elsevier Science B.V. All rights reserved.		Fromherz, M.P.J.; Saraswat, V.A.; Bobrow, D.G.	Artificial Intelligence					Excluded	Excluded	new_screen			2		1999				
93		ModelGuidance	Extending the UML use case metamodel with behavioral information to facilitate model analysis and interchange	Use case diagrams are primary artifacts used for modeling functional requirements. Use case diagrams are part of the Unified Modeling Language (UML) suite of models that has become a de facto standard for modeling object oriented languages. Each model in this suite is described by a metamodel that dictates its syntax and semantics. The use case diagram is considered the most controversial diagram in UML. Practitioners claim that the use case diagram cannot be used as a valuable artifact for requirement analysis. The main reason behind this concern is the lack of behavioral description of a use case depicted within the model. Quite a few extensions to the use case metamodel have been proposed in literature to incorporate behavioral aspect of a use case within the metamodel. All these extensions omit a few important features like generalization and most of them can only be used for model representation and cannot be used for model analysis and evaluation. In this paper, we propose an extension to the UML use case metamodel with use case behavior specification elements. The main objective of the proposed extension is to provide a complete metamodel for use case diagrams which includes representation for all its elements and relationships in a conflict-free manner and one that includes information for model analysis, evaluation, and interchange among modeling tools. In order to include all valuable information related to a use case, a number of use case representation templates were considered for the proposed extension. Simultaneously, to enable the use case models generated based on the proposed metamodel to be used for analysis, pertinent information related to model usage in analysis such as effort estimation, use case scheduling, and use case metrics evaluation were considered from published studies, tools, and paradigms and included within the proposed metamodel. © 2013, Springer-Verlag Berlin Heidelberg.		Misbhauddin, M.; Alshayeb, M.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2015				
94		ModelGuidance	Enhancing the quality of configurable process models using ontology languages	Variability management in business process aims at providing solutions to the redundancy problems and enhancing business process reuse. The most widely used approach in this context is the Configurable Process Model solution which consists in representing the variable and the fixed parts together in a unique model. These models become complex and incomprehensible with the increasing number of variants. Therefore, the quality of configurable process models is impacted. Nowadays, producing sound and valid process models still represents a concern for business process designers. Most of research work focus on syntactic quality of process variants. Our contribution consists of a novel method towards syntactic verification and semantic validation of configurable process models based on ontology languages. We define validation rules for assessing the quality of configurable process models. An example in the e-healthcare domain illustrates the main steps of our approach. © 2016.		El Faquih, L.; Fredj, M.	Proceedings of the 9th IADIS International Conference Information Systems 2016, IS 2016					Excluded	Excluded	new_screen			2		2016				
95		ModelGuidance	Security patterns modeling and formalization for pattern-based development of secure software systems	Pattern-based development of software systems has gained more attention recently by addressing new challenges such as security and dependability. However, there are still gaps in existing modeling languages and/or formalisms dedicated to modeling design patterns and the way how to reuse them in the automation of software development. The solution envisaged here is based on combining metamodeling techniques and formal methods to represent security patterns at two levels of abstraction to fostering reuse. The goal of the paper is to advance the state of the art in model and pattern-based security for software and systems engineering in three relevant areas: (1) develop a modeling language to support the definition of security patterns using metamodeling techniques; (2) provide a formal representation and its associated validation mechanisms for the verification of security properties; and (3) derive a set of guidelines for the modeling of security patterns within the integration of these two kinds of representations. © 2015, Springer-Verlag London.		Hamid, B.; Gürgens, S.; Fuchs, A.	Innovations in Systems and Software Engineering					ConflictExcluded	Excluded	new_screen			2		2016				
96		ModelGuidance	Engineering service oriented applications: From StPowla processes to SRML models	Service Oriented Computing is a paradigm for developing software systems as the composition of a number of services. Services are loosely coupled entities, can be dynamically published, discovered and invoked over a network. The engineering of such systems presents novel challenges, mostly due to the dynamicity and distributed nature of service-based applications. In this paper, we focus on the modelling of service orchestrations. We discuss the relationship between two languages developed under the Sensoria project: SRML as a high level modelling language for Service Oriented Architectures, and StPowla as a process-oriented orchestration approach that separates core business processes from system variability at the end-user's level, where the focus is towards achieving business goals. We also extend the current status of StPowla to include workflow reconfigurations. A fundamental challenge of software engineering is to correctly align business goals with IT strategy, and as such we present an encoding of StPowla to SRML. This provides a formal framework for StPowla and also a separated view of policies representing system variability that is not present in SRML. © 2008 Springer-Verlag Berlin Heidelberg.		Bocchi, L.; Gorton, S.; Reiff-Marganiec, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2008				
97		ModelGuidance	Model maintenance based in COBIT for the applications architecture in TOGAF enterprise architectures — MOMCAE	This paper presents concepts related to enterprise architecture (EA) and the rationale for how their practice has been gaining importance in organizations because of its integrating character and purpose of aligning Information Technology (IT) in business [1], [2]. An exercise in AE using frameworks that provide guidelines that guide its implementation. In TOGAF phase change management architecture establishes guidelines for maintenance of AE [3], however, the level of abstraction is high, does not identify the conditions that trigger the maintenance, or define how that should make [3]. This raises the need to formulate a maintenance model to structure the various elements that make up the process, contributing to have traceability of the different changes arising during the life horizon AE, thereby controlling the maintenance process.		S. M. R. Mantilla; O. L. Giraldo	2013 8th Computing Colombian Conference (8CCC)					Excluded	Excluded	new_screen			2		2013				
98		ModelGuidance	FBCM: Strategy modeling method for the validation of software requirements	The Balanced Scorecard has attracted great attention as a modeling technique for enterprise management strategy. However, the strategy model is inadequate for examining the validity of software requirements, because methods to evaluate strategy models have yet to be developed. Therefore, this paper proposes a fact based collaboration modeling methodology (FBCM). Based on the results of field observations and data of business processes, it is possible to develop enterprise strategy models from the viewpoints of collaboration between organizations. This paper describes the basic concepts and procedures of the methodology. The methodology has been evaluated via a case study of developing an SCM strategy of a Japanese automobile enterprise. The research project was conducted for seven months to develop a strategy for a complete car logistic process in which five different departments of the company are involved. The results show the effectiveness of the proposed methodology. © 2006 Elsevier Inc. All rights reserved.		Kokune, A.; Mizuno, M.; Kadoya, K.; Yamamoto, S.	Journal of Systems and Software					Excluded	Excluded	new_screen			2		2007				
99		ModelGuidance	Model Checking UML Activity Diagrams with SPIN	UML activity diagram describes the software internal activities. It is an important tool to model the dynamic behavior of software systems in the early software development. An approach to finding software vulnerabilities earlier by verifying UML activity diagrams with model checking technique is put forwarded in the paper. Firstly, the UML activity diagrams are converted into extended hierarchical automata (EHA). Then the EHA models are transformed in PROMELA model which is input of SPIN model checker. The correctness of the conversion process is showed in the simulation of the dining-philosophers problem with SPIN.		J. Li; J. Li; F. Zhang	2009 International Conference on Computational Intelligence and Software Engineering					Excluded	Excluded	new_screen			2		2009				
100		ModelGuidance	Approach for Modelling of Large Maritime Infrastructure Systems	Simulation studies for large infrastructure systems often consists of a large number of experiments. Performing all experiments, and the required adjustments to simulation models, is time consuming. In addition it is difficult to keep track of all performed experiments and compare the outcome of these experiments. These issues can be clearly identified by observing a simulation study at the port of Tanger which is performed in the traditional way. In this paper we describe an alternative approach for performing simulation studies regarding large maritime infrastructure systems. This approach includes the use of a domain specific template developed in the simulation environment Arena and a database tool that enables creation, evaluation and managing simulation experiments.		Valentin, Edwin C.; Steijaert, Sicco; Bijlsma, Rienk A.; Silva, Piero	Proceedings of the 37th Conference on Winter Simulation					Excluded	Excluded	new_screen			2		2005				
101		ModelGuidance	A novel approach to generate test cases from UML activity diagrams	Model-based test case generation is gaining acceptance to the software practitioners. Advantages of this are the early detection of faults, reducing software development time etc. In recent times, researchers have considered di®erent UML diagrams for generating test cases. Few work on the test case generation using activity diagrams is reported in literatures. However, the existing work consider activity diagrams in method scope and mainly follow UML 1:x for modeling. In this paper, we present an approach of generating test cases from activity diagrams using UML 2:0 syntax and with use case scope. We consider a test coverage criterion, called activity path cov-erage criterion. The test cases generated using our approach are capable of detecting more faults like synchronization faults, loop faults unlike the existing approaches.		Kundu, D.; Samanta, D.	Journal of Object Technology					Excluded	Excluded	new_screen			2		2009				
102		ModelGuidance	Automated test case generation for object oriented systems using UML object diagrams	To reduce the effort in identifying adequate test cases and to improve the effectiveness of testing process, a graph based method has been suggested to automate test case generation for Unified Modeling Language object diagram. The system files produced in the modeling exercise have been used to list all possible valid and invalid test cases that are required to validate the software. The diagrams are treated as graphs to generate the test cases. The effectiveness of the test cases has been evaluated using mutation testing. © 2011 Springer-Verlag.		Prasanna, M.; Chandran, K.R.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2011				
103		ModelGuidance	LSEbA: least squares regression and estimation by analogy in a semi-parametric model for software cost estimation	The importance of Software Cost Estimation at the early stages of the development life cycle is clearly portrayed by the utilization of several models and methods, appeared so far in the literature. The researchers' interest has been focused on two well known techniques, namely the parametric Regression Analysis and the non-parametric Estimation by Analogy. Despite the several comparison studies, there seems to be a discrepancy in choosing the best prediction technique between them. In this paper, we introduce a semi-parametric technique, called LSEbA that achieves to combine the aforementioned methods retaining the advantages of both approaches. Furthermore, the proposed method is consistent with the mixed nature of Software Cost Estimation data and takes advantage of the whole pure information of the dataset even if there is a large amount of missing values. The paper analytically illustrates the process of building such a model and presents the experimentation on three representative datasets verifying the benefits of the proposed model in terms of accuracy, bias and spread. Comparisons of LSEbA with linear regression, estimation by analogy and a combination of them, based on the average of their outcomes are made through accuracy metrics, statistical tests and a graphical tool, the Regression Error Characteristic curves.		Mittas, Nikolaos; Angelis, Lefteris	EMPIRICAL SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2010				
104		ModelGuidance	Model-based performance analysis of software architectures under uncertainty	Performance analysis is often conducted before achieving full knowledge of a software system, in other words under a certain degree of uncertainty. Uncertainty is particularly critical in the performance domain when it relates to values of parameters such as workload, operational profile, resource demand of services, service time of hardware devices, etc. The goal of this paper is to explicitly consider uncertainty in the performance modelling and analysis process. In particular, we use probabilistic formulation of parameter uncertainties and present a Monte Carlo simulation-based approach to systematically assess the robustness of an architectural model despite its uncertainty. In case of unsatisfactory results, we introduce refactoring actions aimed at generating new software architectural models that better tolerate the uncertainty of parameters. The proposed approach is illustrated on a case study from the e-Health domain. Copyright 2013 ACM.		Trubiani, C.; Meedeniya, I.; Cortellessa, V.; Aleti, A.; Grunske, L.	QoSA 2013 - Proceedings of the 9th International ACM Sigsoft Conference on the Quality of Software Architectures					Excluded	Excluded	new_screen			2		2013				
105		ModelGuidance	A new prediction model based on web access behavior	In order to predict network users’ access behavior accurately, this paper proposes a new prediction model based on Web access behavior. To improve prediction performance and reduce the state-space complexity, the model uses hybrid-order Markov chain structure and stores the sequences which share the same prefix. The problems that lowerorder models have poor prediction performance and higher-order models result in high state-space complexity are solved in this paper. Simulation results have shown that the prediction model based on Web access behavior can improve the precision and recall to some extent. © 2016 SERSC.		Ye, H.; Li, H.; Zhang, A.	International Journal of Grid and Distributed Computing					Excluded	Excluded	new_screen			2		2016				
106		ModelGuidance	Refinement Tree and Its Patterns: A Graphical Approach for Event-B Modeling	Event-B is a famous formal approach for verifying the requirements specification of safety-critical systems. Even though Event-B is a good formal approach which is successful in applying to several practical case studies, we think that additional methods are needed to apply it to the safety critical systems. Once we identify the requirements, Event-B allows us to formally describe the requirements. However, Event-B does not explicitly support analysing and elaborating requirements themselves. Although refinement mechanisms provided by Event-B is useful to stepwise model concrete requirements from abstract ones, guideline of the refinements is not provided. This paper aims to propose a refinement tree diagram and its refinement patterns to provide the requirements analysis and elaboration, and the guideline for Event-B. The diagram and the patterns are partially derived from the KAOS method, a goal-oriented requirements engineering method. The utility of the diagram and the patterns is successfully shown by applying them to three practical case studies. © Springer International Publishing Switzerland 2014.		Traichaiyaporn, K.; Aoki, T.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2014				
107		ModelGuidance	Identifying the weaknesses of UML class diagrams during data model comprehension	In this paper we present an experiment and two replications aimed at comparing the support provided by ER and UML class diagrams during comprehension activities by focusing on the single building blocks of the two notations. This kind of analysis can be used to identify weakness in a notation and/or justify the need of preferring ER or UML for data modeling. The results reveal that UML class diagrams are generally more comprehensible than ER diagrams, even if the former has some weaknesses related to three building blocks, i.e., multi-value attribute, composite attribute, and weak entity. These findings suggest that a UML class diagram extension should be considered to overcome these weaknesses and improve the comprehensibility of the notation. © 2011 Springer-Verlag.		Bavota, G.; Gravino, C.; Oliveto, R.; De Lucia, A.; Tortora, G.; Genero, M.; Cruz-Lemus, J.A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2011				
108		ModelGuidance	Multidisciplinary interface model for design of mechatronic systems	The design of mechatronic systems is based on the integration of several disciplines, such as mechanical, electrical and software engineering. How to achieve an integrated multidisciplinary design during the development process of mechatronic systems has attracted the attention of both academia and industry. However, solutions which can fully solve this problem have not been proposed by now. The concept of multidisciplinary interface represents the logical or physical relationship integrating the components of the mechatronic system or the components with their environment. As the design of mechatronic systems is a multidisciplinary work, the multidisciplinary interface model can be considered as one of the most effective supports to aid designers for achieving the integrated multidisciplinary design during the development process. The paper presents a multidisciplinary interface model for design of mechatronic systems in order to enable the multidisciplinary integration among design team members from different disciplines. On the one hand, the proposed model ensures the consistency of interface defined by the designers. On the other hand, it helps the designers to guarantee the different components integrate correctly. The interface model including three concepts: classification, data model and compatibility rules. The multidisciplinary interface model is implemented by a case study based on a 3D measurement system. (C) 2015 Elsevier B.V. All rights reserved.		Zheng, Chen; Le Duigou, Julien; Bricogne, Matthieu; Eynard, Benoit	COMPUTERS IN INDUSTRY					Included	Excluded	new_screen			2		2016				
109		ModelGuidance	Hierarchical semantic composition of biosimulation models using bond graphs	Simulating complex biological and physiological systems and predicting their behaviours under different conditions remains challenging. Breaking systems into smaller and more manageable modules can address this challenge, assisting both model development and simulation. Nevertheless, existing computational models in biology and physiology are often not modular and therefore difficult to assemble into larger models. Even when this is possible, the resulting model may not be useful due to inconsistencies either with the laws of physics or the physiological behaviour of the system. Here, we propose a general methodology for composing models, combining the energy-based bond graph approach with semantics-based annotations. This approach improves model composition and ensures that a composite model is physically plausible. As an example, we demonstrate this approach to automated model composition using a model of human arterial circulation. The major benefit is that modellers can spend more time on understanding the behaviour of complex biological and physiological systems and less time wrangling with model composition. © 2021 Shahidi et al. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.		Shahidi, N.; Pan, M.; Safaei, S.; Tran, K.; Crampin, E.J.; Nickerson, D.P.	PLoS Computational Biology					Excluded	Excluded	new_screen			2		2021				
110		ModelGuidance	Model based analysis process for embedded software product lines	Nowadays, embedded system development is increasing its complexity dealing with quality, cost and time-to-market among others. Quality attributes are an important issue to consider in embedded software development where time issues may be critical. Development paradigms such as Model Driven Development and Software Product Lines can be an adequate alternative to traditional software development and validation methods due to the characteristics of embedded systems. But for a proper validation and verification based on MARTE model analysis, all variability issues and critical quality attributes that take part in analysis must be properly modelled and managed. Therefore, a model analysis process for Model Driven Embedded Software Product Lines has been defined as some process lacks have been found. © 2011 ACM.		Belategi, L.; Sagardui, G.; Etxeberria, L.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2011				
111		ModelGuidance	Extending the UML to support evolution management	An overview is given of the ongoing development of a model-driven, repository-based approach to system evolution management. Focus is on the telecommunication IT system area. The approach is model-driven in the sense that data and object-oriented (OO) models are used to represent system implementations at various levels of abstractions.		France, R.; Bieman, J.M.; Trask, R.	IEEE International Conference on Software Maintenance, ICSM					Included	Excluded	new_screen			2		2001				
112		ModelGuidance	FMESP: Framework for the modeling and evaluation of software processes	Nowadays, organizations face with a very high competitiveness and for this reason they have to continuously improve their processes. Two key aspects to be considered in the software processes management in order to promote their improvement are their effective modeling and evaluation. The integrated management of these key aspects is not a trivial task, the huge number and diversity of elements to take into account makes it complex the management of software processes. To ease and effectively support this management, in this paper we propose FMESP: a framework for the integrated management of the modeling and measurement of software processes. FMESP incorporates the conceptual and technological elements necessary to ease the integrated management of the definition and evaluation of software processes. From the measurement perspective of the framework and in order to provide the support for the software process measurement at model level a set of representative measures have been defined and validated. © 2006 Elsevier B.V. All rights reserved.		García, F.; Piattini, M.; Ruiz, F.; Canfora, G.; Visaggio, C.A.	Journal of Systems Architecture					Excluded	Excluded	new_screen			2		2006				
113		ModelGuidance	RBD Model-Based Approach for Reliability Assessment in Complex Systems	Nowadays, system reliability performance represents a key issue in any advanced technology application in order to guarantee ambient, personnel, and system safety. The core of this paper is the reliability block diagram (RBD) generation with the aim of providing project engineers a reliability prediction in the early stages of industrial product development. This study is focused on gas turbine auxiliary systems; these systems include both mechanical items (in particular hydraulic devices such as valves, pumps, and filters) and electronic ones (e.g., sensors, instruments, control logic). Such complex structures are decomposed in single blocks and interconnections to establish their mutual relationship and achieve reliability performance of the whole system. The case study is one of the most important gas turbine auxiliary systems, the mineral lube oil console. The aim of this paper is to introduce a new approach to assess system reliability prediction in presence of redundant and stand-by architectures; redundancy is widely used in industrial applications since it is one of the best techniques to achieve fault tolerance. The proposed method led to the development of a dedicated software tool RBDesigner that semiautomatically generates a RBD starting from the sketch of thermal-hydraulic systems and provides the most important reliability parameters. The use of the proposed tool allows project engineers to reduce time delivery, reduce time for improvements, achieve reliability targets, and guarantee availability performance to the customers. The strengths of RBDesigner were finally validated by a comparison with other commercial software solutions. © 2007-2012 IEEE.		Catelani, M.; Ciani, L.; Venzi, M.	IEEE Systems Journal					Excluded	Excluded	new_screen			2		2019				
114		ModelGuidance	A conceptual modelling approach to product families and their evolution	Many industries exhibit a growing trend towards better customisation. This means a larger product variety, which can be implemented in the form of product families. The main idea of product families is to combine the economy of scale offered by mass-products with the high degree of adaptation to customer needs provided by project products, which necessitates a mechanism for capturing the variation in an effective manner. In this thesis, the focus is on the conceptual modelling of product families, particularly on the problems related to the evolution of product family descriptions and the product individuals created according to them. The main goal of this thesis is to find means for representing product families in information systems so that their evolution is adequately catered for. Investigation of the STEP standard, namely its part AP214 for the automotive industry, leads to observation of conceptual mismatch. That is, a need for new conceptual modelling methods, which cannot be provided directly by traditional databases or current PDM systems. A conceptual platform with a set of invariants was defined to capture the semantics for modelling product families and their individuals. Three detailed studies were conducted on the relation of schema and individuals of product families. The first detailed study concentrated on the instantiation process, the second on the modelling support for reconfiguration of product individuals and the third on elaborate modelling of product individuals with multiple levels of abstraction, which enables systematic support for the long lifetime and large variety of product individuals.		Mânnistö, T.	Acta Polytechnica Scandinavica Mathematics and Computing Series					Included	Excluded	new_screen			2		2000				
115		ModelGuidance	On the multi-agent modelling of complex knowledge society for business and management system using distributed agencies	This work is motivated by need for a model that addresses the study of Knowledge Society for Business and Management in situations where conventional analysis is insufficient in describing the intricacies of realistic social phenomena and social actors. We use Distributed Agency methodology that requires the use of all available computational techniques and interdisciplinary theories. We use Data Mining and Neuro-Fuzzy System as an approach to discover and assign rules on agents that represent real-world companies. The case study is based on several companies in the region of Baja California, México and in the policies they implement to achieve greater competitiveness based on the development of knowledge. © 2011 Springer-Verlag.		Ahumada-Tello, E.; Castañón-Puga, M.; Castro, J.-R.; Suarez, E.D.; Márquez, B.-Y.; Gaxiola-Pacheco, C.; Flores, D.-L.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2011				
116		ModelGuidance	A Comprehensive Framework for Learning Declarative Action Models	A declarative action model is a compact representation of the state transitions of dynamic systems that generalizes over world objects. The specification of declarative action models is often a complex hand-crafted task. In this paper we formulate declarative action models via state constraints, and present the learning of such models as a combinatorial search. The comprehensive framework presented here allows us to connect the learning of declarative action models to wellknown problem solving tasks. In addition, our framework allows us to characterize the existing work in the literature according to four dimensions: (1) the target action models, in terms of the state transitions they define; (2) the available learning examples; (3) the functions used to guide the learning process, and to evaluate the quality of the learned action models; (4) the learning algorithm. Last, the paper lists relevant successful applications of the learning of declarative actions models and discusses some open challenges with the aim of encouraging future research work. © 2022 AI Access Foundation.		Aineto, D.; Jiménez, S.; Onaindia, E.	Journal of Artificial Intelligence Research					Excluded	Excluded	new_screen			2		2022				
117		ModelGuidance	A Model Driven Method to Design and Analyze Secure Architectures of Systems-of-Systems	Context: Systems-of-Systems (SoS) is becoming the major paradigm for engineering next generation solutions such as smart cities, health-care and emergency response. However, SoS differentiating characteristics, such as emergent behavior, may introduce specific issues that make ensuring their security a critical challenge. Objective: the aim of this study is to investigate how Software Engineering approaches can be extended to model and analyze secure SoS solutions for discovering high impact cascading attacks at the architecture stage. Method: in order to achieve our objective, we followed the guidelines of Model Driven Engineering to propose a method, Systems-of-Systems Security (SoSSec), that comprises: (1) an architectural description language for modeling SoS and its vulnerabilities and (2) a MultiAgent System for security analysis of SoS architectures.		J. E. Hachem; T. A. Khalil; V. Chiprianov; A. Babar; P. Aniorte	2017 22nd International Conference on Engineering of Complex Computer Systems (ICECCS)					ConflictIncluded	Excluded	new_screen			2		2017				
118		ModelGuidance	Modelling and simulating early stopping of RCTs: A case study of early stop due to harm	Despite efforts from regulatory agencies (e.g. NIH, FDA), recent systematic reviews of randomised controlled trials (RCTs) show that top medical journals continue to publish trials without requiring authors to report details for readers to evaluate early stopping decisions carefully. This article presents a systematic way of modelling and simulating interim monitoring decisions of RCTs. By taking an approach that is both general and rigorous, the proposed framework models and evaluates early stopping decisions of RCTs based on a clear and consistent set of criteria. The framework allows decision analysts to generate and quickly answer what-if questions by simulating alternate trial scenarios. I illustrate the framework with a case study of an RCT that was stopped early due to harm. This was a trial of vitamin A supplement in relation to HIV transmission from mother-to-child through breastfeeding. © 2012 Copyright Taylor and Francis Group, LLC.		Stanev, R.	Journal of Experimental and Theoretical Artificial Intelligence					Excluded	Excluded	new_screen			2		2012				
119		ModelGuidance	Model-based verification of safety contracts	The verification of safety becomes crucial in critical systems where human lives depend on the correct functioning of such systems. Formal methods have often been advocated as necessary to ensure the reliability of software systems, albeit with a considerable effort. In any case, such an effort is cost-effective when verifying safety-critical systems. Safety requirements are usually expressed using safety contracts, in terms of assumptions and guarantees. To facilitate the adoption of formal methods in the safety-critical software industry, we propose the use of well-known modelling languages, such as UML, to model a software system, and the use of OCL to express the system safety contracts within UML. A UML model enriched with OCL constraints is then transformed to a Petri net model that enables to formally verify such safety contracts. We apply our approach to an industrial case study that models a train doors controller in charge of the opening and closing of train doors. Our approach allows to perform an early safety verification, which increases the confidence of software engineers while designing the system. © Springer International Publishing Switzerland 2015.		Gómez-Martínez, E.; Rodríguez, R.J.; Elorza, L.E.; Rezabal, M.I.; Earle, C.B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2015				
120		ModelGuidance	Modeling complexity in multi-modal adaptive survey systems	Modern survey data collection systems must balance cost and quality while supporting multiple response modes (paper, internet, telephone and personal interview) and addressing unpredictable respondent behavior. The next generation of survey systems utilizes adaptive methods to address these issues, but this may affect system behavior and introduces new issues. The paper discusses the development of a system model to analyze system behavior, determine the level of complexity present, define the conditions under which complex behaviors occur and explore approaches to manage complexity. The model, built in NetLogo, uses an agent representation for control, response mode management and the respondent. It not only represents control logic, particularly survey strategies, but also realistic stochastic respondent demographics and external influences which are independent of the system. The paper frames the problem as a potential complex adaptive system, discusses the approach and modeling of the system and reviews analysis of the model to date and its impacts on system design. Preliminary results indicate that basic system behavior is complicated (according to the Cynefin framework) but external influences can introduce unpredictable behaviors that make the system complex, requiring careful management in order to achieve system objectives. © 2014 The Authors. Published by Elsevier B.V.		Highland, F.	Procedia Computer Science					Excluded	Excluded	new_screen			2		2014				
121		ModelGuidance	Runtime software architecture model based on design hierarchy	On line system is hard to evolve dynamically because its runtime SA (Software Architecture) exists implicitly. A model of runtime SA based on design space is put forward, in the model runtime SA is expressed explicitly as first-class entity. The concept separation between abstract SA (ASA)on meta-layer and physical SA (PSA)on base-layer provides methods to take on SA views at diverse levels of abstraction and manage SA for users, thereby supports the reuse of software framework and component when system is running, and enhances system flexibility and expansibility. Then we have given an ADL (dynamic architecture description) of runtime software architecture model based on design space. Finally, we discuss dynamic structure reconfiguration issues. © 2007 IEEE.		Liu, C.-S.; Li, C.-Y.; Tang, J.-T.; Cheng, Y.	Proceedings of the Sixth International Conference on Machine Learning and Cybernetics, ICMLC 2007					Excluded	Excluded	new_screen			2		2007				
122		ModelGuidance	Knowledge exploitation through modeling, navigation and querying, an ontology-based integrated architecture	Knowledge Management has received great and ongoing attention during the last decades. The amount of knowledge and the interest for knowledge exploitation has been the spark for numerous attempts and proposals concerning knowledge representation, storage, usage, querying, acquisition and deduction. Ontologies offer an intuitive and expressive tool for these objectives. In this paper we propose an integrative approach and we present a software tool architecture that supports dynamic knowledge representation and exploration in a simple yet expressive manner, offering advanced querying and navigation abilities supporting the goal of knowledge exploitation and development, without presupposing deep modeling experience. © 2008 IEEE.		Kourlimpinis, G.; Gyftodimos, G.; Psarras, J.; Askounis, D.	Proceedings - 12th Pan-Hellenic Conference on Informatics, PCI 2008					Excluded	Excluded	new_screen			2		2008				
123		ModelGuidance	Requirements engineering for scientific computing: A model-based approach	Requirements engineering is crucial to the success of software development. However, in many scientific computing projects, traditional requirements engineering practices are ignored. We claim that there is a need for methodologies, which help capturing and managing requirements for these projects, to collaboratively develop scientific software with greater interoperability. We propose a model-based approach to elicit and manage requirements in scientific computing projects. The proposed approach is based on a meta-model in order to deal with the high complexity and frequent change in scientific software development. The meta-model also provides abstractions and notations targeted at scientific computing projects. The approach supports requirements engineering in these projects with the flexibility of easily managing requirements versioning, trace ability and communication across the boundary of disciplines. A tool prototype is implemented. To evaluate the proposed approach, we applied it in scientific computing projects. The approach has showed its advantages in the application and promotes software engineering in these projects. © 2011 IEEE.		Li, Y.; Harutunian, M.; Narayan, N.; Bruegge, B.; Buse, G.	Proceedings - 7th IEEE International Conference on e-Science Workshops, eScienceW 2011					Excluded	Excluded	new_screen			2		2011				
124		ModelGuidance	Abstract communication model for distributed systems	In some distributed and mobile communication models, a message disappears in one place and miraculously appears in another. In reality, of course, there are no miracles. A message goes from one network to another; it can be lost or corrupted in the process. Here, we present a realistic but high-level communication model where abstract communicators represent various nets and subnets. The model was originally developed in the process of specifying a particular network architecture, namely, the Universal Plug and Play architecture. But, it is general. Our contention is that every message-based distributed system, properly abstracted, gives rise to a specialization of our abstract communication model. The purpose of the abstract communication model is not to design a new kind of network; rather, it is to discover the common part of all message-based communication networks. The generality of the model has been confirmed by its successful reuse for very different distributed architectures. The model is based on distributed abstract state machines. It is implemented in the specification language AsmL and is used for testing distributed systems.		U. Glasser; Y. Gurevich; M. Veanes	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2004				
125		ModelGuidance	A reference model for simulating agile processes	Agile development processes are popular when attempting to respond to changing requirements in a controlled manner; however, selecting an ill-suited process may increase project costs and risk. Before adopting a seemingly promising agile approach, we desire to evaluate the approach's applicability in the context of the specific product, organization, and staff. Simulation provides a means to do this. However, in order to simulate agile processes we require both the ability to model individual behavior as well as the decoupling of the process and product. To our knowledge, no existing simulator nor underlying simulation model provide a means to do this. To address this gap, we introduce a process simulation reference model that provides the constructs and relationships for capturing the interactions among the individuals, product, process, and project in a holistic fashion - a necessary first step towards an agile-process evaluation environment.		De Silva, I.J.; Rayadurgam, S.; Heimdahl, M.P.E.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2015				
126		ModelGuidance	The modelling of information distribution system on the Android-based: Power outage application	Currently, delays in dealing with power outage by Nationl Electricity Company (PT PLN) largely due to ineffectiveness of information distribution system in the departement who receive complaints from customer and deliver it to the repair team in the fields. Therefore we need such a application for distribution of power outage information based on Android that capable of facilitating power outage service system in receiving problem report and deliver process of power outage evaluation which is ongoing or is done. Google Map Usage provides lots of assistance in mapping the nearest repair team location to where area of the power outage happened. The application is designed preceded by conducting analysis method of user requirement including analysis of the ongoing system, analysis of the findings of interview result as well as indentification of information necessity and system requirements. Designing focused on the Interface User Screen Design of mobile device and Web Admin Design. The research has resulted in a system modelling that capable of supporting the smooth running of distribution process of information on power outage in National Electricity Company. © 2005 - 2015 JATIT & LLS. All rights reserved.		Salman, A.G.; Yusuf, S.; Adrianus; Tantie, R.K.	Journal of Theoretical and Applied Information Technology					Included	Excluded	new_screen			2		2015				
127		ModelGuidance	CoGenIVE: Building 3D virtual environments using a model based user interface design approach	Although interactive virtual environments (IVE) have the capability to offer intuitive and easy to use interfaces, their creation is often a long and expensive process, in which specialists play a key role. The VR-DeMo approach investigates how the use of high-level specifications may help to overcome this problem: instead of coding an IVE using a low level programming language, high-level models are used. As such, a model-based process combines a series of models containing a mixture of manual and automatic processes. The usefulness of a model based process relies on available tool support. Supporting the VR-DeMo process, this article introduces CoGenIVE. This tool has been used in order to develop a series of demonstrators, all based on real-life cases in different domains. From this experience, the VR-DeMo approach and more particular CoGenIVE have proven to be useful to develop interactive virtual environments using high-level specifications. © 2009 Springer-Verlag.		De Boeck, J.; Raymaekers, C.; Coninx, K.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2009				
128		ModelGuidance	What practitioners really want: requirements for visual notations in conceptual modeling	This research was aimed at eliciting the requirements of practitioners who use conceptual modeling in their professional work for the visual notations of modeling languages. While the use of conceptual modeling in practice has been addressed, what practitioners in fact require of the visual notation of the modeling languages they use has received little attention. This work was thus motivated by the need to understand to what extent practitioners’ requirements are acknowledged and accommodated by visual notation research efforts. A mixed-method study was conducted, with a survey being offered over the course of several months to LinkedIn professional groups. The requirements included in the survey were based on a leading design theory for visual notations, the Physics of Notations. After preprocessing, 104 participant responses were analyzed. Data analysis included descriptive coding and qualitative analysis of purposes for modeling and additional requirements beyond the scope of visual design. Statistical and factorial analysis was used to explore potential correlations between the importance of different requirements as perceived by practitioners and the demographic factors (e.g., domain, purpose, topics). The results indicate several correlations between demographic factors and the perceived importance of visual notation requirements, as well as differences in the perceived relative importance of different requirements for models used to communicate with modeling experts as compared to non-experts. Furthermore, the results show an evolution from trends identified in studies conducted in the previous decade. The identified correlations with practitioners’ demographics reveal several research challenges that should be addressed, as well as the potential benefits of more purpose-specific tailoring of visual notation design. Furthermore, the shift in practitioner demographics as compared to those found in earlier work indicates that the research and development of conceptual modeling efforts needs to stay up-to-date with the way practitioners employ conceptual modeling. © 2018, Springer-Verlag GmbH Germany, part of Springer Nature.		van der Linden, D.; Hadar, I.; Zamansky, A.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2019				
129		ModelGuidance	Generating model with uncertainty by means of JTL	In Model-Driven Engineering, the potential advantages of using bidirectional transformations are largely recognized. Despite its crucial function, in certain cases bidirectionality has somewhat limited success because of the ambivalence concerning non-bijectivity. In fact, consistently propagating changes from one side to the other is typically non univocal as more than one correct solution is admitted. This gives place to a form of uncertainty which means that, rather than having a single model, we actually have a set of possible models but we do not know what is the right one. In this paper, we discuss how dealing with multiple solutions is important and requires specialized tools and support. In particular, handling a set of models explicitly is generally non-viable. Thus, we extended the JTL semantics to generate a model with uncertainty which is semantically equivalent to the set of models it represents. The approach is implemented and a metamodel-independent technique is proposed.		Rosa, G.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2015				
130		ModelGuidance	Design models for reusable and reconfigurable state machines	The widespread use of embedded systems mandates a rigorous engineering approach towards embedded software development, i.e. model-based design of embedded software. The paper presents design models of reusable and reconfigurable state machines that have been conceived in the context of the COMDES framework and in particular - the State Logic Controller and the Hybrid State Logic Controller, whose principles of operation are presented in the paper. The latter has been instrumental in developing a reconfigurable executable component, i.e. a function block of class State Machine, which can be used to implement a broad range of embedded applications such as sequential, continuous and hybrid control systems, as well as complex systems specified with hierarchical and concurrent state machines. © IFIP International Federation for Information Processing 2005.		Angelov, C.; Sierszecki, K.; Marian, N.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2005				
131		ModelGuidance	Modeling and verification of high-assurance properties of safety-critical systems	This paper presents a methodology to reduce the high analysis complexity in modeling and verifying high-assurance properties of safety-critical systems. Our new methodology includes a state-space construction mechanism, multiset labeled transition systems, two congruence theorems and a set of condensation rules for the analysis of deadlock states and reachable states. In the new state-space construction mechanism, the state space can hierarchically be generated and simplified for both synchronous and asynchronous processes. In our multiset labeled transition systems, several actions can be performed as an atomic instruction. Our congruence theorems and condensation rules are much more powerful than current compositional-verification techniques since the high interleaved behaviors of asynchronous as well as invisible actions can be eliminated efficiently. Our experimental results on the analysis of the deadlock property show a significant improvement on many systems such as asynchronous-communication models and resource-competition problems.		Tsai, J.J.P.; Juan, E.Y.T.	Computer Journal					Excluded	Excluded	new_screen			2		2001				
132		ModelGuidance	Formalising software quality using a hierarchy of quality models	The success of any activity relies on its quality. There are many approaches to quality assessment and management related to software activities like specification, modelling and design of all kind of artifacts (from large systems to small Java applets, from custom-made applications to commercial software). Unfortunately, these approaches are difficult to compare, combine or select because of the lack of a widespread quality reference framework. In this paper we propose three kinds of hierarchically structured quality models in order to formalise software quality issues and deal with quality information modelling. A generic model that represents the fundamental concepts related to software quality is the root of this hierarchy. Starting from this generic model, many reference models that specialise it may be derived. Finally, reference models are refined into domain models that adapt them to a particular domain of software. In the paper, we define as example a reference model that adopts the ISO/IEC 9126-1 quality standard, classical proposals about metrics and the quality-related QML language. We then refine this model into three different domain models, for a kind of component libraries, databases and web services. © Springer-Verlag Berlin Heidelberg 2004.		Illa, X.B.; Franch, X.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2004				
133		ModelGuidance	A tool environment for quality assurance based on the Eclipse Modeling Framework	The paradigm of model-based software development has become more and more popular since it promises an increase in the efficiency and quality of software development. Following this paradigm, models become primary artifacts in the software development process. Therefore, software quality and quality assurance frequently leads back to the quality and quality assurance of the involved models. In our approach, we propose a model quality assurance process that can be adapted to project-specific and domain-specific needs. This process is based on static model analysis using model metrics and model smells. Based on the outcome of the model analysis, appropriate model refactoring steps can be performed. In this paper, we present a tool environment conveniently supporting the proposed model quality assurance process. In particular, the presented tools support metrics reporting, smell detection, and refactoring for models being based on the Eclipse Modeling Framework, a widely used open source technology in model-based software development. © 2012 Springer Science+Business Media New York.		Arendt, T.; Taentzer, G.	Automated Software Engineering					Included	Excluded	new_screen			2		2013				
134		ModelGuidance	Generation of simulation views for domain specific modeling languages based on the eclipse modeling framework	The generation of tools for domain specific modeling languages (DSMLs) is a key issue in model-driven development. Various tools already support the generation of domain-specific visual editors from models, but tool generation for visual behavior modeling languages is not yet supported in a satisfactory way. In this paper we propose a generic approach to specify DSML environments visually by models and transformation rules based on the Eclipse Modeling Framework (EMF). Editing rules define the behavior of generated visual editors, whereas simulation rules describe a model's operational semantics. From a DSML definition (model and transformation rules), an Eclipse plug-in is generated, implementing a visual DSML environment including an editor and (possibly multiple) simulators for different simulation views on the model. We present the basic components of Tiger2, our EMF-based generation environment, along the environment generation process for a small DSML modeling the behavior of ants in an ant hill. © 2009 IEEE.		Biermann, E.; Ehrig, K.; Ermel, C.; Hurrelmann, J.	ASE2009 - 24th IEEE/ACM International Conference on Automated Software Engineering					Excluded	Excluded	new_screen			2		2009				
135		ModelGuidance	Failure Modelling in Software Architecture Design for Safety	In mission-critical industries, early feedback on the safety properties of a software system is critical and cost effective. This paper presents a compositional method for failure analysis of a system based on the proposed software architecture. This method is based upon the use of CSP as the failure modelling language and its associated tools as failure analysis. Preliminary findings from the application of this approach are also presented.		Wu, Weihang; Kelly, Tim	SIGSOFT Softw. Eng. Notes					Excluded	Excluded	new_screen			2		2005				
136		ModelGuidance	The eclipse java metamodel: Scaffolding software engineering research on java projects with MDE techniques	Java on the Eclipse IDE is a frequent choice for software development nowadays. Software Engineering researchers have built program analysis tools in that environment for several purposes. However, that requires a deep understanding of Eclipse internals, such as the Java AST. This paper discusses the feasibility of a metamodel-driven approach to scaffold the construction of such tools. Its core is the Eclipse Java Metamodel (EJMM), obtained through reverse engineering. The latter is instantiated with meta-objects representing the constructs of a given Java program. We then use OCL to traverse programs very easily. To validate the feasibility of our metamodel-driven approach to program analysis, we developed an Eclipse plug-in based on it, to support the metamodel-driven measurement (M2DM) approach. Copyright © 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.		Coimbra, P.J.; Abreu, F.B.E.	MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development					Excluded	Excluded	new_screen			2		2014				
137		ModelGuidance	Development of an accounting system - Applying the incrementally modular abstraction hierarchy to a complex system	The new methodology for software development is introduced and applied to an accounting system. The new method is called the incrementally modular abstraction hierarchy (IMAH). IMAH has an abstraction hierarchy from abstract to concrete levels. Invariants defined on an abstract level are kept on a concrete level, which allows adding modules incrementally on each hierarchical level and avoiding combinatorial explosion of the serious problem in software engineering, while climbing down abstraction hierarchy in designing and modeling a complex system. This paper shows how IMAH is applied in developing an accounting system, which is fundamental in enterprise systems and a suitable example of complex software systems. At first, very simple example recording only journal vouches to a database system is used to describe methodologies of IMAH. Then, it is described how this simple system is incrementally developed to a conventional complex accounting system.		Ohmori, K.; Kunii, T.L.	ICEIS 2007 - 9th International Conference on Enterprise Information Systems, Proceedings					Included	Excluded	new_screen			2		2007				
138		ModelGuidance	Automatic Modeling of File System Workloads Using Two-Level Arrival Processes	This article describes a method for analyzing, modeling, and simulating a two-level arrival-counting process. This method is particularly appropriate when the number of independent processes is large, as is the case in our motivating application which requires analyzing and representing computer file system trace data for activity on nearly 8,000 files. The method is also applicable to network trace data characterizing communication patterns between pairs of computers. We apply cluster analysis to separate the arrival process into groups or bursts of activity on a file. We then characterize the arrival process in terms of the time between bursts of activity on a file, the time between file events within bursts, and the number of events in a burst. Finally, we model these three components individually, then reassemble the results to produce a synthetic trace generator. In order to gauge the effectiveness of this method, we use synthetically generated (simulated) trace data produced in this way to drive a discrete-event simulation of a distributed replicated file system. We compare the results of the simulation driven by the synthetic trace with the same simulation driven by the original trace data, and conclude that the synthetic data capture the essential characteristics of the empirical trace.		Ware, P.P.; Page Jr., T.W.; Nelson, B.L.	ACM Transactions on Modeling and Computer Simulation					Included	Excluded	new_screen			2		1998				
139		ModelGuidance	A Model-Driven Engineering Approach for Monitoring Machine Learning Models	Once a machine learning (ML) model is produced and used for commercial purposes, it is desirable to continuously monitor it for any potential performance degradation. Domain experts in the area of ML, commonly lack the required expertise in the area of software engineering, needed to implement a robust and scalable monitoring solution. This paper presents an approach based on model-driven engineering (MDE) principles, for detecting and responding to events that can affect a ML model’s performance. The proposed solution allows ML experts to schedule the execution of drift detecting algorithms on a computing cluster and receive email notifications of the outcome without requiring extensive software engineering knowledge.		P. Kourouklidis; D. Kolovos; J. Noppen; N. Matragkas	2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)					Excluded	Excluded	new_screen			2		2021				
140		ModelGuidance	A model-based multisensor data fusion knowledge management approach	A variety of approaches exist for combining data from multiple sensors. The model-based approach combines data based on its support for or refutation of elements of the model which in turn can be used to evaluate an experimental thesis. This paper presents a collection of algorithms for mapping various types of sensor data onto a thesis-based model and evaluating the truth or falsity of the thesis, based on the model. The use of this approach for autonomously arriving at findings and for prioritizing data are considered. Techniques for updating the model (instead of arriving at a true/false assertion) are also discussed. © 2014 SPIE.		Straub, J.	Proceedings of SPIE - The International Society for Optical Engineering					Included	Excluded	new_screen			2		2014				
141		ModelGuidance	Model-driven environment for configuration control and deployment of on-board satellite software	This paper describes a model-driven environment for configuration control and deployment of on-board satellite software. The solution enables platform-aware software development through the use of modelling artefacts provided by a framework called MICOBS. The paper describes the proposed platform model, as well as the supporting models needed to control the configuration of on-board software. The solution allows managing the models of on-board software projects in such a way that several alternatives for deploying and configuring the packages can be defined. The configuration control during validation and deployment of the on-board software of the control unit of the Energetic Particle Detector instrument on-board Solar Orbiter is presented as a use case. The example shows the versatility of the proposed approach in managing the deployment of software on the different boards resulting from the model philosophy of the space projects, as well as on any possible simulation environments used for software validation. Finally, it is noteworthy to highlight that this approach can also be used in software projects that were not initially following a model-driven paradigm, and that its adoption facilitates the configuration control of reusable software on new platforms adopted in new space missions.		Parra, Pablo; Polo, Oscar R.; Carrasco, Alberto; da Silva, Antonio; Martinez, Agustin; Sanchez, Sebastian	ACTA ASTRONAUTICA					Included	Excluded	new_screen			2		2021				
142		ModelGuidance	Modeling stakeholders for information systems design processes	In the software engineering area, stakeholders play a significant role in requirements elicitation and validation. Moreover, all the project management is integrally affected by stakeholders' perspectives and their participation. This effect is strengthened when projects involve several organizations. Thus, a clear and explicit representation of the stakeholders and their attributes is required in order to achieve their effective management. The integration of this representation with other models capturing the knowledge of engineering design processes can be of great utility in software development projects. In this sense, this article describes the construction of an integrated model for representing stakeholders in information systems design processes. This proposal considers diverse attributes related to stakeholders and gives information for performing quantitative calculations about their interest and influence over the project. Thus, more inclusive experiences of the information systems development can be supported, even more if contexts with the participation of several organizations are considered.		Ballejos, Luciana C.; Montagna, Jorge M.	REQUIREMENTS ENGINEERING					Included	Excluded	new_screen			2		2011				
143		ModelGuidance	An open source domain-specific tools framework to support model driven development of OSS	Telecommunications companies undergo massive transformations which reflect onto exacting requirements for controlling the costs of new Operation Support Systems (OSS) development and integration. This calls for the adoption of new approaches, which improve agility and reusability. Model Drive Development (MDD), as specified by OMG, can drastically tackle these issues and has, therefore, attracted the interest of the telecommunications industry. Equally important is the Open Source paradigm. For MDD to gain wide industrial adoption, tools should be available to facilitate the OSS development process. In this paper, we specify requirements MDD tools should meet for effective application of the approach. An extensive survey is then carried out to evaluate existing meta-modelling frameworks over the identified tools requirements. Eventually, we present the Integrated Eclipse Model driven Environment (IEME), which comprises a unified environment of bundled Eclipse-based MDD facilities that also supports the automatic generation of domain-specific tools. © Springer-Verlag Berlin Heidelberg 2007.		Achilleos, A.; Georgalas, N.; Yang, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2007				
144		ModelGuidance	Studying maintainability on model-driven web methodologies	QuEF (Quality Evaluation Framework) is an environment to evaluate, through objective measures, the quality of Model-DrivenWeb Engineering (MDWE) methodologies. In this paper, this environment is presented and is used for the evaluation of the Maintainability in terms of various characteristics on MDWE. Given the high number of methodologies available and proposed over recent years, it has become necessary to define objective evaluation tools to enable organizations to improve their methodological environment and to help designers of web methodologies design new effective and efficient tools, processes and techniques and find out how it can be improved and how the quality improvement process could be optimized in order to reduce costs. This evaluation is applied to the NDT (Navigational Development Techniques) methodology, an approach that covers the complete life cycle and it is mainly oriented to the enterprise environment. © Springer Science+Business Media, LLC 2011.		Dominguez-Mayo, F.J.; Escalona, M.J.; Mejías, M.; Torres, J.	Information Systems Development - Business Systems and Services: Modeling and Development					Excluded	Excluded	new_screen			2		2011				
145		ModelGuidance	Using models to develop measurement systems: A method and its industrial use	Making the measurement processes work in large software development organizations requires collecting right metrics and collecting them automatically. Collecting the right metrics requires development custom measurement systems which fulfill the actual needs of the company. Effective communication between stakeholders (persons who have the information needs) and the designers of measurement systems are cornerstones in identifying the right metrics and the right amount of them. In this paper we describe a method for developing measurement systems based on models which make this communication more effective. The method supports the designers of measurement systems and managers, for whom the measurement systems are created, in developing more effective measurement systems based on MS Excel. The method comprises of platform independent modeling, platform specific modeling and automated code generation. This method has been used in one of action research projects at Ericsson. We present the results of the evaluation of this method at Ericsson by the end of this paper. © Springer-Verlag Berlin Heidelberg 2009.		Staron, M.; Meding, W.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
146		ModelGuidance	A process model for developing virtual education contents	The process of developing courseware (i.e. web-based, hypermedia courses) has similarities with the traditional software development, since the result of both processes is a software product. In order to avoid adhoc-developments software engineering approaches are also necessary for the courseware development. Our process model describes the courseware development process and consists of the phases analysis, design, implementation and application/maintenance. Parallel to these phases project management activities run. In the analysis phase educational goals, content and target groups are defined. The content, the educational scenario, the data and the user interface are modelled in the design phase. The implementation phase is consisting of the activities authoring in-the-small and authoring in-the-large. At last the courses will be used and evaluated. The re-use of courseware plays an important role in the process model. The content will be modularised and different courses are built re-using the same education modules; separating content from its presentation makes it possible ro define different views on the same content, and extending the education modules with standardised metadata facilitates a further search and re-use of courseware.		Klein, M; Stucky, W	WIRTSCHAFTSINFORMATIK					Excluded	Excluded	new_screen			2		2001				
147		ModelGuidance	Advancing model-based design by modeling approximations of computational semantics	Over the past decades, engineered systems have increasingly come to rely on embedded computation in order to include advanced and sophisticated features. The unparallelled flexibility of software has been a blessing for implementing functionality with a complexity that could not have been imagined heretofore. One important manifestation of this is in the use of software as the universal system integration mechanism. With the increasing use, however, has come a suite of difficulties in effectively employing software engineering practices because (i) C (the language of choice in embedded software implementation) is very close to the hardware implementation and (ii) software engineering methods typically only consider logical correctness, irrespective of critical characteristics for embedded computation (e.g., response time). To address these problems, Model-Based Design helps raise the level of abstraction while accounting for such critical characteristics. The corresponding models are designed using high-level formalisms such as block diagrams and state transition diagrams whose meaning is particularly intuitive because of their executable nature. The necessity to support increasingly complicated language elements, however, has caused the underlying execution engine to explode in complexity. As a result, the meaning of the high-level formalisms exists almost exclusively by merit of simulation. This paper attempts to present the challenges faced by the current state of Model-Based Design tools and outlines a solution approach by modeling the execution engine.		Mosterman, P.J.; Zander, J.	Proceedings of the 4th International Workshop on Equation-Based Object-Oriented Modeling Languages and Tools, EOOLT 2011					Included	Excluded	new_screen			2		2011				
148		ModelGuidance	Formal Modeling, Proving, and Model Checking of a Flood Warning, Monitoring, and Rescue System-of-Systems	Floods after monsoon rains are frequent disasters that affect millions of lives in Pakistan. Human lives are lost, agriculture economies are destroyed, and livestock animals, houses, fruit farms, and crops are lost which are the major livelihoods of thousands of people in Punjab. Each year there are heavy rains in the monsoon season and, due to global warming, there is the rapid melting of snow in northern glaciers; these factors subsequently cause floods. There is also loss of life due to the spread of waterborne diseases and snake bites. Flood monitoring provides early detection of a flood and the calculation of its intensity, which results in reduced human life losses and economic losses. Most casualties are caused by the lack of timely real-time, authentic information about the high-risk areas, and flood intensity, speed, and direction. Therefore, the proposed approach is centered on formal modeling and verification of safety and liveness properties of flood monitoring perceivers. Each flood perceiver has several sensors. It requires the collection of information starting from the flood perceiver, observer, and environmental forecast. This information is processed to determine the flood intensity level. We have developed a CP-Nets' formal model and model-checked it. We have verified the safety and liveness properties of correctness by exhaustive verification of the system using model-based proof obligations (Event-B method using Rodin). Our objective in this research is to propose a correct, reliable, and efficient flood warning, monitoring, and rescue (WMR) SoS based on formal methods. We have used formal modeling and model-checking based on state-of-the-art hierarchical CP-Nets supported by exhaustive formal proof obligations of Event-B. © 2021 Abdul Rehman et al.		Rehman, A.; Akhtar, N.; Alhazmi, O.H.	Scientific Programming					Excluded	Excluded	new_screen			2		2021				
149		ModelGuidance	Deriving event-based transition systems from goal-oriented requirements models	Goal-oriented methods are increasingly popular for elaborating software requirements. They offer systematic support for incrementally building intentional, structural, and operational models of the software and its environment. Event-based transition systems on the other hand are convenient formalisms for reasoning about software behaviour at the architectural level. The paper relates these two worlds by presenting a technique for translating formal specification of software operations built according to the KAOS goal-oriented method into event-based transition systems analysable by the LTSA toolset. The translation involves moving from a declarative, state-based, timed, synchronous formalism typical of requirements modelling languages to an operational, event-based, untimed, asynchronous one typical of architecture description languages. The derived model can be used for the formal analysis and animation of KAOS operation models in LTSA. The paper also provides insights into the two complementary formalisms, and shows that the use of synchronous temporal logic for requirements specification hinders a smooth transition from requirements to software architecture models.		Letier, Emmanuel; Kramer, Jeff; Magee, Jeff; Uchitel, Sebastian	AUTOMATED SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2008				
150		ModelGuidance	Object tracking with spatial context model	In object tracking, building a reliable appearance model can greatly improve the performance. In this letter, we propose a novel method that uses the spatial context to help tracking based on support vector machines (SVMs). The spatial context is decomposed into different subregions that include some parts of both the target and the background. We build appearance submodels for each group of subregions and combine them to get a robust appearance model, which can help to handle some complex problems, e.g., occlusion and deformation. Besides, we add an update strategy to retain the accuracy of the appearance model. A large number of experiments on various challenging videos demonstrate that our method outperforms many other state-of-the-art methods. © 1994-2012 IEEE.		Sun, J.; Zhang, S.; Zhang, L.	IEEE Signal Processing Letters					Included	Excluded	new_screen			2		2016				
151		ModelGuidance	Extensions of SysML for modeling an aspect oriented software architecture with multiple views	Aspect-oriented programming was proposed in order to handle crosscutting concerns in an efficient way. Initial proposals in this field were applied to source code. Later on, aspects were considered to be applied in other phases of software development, such as within software architecture. There are several advantages in identifying aspects at the architectural level such as reducing costs of software maintenance and preserving the notion of aspects in the development process ensuring traceability. Whereas different stakeholders need to view the system from various perspectives, the proposal of a software architecture in multiple views is essential. Therefore, this article proposes an aspect oriented software architecture model with multiple views to define the structure of aspect oriented software. An extension of the SysML modeling language is applied to model the architectural views. © 2013 IEEE.		De Oliveira, K.S.; França, J.M.S.; Soares, M.S.	Proceedings of the 2013 10th International Conference on Information Technology: New Generations, ITNG 2013					Included	Excluded	new_screen			2		2013				
152		ModelGuidance	A model checking-based security analysis framework for IoT systems	IoT systems are revolutionizing our life by providing ubiquitous computing, inter-connectivity, and automated control. However, the increasing system complexity poses huge challenges for security as IoT devices are distributed, highly heterogeneous, and can directly interact with the physical environment. In IoT systems, bugs in device firmware, defects in network protocols, and design flaws in automation rules can lead to system breach or failure. The challenge gets even more escalated as the possible attacks may be chained together in a long sequence across multiple layers, rendering the existing vulnerability analysis frameworks inapplicable. In this paper, we present FORESEE, a model checking-based framework to comprehensively evaluate IoT system security. It builds a multi-layer IoT hypothesis graph by simultaneously modeling all of the essential components in IoT systems, including the physical environment, devices, communication protocols, and applications. The model checker can then analyze the generated hypothesis graph to validate system security properties or generate attack paths if there are any violations. An optimization algorithm is further introduced to reduce the computational complexity of our analysis. Our framework verifies hypothesis graphs with millions of nodes in less than 100 seconds. The illustrative case studies show that our framework can detect more potential threats than the existing approaches. © 2021 The Authors		Fang, Z.; Fu, H.; Gu, T.; Qian, Z.; Jaeger, T.; Hu, P.; Mohapatra, P.	High-Confidence Computing					Excluded	Excluded	new_screen			2		2021				
153		ModelGuidance	Model and tools for multi-dimensional approach to requirements behavior analysis	Requirements modeling and analysis (RMA) are important and weak-formalized activities in the whole requirements engineering framework. In this paper an advanced approach to RMA is proposed, which provides multidimensional estimation of requirements in appropriate attribute spaces, with respect to their both static features and dynamic behavior. The given test-case shows a complex requirements behavior and visualizes requirements modeling process, in order to support decision making in software development. © Springer-Verlag Berlin Heidelberg 2013.		Tkachuk, M.; Martinkus, I.	Lecture Notes in Business Information Processing					Excluded	Excluded	new_screen			2		2013				
154		ModelGuidance	Formal modeling for pervasive design of human-computer interfaces	The advent of mobile interfaces induces an evolution on the Human Computer Interaction (HCI) field. We observe the emergence of several mobile devices and sensors that gave birth to the ubiquitous environments. In our research, we focus on: (i) how to adapt the interface to its environment, specifically in its context of use and (ii) what relationship has the context with the users' task. This paper will propose a formal approach for specifying user interfaces adapted to the context of use. We will focus on the strength of formal approach to context and user's modeling and how to infer users' requirements through the model of the task for critical domains. Our approach will be illustrated by a case study on the monitoring of diabetic patients.		Riahi, I.; Moussa, F.	UBICOMM 2014 - 8th International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies					Excluded	Excluded	new_screen			2		2014				
155		ModelGuidance	Availability modeling and evaluation on high performance cluster computing systems	Cluster computing has been attracting more and more attention from both the industrial and the academic world for its enormous computing power and scalability. Beowulf type cluster, for example, is a typical High Performance Computing (HPC) cluster system. Availability, as a key attribute of the system, needs to be considered at the system design stage and monitored at mission time. Moreover system monitoring is a must to help identify the defects and ensure the system's availability requirement. In this paper novel solutions which provide availability modeling, model evaluation, and data analysis as a single framework have been investigated. Three key components in the investigation are availability modeling, model evaluation, and data analysis. The general availability concepts and modeling techniques are briefly reviewed. The system's availability model is divided into submodels based upon their functionalities. Furthermore, an object oriented Markov model specification to facilitate availability modeling and runtime configuration has been developed. Numerical solutions for Markov models are examined, especially on the uniformization method. The paper also presents a monitoring and data analysis framework, which is responsible for failure analysis and availability reconfiguration.		Song, Hertong; Leangsuksun, Chokchai; Nassar, Raja	JOURNAL OF RESEARCH AND PRACTICE IN INFORMATION TECHNOLOGY					Excluded	Excluded	new_screen			2		2006				
156		ModelGuidance	Modeling software process configurations for enterprise adaptability	Modern enterprises are expected to continuously evolve and adapt to uncertain environmental conditions and evolving customer trends. Adaptability in software processes enable enterprises to respond to changing situations by se-lecting software process configurations that help best meet enterprise-level business goals. Conventional methods of modeling and designing software pro-cesses are limited in their ability to visualize these software process configura-tions, reason about them and select an appropriate configuration which meet functional and non-functional requirements while considering enterprise-level perspectives. As part of our PhD project, we propose a requirements-based software process adaptability framework that considers software process adapt-ability, first at a process-centric and then at an agent-centric level. Key con-structs for this framework are discussed and illustrated by using the DevOps approach as an example.		Babar, Z.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2015				
157		ModelGuidance	Identifying and Managing Complex Modules in Executable Software Design Models-Empirical Assessment of a Large Telecom Software Product	Using design models instead of executable code has shown itself to be an efficient way of increasing abstraction level of software development. However, applying established code-based software engineering methods to design models can be a challenge - due to different abstraction levels, the same metrics as for code are not applicable for the design models. One of practical challenges in using metrics at the model level is applying complexity-prediction formulas developed using code-based metrics to design models. The existing formulas do not apply as they do not take into consideration the behavior part of the models - e.g. State charts. In this paper we address this challenge by conducting a case study at one of the large telecom products at Ericsson with the goal to identify which metrics can predict complex, hard to understand and hard to maintain software modules based on their design models. We use both statistical methods like regression to build prediction formulas and qualitative interviews to codify expert designers' perception of which software modules are complex. The results of this case study show that such measures as the number of non-self-transitions, transition per states or state depth can be combined in order to identify software units that are perceived as complex by expert designers. Our conclusion is that these metrics can be used in other companies to predict complex modules, but the coefficients should be recalculated per product to increase the prediction accuracy.		H. Rezaei; F. Ebersjö; K. Sandahl; M. Staron	2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement					Included	Excluded	new_screen			2		2014				
158		ModelGuidance	Ontology-based feature modeling: An empirical study in changing scenarios	A software product line (SPL) is a set of software systems that have a particular set of common features and that satisfy the needs of a particular market segment or mission. Feature modeling is one of the key activities involved in the design of SPLs. The feature diagram produced in this activity captures the commonalities and variabilities of SPLs. In some complex domains (e.g.; ubiquitous computing, autonomic systems and context-aware computing), it is difficult to foresee all functionalities and variabilities a specific SPL may require. Thus, Dynamic Software Product Lines (DSPLs) bind variation points at runtime to adapt to fluctuations in user needs as well as to adapt to changes in the environment. In this context, relying on formal representations of feature models is important to allow them to be automatically analyzed during system execution. Among the mechanisms used for representing and analyzing feature models, description logic (DL) based approaches demand to be better investigated in DSPLs since it provides capabilities, such as automated inconsistency detection, reasoning efficiency, scalability and expressivity. Ontology is the most common way to represent feature models knowledge based on DL reasoners. Previous works conceived ontologies for feature modeling either based on OWL classes and properties or based on OWL individuals. However, considering change or evolution scenarios of feature models, we need to compare whether a class-based or an individual-based feature modeling style is recommended to describe feature models to support SPLs, and especially its capabilities to deal with changes in feature models, as required by DSPLs. In this paper, we conduct a controlled experiment to empirically compare two approaches based on each one of these modeling styles in several changing scenarios (e.g.; add/remove mandatory feature, add/remove optional feature and so on). We measure time to perform changes, structural impact of changes (flexibility) and correctness for performing changes in our experiment. Our results indicate that using OWL individuals requires less time to change and is more flexible than using OWL classes and properties. These results provide insightful assumptions towards the definition of an approach relying on reasoning capabilities of ontologies that can effectively support products reconfiguration in the context of DSPL. © 2015 Elsevier Ltd. All rights reserved.		Dermeval, D.; Tenório, T.; Bittencourt, I.I.; Silva, A.; Isotani, S.; Ribeiro, M.	Expert Systems with Applications					ConflictIncluded	Excluded	new_screen			2		2015				
159		ModelGuidance	Model-based performance risk analysis	Performance is a nonfunctional software attribute that plays a crucial role in wide application domains spreading from safety-critical systems to e-commerce applications. Software risk can be quantified as a combination of the probability that a software system may fail and the severity of the damages caused by the failure. In this paper, we devise a methodology for estimation of performance-based risk factor, which originates from violations of performance requirements (namely, performance failures). The methodology elaborates annotated UML diagrams to estimate the performance failure probability and combines it with the failure severity estimate which is obtained using the Functional Failure Analysis. We are thus able to determine risky scenarios as well as risky software components, and the analysis feedback can be used to improve the software design. We illustrate the methodology on an e-commerce case study using step-by-step approach and then provide a brief description of a case study based on large real system. © 2005 IEEE.		Cortellessa, V.; Goseva-Popstojanova, K.; Appukkutty, K.; Guedem, A.R.; Hassan, A.; Elnaggar, R.; Abdelmoez, W.; Ammar, H.H.	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2005				
160		ModelGuidance	Analysis and Monitoring of Cyber-Physical Systems via Environmental Domain Knowledge & Modeling	While verifying adherence to a specification (i.e., specification-based testing) is important, the results are only as valid as the specification itself. Problematically, verifying a system specification must be done within the context of changing or even unknown environmental domain knowledge that could render the specification ineffective or incorrect. This issue is even more apparent in the context of self-adaptive systems, where uncertainty in both the system configuration and environment can impact the validity of the system. This paper introduces a method to explicitly model domain knowledge of the environment as a secondary system to enable design-time verification against documented environmental assumptions (i.e., those elements external to the system). In addition, run-time monitors are used to detect scenarios in the actual environment not specified by the modeled environmental domain knowledge. Rather than simply identifying unexpected inputs, our approach is able to identify run-time violations of the environmental domain knowledge, even when inputs appear valid based on the domain assumptions embedded in the system specification. These violations can then be used to correspondingly update the system and environmental specifications via automated run-time adaptation or subsequent design-time revisions. We illustrate our approach by applying our method to a running example of a goal-based model of a baby monitor.		B. DeVries; E. M. Fredericks; B. H. C. Cheng	2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)					Excluded	Excluded	new_screen			2		2021				
161		ModelGuidance	UML-B: Formal modeling and design aided by UML	The emergence of the UML as a de facto standard for object-oriented modeling has been mirrored by the success of the B method as a practically useful formal modeling technique. The two notations have much to offer each other. The UML provides an accessible visualization of models facilitating communication of ideas but lacks formal precise semantics. B, on the other hand, has the precision to support animation and rigorous verification but requires significant effort in training to overcome the mathematical barrier that many practitioners perceive. We utilize a derivation of the B notation as an action and constraint language for the UML and define the semantics of UML entities via a translation into B. Through the UML-B profile we provide specializations of UML entities to support model refinement. The result is a formally precise variant of UML that can be used for refinement based, object-oriented behavioral modeling. The design of UML-B has been guided by industrial applications.		Snook, C; Butler, M	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					Included	Excluded	new_screen			2		2006				
162		ModelGuidance	Conceptual scheduling model and optimized release scheduling for agile environments	Context: Release scheduling deals with the selection and assignment of deliverable features to a sequence of consecutive product deliveries while several constraints are fulfilled. Although agile software development represents a major approach to software engineering, there is no well-established conceptual definition and sound methodological support of agile release scheduling. Objective: To propose a solution, we present, (1) a conceptual model for agile scheduling, and (2) a novel multiple knapsack-based optimization model with (3) a branch-and-bound optimization algorithm for agile release scheduling. Method: To evaluate our model simulations were carried out seven real life and several generated data sets. Results: The developed algorithm strives to prevent resource overload and resource underload, and mitigates risks of delivery slippage. Conclusion: The results of the experiment suggest that this approach can provide optimized semi-automatic release schedule generations and more informed and established decisions utilizing what-if-analysis on the fly to tailor the best schedule for the specific project context. (C) 2011 Elsevier B.V. All rights reserved.		Szoke, Akos	INFORMATION AND SOFTWARE TECHNOLOGY					Included	Excluded	new_screen			2		2011				
163		ModelGuidance	Modeling Cyberattack Propagation and Impacts on Cyber-Physical System Safety: An Experiment	In this article, we present an experiment we conducted with discrete event simulations to analyze the effects of multi-step cyberattacks on the safety of cyber-physical systems. We show how to represent systems, their components (either software and/or hardware), communication links, security measures, and attacks from a malicious intruder. The latter are typically taken from the MITRE ATT&CK knowledge base. The discrete event simulation method makes it possible to represent any event affecting the system. We illustrate our approach by means of an illustrative example involving cyberattacks against the navigation system of an autonomous ship. We show how the formal modeling language AltaRica, primarily dedicated to safety analyses, can assess this illustrative example by representing the system and automatically extracting sequences of attacks, leading to a safety-critical situation, namely the deviation of the ship by the attacker. This article aims to discuss this approach and to outline the lessons learned from our experience. © 2022 by the authors.		Serru, T.; Nguyen, N.; Batteux, M.; Rauzy, A.	Electronics (Switzerland)					Excluded	Excluded	new_screen			2		2023				
164		ModelGuidance	Scientists' needs in modelling software ecosystems	Currently the landscape of software ecosystem modelling methods and languages is like Babel after the fall of the tower: There are many methods and languages available and interchanging data between researchers and organizations that actively govern their ecosystem, is practically impossible. The lack of a universally accepted set of modelling methods is hampering the advancement of software ecosystems research. Using a literature study and a set of interviews amongst peers, we aim to establish a set of understandings and requirements for a universally accepted set of software ecosystem modelling methods. The work is an initial push in a larger research initiative that has the goal of advancing the maturity of (software) ecosystems modelling. The success of such an initiative will be found in the availability of common databases, better interchange formats between researchers, and more capable software ecosystem modelling tools. © 2015 ACM.		Jansen, S.; Handoyo, E.; Alves, C.	ACM International Conference Proceeding Series					Included	Excluded	new_screen			2		2015				
165		ModelGuidance	On the neural network approach in software reliability modeling	Previous studies have shown that the neural network approach can be applied to identify defect-prone modules and predict the cumulative number of observed software failures. In this study we examine the effectiveness of the neural network approach in handling dynamic software reliability data overall and present several new findings. Specifically, we find 1. The neural network approach is more appropriate for handling datasets with 'smooth' trends than for handling datasets with large fluctuations. 2. The training results are much better than the prediction results in general. 3. The empirical probability density distribution of predicting data resembles that of training data. A neural network can qualitatively predict what it has learned. 4. Due to the essential problems associated with the neural network approach and software reliability data, more often than not, the neural network approach fails to generate satisfactory quantitative results. © 2001 Elsevier Science Inc. All rights reserved.		Cai, K.-Y.; Cai, L.; Wang, W.-D.; Yu, Z.-Y.; Zhang, D.	Journal of Systems and Software					Excluded	Excluded	new_screen			2		2001				
166		ModelGuidance	Service-oriented ERP system modeling using UML	Component-Based Development (CBD) and Web Service are becoming increasingly popular for implementing flexible enterprise-scale systems organized in a Service-Oriented Architecture (SOA). Engineering and modeling SOA need extensions to existing modeling techniques and methodologies. This paper proposes a comprehensive service-oriented software modeling process based on the concept of service component, standard UML modeling constructs, and Rational Rose that is a leading object-orient modeling tool at present. The process-based key techniques including hybrid architecture, service component, formal modeling, and database mapping are then discussed. By modeling service-oriented Enterprise Resource Planning (ERP) system for large-scale circulation businesses as running example applicability of this approach is illustrated.		Jiang, Z.	2005 International Symposium on Computer Science and Technology, ISCST 2005					Included	Excluded	new_screen			2		2005				
167		ModelGuidance	Modeling-framework for model-based software engineering of complex Internet of things systems	Internet of things (IoT) systems are composed of variety of units from different domains. While developing a complete IoT system, different professionals from different domains may have to work in collaboration. In this paper we provide a framework which allows using discrete and continuous time modeling and simulation approaches in combination for IoT systems. The proposed framework demonstrates on how to model Ad-hoc and general IoT systems for software engineering purpose. We demonstrate that model-based software engineering on one hand can provide a common platform to overcome communication gaps among collaborating stakeholders whereas, on the other hand can model and integrate heterogeneous components of IoT systems. While modeling heterogeneous IoT systems, one of the major challenges is to apply continuous and discrete time modeling on intrinsically varying components of the system. Another difficulty may be how to compose these heterogeneous components into one whole system. The proposed framework provides a road-map to model discrete, continuous, Ad-hoc, general systems along with composition mechanism of heterogeneous subsystems. The framework uses a combination of Agent-based modeling, Aspect-oriented modeling, contract-based modeling and services-oriented modeling concepts. We used this framework to model a scenario example of a service-oriented IoT system as proof of concept. We analyzed our framework with existing systems and discussed it in details. Our framework provides a mechanism to model different viewpoints. The framework also enhances the completeness and consistency of the IoT software models.		Abbasi, Khurrum Mustafa; Khan, Tamim Ahmed; Haq, Irfan Ul	MATHEMATICAL BIOSCIENCES AND ENGINEERING					Included	Excluded	new_screen			2		2021				
168		ModelGuidance	A Systematic Composite Service Design Modeling Method Using Graph-Based Theory	The composite service design modeling is an essential process of the service-oriented software development life cycle, where the candidate services, composite services, operations and their dependencies are required to be identified and specified before their design. However, a systematic service-oriented design modeling method for composite services is still in its infancy as most of the existing approaches provide the modeling of atomic services only. For these reasons, a new method (ComSDM) is proposed in this work for modeling the concept of service-oriented design to increase the reusability and decrease the complexity of system while keeping the service composition considerations in mind. Furthermore, the ComSDM method provides the mathematical representation of the components of service-oriented design using the graph-based theory to facilitate the design quality measurement. To demonstrate that the ComSDM method is also suitable for composite service design modeling of distributed embedded real-time systems along with enterprise software development, it is implemented in the case study of a smart home. The results of the case study not only check the applicability of ComSDM, but can also be used to validate the complexity and reusability of ComSDM. This also guides the future research towards the design quality measurement such as using the ComSDM method to measure the quality of composite service design in service-oriented software system.		Elhag, Arafat Abdulgader Mohammed; Mohamad, Radziah; Aziz, Muhammad Waqar; Zeshan, Furkh	PLOS ONE					Excluded	Excluded	new_screen			2		2015				
169		ModelGuidance	Controlled modeling environment using flexibly-formatted spreadsheets	As modeling in software and system development becomes increasingly prevalent, many engineers need to collaboratively develop models spanning many disciplines such as requirements management, system design, software, etc. However, integrating modeling languages for various disciplines is challenging, because UML and SysML are too complex for many engineers to understand. Therefore, in complicated engineering processes, engineers with different areas of expertise often find it difficult to access the same information in different domain-specific modeling environments. Our approach to address this problem is to share and edit the models as task-oriented spreadsheets, using a unified model (in UML or SysML) and a unified user interface (in the spreadsheet program). The formats of the spreadsheets are optimized for various tasks while the target models remain in a unified modeling language. Since the transformation between the spreadsheets and the models is automated and transparent, users do not have to be skilled with the modeling languages to edit the spreadsheets. Using our novel approach, we were able to reduce the errors and time, and also the difficulty for each task without providing specialized training for the engineers. A preliminary user study showed that, by applying the spreadsheet-based approach, we could reduce the number of errors with less time for typical systems engineering tasks. © 2014 ACM.		Miyashita, H.; Tai, H.; Amano, S.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2014				
170		ModelGuidance	Modeling web navigation combining UML with Z	As Web applications are becoming more and more complex, there is an increasing concern about how to retrieve and navigate effectively to new information and new Web applications. This work examines a formal modelling of Web navigation using a combination of UML and Z. Web pages, hyperlinks, page-scoped variables and frames contained in the pages are modeled by Z Language. For the behavioral representation of a user in page navigation, UML state diagrams are employed. Page secure level (psl) for any page and user secure level (usl) for any user who uses the Web application are defined. Moreover, a Page Navigation Diagram (PND) for a Web application is given. To support the test and verification of the proposed model, a series of properties the model should satisfy are also presented. The approach to modeling Web navigation using UML and Z is interesting. 1548-7741/ Copyright © 2009 Binary Information Press.		Qian, Z.	Journal of Information and Computational Science					Excluded	Excluded	new_screen			2		2009				
171		ModelGuidance	An UML Model Query Method Based on Structure Pattern Matching	UML has been widely used for modeling, and models are becoming increasingly important in the software development process. As a consequence, the number of models being used is increasing. Comprehending and reusing models face a real challenge. So, it is necessary to get efficient methods to query models. In this paper, we propose an UML model query method which is based on structure pattern matching. This paper will show how to extract the structure information of UML model from the textual model file. Then, a model query language and the matching algorithm will be detailed described. After that a case study is presented, which proves the effectiveness of our query method. © Springer-Verlag Berlin Heidelberg 2013.		Zhang, X.; Chen, H.; Zhang, T.	Communications in Computer and Information Science					Included	Excluded	new_screen			2		2013				
172		ModelGuidance	A service-oriented modeling and simulation framework for rapid development of distributed applications	The paper presents a service-oriented distributed modeling and simulation framework that supports the development and evaluation of large scale distributed systems such as network-centric and system-of-systems applications. The distinct features of the framework include a modeling and specification language, dynamic model checking for completeness and consistency, automated code generation from the specification, simulation of different architectures with a template-based platform builder, service-oriented multi-agent simulation for easy re-configuration and re-composition, formal policy specification and enforcement for dynamic verification, and dynamic analyses for evaluation and monitoring. The framework and most of the tools reported in this paper have been implemented and applied in several industrial projects. This paper presents the design principles, user interfaces, its runtime infrastructure, and the experiment results on its performance. © 2005 Elsevier B.V. All rights reserved.		Tsai, W.T.; Fan, C.; Chen, Y.; Paul, R.	Simulation Modelling Practice and Theory					Included	Excluded	new_screen			2		2006				
173		ModelGuidance	Middleware-Induced Architectural Style Modelling for Architecture Exploration	The MID ARCH method is a software design method for exploring software architecture alternatives that use different middleware platforms. First, candidate architectures are modelled based on different architectural styles that are induced by the respective middleware platforms. Candidate styles are chosen using a taxonomy of such styles. The goal is the evaluation of candidate architectures with respect to a goal/question/metric quality model. We illustrate the modelling approach using the Apache Cocoon Web component framework and related technologies, and a taxonomy of their associated styles.		S. Giesecke; J. Bornhold; W. Hasselbring	2007 Working IEEE/IFIP Conference on Software Architecture (WICSA'07)					ConflictExcluded	Excluded	new_screen			2		2007				
174		ModelGuidance	Test case prioritization based on extended finite state machine model	Regression testing is done to test the modified version of a software, however re-testing all test cases are very inefficient. Test Case Prioritization is one of the techniques used to overcome this problem. It prioritizes the test cases in the test suite by ordering them according to a desired objective goal like revealing faults earlier and has various approaches in performing it. One of them is model-based approach which utilizes the system model to make prioritization. The advantages of this approach are cheaper execution cost and lesser prioritization time compared to code-based prioritization. In this paper, we propose a model-based test case prioritization approach using extended finite state machine. The proposed approach will be based on several related existing approaches with an extra criterion of degree of code changes. The contribution of the proposed approach is it overcomes the identified limitations from the related works and improve the prioritization result.		Shafie, M.L.; Wan Kadir, W.M.N.	Journal of Telecommunication, Electronic and Computer Engineering					Excluded	Excluded	new_screen			2		2017				
175		ModelGuidance	On the use of UML for modeling mechatronic systems	This paper describes a modeling language that aims to provide a unified framework for representing control systems, namely, physical plants coupled with computer-based control devices. The proposed modeling methodology is based on the cardinal principle of object orientation, which allows describing both control software and physical components using the same basic concepts, particularly those of capsules, ports, and protocols. Furthermore, it is illustrated how the well-known object-oriented specification language unified modeling language can be adopted, provided an adequate formalization of its semantics, to describe structural and behavioral aspects of control systems, related to both logical and physical parts. Note to Practitioners-The development of an automated system within an industrial setting is a complex task, whose successful result depends on the joint efforts of a team of designers with different scientific backgrounds and specialized knowledge. In fact, an automated system is typically composed of a mechanical assembly, which must be precisely designed and manufactured, and a set of sensors and actuators (e.g., electrical drives, pneumatic systems, etc.), which are, on their turn, controlled most of the time by means of digital processors. course, both electrical parts and control algorithms (e.g., proportional integral, and derivative (PID) regulators, logic and supervisory control, reference trajectories for mechanical motions, etc.) should be designed with the same care given to mechanical aspects. Moreover, it is undeniable that none of the various parts composing the automated system design specification can, on their own, allow engineers to understand the actual behavior of the whole system, especially without a common description language that is understandable for all of the designers. The present paper introduces a unified language which aims to support integrated design specifications of automated systems, including the dynamics of heterogeneous physical assemblies, the discrete-event behavior of distributed control software, and the specification of interface ports between the plant and the control system. With the proposed language, it is possible to obtain a complete picture of the automated system suitable for its simulation, documentation, and validation. The modeling language described in the paper supports the principles of object orientation. This choice moves in the direction of enhancing modularity and reusability properties of design specifications, which are aspects of great importance in the design practice. Moreover, the object-oriented approach to automated systems design proposed in the paper aims to introduce the concept of “design by extension” in the manufacturing industry. This means that the definition of specialization relationships between classes of components implies that those components should be designed in order to be substitutable with each other, especially from a dynamic point of view. This aspect will be the subject of further papers illustrating other practical insights on the use of object-oriented models for automated systems.		Secchi, Cristian; Bonfe, Marcello; Fantuzzi, Cesare	IEEE TRANSACTIONS ON AUTOMATION SCIENCE AND ENGINEERING					Excluded	Excluded	new_screen			2		2007				
176		ModelGuidance	An approach for feature modeling of context-aware software product line	Feature modeling is an approach to represent commonalities and variabilities among products of a product line. Context-aware applications use context information to provide relevant services and information for their users. One of the challenges to build a context-aware product line is to develop mechanisms to incorporate context information and adaptation knowledge in a feature model. This paper presents UbiFEX, an approach to support feature analysis for context-aware software product lines, which incorporates a modeling notation and a mechanism to verify the consistency of product configuration regarding context variations. Moreover, an experimental study was performed as a preliminary evaluation, and a prototype was developed to enable the application of the proposed approach. © J.UCS.		Fernandes, P.; Werner, C.; Teixeira, E.	Journal of Universal Computer Science					Included	Excluded	new_screen			2		2011				
177		ModelGuidance	Model-driven design of object and component systems	The notion of software engineering implies that software design and production should be based on the types of theoretical foundations and practical disciplines that are established in the traditional branches of engineering. The goal is to make development of complex software systems more predictable and the systems developed more trustworthy - safe, secure and dependable. A number of theories have been well developed in the past half a century, including Abstract Data Types, Hoare Logic, Process Calculi, and I/O automata, and those alike. Based on them, techniques and tools have been developed for software specification, refinement and verification. However, the theoretically sound techniques and tools have not been seamlessly integrated in practical software development, and their impact upon commonly-used software systems is still far from convincing to software engineering practitioners. This is clearly reflected by the challenges of their applications in engineering large-scale systems, including Cyber- Physical Systems (CPS), Networks of Things and Cloud-Based Systems, that have multi-dimensional complexities. Indeed, students are not often shown how the theories, and their underpinned techniques and tools, can better inform the software engineering they are traditionally taught. The purpose of this course to demonstrate such an effort. We present a model-driven design framework for component-based and object-oriented software systems. We identify a set of UML notations and textual descriptions for representing different abstractions of software artefacts produced in different development stages. These abstractions, their relations and manipulations all have formalisations in the rCOS formal method of component and object systems. The aim is to allow the advantage of using precise models for development better appreciated. We organise the lecture notes into three chapters, each having a title page but all the references to literature are given at the end of Part III. © Springer International Publishing Switzerland 2016.		Liu, Z.; Chen, X.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2016				
178		ModelGuidance	Model driven software development: An overview	The vision of the MDSD is an era of software engineering where modelling completely replaces programming i.e. The systems are entirely generated from high-level models, each one specifying a different view of the same system. The MDSD can be seen as the new generation of visual programming languages which provides methods and tools to streamline the process of software engineering. Productivity of the development process is significantly improved by the MDSD approach and it also increases the quality of the resulting software system. The MDSD is particularly suited for those software applications which require highly specialized technical knowledge due to the involvement of complex technologies and the large number of complex and unmanageable standards. In this paper, an overview of the MDSD is presented; the working styles and the main concepts are illustrated in detail. © 2014 IEEE.		Saleem, M.Q.; Jaafar, J.; Hassan, M.F.	2014 International Conference on Computer and Information Sciences, ICCOINS 2014 - A Conference of World Engineering, Science and Technology Congress, ESTCON 2014 - Proceedings					ConflictIncluded	Excluded	new_screen			2		2014				
179		ModelGuidance	Automatic generation of UML profile graphical editors for Papyrus	UML profiles offer an intuitive way for developers to build domain-specific modelling languages by reusing and extending UML concepts. Eclipse Papyrus is a powerful open-source UML modelling tool which supports UML profiling. However, with power comes complexity, implementing non-trivial UML profiles and their supporting editors in Papyrus typically requires the developers to handcraft and maintain a number of interconnected models through a loosely guided, labour-intensive and error-prone process. We demonstrate how metamodel annotations and model transformation techniques can help manage the complexity of Papyrus in the creation of UML profiles and their supporting editors. We present Jorvik, an open-source tool that implements the proposed approach. We illustrate its functionality with examples, and we evaluate our approach by comparing it against manual UML profile specification and editor implementation using a non-trivial enterprise modelling language (Archimate) as a case study. We also perform a user study in which developers are asked to produce identical editors using both Papyrus and Jorvik demonstrating the substantial productivity and maintainability benefits that Jorvik delivers. © 2020, The Author(s).		Wei, R.; Zolotas, A.; Hoyos Rodriguez, H.; Gerasimou, S.; Kolovos, D.S.; Paige, R.F.	Software and Systems Modeling					ConflictExcluded	Excluded	new_screen			2		2020				
180		ModelGuidance	Towards automatic graphical concrete syntax generation for domain specific modeling languages [Vers la génération des syntaxes concrétes graphiques pour les langages de modélisation métier]	Model Driven Engineering (MDE) is an approach for designing complex systems based on, creating, manipulating and analyzing various models. Multiple Domain Specific Modeling Languages (DSMLs) are used for the creating of these models. It is then necessary to define the graphical representation of these languages. This paper describes concepts and mechanisms allowing to guide and to assist an expert from any engineering domain to define and formalize the concrete syntax of a graphical DSML considered as relevant in this domain. We define multiple classifications of the abstract syntax elements based both on the abstract syntax and on the concrete syntax. Grounded on those classifications, we present how a part of the concrete syntax can be generated automatically from an abstract syntax by a graphical role election. © 2015 Lavoisier.		Nastov, B.; Pfister, F.	Ingenierie des Systemes d'Information					Excluded	Excluded	new_screen			2		2015				
181		ModelGuidance	Research and application of community population information association model based on IoT multi-device mining	With the rapid development of big data and Internet of Things technologies, the amount of population information data has exploded, resulting in a series of research and application of population information data. However, the population information data is large and complex, so traditional statistical methods are too time-consuming and labor-intensive to meet data collection. This paper proposes a community population information association method based on IoT data mining. The method diversifies the population information data collected by multiple devices and makes appropriate adjustments to classic FP-Growth algorithm, which constructs a community population information association model based on improved FP-Growth algorithm and finally mines the corresponding association rules. The experimental results show that the association model can support the operation of big data in speed and memory. Furthermore, the mined association rules have been verified to have certain reliability. © 2019 Association for Computing Machinery.		Geng, J.; Qin, L.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2019				
182		ModelGuidance	Towards a sound modular model checking of collaboration-based software designs	Collaboration-based designs [2, 8, 11] are an effective software development approach due to its achievement in separation of concerns [5, 12]. These designs also demand a new model checking technique allowing to prove system correctness by verifying each collaboration individually with a minimum assumption about other collaborations. To verify a collaboration of multiple actors, a typical technique consists of constructing a standard cross-product of actor statecharts as global state space and then checking properties with respect to that global space. This paper initially points out some drawbacks of a previous approach [2] in verifying collaboration. Then, in addition to intra-object behaviors in statecharts as of [2], we first improve the technique by imposing additional constraints to model checking process via protocol invariants which are essentially inter-object behaviors. Due to these additional constraints, state space is reduced and more importantly, our model reflects more accurately about system behavior by eliminating those unreachable states. Second, a more general form, i.e. multiple exit and re-entry states, of the interface between two collaborations is used instead of a fixed interface with single exit and re-entry states. Some pre-processing work on reentry states and solutions to specifics of properties to be verified are also discussed regarding to the soundness of the verification algorithm. © 2003 IEEE.		Thang, N.T.; Katayama, T.	Proceedings - Asia-Pacific Software Engineering Conference, APSEC					Excluded	Excluded	new_screen			2		2003				
183		ModelGuidance	Workflow modeling process - A novel perspective	A novel method of formalizing the workflow abstraction modeling process is proposed based on interactive learning process of Perception Abstraction. Fundamental workflow perception is proposed to perceive the specific workflow of a particular field, by generating the set of workflow instance perceptions, which are induced from tracking to creating Fundamental Work Perception Class process. For the workflow instance perceptions with the same work type in FWPC, this paper provides workflow abstraction perception to aggregate them into three classes which are abstract class and generate Abstract Work Perception Class (AWPC) and Abstract Work Relation Class (AWRC). The workflow abstraction model is formally defined. The automatic constructing of a workflow abstraction model is described based on, AWPC and AWRC.		Nan, W.; Shanwu, S.	International Journal of Digital Content Technology and its Applications					Included	Excluded	new_screen			2		2011				
184		ModelGuidance	DeNet: An explicit distance ensemble model for person re-identification	In this paper, we address the problem of person reidentification (re-id), which remains to be challenging due to view point changes, pose variations, different camera settings, etc. Different from common methods that concatenate descriptors extracted from different support regions and feature channels directly as a long vector, we encode the importance of different feature channels and support regions explicitly and propose a two-layer distance ensemble model called DeNet to measure the similarity between two images. The first layer of DeNet combines distances of different support regions while the second layer weights different feature channels. Weight parameters of DeNet are learnt under the large margin framework with the goal of maximizing the difference between distances of positive and negative matching pairs. Our method achieves very competitive results on the widely used VIPeR and PRID 450S datasets. © 2015 IEEE.		Wang, J.; Gao, C.; Hu, J.; Sang, N.	Proceedings - 3rd IAPR Asian Conference on Pattern Recognition, ACPR 2015					Excluded	Excluded	new_screen			2		2016				
185		ModelGuidance	Paradigm shift from large releases to continuous deployment of software: Designing a reference model for continuous deployment	Continuous deployment (CD) is an essential method as software development companies move towards real-time business and continuous experiments. Powered by the lean and agile methods, CD aims for continuous deployment of valuable software. This doctoral research investigates what it will take to enable CD. The findings will be collected to generate a CD reference model. The research is initiated by studying existing literature and models for organisational assessment in relation to lean and agile approaches. Next, the focus is sharpened to capabilities that are required for enabling CD in information and communication technologies (ICT) industry. The research will apply literature reviews, case studies and the design science research (DSR) framework. © Springer International Publishing Switzerland 2015.		Karvonen, T.; Oivo, M.; Kuvaja, P.	Lecture Notes in Business Information Processing					Excluded	Excluded	new_screen			2		2015				
186		ModelGuidance	Generating hierarchical reference process model using fragments clustering	Process models are becoming more and more widespread in contemporary organizations. For the purpose of reducing cost and improve model quality, the ability to rapidly tailor a reference process to satisfy the changing of business requirements is necessary for organizations. In this context, how to provide a suitable reference process model for a specific domain becomes a challenging question. This paper proposes a method to automatically generate a hierarchical reference process model using fragments clustering from existing process variants. Similar fragments in process variants are detected and clustered firstly. Then an improved reference sub-process is discovered for each cluster of fragments based on a heuristic search. After fragments are replaced by reference sub-processes hierarchically, the refactored process variants are merged into the final reference process model. The quality and usability of the generated reference model are demonstrated by a case study and user experiment from a real industry scenario. © 2015 IEEE.		Ling, J.; Zhang, L.	Proceedings - Asia-Pacific Software Engineering Conference, APSEC					Included	Excluded	new_screen			2		2016				
187		ModelGuidance	Product design patterns for agent-based modeling	Since they were first introduced by architect Christopher Alexander in his classic book The Timeless Way of Building, design patterns have offered a powerful yet simple way to conceptualize and communicate designs in many disciplines. Design patterns became widely used for software development by the 1990's. These software design patterns have subsequently been shown to be of great value in improving the reliability and reducing the cost of software. Given that virtually all large-scale agent-based models are ultimately implemented in software, there is great potential for software design patterns to improve the practice of agent-based modeling. Several authors have discussed the use of patterns for agent-based modeling or agent-oriented software. This paper's contribution is that it provides an extensive set of both existing and new agent-based modeling design patterns, each of which is substantiated with at least three successful published example uses in models or modeling platforms. © 2011 IEEE.		North, M.J.; Macal, C.M.	Proceedings - Winter Simulation Conference					Excluded	Excluded	new_screen			2		2011				
188		ModelGuidance	A collaborative software development model based on formal concept analysis and stable matching	As the world shrinks into a global village, software development processes seek cooperation from multiple teams that are spread across the globe and possess their own unique capabilities and skills. Studies indicate that the Collaborative Software Development model has several advantages such as increased productivity and cost efficiency. However, it also poses the challenge of coordination and task assignment between dispersed and heterogeneous teams. In this paper, we propose a Formal Concept Analysis based model for skills oriented mapping between disparate teams and a set of software development tasks within a distributed and collaborative software development environment in a manner that is efficient, economical and fault-tolerant. Concepts extracted in the form of teams exhibiting common skills and software development tasks requiring specific skills are matched by using an extended version of the Stable Marriage Problem. The stable pairs so obtained are subsequently pruned with the objective of either minimizing the cost of allocation or maximizing the continuity of tasks. We also assess the redundancy for each task. Experimental results demonstrate the efficacy of our approach. © 2013 IEEE.		Singh, A.; Sachdeva, A.; Chakraverty, S.	2013 International Conference on Informatics, Electronics and Vision, ICIEV 2013					Excluded	Excluded	new_screen			2		2013				
189		ModelGuidance	Model-Based Performance Analysis of Software Architectures under Uncertainty	Performance analysis is often conducted before achieving full knowledge of a software system, in other words under a certain degree of uncertainty. Uncertainty is particularly critical in the performance domain when it relates to values of parameters such as workload, operational profile, resource demand of services, service time of hardware devices, etc. The goal of this paper is to explicitly consider uncertainty in the performance modelling and analysis process. In particular, we use probabilistic formulation of parameter uncertainties and present a Monte Carlo simulation-based approach to systematically assess the robustness of an architectural model despite its uncertainty. In case of unsatisfactory results, we introduce refactoring actions aimed at generating new software architectural models that better tolerate the uncertainty of parameters. The proposed approach is illustrated on a case study from the e-Health domain.		Trubiani, Catia; Meedeniya, Indika; Cortellessa, Vittorio; Aleti, Aldeida; Grunske, Lars	Proceedings of the 9th International ACM Sigsoft Conference on Quality of Software Architectures					Excluded	Excluded	new_screen			2		2013				
190		ModelGuidance	An Approach for Selective State Machine Based Regression Testing	Model-based regression testing is an important activity that ensures the reliability of evolving software. One of the major issues in this type of testing is the optimal selection of test-cases to test the affected portion of the software. In this paper, we present a UML based selective regression testing strategy that uses state machines and class diagrams for change identification. We identify the changes using the UML 2.1 semantics of state machines and class diagram. The changes are classified as Class-driven (obtained from class diagram) and State-driven (obtained from state machine). The Class-driven changes are important as these changes are not reflected on the state machines and they might be helpful in identifying some fault-revealing test cases. With the help of the identified changes, we classify the test cases of the test suite as Obsolete, Reusable, and Retestable. We apply the approach on a case study to demonstrate its validity.		Farooq, Qurat-ul-ann; Iqbal, Muhammad Zohaib Z.; Malik, Zafar I; Nadeem, Aamer	Proceedings of the 3rd International Workshop on Advances in Model-Based Testing					Included	Excluded	new_screen			2		2007				
191		ModelGuidance	Theoretical framework of quantitative analysis based information leakage warning system	The paper aims to propose a framework of information leakage warning system based on the principle of quantitative information flow. The quantification of information leakage has been widely used to decide the threshold of information leakage in program code but the purpose of the proposed framework is to use quantification based information leakage threshold to design practical information leakage warning system for real-time software. In the proposed framework, the software is considered as a collection of functions and each function is considered as register automata. Using the register automata working principles, the information leakage will be quantified during runtime of the software and when the software is in its pristine form. Based on the quantified amount of information leakage in both the cases, the framework warns the user about information leakage. Algorithmic steps of the proposed approach are also included in the paper. The proposed quantitative analysis based framework leads to flexible information security policy. © 2018 The Authors		Anjaria, K.; Mishra, A.	Karbala International Journal of Modern Science					Excluded	Excluded	new_screen			2		2018				
192		ModelGuidance	A Framework for Measurement Based Performance Modeling	Techniques for performance modeling are broadly classified into measurement, analytical and simulation based techniques. Measurement based performance modeling is commonly adopted in practice. Measurement based modeling requires the execution of a large number of performance tests to build accurate performance models. These performance tests must be repeated for every release or build of an application. This is a time consuming and error-prone manual process.In this paper, we present a framework for the systematic and automated building of measurement based performance models. The framework is based on our experience in performance modeling of two large applications: the DVD Store application by Dell and another larger enterprise application. We use the Dell DVD Store application as a running example to demonstrate the various steps in our framework. We present the benefits and shortcomings of our framework. We discuss the expected reduction in effort due to adopting our framework.		Thakkar, Dharmesh; Hassan, Ahmed E.; Hamann, Gilbert; Flora, Parminder	Proceedings of the 7th International Workshop on Software and Performance					Included	Excluded	new_screen			2		2008				
193		ModelGuidance	Component-based implementation of cyberattack simulation models	One of the fundamental concepts of software engineering today is reusability. The capability to reuse selected components and assemble them in such way to satisfy specific user requirements is a challenge that is also faced by the simulation and modeling community. Although the primary interest is in the ability to combine and recombine components, there is also a problem on locating and selecting the components that will best fit the requirements. The component selection process has been proven to be NP-complete. This research focuses on the identification of components specific to Petri Nets with Players, Strategies, and Cost (PNPSC) which are used to model cyberattack patterns. PNPSC models are briefly described and a process of determining their basic components is presented. Such initial decomposition requires the previous knowledge of the intended granularity, level of functionality of the component. This study proposes the granularity at two levels: fine-grain, when a component is defined by a section of an existing PNPSC pattern or coarse-grain, when the component is an existent full PNPSC pattern. Formal specification of the definition of the components, selection and the process of combining them in a new model are defined and a set of examples demonstrates its applicability to cyberattack simulation models. © 2019 Copyright held by the owner/author(s).		Mayfield, K.P.; Petty, M.D.; Whitaker, T.S.; Bland, J.A.; Cantrell, W.A.	ACMSE 2019 - Proceedings of the 2019 ACM Southeast Conference					Excluded	Excluded	new_screen			2		2019				
194		ModelGuidance	Model-based support for decision-making in architecture evolution of complex software systems	Design decision support for software architects in complex industrial software systems, such as software ecosystems and systemsof- systems, which feature extensive reuse of third-party solutions and a variety of deployment options, is still an open challenge. We describe three industrial use cases involving considerable rearchitecting, where on-premises solutions were migrated to a cloudbased IoT platforms. Based on these use cases, we analyse the challenges and derive requirements for an architecture knowledge model supporting this process. The presented methodology builds upon existing approaches and proposes a model for the description of extant software applications and the management of domain knowledge.We demonstrate its use to support the evolution and/or composition of software applications in a migration scenario in a systematic and traceable manner. © 2018 Association for Computing Machinery.		Plakidas, K.; Zdun, U.; Schall, D.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2018				
195		ModelGuidance	GenesLove.Me: A model-basedweb-Application for direct-To-consumer genetic tests	"The objective of this work was to enhance personalized medicine through the development and implementation of Genomic Information Systems (GeIS). For this, a web application called ""GenesLove.Me"" (GLM) was developed to provide direct-To-consumer genetic tests (DCGT). This paper focuses on the development of the business processes (BPMN) and a conceptual model (CM) for GLM, designed to analyze and improve the processes involved in this type of service and provide a model-based platform to manage genetic diagnoses in a scalable, secure and reliable way. Software Engineering (SE) approaches applied to the genomic context play a key role in the advancement of personalized and precision medicine. © 2017 by SCITEPRESS - Science and Technology Publications, Lda. All Rights Reserved."		Román, J.F.R.; Iñiguez-Jarrín, C.; López, O.P.	ENASE 2017 - Proceedings of the 12th International Conference on Evaluation of Novel Approaches to Software Engineering					Excluded	Excluded	new_screen			2		2017				
196		ModelGuidance	Model driven development of secure XML databases	In this paper, we propose a methodological approach for the model driven development of secure XML databases (DB). This proposal is within the framework of MIDAS, a model driven methodology for the development of Web Information Systems based on the Model Driven Architecture (MDA) proposed by the Object Management Group (OMG) [20], The XML DB development process in MIDAS proposes using the data conceptual model as a Platform Independent Model (PIM) and the XML Schema model as a Platform Specific Model (PSM), with both of these represented in UML. In this work, such models will be modified, so as to be able to add security aspects if the stored information is considered as critical. On the one hand, the use of a UML extension to incorporate security aspects at the conceptual level of secure DB development (PIM) is proposed; on the other, the previously-defined XML schema profile will be modified, the purpose being to incorporate security aspects at the logical level of the secure XML DB development (PSM). In addition to all this, the semi-automatic mappings from PIM to PSM for secure XML DB will be defined.		Vela, B.; Fernández-Medina, E.; Marcos, E.; Piattini, M.	SIGMOD Record					Included	Excluded	new_screen			2		2006				
197		ModelGuidance	Measurement-based software process modeling	Software process modeling has been recognized as an important topic since the early days of software engineering. Process modeling language plays a crucial role when it is used to define and analyze the processes. Complex processes have many elements and there are many potential ways to improve them. Without a quantitative understanding of the process steps, it is difficult to tell which ones are effective. Processes can be measured for size, effort, schedule and cost under successful performance. A process should be defined based on organization's intents or business goals. Although current studies on software process improvement have aroused interest of many researchers in this field, software development strategies do not provide a clear indication for constituents of software processes. Under this circumstance, an approach based on Unified Modeling Language (UML) was proposed in the present study to define a software process as an effective way for identifying and defining the essential process elements of good evaluating practice. The study aimed to embed quantitative evaluation faculty into project's process definition stage and satisfy the goal of organization process improvement. The proposed approach focused on the study of UML static models as class diagrams complemented with a set of Object Constraint Language (OCL) constraints. © 2011 Academic Jourmals Inc.		Shen, W.-H.; Hsueh, N.-L.; Chu, P.-H.	Journal of Software Engineering					Excluded	Excluded	new_screen			2		2011				
198		ModelGuidance	Stakeholder oriented enterprise architecture modelling	The enterprise architecture (EA) is defined as a coherent and consistent set of principles and rules that guides system design. In the EA modelling methods, an enterprise is identified with institution, business or administrative unit, a firm or an industrialized region. Beyond that, EA can be considered as a set of organizational attributes or activities. In this paper, the human roles' approach for EA development is emphasized. The paper is to answer the question of who is the stakeholder of EA, who is competent and responsible for the EA planning and development, and what activities must be realized to achieve the EA goals. At first, the paper presents the EA as a product and a process, next the EA evaluation characteristics are discussed. Finally, the EA modelling tool, i.e., ArchiMate is applied for stakeholder role visualizaton.		Pankowska, M.	ICE-B 2015 - 12th International Conference on e-Business, Proceedings; Part of 12th International Joint Conference on e-Business and Telecommunications, ICETE 2015					Excluded	Excluded	new_screen			2		2015				
199		ModelGuidance	Sound methods and effective tools for model-based security engineering with UML	Developing security-critical systems is difficult and there are many well-known examples of security weaknesses exploited in practice. Thus a sound methodology supporting secure systems development is urgently needed. We present an extensible verification framework for verifying UML models for security requirements. In particular, it includes various plugins performing different security analyses on models of the security extension UMLsec of UML. Here, we concentrate on an automated theorem prover binding to verify security properties of UMLsec models which make use of cryptography (such as cryptographic protocols). The work aims to contribute towards usage of UML for secure systems development in practice by offering automated analysis routines connected to popular CASE tools. We present an example of such an application where our approach found and corrected several serious design flaws in an industrial biometric authentication system. Copyright 2005 ACM.		Jürjens, J.	Proceedings - International Conference on Software Engineering					Included	Excluded	new_screen			2		2005				
200		ModelGuidance	A model driven approach to compose and develop Grid service workflow applications	We use a Domain Specific Language (DSL) based on UML activity diagrams (UML-AD) to specify and compose systematically workflow models from Grid services. To be executed, workflow activity diagram models should be translated into BPEL4WS models which will be executed by the BPEL4WS engine. To reach this objective, we propose a meta-model based transformation from UML activity diagrams to BPEL4WS language. To ensure the correctness and the completion of the transformation, we propose a graph homomorphic mapping between the activity diagram and BPEL4WS language elements. To execute the BPEL4WS provided model, we propose in this paper an execution infrastructure based on The Globus Tool Kit. © 2012 IEEE.		Hlaoui, Y.B.; Ben Ayed, L.J.; Ben Fradj, I.	2012 International Conference on Information Technology and e-Services, ICITeS 2012					Excluded	Excluded	new_screen			2		2012				
201		ModelGuidance	Discovering Services during Service-Based System Design Using UML	Recently, there has been a proliferation of service-based systems, i.e., software systems that are composed of autonomous services but can also use software code. In order to support the development of these systems, it is necessary to have new methods, processes, and tools. In this paper, we describe a UML-based framework to assist with the development of service-based systems. The framework adopts an iterative process in which software services that can provide functional and nonfunctional characteristics of a system being developed are discovered, and the identified services are used to reformulate the design models of the system. The framework uses a query language to represent structural, behavioral, and quality characteristics of services to be identified, and a query processor to match the queries against service registries. The matching process is based on distance measurements between the queries and service specifications. A prototype tool has been implemented. The work has been evaluated in terms of recall, precision, and performance measurements.		Spanoudakis, George; Zisman, Andrea	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Included	Excluded	new_screen			2		2010				
202		ModelGuidance	Patterns in complex systems modeling	The design, development, and use of complex systems models raises a unique class of challenges and potential pitfalls, many of which are commonly recurring problems. Over time, researchers gain experience in this form of modeling, choosing algorithms, techniques, and frameworks that improve the quality, confidence level, and speed of development of their models. This increasing collective experience of complex systems modellers is a resource that should be captured. Fields such as software engineering and architecture have benefited from the development of generic solutions to recurring problems, called patterns. Using pattern development techniques from these fields, insights from communities such as learning and information processing, data mining, bioinformatics, and agent-based modeling can be identified and captured. Collections of such `pattern languages' would allow knowledge gained through experience to be readily accessible to less-experienced practitioners and to other domains. This paper proposes a methodology for capturing the wisdom of computational modelers by introducing example visualization patterns, and a pattern classification system for analyzing the relationship between micro and macro behaviour in complex systems models. We anticipate that a new field of complex systems patterns will provide an invaluable resource for both practicing and future generations of modelers.		Wiles, J; Watson, J	IN℡LIGENT DATA ENGINEERING AND AUTOMATED LEARNING IDEAL 2005, PROCEEDINGS					Excluded	Excluded	new_screen			2		2005				
203		ModelGuidance	Liveness and reachability analysis of BPMN process models	"Business processes are usually defined by business experts who require intuitive and informal graphical notations such as BPMN (Business Process Management Notation) for documenting and communicating their organization activities and behavior. However, BPMN has not been provided with a formal semantics, which limits the analysis of BPMN models to using solely informal techniques such as simulation. In order to address this limitation and use formal verification, it is necessary to define a certain ""mapping"" between BPMN and a formal language such as Concurrent Sequential Processes (CSP) and Petri Nets (PN). This paper proposes a method for the verification of BPMN models by defining formal semantics of BPMN in terms of a mapping to Time Petri Nets (TPN), which are equipped with very efficient analytical techniques. After the translation of BPMN models to TPN, verification is done to ensure that some functional properties are satisfied by the model under investigation, namely liveness and reachability properties. The main advantage of our approach over existing ones is that it takes into account the time components in modeling Business process models. An example is used throughout the paper to illustrate the proposed method."		Rachdi, A.; En-Nouaary, A.; Dahchour, M.	Journal of Computing and Information Technology					Included	Excluded	new_screen			2		2016				
204		ModelGuidance	MODELING, DEPLOYING, AND CONTROLLING VOLATILE FUNCTIONALITIES IN WEB APPLICATIONS	One of the main characteristics of most Web applications is their high dynamism. Once implemented and deployed for the first time, new functionalities are added to meet new or changed requirements. Some of these functionalities may appear on the Web in response to an unexpected event, or phenomena (such as a natural calamity) after which they are removed. Some others are activated periodically, to coincide with a particular date, or period of the year (such as, return to school, Christmas holidays, etc.). Implementing such volatile functionalities usually impacts on a number of aspects of a Web application, including content, navigation, presentation, business processes, and user operations. Their cyclic activation/deactivation, which requires repetitive changes in the application code, may be the cause of waste of effort and application quality deterioration, up to incorrect functioning. In this paper, we present an approach to decouple the design and implementation of volatile functionalities from that of stable ones, i.e. the core functionalities of the application. The approach is instantiated in the context of the Object-Oriented Hypermedia Design Method (OOHDM), but its principles and related techniques are generally applicable to any other Web engineering method. We show how our approach enables the deployment and removal of these functionalities in a cost-effective and safe way and at runtime, thus providing business agility. A framework to classify volatile functionalities and a number of examples are also reported.		Urbieta, Matias; Rossi, Gustavo; Distante, Damiano; Ginzburg, Jeronimo	INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING					Excluded	Excluded	new_screen			2		2012				
205		ModelGuidance	Collaborative redundant agents: Modeling the dependences in the diversity of the agents' errors	As computing becomes pervasive, there are increasing opportunities for building collaborative multiagent systems that make use of multiple sources of knowledge and functionality for validation and reliability improvement purposes. However, there is no established method to combine the agents' contributions synergistically. Independence is usually assumed when integrating contributions from different sources. In this paper, we present a domain-independent model for representing dependences among agents. We discuss the influence that dependence-based confidence determination might have on the results provided by a group of collaborative agents. We show that it is theoretically possible to obtain higher accuracy than that obtained under the assumption of independence among the agents. We empirically evaluate the effectiveness of a collaborative multiagent system in the presence of dependences among the agents, and to analyze the effects of incorrect confidence integration assumptions. © 2011 Springer-Verlag.		Zavala, L.; Huhns, M.; García-Vega, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2011				
206		ModelGuidance	MS2Web: Applying MDA and SOA to web services	Service-oriented architectures (SOA) are touted as the key to business agility, especially when combined with a model-driven approach. Model-Driven Architecture (MDA) is a well-developed concept that fits well with web services, but until now it has been a specialized technique that is beyond practical application scope of most enterprises. In this paper, we describe the initial investigation in the fields of applying MDA and generative SOA to web services (MS2Web). Our view is that MDA aims at providing a precise framework for generative web service software production. We propose here an initial exploration of some basic artifacts of the MDA and SOA space to web services. Because all these artifacts may be considered as assets for the organization where the MDA is being deployed with SOA, we are going to talk about MDA and SOA abstract components to apply web service business applications. We also discuss the key characteristics of the two modeling architectures, focusing on the classification of models that is embodied by each for web services. The flow of modeling activity is discussed in the two architectures together with a discussion of the support for the modeling flows provided by MDA. We also describe a modeling of case study for web services with two architectures. Our model of the framework - a combined modeling architecture - is introduced which illustrates how the two architectures can be brought together into a synergistic whole, each reinforcing the benefits of the other with case study. © 2008 Springer-Verlag Berlin Heidelberg.		Kim, H.-K.; Lee, R.Y.	Studies in Computational Intelligence					Excluded	Excluded	new_screen			2		2008				
207		ModelGuidance	Evaluating the impact of developers’ personality on the intention to adopt model-driven web engineering approaches: an observational study	Context: During the last decades, MDWE approaches have claimed important advantages in terms of short and long term productivity and maintainability gains. Despite this, they suffer from a low level of adoption. Being a complex socio-technical activity, individual developer’s characteristics such as personality are likely to be playing an important role on such low adoption rate. Objective: To study the main software developer’s personality factors (extroversion, neuroticism and psychoticism) that may be contributing to the low adoption rate of MDWE approaches. Method: We have proposed a theoretical model that has guided the design of an observational study with 71 subjects from the University of Alicante. After following an MDWE course, the subjects were measured both in terms of their psychological profile and their intention to adopt an MDWE approach in the future. Results: The study shows that neuroticism significantly influences the intention to adopt an MDWE approach: subjects rating high in this dimension regard MDWE as significantly more difficult to use, and they show lower interest in using MDWE in future developments. Conclusions: According to our data, in order to reach a wider audience, MDWE approaches need to improve their ease of use, and limit the amount of potential developer’s stressors. © Springer International Publishing AG, part of Springer Nature 2018.		Toala, G.; Diéguez, M.; Cachero, C.; Meliá, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2018				
208		ModelGuidance	Toward a quality framework for business process models	Business process modeling is recognized as a key part of the business process lifecycle. It is during this stage that a conceptual model is produced by collecting business process requirements and representing them with a specific business process notation. While there has been much research into process modeling techniques, little has taken place with regard to the characteristics that should be considered for an effective assessment of the models' quality. This paper presents a synthesis of quality characteristics for business process models, based on a systematic review of the relevant literature. It then goes on to describe a reference model for the quality assessment of business process models, and to relate the aforementioned quality characteristics to existing relevant process model measures. These relations may help organizations to guide the improvement of their business process models according to their chosen quality characteristics. © 2013 World Scientific Publishing Company.		Sánchez-González, L.; García, F.; Ruiz, F.; Piattini, M.	International Journal of Cooperative Information Systems					Excluded	Excluded	new_screen			2		2013				
209		ModelGuidance	On the performance of UML state machine interpretation at runtime	Modelling system behaviour by means of UML Behavioral State Machines is an established practice in software engineering. Usually, code generation is employed to create a system's software components. Although this approach yields software with a good runtime performance, the resulting system behaviour is static. Changes to the behaviour model necessarily provoke an iteration in the code generation workflow and a re-deployment of the generated artefacts. In the area of autonomic systems engineering, it is assumed that systems are able to adapt their runtime behaviour in response to a changing context. Thus, the constraints imposed by a code generation approach make runtime adaptation difficult, if not impossible. This article investigates a solution to this problem by employing interpretation techniques for the runtime execution of UML State Machines, enabling the adaptability of a system's runtime behaviour on the level of single model elements. This is done by devising concepts for behaviour model interpretation, which are then used in a proof-of-concept implementation to demonstrate the feasibility of the approach. For a quantitative evaluation we provide a performance comparison between the proof-of-concept implementation and generated code for a number of benchmark models. We find that UML State Machine interpretation has a performance overhead when compared with static code generation, but found it to be adequate for the majority of situations, except when dealing with high-throughput or delay-sensitive data. © 2011 ACM.		Höfig, E.; Deussen, P.H.; Schieferdecker, I.	Proceedings - International Conference on Software Engineering					Included	Excluded	new_screen			2		2011				
210		ModelGuidance	An approach to refinement checking of SysML requirements	During last years, the importance of safety aspects in industry has significantly increased. System engineering modeling language SysML is widely used in order to manage increasing complexity of embedded systems. Being just a modeling language, SysML does not provide integrated means of verification and validation for its models. Therefore, additional efforts are needed for checking consistency of models. This work shows efforts towards integrating embedded systems modeling with verification measures, namely, with refinement checking (checking whether a system description is really an implementation of another, more abstract, system description) applied to statemachines linked to SysML requirements. We show how such verification can be done automatically with the help of externally implemented tools. © 2011 IEEE.		Makartetskiy, D.; Sisto, R.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					Excluded	Excluded	new_screen			2		2011				
211		ModelGuidance	Towards a framework for distributed and collaborative modeling	Increasingly, models are becoming first class core assets, and model-driven engineering requires novel techniques, tools, and practices to face the globalization of software development in the (always more) pervasive IT world. This paper proposes a framework for synchronous and asynchronous concurrent and collaborative modeling. Synchronous collaborative modeling offers services for sharing the modeling space, models, documentation, and configuration, while asynchronous collaborative modeling offers services for supporting merging of models modified and edited separately by different software engineers. Our approach is based on the observation that it is in general more convenient to store differences between subsequent versions of a system than the whole models of each stage. © 2009 IEEE.		Cicchetti, A.; Muccini, H.; Pelliccione, P.; Pierantonio, A.	Proceedings of the Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises, WETICE					Included	Excluded	new_screen			2		2009				
212		ModelGuidance	Modeling IT Processes: A Case Study using Microsoft Orchestrator	The Information Technology field engages in many routine processes such as creating new users, assigning admin rights, and updating servers. Many of these processes can be automated using a choice of software programs on the market, including Microsoft Orchestrator. This software system provides a friendly graphical interface for automating, standardizing, and improving operational processes. However, a lack of conceptual representation of processes makes it more difficult for end users to understand an existing process or simulate a new one. This paper presents a way to model such processes conceptually using a proposed diagrammatic language that is based on “machines of flow things.” A case study is carried out using a real-life example from Microsoft Orchestrator to model an automated process of assigning on-demand and monitored admin rights to users on a PC. The finished model can be used for documentation, management, and control.		S. Al-Fedaghi; M. Alsharah	2018 International Conference on Advances in Computing and Communication Engineering (ICACCE)					Excluded	Excluded	new_screen			2		2018				
213		ModelGuidance	Contradiction finding and minimal recovery for UML class diagrams	UML (Unified Modeling Language) is the de facto standard model representation language in software engineering. We believe that automated contradiction detection and repair of UML become very important as UML has been widely used. In this paper, we propose a debugging system using logic programming paradigm for UML class diagram with class attributes, multiplicity, generalization relation and disjoint relation. We propose a translation method of a UML class diagram into a logic program, and using a meta-interpreter we can find (set-inclusion-based) minimal sets of rules which leads to contradiction. Then, we use a minimal hitting set algorithm developed by one of the authors to show minimal sets of deletion of rules in order to avoid contradiction. © 2006 IEEE.		Satoh, K.; Kaneiwa, K.; Uno, T.	Proceedings - 21st IEEE/ACM International Conference on Automated Software Engineering, ASE 2006					Excluded	Excluded	new_screen			2		2006				
214		ModelGuidance	Formal verification of internal block diagram of SysML for modeling real-time system	SysML is a graphical modeling language that is mostly used for the graphical representation of real-time systems, complex systems, safely critical systems, and embedded systems. In this paper, we present a methodology based on model checking tool for the correction and verification of SysML internal block diagram with discrete time constraint. We describe the mapping of SysML internal block diagram to PRISM input language and use Probabilistic Computational Tree Logic (PCTL) for the verification of properties. The methodology provides more reliable and quick results for the development of real time systems as PRISM supports parallel composition of components. Finally, we present the effectiveness of our approach with the help of a case study of real-time system. The discrete time factor is included in the case study to evaluate the performance characteristics of system functionality. © 2015 IEEE.		Ali, S.; Basit-Ur-Rahim, M.A.; Arif, F.	2015 IEEE/ACIS 16th International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD 2015 - Proceedings					Excluded	Excluded	new_screen			2		2015				
215		ModelGuidance	Semantic Model-based Dynamic Adaptation Method for Heterogeneous Peripherals of Instrument	Different hardware interface circuits and corresponding external device drivers and functional modules are needed to be designed and developed to meet specific product configuration requirements in the traditional instrument development model. However, due to the high coupling degree of instrument software development system architecture and inefficient management and reuse of design resources, the development of instrument devices with different peripherals (sensors, actuators, etc.) based on the same type of instrument microcontroller chip(IMC) still needs a lot of development work, which has been unable to meet the needs of the rapid development of multi-protocol, multi-service, multi-perception and multi-series instrument equipment. This paper presents a dynamic adaptation method of instrument heterogeneous peripherals based on semantic model, which can support the rapid development of product families based on the same core chip but with different peripherals. By using the instrument-specific development kit, the semantic model is customized and instantiated according to the requirement information of heterogeneous peripheral devices. Then the model instance is parsed to obtain the resource adaptation software code of the heterogeneous peripheral. In particular, this method designs the statically compiled adaptation mode and the dynamically running adaptation mode respectively for resource-constrained and resource-rich instrument forms, which can support the rapid development of a family of products with the same core chip but different peripherals as well as the dynamic replacement of peripherals during the use of instrument and equipment. The method we proposed can reduce the product cost and shorten the development cycle of instrument products compared with the traditional development mode. © 2021 IEEE.		Chen, J.; Liu, R.; Zhang, J.	2021 International Conference on Digital Society and Intelligent Systems, DSInS 2021					Included	Excluded	new_screen			2		2021				
216		ModelGuidance	An integrative approach for embedded software design with UML and simulink	The increased amount of software in automotive embedded systems has challenged its C code development to successfully manage software design, reuse, flexibility and efficient implementation. Modelbased methods help to address such challenges with more abstract specification, code generation and simulation to determine if software design will meet requirements. However, in today's development processes lots of different legacy artifacts are involved, that hamper a frictionless migration from C code to model-based design. Therefore, migration concepts and adequate domain-specific methods with adoption of modeling languages and their tools in established embedded coding environments are needed. In our approach we present a novel migration concept considering the integration of two different modeling languages UML and Simulink in a traditional automotive software engineering process. The proof is demonstrated within the software development of a real automotive car door-controller ECU. © 2009 IEEE.		Farkas, T.; Neumann, C.; Hinnerichs, A.	Proceedings - International Computer Software and Applications Conference					Included	Excluded	new_screen			2		2009				
217		ModelGuidance	Conceptual modeling of multimedia search applications using rich process models	With the advent of the Web, search has become the prominent paradigm for information seeking, both across the online space and within enterprises. Search frameworks and components can be used to build search-based applications in the most diverse vertical fields. This paper explores Model Driven Development and model transformations as a paradigm for developing search-based applications, considered as process- and content-intensive applications. A rich process model, obtained by extending BPMN, is proposed as the starting point of development, followed by a set of semi-automatic model transformations that lead from the conceptualization of requirements to the running code. © 2009 Springer Berlin Heidelberg.		Bozzon, A.; Brambilla, M.; Fraternali, P.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2009				
218		ModelGuidance	Modeling a mobile learning context data ontology	One of the aspects brought by the use of connected mobile devices in education is the possibility of learning in different environments, using physical environmental factors in its advantage. These factors are part of what we define as 'mobile context', which is comprised by different information dimensions: temporal, physical, and social. This information can be modelled as an ontology and used in conjunction with existing pedagogical methodologies and educational content to enhance the learning process. In this paper, we propose ontologies to represent and integrate mobile context data and learning objectives. The former represents the dimensions involved in a virtual learning environment accessed by a mobile device and the latter represents learning objectives as part of pedagogical methodologies. Integration of both is achieved by combining them with an existing educational content ontology to establish an information structure to be used by virtual learning environments when accessed from mobile devices. A scenario of application is also provided. © 2017 IEEE.		Casals, A.; Brandão, A.A.F.	EDUNINE 2017 - IEEE World Engineering Education Conference: Engineering Education - Balancing Generalist and Specialist Formation in Technological Carriers: A Current Challenge, Proceedings					Excluded	Excluded	new_screen			2		2017				
219		ModelGuidance	A modelling framework for sharing knowledge	Enterprise Modelling can be used successfully for different purposes, which includes capturing enterprise knowledge. However, one of the weaknesses of Enterprise Modelling is the lack of strong links with software generation. Model Driven Engineering attempts to solve this situation by promoting the use of models and their transformations in the software development process. In this context, the use of enterprise models that are able to capture knowledge and help to implement Knowledge Management Systems would be an important step forward. In this paper, we present a proposal for Enterprise Modelling focused on enterprise knowledge. It starts from the CIM level and follows a model-driven approach. The modelling proposal provides a conceptual framework that allows enterprises to share knowledge by using a defined UML2 Profile for Modelling Enterprise Knowledge. © Springer-Verlag Berlin Heidelberg 2007.		Grangel, R.; Chalmeta, R.; Campos, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2007				
220		ModelGuidance	Design and evaluation of a web-based modeling platform to support the learning of conceptual modeling and of studying the corresponding learning processes	The research presented in this dissertation proposal aims at designing, developing, evaluating and studying a web-based modeling platform to support the learning of conceptual modeling and of studying the corresponding learning processes. More specifically, this research project is situated in a distance learning and teaching context and pursues the primary objective of creating a learning and teaching software for guiding and supporting the learning of conceptual modeling and of providing the instructor with means to observe individual and aggregate learning processes. Learner interaction with graphical model editors is tracked and analytics allow for insights at the individual and aggregate learner levels.		Ternes, B.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2017				
221		ModelGuidance	A two-level modelling approach to acquire functional design knowledge in mechanical engineering systems	Modelling as a means of knowledge acquisition has been proposed by some workers in artificial intelligence. In this paper the authors describe an approach using two-level knowledge modelling that employs the concepts of a functional model (extended FEBS model) and an object model to capture domain-specific functional design knowledge. The functional model serves as a basis for communication between domain experts and a knowledge engineer. The object model is used to bridge the gap between the functional model and an executable knowledge base. The approach is viewed as an important method for building a function-laden knowledge base that is useful for developing a knowledge-based functional design expert system. The proposed knowledge acquisition method is applied to an automatic assembly system for manufacturing electronic connectors to illustrate the general idea.		Zhang, W.Y.; Tor, S.B.; Britton, G.A.	International Journal of Advanced Manufacturing Technology					Included	Excluded	new_screen			2		2002				
222		ModelGuidance	Model-Based Development of Dynamically Adaptive Software	Increasingly, software should dynamically adapt its behavior at run-time in response to changing conditions in the supporting computing and communication infrastructure, and in the surrounding physical environment. In order for an adaptive program to be trusted, it is important to have mechanisms to ensure that the program functions correctly during and after adaptations. Adaptive programs are generally more difficult to specify, verify, and validate due to their high complexity. Particularly, when involving multi-threaded adaptations, the program behavior is the result of the collaborative behavior of multiple threads and software components. This paper introduces an approach to create formal models for the behavior of adaptive programs. Our approach separates the adaptation behavior and non-adaptive behavior specifications of adaptive programs, making the models easier to specify and more amenable to automated analysis and visual inspection. We introduce a process to construct adaptation models, automatically generate adaptive programs from the models, and verify and validate the models. We illustrate our approach through the development of an adaptive GSM-oriented audio streaming protocol for a mobile computing application.		Zhang, Ji; Cheng, Betty H. C.	Proceedings of the 28th International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2006				
223		ModelGuidance	Checking architectural and implementation constraints for domain-specific component frameworks using models	Software components are used in various application domains, and many component models and frameworks have been proposed to fulfill domain-specific requirements. The ad-hoc development of these component frameworks hampers the reuse of tools and abstractions across different frameworks. We believe that in order to promote the reuse of components within various domain contexts an homogeneous design approach is needed. A key requirement of such an approach is the definition and validation of reusable domain-specific constraints. In this paper we propose an extension to the Hulotte component framework that allows the definition and checking of domain-specific concerns. From the components' architecture to their implementations, concerns are defined and checked in an homogeneous manner. Our approach is illustrated and evaluated through the design of an example component-based application for the multitasking and distributed domains. © 2009 IEEE.		Noguera, C.; Loiret, F.	Conference Proceedings of the EUROMICRO					Excluded	Excluded	new_screen			2		2009				
224		ModelGuidance	Model-based Security Engineering for Secure Systems Development	Security of software and systems is becoming more and more important in the context of the rapid rise of distributed communication systems and their use into the private life of each individual. The development of new software is also accompanied by an immense time and cost pressure. The aspects of IT-security are therefore often not considered within the software development process. The aim of this work is to contribute to the improvement of the integration of security engineering into software engineering. A model-based approach for determination of assets, security objectives, threats, and attacks is presented. The derivation of functional requirements for the software development process from these artefacts is explained.		A. Lunkeit; H. Pohl	ARCS Workshop 2018; 31th International Conference on Architecture of Computing Systems					Included	Excluded	new_screen			2		2018				
225		ModelGuidance	Modeling and verifying transaction scheduling for software transactional memory using CSP	Transaction Memory (TM) is designed for simplifying parallel programming, while some key problems exist in it, such as starvation and reduced performance with high contention among transactions. In order to improve the performance of TM, researchers have designed several transaction scheduling algorithms and given their experimental results. However, the evaluations on the algorithms given by these researches are rather partial and lack of generality. Since these experimental results ignore the verification of properties which are necessary for transaction scheduling and could be greatly affected by the execution environment, thus it is still challenging for us to judge the quality of the algorithms for TM. In this paper, we provide a formal approach to evaluate transaction scheduling algorithms in a more comprehensive and strict way. We choose three recently proposed algorithms as motivating examples and formalize them using the process algebra CSP. We also use a model checker PAT to verify the properties (e.g., deadlock freeness and starvation freeness) of the models. Besides, it is also easier to compare the performance of the algorithms, from the perspective of makespan, speedup, aborts time and throughput, based on the statistics given by PAT. Consequently, a formal approach can be achieved to evaluate transaction scheduling algorithms, which is also a good guide for the further design of the algorithms for TM. © 2019 IEEE.		Xu, C.; Wu, X.; Zhu, H.; Popovic, M.	Proceedings - 2019 13th International Symposium on Theoretical Aspects of Software Engineering, TASE 2019					Excluded	Excluded	new_screen			2		2019				
226		ModelGuidance	Security software formal modeling and verification method based on UML and Z	With the continuous expansion of software application range and the frequent occurrence of software security accidents, software security has become the focus of attention. This paper proposes a security software formal modeling and verification method, which uses UML to organize the basic structure of software, and uses Z specification to supply security semantics for UML model in order to support formal model verification. This method can guarantee the security of software design, while reducing the complexity of formal modeling. On this basis, this paper also introduces a website register function as case study and discovers the security flaws in the system design; the effectiveness and practicality of this method is then demonstrated. © 2012 Springer-Verlag Berlin Heidelberg.		Cao, K.; Li, X.; Xing, J.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2013				
227		ModelGuidance	A Model Driven Method to Design and Analyze Secure Architectures of Systems-of-Systems	Context: Systems-of-Systems (SoS) is becoming the major paradigm for engineering next generation solutions such as smart cities, health-care and emergency response. However, SoS differentiating characteristics, such as emergent behavior, may introduce specific issues that make ensuring their security a critical challenge. Objective: the aim of this study is to investigate how Software Engineering approaches can be extended to model and analyze secure SoS solutions for discovering high impact cascading attacks at the architecture stage. Method: in order to achieve our objective, we followed the guidelines of Model Driven Engineering to propose a method, Systems-of-Systems Security (SoSSec), that comprises: (1) an architectural description language for modeling SoS and its vulnerabilities and (2) a MultiAgent System for security analysis of SoS architectures. © 2017 IEEE.		Hachem, J.E.; Khalil, T.A.; Chiprianov, V.; Babar, A.; Aniorte, P.	Proceedings of the IEEE International Conference on Engineering of Complex Computer Systems, ICECCS					ConflictIncluded	Excluded	new_screen			2		2018				
228		ModelGuidance	UML activity diagrams for OWL ontology building	Building efficiently an ontology is a crucial task for most of the applications involving knowledge representation. In particular, applications dealing with dynamic processes directly shaping the ontological domain need the conceptualization of complex activities within this domain. For this purpose, we propose to develop an OWL ontology based on UML activity diagrams. Indeed, the Unified Modeling Language (UML) is a well-known visual language widely adopted for software specification and documentation. UML consists in structure as well as behaviour notations such as activity diagrams which describe the flow of control and data through the various stages of a procedure. Our approach has been successfully validated in a study case of an ontology with a publication repository domain. Copyright © 2015 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.		Olszewska, J.I.	IC3K 2015 - Proceedings of the 7th International Joint Conference on Knowledge Discovery, Knowledge Engineering and Knowledge Management					Included	Excluded	new_screen			2		2015				
229		ModelGuidance	A relational model for formal object-oriented requirement analysis in UML	This paper is towards the development of a methodology for object-oriented software development. The intention is to support effective use of a formal model for specifying and reasoning during the requirements analysis and design of a software development process. The overall purpose is to enhance the application of the Unified Modelling Language (UML) with a formal semantics in the Rational Unified Software Development Process (RUP). The semantic framework defines the meaning of some UML submodels. It identifies both the static and dynamic relationships among these submodels. Thus, the focus of this paper is the development of a semantic model to consistently combine a use-case model and a conceptual class diagram to form a system specification.		Liu, ZM; He, JF; Li, XS; Chen, YF	FORMAL METHODS AND SOFTWARE ENGINEERING, PROCEEDINGS					Included	Excluded	new_screen			2		2003				
230		ModelGuidance	Modelling families of business process variants: A decomposition driven method	Business processes usually do not exist as singular entities that can be managed in isolation, but rather as families of business process variants. When modelling such families of variants, analysts are confronted with the choice between modelling each variant separately, or modelling multiple or all variants in a single model. Modelling each variant separately leads to a proliferation of models that share common parts, resulting in redundancies and inconsistencies. Meanwhile, modelling all variants together leads to less but more complex models, thus hindering on comprehensibility. This paper introduces a method for modelling families of process variants that addresses this trade-off. The key tenet of the method is to alternate between steps of decomposition (breaking down processes into sub-processes) and deciding which parts should be modelled together and which ones should be modelled separately. We have applied the method to two case studies: one concerning the consolidation of existing process models, and another dealing with green-field process discovery. In both cases, the method produced fewer models with respect to the baseline and reduced duplicity by up to 50% without significant impact on complexity. © 2015 Elsevier Ltd.		Milani, F.; Dumas, M.; Ahmed, N.; Matulevičius, R.	Information Systems					Included	Excluded	new_screen			2		2016				
231		ModelGuidance	Test generation for RTES from SysML models: Context, motivations and research proposal	This paper presents the context, motivations and perspectives of my PhD research about model-based testing for real-time and embedded systems using SysML. This work is based on an existing model-based approach which has been proposed during the VETESS project. This approach aims to generate tests for embedded systems. In this paper, we identify areas of improvement, which permit us to evolve the initial approach by taking into account real-time aspects. This will contribute to an automated Model-Based Testing toolchain for real-time and embedded systems. © 2013 IEEE.		Gauthier, J.-M.	Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013					Excluded	Excluded	new_screen			2		2013				
232		ModelGuidance	An Experiment on Process Model Understandability Using Textual Work Instructions and BPMN Models	It is widely accepted that presenting data in the form of pictures or models can enhance comprehension, decision making and communication of the underlying information. However, there are few systematic studies that examine whether graphical models are more effective than other representation (such as textual descriptions). Process models provide an abstract graphical view of organizational procedures by reducing the complex reality of the work performed by a company to its most important activities. Such models are useful to train new employees, to document and allow improving organizational procedures and policies. This paper describes an experiment to address if there are significant differences in terms of process understand ability depending on whether textual work instructions or process models are used to represent a business process. We compared a control group of subjects that received textual work instructions to a second group, which received process models, in terms of their ability to understand the process. We found empirical support that using textual work instructions or process models do not influence process understand ability for non-expert users but do influence for experienced users.		R. De A. Rodrigues; M. De O. Barros; K. Revoredo; L. G. Azevedo; H. Leopold	2015 29th Brazilian Symposium on Software Engineering					Excluded	Excluded	new_screen			2		2015				
233		ModelGuidance	Model-Driven Development of SOA-Based Driver Assistance Systems	This paper describes an approach towards model-driven development of SOA-based Driver Assistance Systems. In the field of assistance systems for truck and trailer combinations Service-oriented Architecture (SOA) is a promising approach to handle the heterogeneity and the high degree of distribution of these systems. Through connecting or disconnecting trailers the system is very likely to change at runtime which sets up the demand of runtime adaption. This paper illustrates a process model to use SoaML for modeling the components and architectures of these systems. Based on these models, model-driven runtime adaption can be carried out.		Wagner, Marco; Zöbel, Dieter; Meroth, Ansgar	SIGBED Rev.					Included	Excluded	new_screen			2		2013				
234		ModelGuidance	An architecture for access control management in collaborative enterprise systems based on organization models	One of the most important characteristics of current enterprise systems is the existence of collaborative processes where different users/subsystems communicate and cooperate in order to carry out common activities. In these processes, shared resources are often used and there are complex relationships between activities and users, so the definition and administration of different security levels (tasks, users, resources, etc.) is necessary. In this article, we shall focus on an important dimension related to the security aspect of collaborative systems: access control. We shall use an organization model that considers the necessary elements to represent authorization and access control aspects in enterprise systems. This model is used in a service-oriented architecture (SOA) in order to facilitate the implementation of a service which is responsible for these important functions. Finally, we shall propose the use of a pattern definition language at a conceptual level to facilitate the modelling of the organizational structures of an enterprise system. We shall specify organization patterns that will help us define general models which can be applied in different situations. © 2006 Elsevier B.V. All rights reserved.		Gutiérrez Vela, F.L.; Isla Montes, J.L.; Paderewski Rodríguez, P.; Sánchez Román, M.; Jiménez Valverde, B.	Science of Computer Programming					Excluded	Excluded	new_screen			2		2007				
235		ModelGuidance	An integrated role-based approach for modeling, designing and implementing multi-agent systems	To facilitate the development of multi-agent systems and improve the reusability, robustness and feasibility of these systems, we have developed a role-based agent development framework (RADE). In this paper, we present an integrated approach for modeling, designing and implementing multi-agent systems using RADE. We describe the design of agents and motivations within such framework. We introduce a practical approach for modeling agent's motivation and specifying agent's goals, where a role-agent mapping mechanism is developed based on this design. Dynamic task allocation is achieved through the creation of role instances and the mapping from role instances to agents. We also introduce the RTJEMS language based on the extension of TÆMS to model the plan tree for each goal. This representation enables the reuse of general planning/scheduling and collaboration/cooperation mechanisms developed in multi-agent system research community. We have developed an automatic agent generation interface and also implemented a simple demo system in health care domain.		Zhang, X.; Xu, H.; Shrestha, B.	Journal of the Brazilian Computer Society					ConflictExcluded	Excluded	new_screen			2		2007				
236		ModelGuidance	A model-driven approach for crowdsourcing search	"Even though search systems are very efficient in retrieving world-wide information, they can not capture some peculiar aspects and features of user needs, such as subjective opinions and recommendations, or information that require local or domain specific expertise. In this kind of scenario, the human opinion provided by an expert or knowledgeable user can be more useful than any factual information retrieved by a search engine. In this paper we propose a model-driven approach for the specification of crowd-search tasks, i.e. activities where real people - in real time - take part to the generalized search process that involve search engines. In particular we define two models: the ""Query TaskModel"", representing the metamodel of the query that is submitted to the crowd and the associated answers; and the ""User Interaction Model"", which shows how the user can interact with the query model to fulfill her needs. Our solution allows for a top-down design approach, from the crowd-search task design, down to the crowd answering system design. Our approach also grants automatic code generation thus leading to quick prototyping of search applications based on human responses collected over social networking or crowdsourcing platforms. Copyright © 2012 for the individual papers by the papers authors."		Bozzon, A.; Brambilla, M.; Mauri, A.	CEUR Workshop Proceedings					Included	Excluded	new_screen			2		2012				
237		ModelGuidance	An MDE method for improving deep learning dataset requirements engineering using alloy and UML	Since the emergence of deep learning (DL) a decade ago, only few software engineering development methods have been defined for systems based on this machine learning approach. Moreover, rare are the DL approaches addressing specifically requirements engineering. In this paper, we define a model-driven engineering (MDE) method based on traditional requirements engineering to improve datasets requirements engineering. Our MDE method is composed of a process supported by tools to aid customers and analysts in eliciting, specifying and validating dataset structural requirements for DL-based systems. Our model driven engineering approach uses the UML semi-formal modeling language for the analysis of datasets structural requirements, and the Alloy formal language for the requirements model execution based on our informal translational semantics. The model executions results are then presented to the customer for improving the dataset validation activity. Our approach aims at validating DL-based dataset structural requirements by modeling and instantiating their datatypes. We illustrate our approach with a case study on the requirements engineering of the structure of a dataset for classification of five-segments digits images. Copyright © 2021 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.		Ries, B.; Guelfi, N.; Jahić, B.	MODELSWARD 2021 - Proceedings of the 9th International Conference on Model-Driven Engineering and Software Development					Excluded	Excluded	new_screen			2		2021				
238		ModelGuidance	Introducing the evaluation of complexity in functional size measurement: A UML-based approach	Functional Size Measures are often used for effort estimation. However, these measures do not take into account the amount and complexity of elaboration required, concentrating instead on the amount of data accessed or moved. Methods for measuring the functional complexity have been proposed, but, being based on the textual description of requirements, are not very easy to apply. In this paper we show that measurement-oriented UML modeling can support the measurement of both functional size and functional complexity. We show, by means of a case study, that it is reasonably easy to derive different types of functional size measures, as well as complexity measures, from UML models. We show also that it is possible to build models for effort estimation that use the functional size and complexity measures as independent variables. © 2010 ACM.		Lavazza, L.; Robiolo, G.	ESEM 2010 - Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement					Excluded	Excluded	new_screen			2		2010				
239		ModelGuidance	Modeling and evaluating design alternatives for an on-line instrumentation system: A case study	This paper demonstrates the use of a model-based evaluation approach for instrumentation systems (ISs). The overall objective of this study is to provide early feedback to tool developers regarding IS overhead and performance; such feedback helps developers make appropriate design decisions about alternative system configurations and task scheduling policies. We consider three types of system architectures: network of workstations (NOW), symmetric multiprocessors (SMP), and massively parallel processing (MPP) systems. We develop a Resource OCCupancy (ROCC) model for an on-line IS for an existing tool and parameterize it for an IBM SP-2 platform. This model is simulated to answer several 'what if questions regarding two policies to schedule instrumentation data forwarding: collect-and-forward (CF) and batch-and-forward (BF). In addition, this study investigates two alternatives for forwarding the instrumentation data: direct and binary tree forwarding for an MPP system. Simulation results indicate that the BF policy can significantly reduce the overhead and that the tree forwarding configuration exhibits desirable scalability characteristics for MPP systems. Initial measurement-based testing results indicate more than 60 percent reduction in the direct IS overhead when the BF policy was added to Paradyn parallel performance measurement tool. © 1998 IEEE.		Waheed, A.; Rover, D.T.; Hollingsworth, J.K.	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		1998				
240		ModelGuidance	A Model-Driven Approach for Systematic Reproducibility and Replicability of Data Science Projects	In the last few years, there has been an important increase in the number of tools and approaches to define pipelines that allow the development of data science projects. They allow not only the pipeline definition but also the code generation needed to execute the project providing an easy way to carry out the projects even for non-expert users. However, there are still some challenges that these tools do not address yet, e.g. the possibility of executing pipelines defined by using different tools or execute them in different environments (reproducibility and replicability) or models validation and verification by identifying inconsistent operations (intentionality). In order to alleviate these problems, this paper presents a Model-Driven framework for the definition of data science pipelines independent of the particular execution platform and tools. The framework relies on the separation of the pipeline definition into two different modelling layers: conceptual, where the data scientist may specify all the data and models operations to be carried out by the pipeline; operational, where the data engineer may describe the execution environment details where the operations (defined in the conceptual part) will be implemented. Based on this abstract definition and layers separation, the approach allows: the usage of different tools improving, thus, process replicability; the automation of the process execution, enhancing process reproducibility; and the definition of model verification rules, providing intentionality restrictions. © 2022, Springer Nature Switzerland AG.		Melchor, F.; Rodriguez-Echeverria, R.; Conejero, J.M.; Prieto, Á.E.; Gutiérrez, J.D.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2022				
241		ModelGuidance	Modeling of autonomous vehicle operation in intelligent transportation systems	The past decade has seen autonomous vehicles become the subject of considerable research and development activity. The majority of these advances have focused on individual vehicles, rather than the interactions that result when autonomous (unmanned) and conventional (manned) vehicles come together in an intelligent transportation system. The robustness of autonomous vehicles to contingencies caused by unpredictable human behavior is a critical safety concern. Assuring the reliability, availability, security, and similar non-functional attributes of autonomous vehicles is just as critical. The doctoral research proposed in this paper centers on developing models capable of accurately representing environments where manned and unmanned vehicles coexist. An established macroscopic transportation model serves as the basis for the proposed work, and will be extended to differentiate between manned and autonomous vehicles. Stochastic methods will be applied to reflect the non-determinism of the operating environment, especially as related to driver behavior, and will facilitate analysis of robustness. The goal is to capture both basic operation of autonomous vehicles, as well as advanced capabilities such as platooning and robotic adaptation. The insights gained from these models are expected to facilitate the design of intelligent transportation systems that are both safe and efficient. © 2013 Springer-Verlag.		Woodard, M.; Sedigh, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2013				
242		ModelGuidance	Aggregate Callback: A design pattern for flexible and robust runtime model building	In modern software engineering environments, tools that use Domain-Specific Languages (DSLs) are often applied. The usual workflow of such tools is that the textual input written in the DSL is parsed and a semantic model is instantiated. This model is later passed to another software component that processes it, e.g. a model transformation, a code generator or a simulator. Building the semantic model inside the parser is often a complex task. The model must be built in such a way that the constraints of the problem domain are enforced so that the consistency of the output is guaranteed. This paper presents a design pattern, referred as Aggregate Callback that supports enforcing constraints in the model and thus helps creating correct models. We have found that the Aggregate Callback pattern is useful for tool developers that build models in their applications. Copyright © 2015 SCITEPRESS - Science and Technology Publications.		Kövesdán, G.; Asztalos, M.; Lengyel, L.	MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings					Excluded	Excluded	new_screen			2		2015				
243		ModelGuidance	BPMN-Based Business Process Modeling and Simulation	A business process (BP) can be defined a set of tasks that are coordinately performed by an organization to achieve a business goal. MS (Modeling Simulation) techniques are widely and effectively adopted for BP analysis. A BP MS approach is typically carried out by first building a simulation model (from a conceptual model of the BP under analysis), and then producing the software implementation of the simulation model, so to eventually execute the simulation code and get the results of interest. The standard language currently used to define BP models is the OMGs BPMN (Business Process Model and Notation). This paper presents a BPMN-based MS approach that introduces a BPMN extension to specify BP simulation models as annotated BPMN models, and a domain-specific BP simulation language to specify and execute simulation model implementations, which can be seamlessly derived from annotated BPMN models by use of automated model transformations. © 2019 IEEE.		Bocciarelli, P.; D'Ambrogio, A.; Giglio, A.; Paglia, E.	Proceedings - Winter Simulation Conference					Excluded	Excluded	new_screen			2		2019				
244		ModelGuidance	A multimodel for integrating quality assessment in model-driven engineering	The development of complex software systems following the Model-Driven Engineering (MDE) approach relies on the use of different models for describing the system (e.g., structure, behavior). These models should be specified first separately but then their inter-relationship must be established since they represent complementary aspects of the system. Besides, MDE development processes are mostly focused on functionality, and do not give proper support to the quality aspects of the system. In this paper, we present a generic multimodel and the process for its construction, allowing the representation of the different viewpoint models of a software system and the relationships among elements on these viewpoints. This multimodel is a means for integrating a quality viewpoint in MDE processes, allowing the quality attributes to become a decision factor in the choice among design decisions in transformation processes. The feasibility of this approach is illustrated through the use of the multimodel in a specific example for Software Product Line development. © 2012 IEEE.		González-Huerta, J.; Insfran, E.; Abrahão, S.	Proceedings - 2012 8th International Conference on the Quality of Information and Communications Technology, QUATIC 2012					Included	Excluded	new_screen			2		2012				
245		ModelGuidance	Modeling role-based access control using parameterized UML models	Organizations use Role-Based Access Control (RBAC) to protect computer-based resources from unauthorized access. There has been considerable work on formally specifying RBAC policies but there is still a need for RBAC policy specification techniques that can be integrated into software design methods. This paper describes a method for incorporating specifications of RBAC policies into UML design models. Reusable RBAC policies are specified as patterns and are expressed using UML template diagrams. Incorporating RBAC policies into an application specific model involves instantiating the patterns and composing the instantiations with the model. The method also includes a technique for specifying patterns of RBAC violations. Developers can use the patterns to identify policy violations in their models. The method is illustrated using a small banking application.		Kim, DK; Ray, I; France, R; Li, N	FUNDAMENTAL APPROACHES TO SOFTWARE ENGINEERING, PROCEEDINGS					Excluded	Excluded	new_screen			2		2004				
246		ModelGuidance	Model-Based Transition from Requirements to High-Level Software Design	How can the application domain and the requirements be better understood using object-oriented (OO) modeling? How do scenarios / use cases fit together with functional requirements? How can a domain model be used for a model-based transition to a design model? This tutorial addresses these questions in the following manner. It shows how each requirement given in natural language can be viewed itself as an object and modeled as such. This approach facilitates both a hierarchical organization (by grouping requirements instances into classes and subclasses) and explicit association (by relating requirements through OO associations). While scenarios / use cases can somehow illustrate the overall functionality, additionally functional requirements for the system to be built should be formulated and related to them appropriately. All kinds of requirements make statements about the application domain, which should be first represented in a domain model of conceptual classes, in order to make the requirements better understandable. This tutorial explains a seamless transition to a high-level design model, where design classes are abstractions of implementation classes. This transition from requirements to software design is also investigated in model-driven terms, whether it is a transformation or just a mapping. In addition, the influence of non-functional requirements for selecting an architecture is explained.		H. Kaindl	2013 20th Asia-Pacific Software Engineering Conference (APSEC)					Excluded	Excluded	new_screen			2		2013				
247		ModelGuidance	Size and effort-based computational models for software cost prediction	Reliable and accurate software cost estimations have always been a challenge especially for people involved in project resource management. The challenge is amplified due to the high level of complexity and uniqueness of the software process. The majority of estimation methods proposed fail to produce successful cost forecasting and neither resolve to explicit, measurable and concise set of factors affecting productivity. Throughout the software cost estimation literature software size is usually proposed as one of the most important attributes affecting effort and is used to build cost models. This paper aspires to provide size and effort-based estimations for the required software effort of new projects based on data obtained from past completed projects. The modelling approach utilises Artificial Neural Networks (ANN) with a random sliding window input and output method using holdout samples and moreover, a Genetic Algorithm (GA) undertakes to evolve the inputs and internal hidden architectures and to reduce the Mean Relative Error (MRE). The obtained optimal ANN topologies and input and output methods for each dataset are presented, discussed and compared with a classic MLR model.		Papatheocharous, E.; Andreou, A.S.	ICEIS 2008 - Proceedings of the 10th International Conference on Enterprise Information Systems					Excluded	Excluded	new_screen			2		2008				
248		ModelGuidance	Stateless model checking with data-race preemption points	Stateless model checking is a powerful technique for testing concurrent programs, but suffers from exponential state space explosion when the test input parameters are too large. Several reduction techniques can mitigate this explosion, but even after pruning equivalent interleavings, the state space size is often intractable. Most prior tools are limited to preempting only on synchronization APIs, which reduces the space further, but can miss unsynchronized thread communication bugs. Data race detection, another concurrency testing approach, focuses on suspicious memory access pairs during a single test execution. It avoids concerns of state space size, but may report races that do not lead to observable failures, which jeopardizes a user's willingness to use the analysis. We present Quicksand, a new stateless model checking framework which manages the exploration of many state spaces using different preemption points. It uses state space estimation to prioritize jobs most likely to complete in a fixed CPU budget, and it incorporates data-race analysis to add new preemption points on the fly. Preempting threads during a data race's instructions can automatically classify the race as buggy or benign, and uncovers new bugs not reachable by prior model checkers. It also enables full verification of all possible schedules when every data race is verified as benign within the CPU budget. In our evaluation, Quicksand found 1.25x as many bugs and verified 4.3x as many tests compared to prior model checking approaches. © 2016 ACM.		Blum, B.; Gibson, G.	ACM SIGPLAN Notices					Excluded	Excluded	new_screen			2		2016				
249		ModelGuidance	Composing design models: An extension to the UML	A structural mismatch between the specification of requirements for software systems and the specification of object-oriented software systems happens because the units of interest during the requirements phase (for example, feature, function etc.) are different from the units of interest during the object-oriented design and implementation (for example, object, class, method etc.). The structural mismatch results in support for a single requirement being scattered across the design units and a single design unit supporting multiple requirements – this in turn results in reduced comprehensibility, traceability and reuse of design models. Subject-oriented design is a new approach to designing systems based on the object-oriented model, but extending this model by adding new decomposition capabilities. The new decomposition capabilities support a way of directly aligning design models with requirements. Composition of design models is specified with composition relationships. This paper describes changes required to the UML metamodel to support composition relationships © Springer-Verlag Berlin Heidelberg 2000.		Clarke, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2000				
250		ModelGuidance	Features of integrated model-based co-modelling and co-simulation technology	Given the considerable ongoing research interest in collaborative multidisciplinary modelling and co-simulation, it is worth considering the features of model-based techniques and tools that deliver benefits to cyber-physical systems developers. The European project “Integrated Tool Chain for Model-based Design of Cyber-Physical Systems” (INTO-CPS) has developed a well-founded tool chain for CPS design, based on the Functional Mock-up Interface standard, and supported by methodological guidance. The focus of the project has been on the delivery of a sound foundation, an open chain of compatible and usable tools, and a set of accessible guidelines that help users adapt the technology to their development needs. © Springer International Publishing AG 2018.		Larsen, P.G.; Fitzgerald, J.; Woodcock, J.; Gamble, C.; Payne, R.; Pierce, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					ConflictExcluded	Excluded	new_screen			2		2018				
251		ModelGuidance	An approach combining sysml and modelica for modelling and validate wireless sensor networks	Wireless Sensor Networks (WSN) have large industrial ap- plications, however the modelling is still a very complex task in view of the nature of these networks, namely because they are distributed, embedded and have strong interactions be- Tween the hardware and software parts. In addition, in- dustrials use semi-formal methods to design their systems and validate behaviours by simulation. In this context, in order to improve the checking of the WSN properties, we propose a Model Driven Engineering (MDE) approach for modeling and checking properties like energy consumption. This approach combines the advantages of SysML and Mod- elica languages. It is described mainly by two steps. At first, we offer a model transformation by taking into ac- count static, dynamic and requirement diagrams of SysML in order to specify their corresponding Modelica model. In the second step, we carried out the virtual verification of WSN energy consumption. This approach is implemented inside Topcased platform and illustrated through a cross- roads monitoring system.		Hammad, A.; Mountassir, H.; Chouali, S.	1st ACM SIGSOFT/SIGPLAN International Workshop on Software Engineering for Systems-of-Systems, SESoS 2013 Proceedings					Excluded	Excluded	new_screen			2		2013				
252		ModelGuidance	A conceptual model completely independent of the implementation paradigm	"Several authors have pointed out that current conceptual models have two main shortcomings. First, they are clearly oriented to a specific development paradigm (structured, objects, etc.). Second, once the conceptual models have been obtained, it is really difficult to switch to another development paradigm, because the model orientation to a specific development approach. This fact induces problems during development, since practitioners are encouraged to think in terms of a solution before the problem at hand is well understood, thus anticipating perhaps bad design decisions. An appropriate analysis task requires models that are independent of any implementation issues. In concrete, models should support developers to understand the problem and its constraints before any solution is identified. This paper proposes such an alternative approach to conceptual modelling, called ""problem-oriented analysis method"". © 2003 Elsevier Inc. All rights reserved."		Dieste, O.; Genero, M.; Juristo, N.; Maté, J.L.; Moreno, A.M.	Journal of Systems and Software					Excluded	Excluded	new_screen			2		2003				
253		ModelGuidance	A conceptual framework for the development of applications centred on context and evidence-based practice	Conceptual frameworks are used to present a preferred approach to an idea or thought. Its use considerably facilitates the productivity of the data modelling phase and hence the development of applications, since it preserves portability and usability across domains. Evidence-Based Practice (EBP), usually employed in Medicine, represents a decision-making process centered on justifications of relevant information. EBP is used in several areas; however, we did not found conceptual models involving EBP that preserves portability and usability across domains. Besides, the decision-making context can have an impact on evidence-based decision-making, but the integration of evidence and context is still an open issue. This work presents a conceptual framework that integrates evidence with context applying it to the conceptual modelling phase for EBP domains. The use of context allows filtering out more useful information. The main contributions of this paper are: incorporation of contextual information into EBP procedures and presentation of the proposed conceptual framework. Also an implementation that uses the filtering of contextual information to support evidence-based decision making in the area of crime prevention is presented to validate the framework.		Lopes, E.C.; Schiel, U.; Vieira, V.; Salgado, A.C.	ICEIS 2010 - Proceedings of the 12th International Conference on Enterprise Information Systems					Excluded	Excluded	new_screen			2		2010				
254		ModelGuidance	A UML-based object-oriented framework development methodology	Recently, object-oriented (OO) frameworks have been known to be highly effective and practical for software reuse; as shown in San Francisco project, a large-scaled industry project for framework development. However, systematic development process and detailed instructions for building OO frameworks have not been studied enough. In addition, it has not been clearly defined how to apply OMG's Unified Modeling Language (UML) in building OO frameworks. In this paper, we propose a practical OO development process that extends UML notations and semantics. The proposed process consists of four typical software development phases; analysis, design, implementation and testing, and each phase is defined as a logical sequence of development tasks. In order to help the seamless migration from one task to subsequent tasks, we provide instructions for carrying out tasks. Since the proposed process is based on UML diagrams and the basic objectory process, we believe that OO frameworks can be more efficiently developed by utilizing the proposed process, and higher quality OO frameworks can be produced. In order to show the applicability and effectiveness of the process, we present a case study of electronic commerce application.		Young Joon Yang; Soon Yong Kim; Gui Ja Choi; Eun Sook Cho; Chul Jin Kim; Soo Dong Kim	Proceedings 1998 Asia Pacific Software Engineering Conference (Cat. No.98EX240)					ConflictExcluded	Excluded	new_screen			2		1998				
255		ModelGuidance	Timing-Failure Risk Assessment of UML Design Using Time Petri Net Bound Techniques	Software systems that do not meet their timing constraints can cause risks. In this work, we propose a comprehensive method for assessing the risk of timing failure by evaluating the software design. We show how to apply best practises in software engineering and well-known Time Petri Net (TPN) modeling and analysis techniques, and we demonstrate the effectiveness of the method with reference to a case study in the domain of real-time embedded systems. The method customizes the Australian standard risk management process, where the system context is the UML-based software specification, enriched with standard MARTE profile annotations to capture nonfunctional system properties. During the risk analysis, a TPN is derived, via model transformation, from the software design specification and TPN bound techniques are applied to estimate the probability of timing failure. TPN bound techniques are also exploited, within the risk evaluation and treatment steps, to identify the risk causes in the software design.		Bernardi, Simona; Campos, Javier; Merseguer, Jose	IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS					Excluded	Excluded	new_screen			2		2011				
256		ModelGuidance	NFR modeling approaches	Non-functional requirements (NFRs) are one of the major concerns in system requirement engineering. NFRs must be considered for a successful software project and thus modeling of NFRs is of equal importance. Unfortunately, most of the available literature is focused on modeling of functional requirements and comparatively less effort is done on modeling of non-functional requirements. In this paper we have conducted a literature survey to find the different approaches available to model non-functional requirements and concluded (on the basis of a quality criterion) that which approach is better than others for this purpose. © 2011 IEEE.		Iqbal, M.	Proceedings - 1st ACIS International Symposium on Software and Network Engineering, SSNE 2011					Excluded	Excluded	new_screen			2		2011				
257		ModelGuidance	"Secure business process modelling of SOA applications using ""UML-SOA-Sec"""	"Nowadays enterprises are implementing their WIS through SOA using Web services. They are using MDA principles for design and development of WIS and using UML as a modelling language for business process modelling. Along with the increased connectivity in SOA applications, security risks rise exponentially. Security is not defined during the early phases of system development and left onto the developer. Properly configuring security requirements in SOA applications is quite difficult for developers because they are not security experts. Furthermore, SOA security is cross-domain and all required information is not available at downstream phases. Moreover, focus of the currently available security standards and protocols is technology; they do not provide high level of abstraction. Furthermore, a business process expert, who is the actual stakeholder of the business process model is unable to specify security objectives due to lake of security modelling elements in general purpose modelling languages like UML. As a result, he/she either ignores the security intents in his/her model or indicates them, in textual way. We are fostering the specification of security intents at high level of abstraction by presenting a security intents DSL containing the essential SOA security objective. It is a UML profile where security intents can be modeled as stereotypes on UML modelling elements during the business process modelling. Aim is to facilitate the business process expert in modelling the security requirements along with the business process modelling. This security annotated business process model will facilitate the security expert in specifying the concrete security implementation. As a proof of work vie apply our approach to a typical business process of ""on-line flight booking system"". © 2012 ICIC International."		Saleem, M.Q.; Jaafar, J.; Hassan, M.F.	International Journal of Innovative Computing, Information and Control					Excluded	Excluded	new_screen			2		2012				
258		ModelGuidance	From requirements to implementations: A model-driven approach for web development	Model-Driven Development (MDD) is an appropriate paradigm for web development since interoperability and flexibility are required to cope with implementation technologies and functionalities that are in permanent evolution. In this paper, we describe and illustrate the MDD process of the ADM (Ariadne Development Method) hypermedia/web engineering method. The two cornerstones of the ADM are the Labyrinth meta-meta-model, which formalizes the core constructs used within all the design meta-models, and the meta-meta-model specification as an ontology that provides semantics and reasoning not only for model transformations but also for consistency checking and model validation. These features have been essential in the development of a CASE tool, called AriadneTool that supports the different abstract levels of modeling, model transformations as well as the generation of light prototypes in different web implementation technologies. © 2007 Operational Research Society Ltd. All rights reserved.		Montero, S.; Díaz, P.; Aedo, I.	European Journal of Information Systems					Excluded	Excluded	new_screen			2		2007				
259		ModelGuidance	Event-based modelling, analysis and testing of user interactions: Approach and case study	With the growing complexity of computer-based systems, their graphical user interfaces have also become more complex. Accordingly, the test and analysis process becomes more tedious and costly. This paper introduces a holistic view of fault modelling that is carried out as a complementary step to system modelling, enabling a scalability of the test process, and providing considerable potential for automation. Event-based notions and tools are used to generate and select test cases systematically. The elements of the approach are illustrated and validated by a case study. This paper does not claim to introduce a novel theoretic approach; rather, it makes use of graph-theoretic results for a practical and simple, but nevertheless powerful, view of modelling, analysis and testing of graphical user interfaces. Copyright © 2005 John Wiley & Sons, Ltd.		Belli, F.; Budnik, C.J.; White, L.	Software Testing Verification and Reliability					Excluded	Excluded	new_screen			2		2006				
260		ModelGuidance	UML/OCL or Object-Z?	UML/OCL and Object-Z are two technologies complementing each other. They show a 'converging' syntax for their basic features, and are distinguished by a 'diverging' syntax for their more advanced features. The objective of this paper is twofold. First, we show that for the basic features the mapping between both languages is a comorphism between their corresponding institutions. Second, we identify the advanced features in order to characterize closely the type of a potential mapping between both languages. Our approach is demonstrated through a simple example related to human resources' management in companies. © 2017 IEEE.		Bettaz, M.; Maouche, M.	2017 International Conference on Infocom Technologies and Unmanned Systems: Trends and Future Directions, ICTUS 2017					Excluded	Excluded	new_screen			2		2018				
261		ModelGuidance	Towards a Framework for Context-Aware Mobile Information Systems	Design and development of context-aware Information Systems (ISs) is particularly complex, owing to the increasing dependency of people on computing support for making simple decisions or performing their daily tasks. Thus, the need of designing more attractive, adaptable and proactive systems is persistent. In this paper, we present a state of the art of context-aware approaches that are compared and classified. Furthermore, this work tries to support the development of context-aware IS by proposing a context model and defining a modeling context-aware requirements at a suitable level of abstraction by goal-oriented method.		Z. Aarab; R. Saidi; M. D. Rahmani	2014 Tenth International Conference on Signal-Image Technology and Internet-Based Systems					Excluded	Excluded	new_screen			2		2014				
262		ModelGuidance	A UML approach to the design of open distributed systems	The design of distributed systems is a highly complicated and non-trivial task. Introduction of multiple types of media into distributed systems causes a dramatic increase in the complexity of design. To deal with the inherent complexity of systems, two approaches have received considerable attention; ODP and UML. Open Distributed Processing (ODP) is a joint ITU/ISO standardisation framework for constructing distributed systems. Unified Modelling Language (UML) is a de facto standard for visualising, specifying, designing, and documenting object-oriented systems. This paper presents a case study using a UML approach for the design and specification of distributed systems based on ODP. The purpose of the case study is to try this approach on a large system containing multiple types of media. The case study is carried out on an Interactive Multimedia Kiosk (IMK) example. IMKs integrate different types of media such as text, graphics, audio, video, animation and sound in the form of a large system; this provides an ideal subject for case study.		Bordbar, B; Derrick, J; Waters, G	FORMAL METHODS AND SOFTWARE ENGINEERING, PROCEEDINGS					Excluded	Excluded	new_screen			2		2002				
263		ModelGuidance	Executable modeling approach to service oriented architecture using SoaML in conjunction with extended DEVSML	Service Oriented Architecture (SOA) has been widely applied in a range of systems such as Embedded Systems, Enterprise Information Systems and Cyber Physical Systems. These systems nowadays show System of Systems (SoS) characteristics including large-scale, consisting of software and hardware components, and cooperative processes among independent systems. It is very important to validate functional requirements and evaluate non-functional requirements of systems precisely in earlier design phase by executable architecting methodology. This paper aims to provide an executable modeling approach to SOA by bringing together Model Driven Service Engineering (MDSE) with Service oriented architecture Modeling Language (SoaML) and Modeling & Simulation methodology based on Discrete Event System Specification (DEVS). First, the business architecture and system architecture are built with SoaML, then the Extended DEVS Modeling Language (E-DEVSML) is used as a model transformation intermediary to make SOA models executable in an automated code generation process, finally, the early validation and evaluation of this SOA are done through a generated DEVS simulation. To demonstrate the applicability of this approach we introduce an aircraft docking process in an airport scenario as the case study. © 2014 IEEE.		Hu, J.; Huang, L.; Cao, B.; Chang, X.	Proceedings - 2014 IEEE International Conference on Services Computing, SCC 2014					Excluded	Excluded	new_screen			2		2014				
264		ModelGuidance	A Methodological Approach to Model-Driven Design and Development of Automation Systems	The growing complexity of industrial automation demands the adoption of software engineering principles for improving the development process of control systems. This paper presents a methodological approach to the design and development of complex automation systems relying on model-driven engineering (MDE). A benefit of this approach is the integration of methods and techniques widespread within the automation discipline with modern MDE techniques guiding the designer through the development phases. A second advantage is to add flexibility enough to adapt the steps to the needs of the system under design. Finally, the architecture presented is prepared to be adapted to methodology extensions to cover other aspects of automation systems. The framework is based on domain models that are defined through the development phases using the terminology of the automation field. Using model transformations both documentation about system analysis and design and the skeleton of software units are automatically generated. A proof-of-concept tool has been developed that has been tested on the design of medium-complexity projects to assess the impact of its use with respect to project documentation and maintenance. Note to Practitioners-Control software development can be considered one of the challenges in automation field for achieving leadership in the future economic market. This work presents a model-driven engineering-based approach making use of both automation and software engineering methods and techniques for developing automation control systems. The framework implements the methodology for industrial automation systems (MeiA center dot) for guiding developers through the development phases and generates the analysis and design documentation using domain terminology, the design documentation that involves the minimal units of design, and the program organization units in one-to-one correspondence with the minimal units of design. From a practical point of view, it should be highly emphasized that developers of automation projects benefit from more structured designs, reduced number of errors, and improved project documentation.		Luz Alvarez, Maria; Sarachaga, Isabel; Burgos, Arantzazu; Estevez, Elisabet; Marcos, Marga	IEEE TRANSACTIONS ON AUTOMATION SCIENCE AND ENGINEERING					Excluded	Excluded	new_screen			2		2018				
265		ModelGuidance	Deriving and validating fault metric for object oriented systems using use case diagram	A significant quality factor reliability is an important requirement for all software systems. Reliability analysis and evaluation for a system is necessary for the success of these systems. This paper proposes a fault metric called use case fault metric (UCFM) for object-oriented systems using use case diagram and is built on the theory of Fault Tree Analysis (FTA). The goal is to address an important issue of measuring reliability of object-oriented systems during initial stages of software development. This goal is achieved by extending the model-driven software development process with the concept of Fault Tree Analysis (FTA). The Fault Tree analysis is performed in bottom-up way to compute quantitatively the proposed metric called UCFM. The proposed approach transforms the use case in an equivalent Fault Tree. This FTA is used to compute a metric that quantifies the probability of occurrence of faults in different use cases. The UCFM value is computed at use case, use case diagram and system level. The proposed metric is validated theoretically using measurement theory and practically using Kaner’s framework. © 2021, Bharati Vidyapeeth's Institute of Computer Applications and Management.		Sabharwal, S.; Kaur, P.; Sibal, R.	International Journal of Information Technology (Singapore)					Excluded	Excluded	new_screen			2		2021				
266		ModelGuidance	Modeling and verification of safety-critical systems using safecharts	With rapid development in science and technology, we now see the ubiquitous use of different types of safety-critical systems in our daily lives such as in avionics, consumer electronics, and medical systems. In such systems, unintentional design faults might result in injury or even death to human beings. To make sure that safety-critical systems are really safe, there is need to verify them formally. However, the verification of such systems is getting more and more difficult, because the designs are becoming very complex. To cope with high design complexity, currently model-driven architecture design is becoming a well-accepted trend. However, conventional methods of code testing and standards conformance do not fit very well with such model-based approaches. To bridge this gap, we propose a model-based formal verification technique for safety-critical systems. In this work, the model checking paradigm is applied to the Safechans model which was used for modeling, but not yet used for verification. Our contributions are five folds. Firstly, the safety constraints in Safecharts are mapped to semantic equivalents in timed automata for verification. Secondly, the theory for safety constraint verification is proved and implemented in a compositional model checker (SGM). Thirdly, prioritized transitions are implemented in SGM to model the risk semantics in Safecharts. Fourthly, it is shown how the original Safecharts lacked synchronization semantics which could lead to safety hazards. A solution to this issue is also proposed. Finally, it is shown that priority-based approach to mutual exclusion of resource usage in the original Safecharts is unsafe and corresponding solutions are proposed here. Application examples show the feasibility and benefits of the proposed model-driven verification of safety-critical systems. © IFIP International Federation for Information Processing 2005.		Hsiung, P.-A.; Lin, Y.-H.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2005				
267		ModelGuidance	UML Profiles for Design Decisions and Non-Functional Requirements	A software architecture is composed of a collection of design decisions. Each design decision helps or hinders certain Non-Functional Requirements (NFR). Current software architecture views focus on expressing components and connectors in the system. Design decisions and their relationships with non-functional requirements are often captured in separate design documentation, not explicitly expressed in any views. This disassociation makes architecture comprehension and architecture evolution harder. In this paper, we propose a UML profile for modeling design decisions and an associated UML profile for modeling non-functional requirements in a generic way. The two UML profiles treat design decisions and nonfunctional requirements as first-class elements. Modeled design decisions always refer to existing architectural elements and thus maintain traceability between the two. We provide a mechanism for checking consistency over this traceability. An exemplar is given as a way to demonstrate the feasibility of our approach.		L. Zhu; I. Gorton	Second Workshop on Sharing and Reusing Architectural Knowledge - Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007)					Excluded	Excluded	new_screen			2		2007				
268		ModelGuidance	The use of formal and informal models in objectoriented requirements engineering	Little is understood, or reported on the basis of research, of the use of object-oriented models and methods by practising professionals in the production of requirements specifications for commercial or industrial sized projects. This paper describes a research project and the findings from a set of six case studies that have been undertaken which examine the use of object-oriented models in professional requirements engineering practice. In these studies, it was found that the more formal models of object-orientation were rarely used to validate, or even clarify, the specification with clients or users. Rather, analysts tended to use informal models such as use cases or ad hoc diagrams, to communicate the specification to users. Formal models are more often used internally within the analysis team and for communicating the specification to the design team.		Dawson, L.	ICEIS 2001 - Proceedings of the 3rd International Conference on Enterprise Information Systems					Included	Excluded	new_screen			2		2001				
269		ModelGuidance	Customizing UML for the development of distributed reactive systems and Ada 95 code generation	Distributed, reactive software systems, e.g. process control tools, can be modelled with the Unified Modelling Language (UML). Recently such UML models are used to generate source code automatically. Because of the complexity of UML, it is necessary to restrict the usage of its constructs by defining UML profiles to allow the automatic generation of source code. In this paper a UML profile for the design and implementation of distributed, reactive systems and an associated mapping to Ada 95 source code are introduced. Further, our experiences with the chosen approach are discussed.		Kersten, M.; Matthes, J.; Manga, C.F.; Zipser, S.; Keller, H.B.	Ada User Journal					Included	Excluded	new_screen			2		2002				
270		ModelGuidance	Modeling and optimization of multiple traveling salesmen problems: An evolution strategy approach	The multiple traveling salesmen problems (mTSP) are variants of the well-known traveling salesmen problems, in which n cities are to be assigned to m salespeople. In this paper, we propose an evolution strategy (ES) approach for solving the mTSP with minsum and minmax objectives. The ES employs a self-adaptive Ruin and Recreate (RR) heuristic to generate an offspring population. In the RR heuristic, some solution components are removed from a solution and the removed components are reinserted into the partial solution to obtain a new complete solution again. We employ the Multiple Insertion Heuristic (MIH) when carrying out insertions with the speed-up method based on the nearest neighbor approach in the recreate procedure. Through the ES, the ruin size parameter of the RR heuristic and the selection probabilities of applying a random search algorithm consisting of four different moves are self-adapted. 3Opt local search is also embedded in the ES to further enhance the solution quality. A Boolean flag is developed whether or not to apply 3Opt local search, which is computationally expensive, on non-improving tours. Moreover, new constructive heuristics are presented for both minsum and minmax mTSP. Computational experiments show that the proposed ES algorithm is very competitive or superior to the best performing algorithms from the literature for both objectives. Ultimately, 21 new best-solutions are presented for the mTSP with minsum and minmax objectives for the first time in the literature. In this paper, the multi-depot mTSP with non-predetermined depots (M-mTSP) is also studied as an extension of the mTSP. Two new MILP models are proposed for both minsum and minmax M-mTSP as well as lower bounds, and optimal results are obtained for small instances. The computational results show that the ES algorithm can find the optimal solution for all the small-sized instances. Furthermore, we derive new large-sized M-mTSP benchmarks from the well-known TSPLIB, which have nodes ranging from 52 and 442. We report the results for both minsum and minmax objectives for these instances as new M-mTSP benchmarks, considering four different m settings. © 2020 Elsevier Ltd		Karabulut, K.; Öztop, H.; Kandiller, L.; Tasgetiren, M.F.	Computers and Operations Research					Excluded	Excluded	new_screen			2		2021				
271		ModelGuidance	An Approach to Checking Consistency between UML Class Model and Its Java Implementation	Model Driven Engineering (MDE) aims to expedite the software development process by providing support for transforming models to running systems. Many modeling tools provide forward engineering features, which automatically translate a model into a skeletal program that developers must complete. Inconsistencies between a design model and its implementation, however, can arise, particularly when a final implementation is developed dependently on the code from which it was generated. Manually checking that an implementation conforms to its model is a daunting task. Thus, an MDE tool that developers can use to check that implementations conform to their models can significantly improve a developer's productivity. This paper presents a model-based approach for testing whether or not an implementation satisfies the constraints imposed by its design model. Our model-based testing approach aims to efficiently reduce the test input space while supporting branch coverage criteria. To evaluate the approach's ability to uncover inconsistencies, we developed a prototypical tool and applied it to the Eclipse UML2 projects. We were able to uncover inconsistencies between the models and their implementations using the tool.		Chavez, Hector M.; Shen, Wuwei; France, Robert B.; Mechling, Benjamin A.; Li, Guangyuan	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2016				
272		ModelGuidance	The UML «extend» relationship as support for software variability	The development of software product lines with model-driven approaches involves dealing with diverse modeling artifacts such as use case diagrams, component diagrams, class diagrams, activity diagrams, sequence diagrams and others. In this paper we focus on use cases for product line development and we analyze them from the perspective of variability. In that context we explore the UML (Unified Modeling Language) «extend» relationship. This work allows understanding the activity of use case modeling with support for variability. © 2010 Springer-Verlag Berlin Heidelberg.		Azevedo, S.; MacHado, R.J.; Bragança, A.; Ribeiro, H.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2010				
273		ModelGuidance	Formalizing UML class diagrams - a hierarchical predicate transition net approach	Unified Modeling Language (UML) has been widely accepted as the standard object-oriented development methodology in software industry. However, many graphical notations in UML only have informal English definitions and thus are error-prone and cannot be formally analyzed. In this paper, we present our preliminary results on an approach to formally define UML class diagrams using hierarchical predicate transition nets (HPrTNs). We show how to define the main concepts related to class diagrams using HPrTN elements.		He, Xudong	Proceedings - IEEE Computer Society's International Computer Software and Applications Conference					Excluded	Excluded	new_screen			2		2000				
274		ModelGuidance	Deriving queuing network model for UML for software performance prediction	It is an important issue for software architects to estimate the performance of software in the early stage of development process due to the needs to verify QoS. Queueing network model is a very useful tool to analyze the performance of a system from abstract model In this paper, we propose a transformation technique from UML into queueing network model This approach avoids the need for a prototype implementation since we can determine the overall form of performance equation from the architectural design description. We prove the accuracy of derived queueing network model, which is summarized at 85 percent, through a ubiquitous commerce system which extends mobile commerce system developed by our prior work. © 2007 IEEE.		Youn, H.; Jang, S.; Lee, E.	Proceedings - SERA 2007: Fifth ACIS International Conference on Software Engineering Research, Management, and Applications					Excluded	Excluded	new_screen			2		2007				
275		ModelGuidance	Measuring reuse of SAP requirements: A model-based approach	Reusing SAP R/3 business requirements has been recognized as the most promising strategy to shorten the time-to-production and increase the quality of the conceptual design in R/3 implementation projects. However, very little research has been conducted to actually quantify and really estimate the results from SAP R/3 requirement reuse the customers have achieved. This paper deals with the identification and the measurement of reuse in the requirements conceptualization phase of the SAP R/3 component configuration cycle. We present a systematic approach based on standard functional size measurement practices. We introduce two key concepts: SAP requirements reuse levels and reuse indicators. The reuse levels serve to classify SAP requirements based on the extent to which the requirements are reused in a R/3 implementation project. The reuse indicators are then built to quantify the requirement reuse the company has achieved. An experimental case study illustrates the applicability of the approach. Finally, some validation issues are addressed. Copyright ACM 1999.		Daneva, M.	Proceedings of the 1999 Symposium on Software Reusability, SSR 1999					Excluded	Excluded	new_screen			2		1999				
276		ModelGuidance	Integrating organizational requirements and object oriented modeling	In recent years we have observed a growing influence of the object-oriented paradigm. Unfortunately, the current dominant object oriented modeling technique, i.e. the Unified Modeling Language, UML, is ill equipped for modeling early requirements which are typically informal and often focus on stakeholder objectives. Instead, UML is suitable for later phases of requirement capture which usually focus on completeness, consistency, and automated verification of functional requirements for the new system. We present a set of guidelines for the integration of early and late requirements specifications. For early (organizational) modeling we rely on the i* framework, whereas for late (functional) requirements specification, we rely on a precise subset of UML. A small example is used to illustrate how the requirements process iterates between early and late requirements.		J. F. Castro; F. M. R. Alencar; G. A. C. Filhol; J. Mylopoulos	Proceedings Fifth IEEE International Symposium on Requirements Engineering					ConflictIncluded	Excluded	new_screen			2		2001				
277		ModelGuidance	Graph transformations for MDE, adaptation, and models at runtime	Software evolution and the resulting need to continuously adapt the software is one of the main challenges for software engineering. The model-driven development movement therefore aims at improving the longevity of software by keeping the development artifacts more consistent and better changeable by employing models and to a certain degree automated model operations. Another trend are systems that tackle the challenge at runtime by being able to adapt their structure and behavior to be more flexible and operate in more dynamic environments (e.g., context-aware software, autonomic computing, self-adaptive software). Finally, models at runtime, where the benefits of model-driven development are employed at runtime to support adaptation capabilities, today lead towards a unification of both ideas. In this paper, we present graph transformations and show that they can be employed to engineer solutions for all three outlined cases. Furthermore, we will even be able to demonstrate that graph transformation based technology has the potential to also unify all three cases in a single scenario where models at runtime and runtime adaptation is linked with classical MDE. Therefore, we at first provide an introduction in graph transformations, then present the related techniques of Story Pattern and Triple Graph Grammars, and demonstrate how with the help of both techniques model transformations, adaptation behavior and runtime model framework work. In addition, we show that due to the formal underpinning analysis becomes possible and report about a number of successful examples. © 2012 Springer-Verlag.		Giese, H.; Lambers, L.; Becker, B.; Hildebrandt, S.; Neumann, S.; Vogel, T.; Wätzoldt, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2012				
278		ModelGuidance	On Abstraction in the OMG Hierarchy: Systems, Models, and Descriptions	The Model-Driven Architecture (MDA) uses a metadata hierarchy with several layers that are placed on top of each other. The traditional view is that the layers provide abstractions related to models in languages defined by meta-models. Over the years, it has been difficult to define a consistent understanding of the layers. In this paper, we propose such a consistent understanding by clarifying the relations between the different elements in the hierarchy. This is done based on the Scandinavian approach to modelling that distinguishes between systems and system descriptions. Systems can be physical, digital, or even mental, while descriptions can be programs, language descriptions, specifications, and diagrams. We relate descriptions and systems by explaining where semantics of objects originate and how they apply in the hierarchy.		Prinz, Andreas; Xanthopoulou, Themis Dimitra; Gjøsæter, Terje; Møller-Pedersen, Birger	Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					Excluded	Excluded	new_screen			2		2022				
279		ModelGuidance	An Authoring Environment for Model-Driven Web Applications	This paper presents a development environment and framework that supports a Model Driven Development approach to Web Application Development. In this framework, the models are described through graphical diagrams that are processed by the environment. The main purpose is to ease the development of a web application using Visual Studio .Net 2005 as an IDE and Semantic Hypermedia Development Method (SHDM) as development method, allowing the application architect to focus on the application modeling. We also discuss how the meta-modeling facilities of VS .Net 2005 were extensively used.		Ricci, Luiz A.; Schwabe, Daniel	Proceedings of the 12th Brazilian Symposium on Multimedia and the Web					Excluded	Excluded	new_screen			2		2006				
280		ModelGuidance	Formal Requirements Specification: Z Notation Meta Model Facilitating Model to Model Transformation	Model Driven Software Engineering (MDSE) has become a widely adopted approach in software development industry. Besides other software development phases, specifying requirements formally, is a crucial activity for developing model based software systems. There exist a number of formal languages that can be used for formal requirements specification. However, these formal languages are hard to comprehend and difficult to use for formal specification. Nonetheless, in many researches, abstraction of these formal languages is required and their benefits are tremendous. Z Notation is a formal language which guarantees that the software system must meet regulations and standards by specifying clear and unambiguous requirements. This leads to a high quality software and greater user satisfaction. However, formal languages are not welcomed with UML models because of rigorous use of mathematics. A bridge is required to minimize the gap between UML and Formal Requirements Specification languages. Therefore, we have presented a meta-model of a relatively mature and widely used Z Notation so that it may facilitate the future researchers by providing a reasonable level of abstraction. This paper aims to reduce the overhead of comprehension of formal language i.e. Z notation and to facilitate model-to-model transformations (source model: UML model, target model: Z Notation model). Further, we have validated the proposed meta-model via case study using UML Use Case. It has been demonstrated through case study that the Meta model facilitates shared understanding among stakeholders and facilitates model to model transformation leading to unambiguous requirements specification but can also be automated for the model based development of such a system which transforms informal requirements into formal Z-Notation specifications. © 2020 ACM.		Awan, M.M.; Azam, F.; Anwar, M.W.; Rasheed, Y.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2020				
281		ModelGuidance	A Model-Driven Methodology to Accelerate Software Engineering in the Internet of Things	The Internet of Things (IoT) aims for connecting. This assumption brings about several software engineering challenges that constitute a serious obstacle to its wider adoption. The main feature of the IoT is genericity w.r.t the variability of software and hardware technologies. Model-driven engineering (MDE) is a paradigm that advocates using models to address software engineering problems. It can help to meet the genericity of the IoT from a software engineering perspective. Existing MDE approaches for the IoT focus only on modeling the internal behavior of things but lack a comprehensive approach dedicated to network modeling. In the present article, we introduce a network-oriented methodology based on MDE to unify the IoT’s heterogeneous concepts. Fundamentally, we avoid the intrinsic heterogeneity of the IoT by separating the network’s specification (i.e., the things, the communication scheme, and its constraints) from its concrete implementation (i.e., the low-level artifacts, such as source code and documentation). Technically, the methodology relies on a model-based domain-specific language (DSL) and a code generator. The former enables the modeling of the network’s specification, and the latter provides a procedure to generate the low-level artifacts from this specification. Our results show that this methodology makes iot’s software engineering more rigorous, helps prevent bugs earlier, and saves time.		I. Berrouyne; M. Adda; J. -M. Mottu; M. Tisi	IEEE Internet of Things Journal					Excluded	Excluded	new_screen			2		2022				
282		ModelGuidance	Modeling and managing the variability of Web service-based systems	Web service-based systems are built orchestrating loosely coupled, standardized, and internetworked programs. If on the one hand, Web services address the interoperability issues of modern information systems, on the other hand, they enable the development of software systems on the basis of reuse, greatly limiting the necessity for reimplementation. Techniques and methodologies to gain the maximum from this emerging computing paradigm are in great need. In particular, a way to explicitly model and manage variability would greatly facilitate the creation and customization of Web service-based systems. By variability we mean the ability of a software system to be extended, changed, customized or configured for use in a specific context. We present a framework and related tool suite for modeling and managing the variability of Web service-based systems for design and run-time, respectively. It is an extension of the COVAMOF framework for the variability management of software product families, which was developed at the University of Groningen. Among the novelties and advantages of the approach are the full modeling of variability via UML diagrams, the run-time support, and the low involvement of the user. All of which leads to a great deal of automation in the management of all kinds of variability. (C) 2009 Elsevier Inc. All rights reserved.		Sun, Chang-ai; Rossing, Rowan; Sinnema, Marco; Bulanov, Pavel; Aiello, Marco	JOURNAL OF SYSTEMS AND SOFTWARE					ConflictExcluded	Excluded	new_screen			2		2010				
283		ModelGuidance	Intra- and interdiagram consistency checking of behavioral multiview models	Multiview modeling languages like UML are a very powerful tool to deal with the ever increasing complexity of modern software systems. By splitting the description of a system into different views - the diagrams in the case of UML - system properties relevant for a certain development activity are highlighted while other properties are hidden. This multiview approach has many advantages for the human modeler, but at the same time it is very susceptible to various kinds of defects that may be introduced during the development process. Besides defects which relate only to one view, it can also happen that two different views, which are correct if considered independently, contain inconsistent information when combined. Such inconsistencies between different views usually indicate a defect in the model and can be critical if they propagate up to the executable system. In this paper, we present an approach to formally verify the reachability of a global state of a set of communicating UML state machines, i.e., we present a solution for an intradiagram consistency checking problem. We then extend this approach to solve an interdiagram consistency checking problem. In particular, we verify whether the message exchange modeled in a UML sequence diagram conforms to a set of communicating state machines. For solving both kinds of problems, we proceed as follows. As a first step, we formalize the semantics of UML state machines and of UML sequence diagrams. In the second step, we build upon this formal semantics and encode both verification tasks as decision problems of propositional logic (SAT) allowing the use of efficient SAT technology. We integrate both approaches in a graphical modeling environment, enabling modelers to use formal verification techniques without any special background knowledge. We experimentally evaluate the scalability of our approach. © 2015 Elsevier Ltd. All rights reserved.		Kaufmann, P.; Kronegger, M.; Pfandler, A.; Seidl, M.; Widl, M.	Computer Languages, Systems and Structures					Excluded	Excluded	new_screen			2		2015				
284		ModelGuidance	A UML Profile for Software Requirements Prioritization	The increasing complexity of software systems makes Requirements Engineering an important phase in a system's development life cycle. When RE is carried out poorly, multiple problems may arise, such as failures, cost overrun and delays. In this context, prioritization is of significant importance to organize requirements in their order of comparative significance and consequent development releases. It is the most important step taken in making fundamental resolutions so as to increase the commercial significance of a system. Evaluating requirement prioritization in model-driven context is a super difficult task. Hence, there exists a solid need for a model-based approach that allows for the ranking procedure in SDLC. This article introduces UML profile for Analytic Hierarchy Process (AHP); to rank the software requirements in the context of model-driven engineering. Mapping its basic concepts into stereotypes to extend SysML's Requirement's Diagram. Thus, providing a way of ranking requirements in the model-driven context for the first time. AHP is a well-proven process for collaborative decision making to achieve better outcomes. Later, the applicability of this profile is authenticated through BuyMobilePhone case study.		T. Zahoor; F. Azam; M. W. Anwar; B. Maqbool; H. A. Javaid	2019 IEEE 10th Annual Information Technology, Electronics and Mobile Communication Conference (IEMCON)					Excluded	Excluded	new_screen			2		2019				
285		ModelGuidance	A Model-Based Approach to Predicting the Performance of Insider Threat Detection Systems	Recent high profile security breaches have highlighted the importance of insider threat detection systems for cybersecurity. However, issues such as high false positive rates and concerns over data privacy make it difficult to predict performance within an enterprise environment. These and other issues limit an organization's ability to effectively apply these tools. In this paper, we present an approach to predicting the performance of insider threat detection systems that leverages enterprise-level modeling. We provide a proof of concept of our modeling approach by applying it to a synthetic dataset and comparing its predictions to the ground truth. The results shown here to predict performance can enable enterprises to compare tools and ultimately allow them to make better informed decisions about which insider threat detection systems to deploy. © 2016 IEEE.		Roberts, S.C.; Holodnak, J.T.; Nguyen, T.; Yuditskaya, S.; Milosavljevic, M.; Streilein, W.W.	Proceedings - 2016 IEEE Symposium on Security and Privacy Workshops, SPW 2016					Excluded	Excluded	new_screen			2		2016				
286		ModelGuidance	Extending BPMN with submit/response-style user interaction modeling	Developing process-oriented enterprise systems not only asks for Business Process Management (BPM) but also for an appropriate user interface and data model. Current BPM and workflow technologies are neither integrated with user dialogs nor offer an appropriate data model. This paper describes a novel integrated framework for modeling process-oriented systems called Processes with User Interfaces and Data Modeling Integration (PUDI), which offers a solution to these shortcomings. For the projects described in this paper, we used the Business Process Modeling Notation (BPMN) for the processes, extensions to BPMN for submit/response-style user interaction, which is characteristic of form-based applications ranging from small Web applications to large ERP systems, and the Unified Modeling Language (UML) for the data model which defines both, the information and the message model. The paper discusses related work and describes real-world application scenarios which motivated our research on the proposed framework and illustrates its practical benefits. © 2009 IEEE.		Auer, D.; Geist, V.; Draheim, D.	2009 IEEE Conference on Commerce and Enterprise Computing, CEC 2009					ConflictExcluded	Excluded	new_screen			2		2009				
287		ModelGuidance	Understanding and designing business process modelling for emergency plan	Thereafter the Fukushima setback, different resolutions are on-going to improved arrangements among agencies responsible for the safety of such facilities and jointly developed reasonable precautions that will mitigate future calamities. This paper accomplished to recognize and represent suggested business processes for the Malaysian Nuclear Power Generating Program (NPP) based on Alter's Work System Theory (WST). The work system method often considered as effective in describing the organizational system such as NPP. This method applied to frame and understands the user requirements within the business case of NPP. As a result, the business process was determined in respect of the emergency plan accordingly. This case study analytically processed by adopting qualitative grounding processes. These processes involved coding interpretation which providing structural analysis of the suggested system requirements in a form of business process modelling. This analysis comprising process fabrication using member checking technique and workflow driven approach, which then transformed into business process simulation in the future.		A. Hamid; M. Rozan; R. Ibrahim; S. Deris; H. Nik Rushdi; M. N. M. Yunus	2013 International Conference on Research and Innovation in Information Systems (ICRIIS)					Excluded	Excluded	new_screen			2		2013				
288		ModelGuidance	Enforcing Security and Privacy via a Cooperation of Security Experts and Software Engineers - A Model-Based Vision	In an early phase of a software development process (requirement analysis), functional and non-function requirements are gathered. While a lot of research has been done on how to bring functional requirements into the software, non-functional requirements are still challenging. One of the reasons is that non-functional requirements are often hard to measure and hard to test. Unfortunately, security, privacy, and data protections are such non-functional requirements. To make things even more complicate, software engineering is a social process. This means multiple parties (i.e., security experts, software architects, and programmers) have to work together, which will result unavoidable in misunderstandings and misinterpretation. Therefore, it is often not clear if security concerns are implemented correctly, or have been at least formalized correctly for later implementation during the requirement analysis. This paper is a discussion starter, on how to overcome communication-based problems, ensure that security concerns are implemented correctly, and how to avoid software erosion that later on breaks security concerns. Therefore, we discuss strategies which combine security concepts with software engineering methods by the intensive use of models. Such models are already used in academia and even in industry. We recommend to use models more often, more intensive, and for more concerns. © 2017 IEEE.		Hilbrich, M.; Frank, M.	Proceedings - 2017 IEEE 7th International Symposium on Cloud and Service Computing, SC2 2017					Included	Excluded	new_screen			2		2018				
289		ModelGuidance	Modeling and simulation of tasks interactions using graphical interface	Concurrent processes are very important to the development of modern applications, where several tasks are performed in order to accomplish a certain activity. Unfortunately, many concurrent applications, including hard real time ones, have complex interactions between tasks, which are difficult to model in order to understand or evaluate the system's behaviour by simulation. Although an accurate model for these interactions is quite desirable, most simulators do not provide this capability, representing tasks as independent black-boxes. This paper describes a graphical approach to model tasks interactions as hierarchical trees. The approach was implemented in a simulator of real-time schedulers, and the results achieved with tests over model accuracy and tool usability are presented. © 2021 AISTI.		Peronaglio, F.F.; Manacero, A.; Lobato, R.S.; Spolon, R.; Cavenaghi, M.A.	Iberian Conference on Information Systems and Technologies, CISTI					Excluded	Excluded	new_screen			2		2021				
290		ModelGuidance	UBPMN: A BPMN extension for modeling ubiquitous business processes	Context: Business Process Model and Notation (BPMN) is the de facto standard for business process modeling. It was developed by the Object Management Group with support of the major organizations in the fields of software engineering and information systems. Despite its wide use, when it comes to representing ubiquitous business processes, this business process modeling language is lacking. Objective: To address BPMN's deficiency in representing ubiquitous business processes, we extend it and present uBPMN (or ubiquitous BPMN). Method: First, we analyze the modeling requirements for representing ubiquitous business processes. Based on the requirements, we conservatively extend the Meta-Object Facility meta-model and the XML Schema Definition of BPMN as well as extend the notation. The extension, that we call uBPMN follows the same outline as set by the Object Management Group for BPMN. Results: The proposed uBPMN not only allows for modeling ubiquitous business processes but also lays the groundwork for potentially deploying a variety of ubiquitous computing technologies. We illustrate all of uBPMN's capabilities and benefits with real-life examples. Conclusion: uBPMN extends BPMN v2.0 with new capabilities to deal with ubiquitous computing technologies. © 2016 Elsevier B.V. All rights reserved.		Yousfi, A.; Bauer, C.; Saidi, R.; Dey, A.K.	Information and Software Technology					Excluded	Excluded	new_screen			2		2016				
291		ModelGuidance	User interface derivation from business processes: A model-driven approach for organizational engineering	This paper defines a model-driven approach for organizational engineering in which user interfaces of information systems are derived from business processes. This approach consists of four steps: business process modeling in the context of organizational engineering, task model derivation from the business process model, task refinement, and user interface model derivation from the task model. Each step contributes to specify and refine mappings between the source and the target model. In this way, each model modification could be adequately propagated in the rest of the chain. By applying this model-driven approach, the user interfaces of the information systems are directly meeting the requirements of the business processes and are no longer decoupled from them. This approach has been validated on a case study in a large bank-insurance company. Copyright 2008 ACM.		Sousa, K.; Mendonça, H.; Vanderdonckt, J.; Rogier, E.; Vandermeulen, J.	Proceedings of the ACM Symposium on Applied Computing					Included	Excluded	new_screen			2		2008				
292		ModelGuidance	Formal computation independent model of the problem domain within the MDA	"The proposed approach called Topological Functioning Modeling for Model Driven Architecture (TFMfMDA) uses formal mathematical foundations of Topological Functioning Model. It introduces more formal analysis of a business system (""as is""), enables defining of what the client needs, textual functional requirements validation, and missing requirements checking in conformance with the problem domain ""as is"" model. By using a goal-based method, a use case model of the planned application is defined. Graph transformation from the TFM to a conceptual class diagram enables the definition between domain concepts and their relations to be established. The paper also suggests a concept of a tool for the TFMfMDA, which is realized as an Eclipse plug-in, and uses Natural Language Processing techniques."		Osis, J.; Asnina, E.; Grave, A.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2007				
293		ModelGuidance	Model-Based Design of Time-Triggered Real-Time Embedded systems for industrial automation	This paper presents a novel Model-Based Design (MBD) approach and associated tool-chain for the Time-Triggered Real-time Embedded (TTRE)1 systems. Our tool-chain automatically synthesizes software for manufacturing TTRE systems. A Software-In-the-Loop Simulation (SILS) framework integrated into our tool-chain helps to reduce the design iterations. Using a manufacturing robot-arm use-case, we validate our tool-chain and demonstrate a 39× improvement in the Quality-of-Control (QoC) when compared to the state-of-the-art approach [3]. Our auto-generated scheduler meets all the hard real-time constraints (zero deadline misses) for a given TTRE system when compared to the scheduler (e.g., 145 deadline misses for a CPU utilization of 95%) presented in [1], [25]. Moreover, compared to the traditional MBD approach for the TTRE systems where many design iterations are required [4], our approach and tool-chain can generate high quality and accurate tasks with an associated scheduler in a single design iteration. © 2015 IEEE.		Wan, J.; Canedo, A.; Al Faruque, M.A.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					Excluded	Excluded	new_screen			2		2015				
294		ModelGuidance	A modeling approach to teardrop pattern for general aircraft PBN operation	The teardrop pattern is one of the key subjects in IFR flight training. To quantitative evaluate the teardrop pattern quality for general aircraft performance-based navigation (PBN) operation, an approach for the nominal trajectory of the teardrop pattern modeling is proposed. Firstly, the nominal track of the teardrop pattern is modeled in the airport plane coordinate system, and then the key waypoint latitude and longitude coordinate conversion equations of the teardrop pattern model are derived based on the geocentric geodetic coordinate system. Based on the waypoints coordinate conversion modeling, the fast waypoint coordinates determining method for teardrop pattern are given using the flight parameter data. The proposed method will provide valuable information for the flight technical error (FTE) and the navigation performance calculation, which are the premises for quantitative training evaluation with PBN general aircraft. © 2021 IEEE		You, L.; Sun, H.; Li, F.	Proceedings of 2021 IEEE 3rd International Conference on Civil Aviation Safety and Information Technology, ICCASIT 2021					Excluded	Excluded	new_screen			2		2021				
295		ModelGuidance	UML stereotypes for the development of process interaction-driven web applications	Web applications have been developed rapidly as to support a variety of online processes and transactional workflows involved in the web domain. Although there are several numbers of design modeling concepts existing in web application nowadays, new issues such as interrelated process flow, navigational interaction and graphical user interface still become the biggest attention among researchers. This paper presents UML stereotype extensions, which focus on the process interaction-driven design in the proposed design approach called UEWDM. The uniqueness relies on UML stereotypes usability in the design pattern modeling approach. The new design approach is validated through a case study implementation and verified by web designers. Future works of the design model will be explained and briefly summarized at the end of the paper. © 2016 ACM.		Mubin, S.A.; Jantan, A.H.; Abdullah, R.; Kamaruddin, A.	Proceedings of CHIuXiD 2016, the 2nd International Human Computer Interaction and User Experience Conference in Indonesia: Bridging the Gaps in the HCI and UX World					Excluded	Excluded	new_screen			2		2016				
296		ModelGuidance	Model-driven approach to data collection and reporting for quality improvement	Continuous data collection and analysis have been shown essential to achieving improvement in healthcare. However, the data required for local improvement initiatives are often not readily available from hospital Electronic Health Record (EHR) systems or not routinely collected. Furthermore, improvement teams are often restricted in time and funding thus requiring inexpensive and rapid tools to support their work. Hence, the informatics challenge in healthcare local improvement initiatives consists of providing a mechanism for rapid modelling of the local domain by non-informatics experts, including performance metric definitions, and grounded in established improvement techniques. We investigate the feasibility of a model-driven software approach to address this challenge, whereby an improvement model designed by a team is used to automatically generate required electronic data collection instruments and reporting tools. To that goal, we have designed a generic Improvement Data Model (IDM) to capture the data items and quality measures relevant to the project, and constructed Web Improvement Support in Healthcare (WISH), a prototype tool that takes user-generated IDM models and creates a data schema, data collection web interfaces, and a set of live reports, based on Statistical Process Control (SPC) for use by improvement teams. The software has been successfully used in over 50 improvement projects, with more than 700 users. We present in detail the experiences of one of those initiatives, Chronic Obstructive Pulmonary Disease project in Northwest London hospitals. The specific challenges of improvement in healthcare are analysed and the benefits and limitations of the approach are discussed. © 2014 The Authors.		Curcin, V.; Woodcock, T.; Poots, A.J.; Majeed, A.; Bell, D.	Journal of Biomedical Informatics					Excluded	Excluded	new_screen			2		2014				
297		ModelGuidance	Using abstract state machines to support UML model instantiation checking	UML is defined in terms of the four-level modeling architecture. The UML metamodel consists of informal description, class diagrams which are used to give the abstract syntax, and the well-formedness rules given in OCL. Furthermore, class diagrams have played an important role in software development because they provide basic information about a software system. In this paper, we propose a new method to support class diagrams based on Abstract State Machines. As an application of this method we will use a class diagram to represent OCL structure and therefore an OCL translator is generated. Based on the support of class diagrams and OCL, any user-defined UML model (M1-level), as an instantiation of the UML metamodel, can be compared against the UML metamodel. On the other hand, an object model (M0-level) can be checked based on the user-defined UML model (M1-level). Therefore, more errors can be reported to software developers during the early phase of software development.		Shen, W.; Low, W.L.	Proceedings of the IASTED International Conference on Software Engineering: part of the 23rd IASTED International Multi-Conference on Applied Informatics, SE 2005					Excluded	Excluded	new_screen			2		2005				
298		ModelGuidance	"A performance modeling ""Blending"" approach for early life-cycle risk mitigation"	"In this paper we describe our first experiences of a performance modeling ""blending"" approach for early life-cycle risk mitigation in a large enterprise integration project. The goal was to use performance modeling to assist with defining the requirements for the system and to identify areas of architecture and technology risk which could be addressed in future phases of the project. We modified our Service Oriented Performance Modeling approach to enable useful models to be constructed by ""blending"" data from a variety of imprecise and incomplete information sources prior to the existence of concrete requirements or implementations. The approach iterated over two phases to ensure that deficiencies in method and information identified in the first phase were addressed in the second phase. Activities included scenario and workload modeling in phase 1, and software infrastructure, workload and ""blended"" modeling in phase 2. The resulting models enabled early exploration of critical assumptions and architectural alternatives. The results were enthusiastically received by the client and used by key decision makers and as inputs for future project phases. The ""blending"" approach to early life-cycle performance modeling raised the profile of architecture performance risk mitigation in the inception phase, so that performance is more likely be a feature of the subsequent development phases. Copyright 2012 ACM."		Brebner, P.	ICPE'12 - Proceedings of the 3rd Joint WOSP/SIPEW International Conference on Performance Engineering					Excluded	Excluded	new_screen			2		2012				
299		ModelGuidance	Towards a non-conformity detection method between conceptual and business process models	The lack of conformity between the actions performed in a business process and the structure defined in the conceptual model for information systems has become a frequent concern in organizations. If this lack of conformity is identified at early stages, it becomes less expensive to be corrected. The aim of this paper is to present a method for detecting the nonconformity between information systems' conceptual models and business process models. Such detection is performed through animation of the objects specified in the conceptual model based on the related descriptions set in the business process model. The proposed method includes a tool that interoperates with the USE tool, which analyzes the structural violations defined in the conceptual model. © 2016 IEEE.		Duarte, R.; Silva Da Silveira, D.; Araújo, J.; Wanderley, F.	Proceedings - International Conference on Research Challenges in Information Science					Excluded	Excluded	new_screen			2		2016				
300		ModelGuidance	A generic executable framework for model-driven engineering	Model-Driven Engineering (MDE) has become in the last years one of the most promising technologies for software productivity improvement. Much technology has been developed around MDE including editors, model transformation engines, constraint definition languages, etc. However, the impact of MDE in software companies is still not deep enough, often because existing tools and methods fail to adapt to their individual needs. In this paper, a Generic Executable Model-Driven Engineering (GEMDE) framework is presented. GEMDE enables the full customization of the engineering process to fit any MDE methodology. The paper also presents an example customization of the tool adapting a UML-MARTE methodology to develop and analyze LEGO Mindstorm applications.		A. Noguero; H. Espinoza	7th Iberian Conference on Information Systems and Technologies (CISTI 2012)					Excluded	Excluded	new_screen			2		2012				
301		ModelGuidance	Model driven development of secure XML data warehouses: A case study	Data Warehouses (DWs) are currently considered to be the cornerstone of Business Intelligence (BI) systems. Security is a key issue in DWs since the business information that they manage is crucial and highly sensitive, and should be carefully protected. However, the increasing amount of data available on the Web signifies that more and more DW systems are considering the Web as the primary data source through which to populate their DWs. XML is therefore widely accepted as being the principal means through which to provide easier data and metadata interchange among heterogeneous data sources from the Web and the DW systems. Although security issues have been considered during the whole development process of traditional DWs, current research lacks approaches with which to consider security when the target platform is based on the Web and XML technologies. The idiosyncrasy of the unstructured and semi-structured data available on the Web definitely requires particular security rules that are specifically tailored to these systems in order to permit their particularities to be captured correctly. In order to tackle this situation, in this paper, we propose a methodological approach based on the Model Driven Architecture (MDA) for the development of Secure XML DWs. We therefore specify a set of transformation rules that are able to automatically generate not only the corresponding XML structure of the DW from secure conceptual DW models, but also the security rules specified within the DW XML structure, thus allowing us to implement both aspects simultaneously. A case study is provided at the end of the paper to show the benefits of our approach. © 2010 ACM.		Vela, B.; Blanco, C.; Fernández-Medina, E.; Marcos, E.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2010				
302		ModelGuidance	An MDA approach for generating web interfaces with UML ConcurTaskTrees and canonical abstract prototypes	UML has become the standard language for modelling in different areas and domains, but it is widely recognized that it lacks support for User Interface Design (UID). On the other hand, ConcurTaskTree (CTT) is one of the most widely used notations for task and dialogue modelling. An important achievement is the proposed notation and semantics for CTT by extending the UML metamodel, proving that task modelling in user interface design can be accomplished by a UML compliant notation. For the interface structure design was proposed that UML's CTT could be complemented with Canonical Abstract Prototypes (CAP) leading to a model-based user interface design method co-specified by the presentation (CAP) and behaviour (UML's CTT) perspectives. In this paper we propose another step in this UID method by defining a specific model compliant with the OMG recommended Model Driven Architecture (MDA), which will be the intermediary between the design model and an implementation of the user interface. This proposal will align the UID method with the MDA recommendation making it possible to automatically generate interface prototypes from conceptual models. © Springer-Verlag Berlin Heidelberg 2007.		Costa, D.; Nóbrega, L.; Nunes, N.J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2007				
303		ModelGuidance	A property-based abstraction framework for SysML activity diagrams	SysML activity diagrams are OMG/INCOSE standards used for modeling, analyzing and specifying probabilistic systems. Since they are considered as a de facto systems' modeling language, it is of a major importance to verify these diagrams. Moreover, it is even more important to reduce the cost of their verification process. In this paper, we propose a probabilistic abstraction framework to efficiently verify SysML activity diagrams. It is based on reducing the diagram complexity with respect to a system requirement. For verification, we use our verification approach that relies on PRISM model checker. To ensure the correctness of our proposed approach, we prove its soundness. This is achieved by finding the adequate pre-order relation between the semantics of the abstract and the concrete diagrams. This relation is shown to preserve the satisfaction of systems requirements. To this end, a calculus to capture the underlying semantics of SysML activity diagrams is proposed. Finally, the effectiveness of our approach is demonstrated on two real systems. © 2013 Elsevier B.V. All rights reserved.		Ouchani, S.; Aït Mohamed, O.; Debbabi, M.	Knowledge-Based Systems					Excluded	Excluded	new_screen			2		2014				
304		ModelGuidance	Business Process Modeling	Process modeling and workflow applications have become more an more important during last decade. The main reason for this increased interest is the need to provide computer aided system integration of the enterprise based on its business processes. This need requires a technology that enables to integrate modeling, simulation and enactment of processes into one single package. The primary focus of all tools is to describe the way how activities are ordered in time. This kind of partially ordered steps shows how the output of one activity can serve as the input to another one. But there is also another aspect of the business process that has to be involved - where the activities are executed. The spatial aspect of the process enactment represents a new dimension in the process engineering discipline. It is also important to understand that not just process enactment but also the early phases of process specification have to cope with this spatial aspect. The paper is going to discuss how all these above mentioned principles can be integrated together and how the standard approach in process specification might be extended with the spatial dimension to make business process models more natural and understandable. © 2007 The authors and IOS Press. All rights reserved.		Vondrák, I.	Frontiers in Artificial Intelligence and Applications					Excluded	Excluded	new_screen			2		2007				
305		ModelGuidance	SML4C: Fully automatic classification of state machine models for model inspection in education	In the task-based learning of state machine modeling, understanding a large number of learner-created models is a very time-consuming task for instructors. Given that learner-created models with different descriptions often represent the same behavior, if such models can be classified correctly by behavioral similarity, then the instructors may efficiently create feedback with no oversights by inspecting one model per class. Such approach, in essence, allows learners to receive an early and beneficial feedback. However, the problem is that there is no existing method that can easily and automatically classify these learner-created state machine models in terms of behavioral similarity, which is our firsthand attempt in this study. We referred to our proposed tool as SMart-Learning for Classification (SML4C). It specifically measures the behavioral similarity of the state machine models based on the results of their testing. This approach prevents the measurement results from depending on the descriptive variety. In a previous work we realized a method and tool to test the state machine models, where instructors were required to manually create test cases. On the contrary, the method proposed herein provides a new function of fully and automatically generating test cases from the learner-created models. Thus, state machine models can be easily classified using various test cases that capture the generation-source model's behaviors. We validated the effectiveness of the method via application to 63 learner-created models that express the collaborative behaviors between two mobile robots. © 2019 IEEE.		Ogata, S.; Kayama, M.	Proceedings - 2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019					Excluded	Excluded	new_screen			2		2019				
306		ModelGuidance	Multi-purpose, multi-level feature modeling of large-scale industrial software systems	Feature models are frequently used to capture the knowledge about configurable software systems and product lines. However, feature modeling of large-scale systems is challenging as models are needed for diverse purposes. For instance, feature models can be used to reflect the perspectives of product management, technical solution architecture, or product configuration. Furthermore, models are required at different levels of granularity. Although numerous approaches and tools are available, it remains hard to define the purpose, scope, and granularity of feature models. This paper first reports results and experiences of an exploratory case study on developing feature models for two large-scale industrial automation software systems. We report results on the characteristics and modularity of the feature models, including metrics about model dependencies. Based on the findings from the study, we developed FORCE, a modeling language, and tool environment that extends an existing feature modeling approach to support models for different purposes and at multiple levels, including mappings to the code base. We demonstrate the expressiveness and extensibility of our approach by applying it to the well-known Pick and Place Unit example and an injection molding subsystem of an industrial product line. We further show how our approach supports consistency between different feature models. Our results and experiences show that considering the purpose and level of features is useful for modeling large-scale systems and that modeling dependencies between feature models is essential for developing a system-wide perspective. © 2016, The Author(s).		Rabiser, D.; Prähofer, H.; Grünbacher, P.; Petruzelka, M.; Eder, K.; Angerer, F.; Kromoser, M.; Grimmer, A.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2018				
307		ModelGuidance	Towards a model-driven approach for treating quality attributes of service-based business processes	A systematic way for treating non-functional (quality) attributes into the business process management lifecycle is still a challenge. The agnostic, integrated and automated treatment of these attributes from the most abstract business level to their technical realisation at execution level is a complex task. In this context, this paper presents a model-driven approach centred on quality attributes of business processes. Additionally, two key characteristics of our approach are the agnostic treatment of the quality attribute being considered and its projection on standards such as user requirement notation (URN), UML for QoS and WS-Policy. To illustrate the proposed approach, a supply chain management use case is used. Finally, in order to evaluate the model-driven approach, an evaluation plan based on goal/question/metric (GQM) is defined, providing the rationale to define and to apply evaluation metrics of interest. Copyright © 2014 Inderscience Enterprises Ltd.		Teles, F.; Lins, F.; Rosa, N.	International Journal of Web Engineering and Technology					Excluded	Excluded	new_screen			2		2014				
308		ModelGuidance	UML-based design of network processors applications	Network processors (NPs) are an emerging class of embedded systems used in the telecommunication domain for functionality like routing and switching. In this paper, we outline a framework currently under development for the use of a model driven engineering approach to the design of NP software applications. Specifically we introduce the UML profile called NAP (network processors application profile) which has been specialized so far for the design of SCTP applications.		A. Bertolino; G. De Angelis; R. Mirandola	31st EUROMICRO Conference on Software Engineering and Advanced Applications					Excluded	Excluded	new_screen			2		2005				
309		ModelGuidance	Model-based diagnosis of hardware designs	The state of the art in hardware design is the use of hardware description languages such as VHDL. The designs are tested by simulating them and comparing their output to that prescribed by the specification. A significant part of the design effort is spent on detecting unacceptable deviations from this specification and subsequently localizing the sources of such faults. In this paper, we describe an approach to employ model-based diagnosis for fault detection and localization in very large VHDL programs, by automatically generating the diagnosis model from the VHDL code and using observations about the program behavior to derive possible fault locations from the model. In order to achieve sufficient performance for practical applicability, we have developed a representation that provides a highly abstracted view of programs and faults, but is sufficiently detailed to yield substantial reductions in the fault localization costs when compared to the current manpower-intensive approach. The implementation in conjunction with the knowledge representation is designed with openness in mind in order to facilitate use of the highly optimized simulation tools available.		Friedrich, G.; Stumptner, M.; Wotawa, F.	Artificial Intelligence					Excluded	Excluded	new_screen			2		1999				
310		ModelGuidance	Model-Driven Automatic Generation of Verified BPEL Code for Web Service Composition	Service composition, which provides a more effective way to combine several single services into a composite service, is a kind of software reuse techniques. However, one of the most important problems is how to perform service composition correctly and effectively so as to produce high-quality source codes for describing the resulted composite service. In this paper, we propose a model-driven method to solve this problem, where UML 2.0 sequence diagrams are extended to model the composition of Web services, extended statecharts are synthesized from sequence diagrams, then the statecharts are further transferred to the input language of a model checker for behavior consistency checking, and finally verified BPEL codes can be generated from improved sequence diagrams. Case studies have been performed to demonstrate the whole process and illustrate the significance of our approach.		B. Li; Y. Zhou; J. Pang	2009 16th Asia-Pacific Software Engineering Conference					Excluded	Excluded	new_screen			2		2009				
311		ModelGuidance	A Model Driven Approach to Derive E-Learning Applications in Software Product Line	Platforms such as Moodle aims to ease and improve the teaching-learning process by means of taking advantage of internet technologies. All existing e-learning platforms are pretty similar the concepts of activity, assignment, deliverable or grade. But also a wide range of differences among them exists. Software Product Line (SPL) has as goal the effective production of similar software systems.. Product derivation represents a fundamental aspect in SPL. It is also the main challenge that SPL faces. Despite its importance, there is only a little research on product derivation compared to the large work on developing product lines. In addition, the few available research reports guidance about how to derive a product from a product line. In this paper we describe a combination of SPL and MDA which both fit perfectly together in order to build applications in cost effective way. We proposed an approach for product derivation that adopts MDA with its organized layers of models to achieve SPL goals.		Lahiani, Nesrine; Bennouar, Djamal	Proceedings of the International Conference on Intelligent Information Processing, Security and Advanced Communication					Excluded	Excluded	new_screen			2		2015				
312		ModelGuidance	Deriving executable process descriptions from UML	In the recent past, a relevant effort has been devoted to the definition of process modeling languages (PMLs). The resulting languages and environments -although technically successful-did not receive much attention from industry. On the contrary, researchers and practitioners have recently started experimenting with the usage of UML as a PML. Being so popular and widely used, UML has an important competitive advantage compared to any specialized PML. However, it has also a main limitation. While most PMLs are executable by some process engine, UML was conceived as a non-executable, semi-formal language. The work described here aims at assessing the possibility of employing a subset of UML as an executable PML. The article proposes a formalization of the semantics of the UML subset and presents the translation of UML process models into code, which can be enacted in the OPSS process-centered environment. The paper also presents a case study to validate the approach. We expect that process modeling by means of UML is easier and available to a larger community of software process managers. Moreover, process enactment makes the process more efficient, reliable, predictable and controllable, as widely shown by previous research.		Di Nitto, E.; Lavazza, L.; Schiavoni, M.; Tracanella, E.; Trombetta, M.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2002				
313		ModelGuidance	A Classification Method for the Systematic Identification of Models and Workflows in MBSE	Modern engineering uses models for virtual verification of systems. Such models are usually combined in workflows, where the results of models are linked to verify system requirements. Model-Based Systems Engineering (MBSE) has evolved as an approach to ease the usage of models and workflows. One goal in MBSE is to reuse models and workflows from libraries. However, the step of identifying and classifying both models and workflows for such a library is not yet systematized. We propose a method on how to identify models and workflows for an MBSE model library. Possible purposes of models are identified and afterwards models satisfying that purpose are retrieved. The identified models are systematically combined to workflows. Thereby a systematic approach to create a model library is given. © 2022 die Autoren.		Hoepfner, G.; Kowalski, J.; Faustmann, C.; Zerwas, T.; Kranabitl, P.; Vafaei, S.; Jacobs, G.; Hick, H.	Proceedings of the 33rd Symposium Design for X, DFX 2022					Excluded	Excluded	new_screen			2		2022				
314		ModelGuidance	Designing, animating, and verifying partial UML Models	Models have been shown to be useful during virtually all stages of the software lifecycle. They can be reverse engineered from existing artifacts, or created as part of a system's execution, but in many cases models are created by designers from informal specifications. In the latter case, such design models are typically used as means of communication between designers, and developers. They can also in some cases be validated by simulation over test cases, or even by formal verification. However, most existing model simulation or verification approaches require relatively consistent and complete models, whereas design models often start small, incomplete, and inconsistent. Moreover, few design models actually reach the stage where they can be simulated, and even fewer the stage where they can be formally verified. In order to address this issue, we propose a partial modeling approach that makes it possible to animate incomplete and inconsistent models. This approach makes it possible to incrementally improve testable models, and can also help designers reach the stage where their models can be formally verified. A proof-of-concept tool called AnimUML has been created in order to provide means to evaluate the approach on several examples. They are all executable, and some can even undergo model-checking. © 2020 ACM.		Jouault, F.; Besnard, V.; Calvar, T.L.; Teodorov, C.; Brun, M.; Delatour, J.	Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2020					Included	Excluded	new_screen			2		2020				
315		ModelGuidance	Modeling control speculation for timing analysis	The schedulability analysis of real-time embedded systems requires worst case execution time (WCET) analysis for the individual tasks. Bounding WCET involves not only language-level program path analysis, but also modeling the performance impact of complex micro-architectural features present in modern processors. In this paper, we statically analyze the execution time of embedded software on processors with speculative execution. The speculation of conditional branch outcomes (branch prediction) significantly improves a program's execution time. Thus, accurate modeling of control speculation is important for calculating tight WCET estimates. We present a parameterized framework to model the different branch prediction schemes. We further consider the complex interaction between speculative execution and instruction cache performance, that is, the fact that speculatively executed blocks can generate additional cache hits/misses. We extend our modeling to capture this effect of branch prediction on cache performance. Starting with the control flow graph of a program, our technique uses integer linear programming to estimate the program's WCET. The accuracy of our method is demonstrated by tight estimates obtained on realistic benchmarks.		Li, X.; Mitra, T.; Roychoudhury, A.	Real-Time Systems					Excluded	Excluded	new_screen			2		2005				
316		ModelGuidance	Introducing system-centered ontology to hierarchical workflow abstraction modeling	Knowledge Reformulation and Abstraction model have been proposed to be a model of representation change that includes both syntactic reformulation and abstraction. We furthermore extended the process on the basis of the ontology classes and the mappings between them and particularly the concept of goal perception is proposed to formalize the goal-based hierarchical process of workflow abstraction modeling. This paper furthermore introduces system-centered ontology to formalize the hierarchical workflow modeling process. We propose the concept of workflow fragment-based ontology class and provide its hierarchical abstraction process respectively from the object-based perspective and the flow-based perspective, i.e., workflow fragment abstraction and workflow fragment aggregation. Workflow fragment-based ontology class gives the mechanism of system-centered knowledge learning, sharing and reuse to save the cost of redesign and remodeling of workflow models. The hierarchical workflow abstraction model based on workflow fragments (from the perspective on the basis of system-centered ontology) is constructed which is more abstract than based on object-centered and simplifies the reasoning.		Shanwu, S.; Nan, W.; Hui, L.	Journal of Convergence Information Technology					Excluded	Excluded	new_screen			2		2012				
317		ModelGuidance	A Model Driven Domain Engineering Method	"This paper proposes an approach of organizing the development of a large software system. By domain analysis and design the method can provide a domain meta-model (DMM) based on the MOF model and a flexible and customizable domain specific software architecture (DSSA). In late domain implementation phase it can make use of DMM and DSSA to generate domain software. The method provides a good paradigm for automating software development that has flexibility, reusability, agility and productivity across the software life cycle. It can rapidly generate a new domain application without code programming when requirements changing. So the method can generate a domain software family, not only a single application. A major benefit of this approach to software development, as compared to the usual sequential ""waterfall model"" is the speed with which products can be brought to market."		B. Li; S. Liu	2008 Third International Conference on Pervasive Computing and Applications					Excluded	Excluded	new_screen			2		2008				
318		ModelGuidance	Modeling machine availability in enterprise and wide-area distributed computing environments	In this paper, we consider the problem of modeling machine availability in enterprise-area and wide-area distributed computing settings. Using availability data gathered from three different environments, we detail the suitability of four potential statistical distributions for each data set: exponential, Pareto, Weibull, and hyperexponential. In each case, we use software we have developed to determine the necessary parameters automatically from each data collection. To gauge suitability, we present both graphical and statistical evaluations of the accuracy with each distribution fits each data set. For all three data sets, we find that a hyperexponential model fits slightly more accurately than a Weibull, but that both are substantially better choices than either an exponential or Pareto. These results indicate that either a hyperexponential or Weibull model effectively represents machine availability in enterprise and Internet computing environments. © Springer-Verlag Berlin Heidelberg 2005.		Nurmi, D.; Brevik, J.; Wolski, R.	Lecture Notes in Computer Science					Excluded	Excluded	new_screen			2		2005				
319		ModelGuidance	Modelling and generating business-to-business applications using an Architecture Description Language-based approach	The emergence of Internet and the World Wide Web in accordance with new technological advances led the organisations to seize the opportunities offered by electronic business. In particular, the opportunity to cooperate within the context of electronic alliances that aim at co-operating to achieve clients' orders while preserving the autonomy of involved organisations and enabling concurrency of their activities, flexibility of their negotiations and dynamic evolution of their environment. The paper presents a software architecture-based approach to model and generate business-to-business (B2B) applications that support decentralised and dynamic electronic alliances. The approach is founded on modelling alliance's life-cycle using an Architecture Description Language (ADL) called Zeta and generating an executable code from the description into a target implementation environment called Process/Web. The work presented is being developed and validated within the framework of e-alliance1 French regional project.		Alloui, I.; Megzari, K.; Oquendo, F.	ICEIS 2003 - Proceedings of the 5th International Conference on Enterprise Information Systems					Excluded	Excluded	new_screen			2		2003				
320		ModelGuidance	Model driven engineering and verification of composite cloud services in MetaMORP(h)OSY	Service Oriented Architectures and service-centric models arose in the last years as a standard de-facto in IT enterprises for offering practically any kind of services to users world-wide. In particular Cloud-based models provide means for realizing and distributing, including infrastructures, hardware and software platforms and services. Even if at the moment Service-centric models and technologies are mature in the IT scenario, composition, analysis and validation of Cloud services are open research challenges. In this work we describe a methodology based on Multi-Agent Models which allows for description, composition and verification of requirements of Cloud-based services. The methodology uses a modeling profile able to describe services as agents in a multi-agent environment and it is based on Model Driven Engineering (MDE) techniques. The proposed methodology includes a verification process for requirements that exploits formal methods during the whole life cycle of services. © 2014 IEEE.		Moscato, F.	Proceedings - 2014 International Conference on Intelligent Networking and Collaborative Systems, IEEE INCoS 2014					Excluded	Excluded	new_screen			2		2014				
321		ModelGuidance	A systematic method to build a knowledge base to be used in a human reliability analysis model	A human’s knowledge base is a key component for the development of a mechanistic model of human response to be used for human reliability analysis. This paper proposes a new method for constructing this knowledge base. The proposed method is comprised of three steps: (1) systematic literature review, which is used to collect data pertinent to the subject under study; (2) summarization, the goal of which is to extract key points that are expressed in the literature; (3) qualitative coding, a process in which codes closely related to the topic are derived and the relationships between these codes are expressed. As a case study, the proposed method is being applied to construct an operator’s knowledge base concerning severe accident phenomenology in a nuclear power plant. Part of this application is explored in this paper. With the proposed method and the resulting knowledge base, it is expected that an individual’s response when presented with a specific context can be modeled in more detail. © Her Majesty the Queen in Right of United Kingdom 2018.		Zhao, Y.; Altman, K.; Chaudhury, K.; Anandika, M.; Smidts, C.	Advances in Intelligent Systems and Computing					Excluded	Excluded	new_screen			2		2018				
322		ModelGuidance	Approach to the construction of the generalized functional-semantic cyber security model	In this paper, the functional-semantic model of cyber security is proposed as an initial step towards the development of a new unified methodological cyber security basis. This model makes it possible to formalize requirements for confidentiality, integrity, and availability, as well as to obtain ontological knowledge inferences about the system security state. © 2015, Allerton Press, Inc.		Zegzhda, P.D.; Zegzhda, D.P.; Stepanova, T.V.	Automatic Control and Computer Sciences					Included	Excluded	new_screen			2		2015				
323		ModelGuidance	Towards verified safety-critical autonomous driving scenario with ADSML	Modeling and verifying safety-critical scenarios of Autonomous Driving System (ADS) have increasingly attracted attention from academy and industry. The major challenge is lacking the domain-specific modeling language for ADS. To deal with this problem, we design and implement an Autonomous Driving Scenario Modeling Language (ADSML) based on the domain knowledge. The metamodel of ADSML describes the modeling elements and their relationships, which is used to capture the specific features of scenario. The concrete syntax of ADSML makes it easy to specify complex relationships among scenario elements, more important, we propose the contract module of ADSML to model the dynamic aspects of scenario. We use the semantics of Stochastic Hybrid Automata (SHA) to specify the dynamic behaviors in scenarios, which is seamlessly integrated with the model checker UPPAAL-SMC. With the help of the automatic model transformation, the ADSML models can be verified with UPPAAL-SMC to analyze the behaviors in scenarios. To demonstrate the feasibility, the scenario of lane change overtaking is modeled and some safety-critical properties are analyzed. The novelty of our approach is that it integrates the advantages of visual modeling and formal modeling. It helps the designers to model and verify the scenario models of autonomous driving systems. © 2021 IEEE.		Du, D.; Chen, J.; Zhang, M.; Ma, M.	Proceedings - 2021 IEEE 45th Annual Computers, Software, and Applications Conference, COMPSAC 2021					Excluded	Excluded	new_screen			2		2021				
324		ModelGuidance	Analysis and visualization of behavioral dependencies among distributed objects based on UML models	The development of Behavioral Dependency Analysis (BDA) techniques and the visualization of such dependencies have been identified as a high priority in industrial Distributed Real-Time Systems (DRTS). BDA determines the extent to which the functionality of one system entity (e.g., an object, a node) is dependent on other entities. Among many uses, a BDA is traditionally used to perform risk analysis and assessment, fault tolerance and redundancy provisions (e.g. multiple instances of a system entity) in DRTS. Traditionally, most BDA techniques are based on source code or execution traces of a system. However, as model driven development is gaining more popularity, there is a need for model-based BDA techniques. To address this need, we propose a set of procedures and measures for the BDA of distributed objects based on behavioral models (UML sequence diagrams). In contrast to the conventional code-based and execution-trace-based BDA techniques, this measure can be used earlier in the software development life cycle, when the UML design model of a system becomes available, to provide engineers with early insights into dependencies among entities in a DRTS (e.g., early risk identification). We also present a dependency visualization model to visualize measured dependencies. Our approach is applied to a case study to show its applicability and potential usefulness in predicting behavioral dependencies based on UML models. © Springer-Verlag Berlin Heidelberg 2006.		Garousi, V.; Briand, L.C.; Labiche, Y.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2006				
325		ModelGuidance	Activity-based DEVS modeling	Use of model-driven approaches has been increasing to significantly benefit the process of building complex systems. Recently, an approach for specifying model behavior using UML activities has been devised to support the creation of DEVS models in a disciplined manner based on the model driven architecture and the UML concepts. In this paper, we further this work by grounding Activity-based DEVS modeling and developing a fully-fledged modeling engine to demonstrate applicability. We also detail the relevant aspects of the created metamodel in terms of modeling and simulation. A significant number of the artifacts of the UML 2.5 activities and actions, from the vantage point of DEVS behavioral modeling, is covered in details. Their semantics are discussed to the extent of time-accurate requirements for simulation. We characterize them in correspondence with the specification of the atomic model behavior. We demonstrate the approach with simple, yet expressive DEVS models. © 2017 Elsevier B.V.		Alshareef, A.; Sarjoughian, H.S.; Zarrin, B.	Simulation Modelling Practice and Theory					Excluded	Excluded	new_screen			2		2018				
326		ModelGuidance	Extending UML to support user interface design	The long term aim of this research is more complete integration of HCI and software engineering methods. It currently involves two distinct projects, the common thread being UML use case modelling. Project 1 is concerned with the mapping of tasks to dialogue structure. Project 2 is examining UML use case modelling from the viewpoint of its suitability as input to the early stages of the visual design of graphical user interfaces. It remains to bring the work together into an integrated method. © 2001 ACM.		Phillips, C.; Kemp, E.; Scogings, C.	Proceedings - Symposium on Computer Human Interaction, CHINZ 2001					Excluded	Excluded	new_screen			2		2001				
327		ModelGuidance	An XML-based language for the Research & Development pipeline management problem	Process management frameworks, such as Sim-Opt [AIChE J. 10 (2001) 2226], which addresses the Research & Development (R&D) pipeline management problem with mathematical programming and discrete-event simulation give rise to formulations that are extremely data-intensive and have complex hierarchical data-requirements. This necessitates a data model that can be used to model any given problem instance in the form of a structured input language. Further, the language requires a parser that reads and interprets any input instance in order to capture the input data in memory and allow the formulation and solution of the corresponding optimization and simulation models. In the past, structured documentation languages have been designed for this purpose. However, such customized languages often lead to a strong coupling between the language definition and the parser implementation. Any redefinition or extension of the language to accommodate changes in the problem scope and/or optimization/simulation formulations would imply a customized extension of the parser, thus leading to software engineering difficulties. One solution to the above difficulties is provided by the Extensible Markup Language (XML) technology, a recent advance in software technology that enables extensibility and data abstraction and provides efficient data structuring parsers and object orientation. XML imposes the requirement of specifying data in an inherently hierarchical structure and provides generic parsers that do not require any re-design upon language extensions or redefinitions. This paper describes an XML-based language that has been developed for the R&D pipeline management problem, with the keywords, structural syntax, and data content models for representing all aspects of the problem. It also discusses the practical issue of effectively accessing data that gets stored in the document object model (DOM) upon parsing, by designing a set of problem definition classes (PDC), which organize the data stored in the generic DOM structure into an effective set of data structures that facilitate formulation generation. Efforts to integrate the language, the DOM parser, and the PDC in a discrete event simulation application for the R&D pipeline problem are also discussed. (C) 2003 Published by Elsevier Science Ltd.		Varma, VA; Pekny, JF; Reklaitis, GV; Subramanian, D	COMPUTERS & CHEMICAL ENGINEERING					Excluded	Excluded	new_screen			2		2003				
328		ModelGuidance	A decision support system model for desiging software architecture	The architecture of a software system is the outcome of architectural design decisions. There are many existing approaches which facilitate decision making, decision modeling and architecture evaluation on the basis of quality attributes but there is no technique which provides a complete approach for decision making, decision modeling and evaluating the architecture in software architecting process. In this paper, we present a literature review and critical evaluation of existing approaches. On the basis of critical evaluation of existing approaches, we propose a model, which provides a comprehensive approach for software architecture design process. Our approach provides a knowledge base and also provides the evaluation of architecture in architecting process. Our model provides a systematic way of architecting to increase the effectiveness and consistency of architectural design decisions.		Raza, M.; Usman, M.	Frontiers in Artificial Intelligence and Applications					Excluded	Excluded	new_screen			2		2015				
329		ModelGuidance	A modeling methodology to facilitate safety-oriented architecture design of industrial avionics software	Summary Ensuring that avionics software meets safety requirements at each development stage is very important to warrant the safe operation of an avionics system. Many safety requirements are imposed by various standards and industrial regulations that must be met by avionics software. One of such standards is DO-178B/C, which provides guidelines (e.g., development process and objectives to satisfy in development activities) for meeting safety requirements. This paper presents a modeling methodology including a UML profile for specifying safety requirements on a component-based architecture model and a set of design guidelines on avionics software. These safety requirements were identified from both standards (mainly DO-178B/C) and current engineering practices in the domain of avionics systems. The methodology automatically enforces these safety requirements. We have applied the methodology on an industrial autopilot system, and several previously uncaught faults were revealed. Copyright © 2014 John Wiley & Sons, Ltd.		Wu, J.; Yue, T.; Ali, S.; Zhang, H.	Software - Practice and Experience					ConflictIncluded	Included	new_screen			2		2015				
330		ModelGuidance	Model-driven secure development lifecycle	Building security into software development lifecycles and doing it right is hard. To address the challenge, several prominent organizations have published process-oriented security guidelines to bring security activities into a structured way. Although these efforts contribute to measurable improvements in software and system security, they are often too verbose and fuzzy to be implementable in a development lifecycle involving people (e.g., security experts, developers, and managers) with different skillsets. In this paper, we propose the model-driven secure development lifecycle (MD-SDL), an approach that leverages on modeling methods and the advances in model-driven security to simplify the process of efficiently integrating security into development lifecycles for the development of security-critical software and systems.		Ma, Z.; Wagner, C.; Bonitz, A.; Bleier, T.; Woitsch, R.; Nichterl, M.	International Journal of Security and its Applications					ConflictExcluded	Excluded	new_screen			2		2012				
331		ModelGuidance	UMLintr: a UML profile for specifying intrusions	Specifications of non-functional requirements (NFR) such as security, safety, usability are as important as specification of functional requirements (FR). Non conformance to some NFR may render the whole software useless. There are many difficulties associated with the representation of NFR and the complexity of their subsequent validation. The main objective of this work is towards incorporating an important aspect of NFR, i.e., security from the very beginning of a software development process. In this paper, a framework is presented for specifying intrusion scenarios in the Unified Modeling Language (UML). We describe a UML profile called UMLintr (UML for intrusion specifications) that allows developers to specify intrusions using UML notations extended to suit the context of intrusion scenarios. The framework utilizes the expressiveness of UML and eliminates the need of using attack languages that are proposed only to describe attack scenarios. Since developers do not need to learn a separate language to describe attacks, the task of specifying intrusion scenarios becomes much easier. This approach also helps to avoid conflicting (e.g., security vs. usability), ambiguous, and redundant requirements. Examples are provided to show the usage of the proposed UML profile.		M. Hussein; M. Zulkernine	13th Annual IEEE International Symposium and Workshop on Engineering of Computer-Based Systems (ECBS'06)					Excluded	Excluded	new_screen			2		2006				
332		ModelGuidance	Approaches to modelling security scenarios with domain-specific languages	Many security scenarios involve both network and cryptographic protocols and the interactions of different human participants in a real-world environment. Modelling these scenarios is complex, in part due to the imprecision and under-specification of the tasks and properties involved. We present work-in-progress on a domain-specific modelling approach for such scenarios; the approach is intended to support coarse-grained state exploration, and incorporates a classification of elements complementary to computer protocols, such as the creation, personalisation, modification and transport of identity tokens. We propose the construction of a domain-specific language for capturing these elements, which will in turn support domain-specific analyses related to the reliability and modifiability of said scenarios. © 2012 Springer-Verlag.		Brooke, P.J.; Paige, R.F.; Power, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2012				
333		ModelGuidance	Combined modelling method	In this work it is proposed to use the combined modeling method for analysis of enterprise's business processes. Any business process is characterized by functional dynamic and definiteness of static state. The study of static effects and the reveal of dynamic rules in business processes are important for modern science. Dynamic rules in processes allow to define cause-result relationships between business processes. In its turn the static state of a system does not allow to trace the development of conversion of one condition into another condition. Both methods have advantages and disadvantages, that is why for more effective analysis of enterprise's business processes it is proposed to use the combined modeling method. The main idea of the combined modeling method is to convert static IDEF3-models into dynamic SIMAN-models and to analyze these models. The realization of the combined modeling method is accomplished with the help of modern CASE-technologies. CASE-technology for static modeling is the program product BPWin 4.0, which allows to create IDEF3-models. CASE-technology for dynamic modeling is the program product Arena 5.0, which allows to create SIMAN-models.		O. Zamyatina; E. Dmitrieva; G. Tsapk	7th Korea-Russia International Symposium on Science and Technology, Proceedings KORUS 2003. (IEEE Cat. No.03EX737)					Excluded	Excluded	new_screen			2		2003				
334		ModelGuidance	Approaches for test case generation from UML diagrams	Model based testing (MBT) is an important approach with many advantages that can reduce the cost and increase the effectiveness and quality of a testing procedure. In MBT, test cases can be derived from different models, also from the popularly used UML diagrams. Different UML diagrams include various important pieces of information that can be successfully used in a testing procedure. A lot of papers present approaches for test case generation from different UML diagrams and researchers are trying to find the most optimal one. In this paper, we present the first results of a systematic literature review in the area of test case generation from UML diagrams. Based on research questions, we explored which UML diagrams are most commonly used for test case generation, what approaches are presented in the literature, their pros and cons and connections with different testing levels. We also tried to find approaches that are tailored to test mobile applications. First results show that UML state machine, activity, sequence diagram and of course, a combination of more UML diagrams, are most commonly used for test case generation. Different approaches are used for generation, like graphs, trees, tables, labelled transition systems (LTS), genetics algorithms (GA), finite state machines (FSM) and others. The found approaches have many advantages, but also some disadvantages such as a lack of automatization, problems with complex diagrams and others. A detailed analysis is presented in this article. © by the paper's authors.		Schweighofer, T.; Čko, M.H.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2014				
335		ModelGuidance	Checking the European railways traffic management system (ERTMS) operating rules using UML and the B method	"Interoperability is a critical factor for cost cutting and to increase performance in European railway exchanges. The European Railways Traffic Management System (ERTMS), which is both a specification and a technological framework, aimed at providing an answer to the above interoperability needs. Considering the implementation of ERTMS in a particular national context, operating rules must be compliant with the ERTMS specification, whereas the whole system has to provide some safety properties. Moreover, the management of railway signalling in ERTMS is based on ""not on board rules"" pertaining to each country and not on global rules. In consequence, it is difficult to evaluate the system in terms of safety. Thus, one of the main purposes of this study is to supply methodological tools for the evaluation of the global consistency between the specification and the operating rules, with regard to safety. This issue is crucial and yet it has scarcely been covered by scientific literature. © 2014 WIT Press."		Ben Ayed, R.; Bon, P.; Collart-Dutilleul, S.	WIT Transactions on the Built Environment					Excluded	Excluded	new_screen			2		2014				
336		ModelGuidance	Combining UML class and activity diagrams for MDA generation of MVC 2 web applications	Model transformations are increasingly gaining attention in software design and development. Model transformation plays a key role in Object Management group (OMG) Model Driven Architecture (MDA) initiative. In this paper, we experience a high level modeling method based on MDA to generate MVC2 web model for an E-commerce web application. This idea is based on the fact that the source metamodel is composed by two metamodels which are: the class diagram and activity diagram. In order to model the internal logic of a complex operation and accurately determine the input jsp page of an Action class and all ingredients of this class, we begin by identifying the operations in view to establish the activity diagram for each operation. After modeling, we implement the transformation rules. These rules are expressed in ATL transformation language. In our algorithm, we consider only the operations belonging to the two diagrams already cited. Practically, we transform only the operations that have an activity diagram and belonging to the class diagram. The MVC2 web model generated can effectively simplify the development processing with less time and cost. © 2013 Praise Worthy Prize S.r.l. - All rights reserved.		Rahmouni, M.; Mbarki, S.	International Review on Computers and Software					Excluded	Excluded	new_screen			2		2013				
337		ModelGuidance	Conceiving the Model-Driven Smart Factory	Manufacturing processes are undergoing major challenges to achieve the Smart Factory vision such as to increase systematic processes reuse and improve understandability of complex structures. However, those challenges recall closely those of software processes which have been successfully targeted by model-driven engineering techniques such as domain-specific modeling languages, modeling abstractions based on view-points, model-based formal analysis and automated model transformations. The goal of this paper is to present a research agenda to integrate those techniques in manufacturing processes to achieve the Smart Factory vision. We first survey manufacturing approaches that are based on the ISA-95 and BPMN standards. Then, we propose model-driven solutions to complement those approaches.		Cadavid, Juan; Alférez, Mauricio; Gérard, Sébastien; Tessier, Patrick	Proceedings of the 2015 International Conference on Software and System Process					Excluded	Excluded	new_screen			2		2015				
338		ModelGuidance	Measuring UML models using metrics defined in OCL within the SQUAM framework	In software engineering practice, measurements may reduce development costs by improving processes and products at early stages. In model driven approaches, measurements can be conducted right from the start of a project. For UML models, a collection of metrics has been empirically validated, however, these need to be precisely defined in order to be useful. Definition of UML metrics in OCL offers a high degree of precision and portability, but due to shortcomings of this language this approach is not widespread. We propose the SQUAM framework, a tool-supported methodology to develop OCL specifications, which incorporates best practices in software development, such as libraries, testing and documentation. As a proof of concept we have developed 26 metrics for UML class diagrams in the academic context. This demonstrated the high effectiveness of our approach: quick learning, high satisfaction of developers, low imposed complexity and potential time reduction through reuse. © 2011 Springer-Verlag.		Chimiak-Opoka, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2011				
339		ModelGuidance	A BPMN extension for the modeling of security requirements in business processes	Business Processes are considered a crucial issue by many enterprises because they are the key to maintain competitiveness. Moreover, business processes are important for software developers, since they can capture from them the necessary requirements for software design and creation. Besides, business process modeling is the center for conducting and improving how the business is operated. Security is important for business performance, but traditionally, it is considered after the business processes definition. Empirical studies show that, at the business process level, customers, end users, and business analysts are able to express their security needs. In this work, we will present a proposal aimed at integrating security requirements through business process modeling. We will summarize our Business Process Modeling Notation extension for modeling secure business process through Business Process Diagrams, and we will apply this approach to a typical health-care business process. Copyright © 2007 The Institute of Electronics, Information and Communication Engineers.		Rodríguez, A.; Fernández-Medina, E.; Piattini, M.	IEICE Transactions on Information and Systems					Included	Excluded	new_screen			2		2007				
340		ModelGuidance	Model-driven system development for distributed fuel management in avionics	Model-based engineering for control software architectures reduces risks and costs in development processes of embedded systems. Developers who follow this methodological approach are able toevaluate the systemwide analysis impact of architectural choices and increase confidence through early verification/validation of the model assumptions. This design methodology is well suitable for a European project (SmartFuel) that proposes a distributed control strategy for aircraft fuel systems. During the first SmartFuel phase, the verification and validation of the aforementioned avionics system was successfully carried out through prototype-based simulations. The future second project phase develops models and tools to analyze, synthesize, and preverify/prevalidate the avionics system architecture at early development stages. This paper addresses the latter project phase by focusing on the prediction of system quality characteristics and the automatic code generation for the system components. It presentsa software development framework to deal with the avionics system specifications bymeans of architectural representations that facilitate the early evaluation of the system. The proposed modeling methodologyis evaluated in simulations and prototypes, and it is compared with the results obtained from the first project phase. The experimental outcomes from two case studies (helicopter and airplane fuel systems) are also presented. Copyright © 2012 Aeronautics and Astronautics, Inc.		Insaurralde, C.C.; Seminario, M.A.; Jiménez, J.F.; Giron-Sierra, J.M.	Journal of Aerospace Computing, Information and Communication					Excluded	Excluded	new_screen			2		2013				
341		ModelGuidance	Dynamically reconfiguring multimedia components: A model-based approach	Distributed multimedia systems are potentially subject to frequent and ongoing evolution of application structures. In such systems it is often unacceptable for reconfigurations to fail or to only partially succeed. This paper describes the reconfiguration architecture of the Djinn multimedia programming framework. We introduce the concept of multimedia transactions for structuring changes into atomic units that preserve application consistency and extend these with the smoothness condition to maintain temporal as well as data integrity across reconfigurations. We present a technique for scheduling configuration changes that trades off the perceived level of smoothness against the available resources and the desired timeliness of the reconfiguration.		Mitchell, S.; Naguib, H.; Coulouris, G.; Kindberg, T.	Proceedings of the 8th ACM SIGOPS European Workshop on Support for Composing Distributed Applications, EW 1998					Excluded	Excluded	new_screen			2		1998				
342		ModelGuidance	Conformance checking in integration testing of time-constrained distributed systems based on UML sequence diagrams	The provisioning of a growing number of services depends on the proper interoperation of multiple products, forming a new distributed system, often subject to timing requirements. To ensure the interoperability and timely behavior of this new distributed system, it is important to conduct integration tests that verify the interactions with the environment and between the system components. Integration test scenarios for that purpose may be conveniently specified by means of UML sequence diagrams (SDs) enriched with time constraints. The automation of such integration tests requires that test components are also distributed, with a local tester deployed close to each system component, coordinated by a central tester. The distributed observation of execution events, combined with the impossibility to ensure clock synchronization in a distributed system, poses special challenges for checking the conformance of the observed execution traces against the specification, possibly yielding inconclusive verdicts. Hence, in this paper we investigate decision procedures and criteria to check the conformance of observed execution traces against a specification set by a UML SD enriched with time constraints. The procedures and criteria are specified in a formal language that allows executing and validating the specification. Examples are presented to illustrate the approach. Copyright © 2017 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.		Lima, B.; Faria, J.P.	ICSOFT 2017 - Proceedings of the 12th International Conference on Software Technologies					Excluded	Excluded	new_screen			2		2017				
343		ModelGuidance	Systematic Diagram Refinement for Code Generation in SEAM	Model-driven development (MDD) is methodology of software construction emerging recently to counter the drawbacks of classic approaches. Apart from the well-known UML, SEAM is another MDD approach increasingly attracting attention due to its capability of regarding the whole system as a single view, thus enabling consistency maintaining during the design development. Especially, the final diagram designed in SEAM can support automatic code generation, which has been the desirable goal of software engineering. However, SEAM suffers from the disadvantage of being too complicated when the system is designed in details at last steps. To tackle this problem, in this paper we propose an approach of systematic diagram refinement which allows users to specify transition matrices in each refinement steps, instead a whole new diagrams. Thus, the diagram developments will become less complicated and more natural. We also illustrate the usefulness of our approach in a featured case-study.		D. Q. Tri; Q. T. Tho	2012 Fourth International Conference on Knowledge and Systems Engineering					Excluded	Excluded	new_screen			2		2012				
344		ModelGuidance	Model-based design verification for embedded systems through SVOCL: an OCL extension for SystemVerilog	Model Based System Engineering (MBSE) is a renowned approach in the context of embedded systems development. It is frequently used to deal with the structural and behavioral aspects of system design. However, the verification of system design is generally performed in isolation. It is particularly true in the context of assertion based verification. Consequently, there is a huge gap between system design and its verification that seriously effects the productivity and time-to market objectives. Therefore, in this research, we target to reduce this gap by exploiting the features of MBSE and SystemVerilog assertions (SVA’s). This article introduces a novel MBSE approach to model the design verification aspects of embedded systems, along with the system design (structural and behavioral aspects). We propose SystemVerilog in Object Constraint Language (SVOCL), an OCL temporal extension for SystemVerilog, to represent the design verification requirements by means of SVA’s. As a part of research, SVOCL transformation engine has been developed to generate SVA’s code in order to automate the design verification of embedded systems. The application of SVOCL has been validated through four case studies. © 2017, Springer Science+Business Media New York.		Anwar, M.W.; Rashid, M.; Azam, F.; Kashif, M.	Design Automation for Embedded Systems					Excluded	Excluded	new_screen			2		2017				
345		ModelGuidance	A Rigorous Methodology for Security Architecture Modeling and Verification	This paper introduces a rigorous methodology for utilizing threat modeling in building secure software architectures using SAM (Software Architecture Modeling framework) and verifying them formally using Symbolic Model Checking. Security mitigations are expressed as constraints over a high-level SAM model and are used to refine it into a secure constrained model. We also, propose a translation from SAM Secure models into the SMV model checker where the threats and the elicited security properties from the threat modeling process are used as inputs to the verification phase as well. This method is developed with the aim of bridging the gap between informal security requirements and their formal representation and verification.		Y. Ali; S. El-Kassas; M. Mahmoud	2009 42nd Hawaii International Conference on System Sciences					Excluded	Excluded	new_screen			2		2009				
346		ModelGuidance	Real-time design patterns: Architectural designs for automatic semi-partitioned and global scheduling	The scheduling problem is becoming an important topic for different fields especially forReal-Time applications. Considering the complexity of Real-Time Embedded Systems (RTES) coupled with the variety of scheduling approaches and algorithms, the designer task is becoming increasingly hard. Few approaches have investigated design patterns to perform an automatic scheduling at a high-level of abstraction. However, only the partitioned scheduling that prevents task migrations has been taken into account. In this context, this paper proposes two design patterns maintaining an automatic choice of semi-partitioned and global scheduling algorithms. The Unified Modeling Language (UML) profile for the Modeling and Analysis of Real-Time Embedded systems (MARTE) is used to annotate the proposed design patterns with functional and nonfunctional properties. © Springer International Publishing Switzerland 2015		Magdich, A.; Kacem, Y.H.; Mahfoudhi, A.; Kerboeuf, M.; Abid, M.	Lecture Notes in Business Information Processing					Excluded	Excluded	new_screen			2		2015				
347		ModelGuidance	Automatic code generation for cross-platform, multi-device mobile apps: Some reflections from an industrial experience	With the continuously increasing adoption of mobile devices, software development companies have new business opportunities through direct sales in app stores and delivery of business to employee (B2E) and business to business (B2B) solutions. However, cross-platform and multi-device development is a barrier for today's IT solution providers, especially small and medium enterprises (SMEs), due to the high cost and technical complexity of targeting development to a wide spectrum of devices, which differ in format, interaction paradigm, and software architecture. So far, several authors have proposed the application of model driven approaches to mobile apps development following a variety of strategies. In this paper we present the results of a research study conducted to find the best strategy for WebRatio, a software development company, interested in producing a MDD tool for designing and developing mobile apps to enter the mobile apps market. We report on a comparative study conducted to identify the best trade-offs between various automatic code generation approaches. © 2015 ACM.		Umuhoza, E.; Ed-Douibi, H.; Brambilla, M.; Cabot, J.; Bongio, A.	MobileDeLi 2015 - Proceedings of the 3rd International Workshop on Mobile Development Lifecycle					Excluded	Excluded	new_screen			2		2015				
348		ModelGuidance	Model-driven configuration of OS-level mandatory access control	"Trust and assurance of mobile platforms is a prime objective when considering their use in security-critical scenarios like in healthcare or e-government. Currently, several complementary approaches can be found in literature, ranging from purely hardware based to operating system level and application level solution s. Together, they build a ""trusted and secured"" technology stack. However, the complex policy configuration mechanisms at every single layer also represent the biggest stumbling block for a rapid adoption. We propose a practicable and efficient solution for leveraging operating system level and application level security mechanisms to realize security-critical applications and services."		Agreiter, B.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2008				
349		ModelGuidance	Model Based Development of Safety-Critical Systems Using Template Based Code Generation	Model-based development is state of the art in software engineering, due to its potential regarding automatic code synthesis. Nevertheless for embedded systems, where there exists a huge heterogeneity of used platforms, it is obvious that it is impossible to design a code generator that supports a priori all required platforms. Instead a code generator architecture is needed that is suited for an easy extensibility of the code generation ability. One possible solution is the use of template-based approaches. In this paper, we describe an approach1 to develop safety-critical realtime systems by using open architecture ware, a modular MDA/MDD generator framework. We will present the tool-chain and discuss two lab applications.		M. Regensburger; C. Buckl; A. Knoll; G. Schrott	13th Pacific Rim International Symposium on Dependable Computing (PRDC 2007)					Excluded	Excluded	new_screen			2		2007				
350		ModelGuidance	Model-based Approach for Building Trust in Autonomous Drones through Digital Twins	The 21st century is the age of automation. The automotive industry is converging towards deployment of complete automation by 2030. But are humans ready for it, or will they be hesitant to adopt it due to the lack of trust? To safeguard future autonomous mobility, robust run-time trust assurance and assessment is necessary. One strategy that is so far under-explored is rooted in involving the intelligence inside the autonomous agents, which could be directed towards detection of trust-breaking behaviour in other agents so that problematic vehicles are reported before they can engage in harmful behaviour.To support the progress in this direction, we propose a peer-to-peer model-based run-time trust assessment method, employing the model in terms of a Digital Twin for an autonomous vehicle (drone in our case) to ensure the trusted execution of intelligent agents. In this research, we examine the role of the Digital Twin in the trust-building scenario, and propose the characteristics of the intended Digital Twin model. To illustrate the approach, we present a case study of an autonomous-drone food delivery system and use formal approaches such as Petri Nets and Finite State Machines (FSM) to evaluate the scenario and demonstrate how trust could be built among autonomous drones or other vehicles. © 2022 IEEE.		Iqbal, D.; Buhnova, B.	Conference Proceedings - IEEE International Conference on Systems, Man and Cybernetics					Excluded	Excluded	new_screen			2		2022				
351		ModelGuidance	How consistency is handled in model-driven software engineering and UML: an expert opinion survey	Model-driven software engineering (MDSE) is an established approach for developing complex software systems. The unified modelling language (UML) is one of the most used model languages for applying the MDSE approach. UML has 14 diagram types that describe different perspectives of a software system under development. These diagrams are strongly dependent on each other and must be consistent with one another. The main objectives of this paper are as follows: (1) to understand (i) how aware experts are of model consistency issues and (ii) how relevant these issues are to experts, in order to understand model consistency in the MDSE/UML contexts, and more importantly, (2) to validate a set of 116 UML consistency rules that was systematically collected from the literature, so as to identify the rules that should always be enforced. We conducted a personal opinion survey with 106 experts in SE and MDSE, by means of an online questionnaire. The survey results describe an overview of how the topic of MDSE/UML consistency is handled by experts in the field. In addition, this survey identified a set of 52 UML consistency rules which should always be checked in every UML diagram. The majority of these 52 rules were understood by the majority of respondents and are general-purpose rules that are involved in the Design software development phase. This subset of 52 rules could be considered to be (1) added to the UML standard, (2) used as a reference to researchers who study UML/MDSE, and (3) used as a practical example for teaching purposes. © 2022, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.		Torre, D.; Genero, M.; Labiche, Y.; Elaasar, M.	Software Quality Journal					Excluded	Excluded	new_screen			2		2022				
352		ModelGuidance	Modeling and reasoning about design alternatives of software as a service architectures	In general, a common reference architecture can be derived for Software as a Service (SaaS). However, while designing particular applications one may derive various application design alternatives from the same reference SaaS architecture specification. To meet the required functional and nonfunctional requirements of different enterprise applications it is important to model the possible design so that a feasible alternative can be defined. In this paper, we propose a systematic approach and corresponding tool support for guiding the design of SaaS application architectures. The approach defines a SaaS reference architecture, a family feature model and a set of reference design rules. Based on the business requirements an application feature model is defined using the family feature model. Selected features are related to design decisions and a SaaS application architecture design is derived. © 2011 IEEE.		Tekinerdogan, B.; Öztürk, K.; Doǧru, A.	Proceedings - 9th Working IEEE/IFIP Conference on Software Architecture, WICSA 2011					ConflictExcluded	Excluded	new_screen			2		2011				
353		ModelGuidance	Model-based interactive ubiquitous systems	Ubiquitous systems are introducing a new quality of interaction both into our lives and into software engineering. Software becomes increasingly dynamic making frequent changes to system structures, distribution, and behavior necessary. Also, adaptation to user needs and contexts as well as different modalities and communication channels make these systems differ strongly from what has been standard over the last decades. Model-driven engineering forms a promising approach for coping with the dynamics and uncertainties inherent to interactive ubiquitous systems (IUS). This workshop discusses models and model-driven architectures addressing the challenges of interaction with and engineering of IUS with regard to the design and runtime. Copyright 2011 ACM.		Schlegel, T.; Pietschmann, S.	Proceedings of the 2011 SIGCHI Symposium on Engineering Interactive Computing Systems, EICS 2011					Excluded	Excluded	new_screen			2		2011				
354		ModelGuidance	On metamodel composition	"Computer-based systems (CBS) development integrates various disciplines, such as hardware design, software engineering, and performance modeling, as well as the ""base"" engineering discipline in which the CBS will operate. As such, use of a ""non-native"" modeling language is not acceptable when performing CBS design, and rapid specification and development of domain-specific modeling languages (DSMLs) is necessary. We advocate a UML-based metamodeling technique to DSML specification and generation. A key feature of our approach is the composition of new metamodels from existing metamodels through the use of three newly defined UML operators-equivalence, implementation inheritance, and interface inheritance. The paper describes the development of these new operators, details how they are used in metamodel composition, and presents examples of metamodel composition."		A. Ledeczi; G. Nordstrom; G. Karsai; P. Volgyesi; M. Maroti	Proceedings of the 2001 IEEE International Conference on Control Applications (CCA'01) (Cat. No.01CH37204)					Excluded	Excluded	new_screen			2		2001				
355		ModelGuidance	Extending the UML Statecharts Notation to Model Security Aspects	Model driven security has become an active area of research during the past decade. While many research works have contributed significantly to this objective by extending popular modeling notations to model security aspects, there has been little modeling support for state-based views of security issues. This paper undertakes a scientific approach to propose a new notational set that extends the UML (Unified Modeling Language) statecharts notation. An online industrial survey was conducted to measure the perceptions of the new notation with respect to its semantic transparency as well as its coverage of modeling state based security aspects. The survey results indicate that the new notation encompasses the set of semantics required in a state based security modeling language and was largely intuitive to use and understand provided very little training. A subject-based empirical evaluation using software engineering professionals was also conducted to evaluate the cognitive effectiveness of the proposed notation. The main finding was that the new notation is cognitively more effective than the original notational set of UML statecharts as it allowed the subjects to read models created using the new notation much quicker. © 1976-2012 IEEE.		El-Attar, M.; Luqman, H.; Karpati, P.; Sindre, G.; Opdahl, A.L.	IEEE Transactions on Software Engineering					ConflictExcluded	Excluded	new_screen			2		2015				
356		ModelGuidance	Supporting requirements elicitation through goal/scenario coupling	Goals have long been recognized to be an essential component involved in the Requirements Engineering (RE) process. They have proved to be an effective way to support a number of requirements engineering activities such as requirements elicitation, systematic exploration of design choices, checking requirements completeness, ensuring requirements pre-traceability and helping in the detection of threats, conflicts, obstacles and their resolution. The leading role played by goals in the RE process led to a whole stream of research on goal modeling, goal specification/formulation and goal-based reasoning for the multiple aforementioned purposes. On the other hand, there is evidence that dealing with goal is not an easy task and presents a number of difficulties in practice. To overcome these difficulties, many authors suggest combining goals and scenarios. The reason is that they complement each other: there is a mutual mitigation of difficulties encountered with one by using the other. The paper reviews various research efforts undertaken in this line of research. It uses L'Ecritoire, an approach that guides the requirements elicitation and specification process through interleaved goal modelling and scenario authoring to illustrate the combined use of goals and scenarios to reason about requirements for the system To-Be. © 2009 Springer Berlin Heidelberg.		Rolland, C.; Salinesi, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
357		ModelGuidance	Improving Real-Time software design with component and aspect approaches	This paper presents a component-based and aspect-oriented methodology for the design and the development of Real-Time Embedded Control Software (RTECS). This methodology defines a component model for describing modular and reusable software to cope with the increasing complexity of embedded systems. It proposes an aspect-oriented approach to address explicitly the extra-functional concerns of RTECS and describe separately transversal real time and security constraints. A computer-aided design tool, called MoDEST, implements this methodology. It enables the RTECS design and automatic real-time code generation. The benefits of this methodology are shown via an example of Legway control software, a version of the Segway vehicle built with Lego Mindstorms NXT.		R. Hamouche; Y. Abdeddaïm; R. Kocik	2011 IEEE 2nd International Conference on Software Engineering and Service Science					Excluded	Excluded	new_screen			2		2011				
358		ModelGuidance	Developing object oriented designs from component and connector architectures	In this paper, a systematic approach of developing detail OO designs from component and connector architectures (CCAs) is proposed. In this approach, an intermediate model between the architecture model and the detail design model specified with class diagrams or sequence diagrams is introduced to narrow the wide gap between the two abstraction levels. Once a CCA is designed, candidate classes and their relationships are identified per each architectural element. In order to show the efficacy of this approach, we apply it to an industry software development project and verify that quality attributes supported by the CCA are equally maintained by the detail design.		Hyoung-iel Park; Sungwon Kang; Yoonsuk Choi; Danhyung Lee	12th Asia-Pacific Software Engineering Conference (APSEC'05)					Excluded	Excluded	new_screen			2		2005				
359		ModelGuidance	Modeling with Mocking	Writing formal specifications often requires users to abstract from the original problem. Especially when verification techniques such as model checking are used. Without applying abstraction the search space the model checker need to traverse tends to grow quickly beyond the scope of what can be checked within reasonable time.The downside of this need to omit details is that it increases the distance to the implementation. Ideally, the created specifications could be used to generate software from (either manually or automatically). But having an incomplete description of the desired system is not enough for this purpose.In this work we introduce the Rebel2 specification language. Rebel2 lets the user write full system specifications in the form of state machines with data without the need to apply abstraction while still preserving the ability to verify non-trivial properties. This is done by allowing the user to forget and mock specifications when running the model checker. The original specifications are untouched by these techniques.We compare the expressiveness of Rebel2 and the effectiveness of mock and forget by implementing two case studies: one from the automotive domain and one from the banking domain. We find that Rebel2 is expressive enough to implement both case studies in a concise manner. Next to that, when performing checks in isolation, mocking can speed up model checking significantly. © 2021 IEEE.		Stoel, J.; Der Storm, T.V.; Vinju, J.	Proceedings - 2021 IEEE 14th International Conference on Software Testing, Verification and Validation, ICST 2021					Excluded	Excluded	new_screen			2		2021				
360		ModelGuidance	Inconsistency Management between Architectural Decisions and Designs Using Constraints and Model Fixes	The software architecture community has proposed to document the design rationale of software architectures by means of architectural design decisions (ADDs). The constant evolution of software systems requires that both architectural designs and corresponding ADDs are continuously documented and synchronized. However, in practice, designs and ADDs become inconsistent over time. Usually, the potential inconsistencies need to be detected and resolved manually. We propose to alleviate this problem by providing semi-automated support for detecting and handling these inconsistencies. For this, we use constraints for consistency checking between reusable ADDs and component-and-connector (C&C) models. These constraints apply on the C&C models and their invalidation is resolved by software architects either 1) by executing automatically suggested model fixes on the C&C models, or 2) by reconsidering ADDs and subsequently updating the corresponding C&C diagrams, in order to align designs to decisions. We demonstrate our approach in the context of a case study and evaluate its efficiency and scalability.		I. Lytra; U. Zdun	2014 23rd Australian Software Engineering Conference					Excluded	Excluded	new_screen			2		2014				
361		ModelGuidance	UMLsec4Edge: Extending UMLsec to model data-protection-compliant edge computing systems	Edge computing enables the processing of data - frequently personal data - at the edge of the network. For personal data, legislation such as the European General Data Protection Regulation requires data protection by design. Hence, data protection has to be accounted for in the design of edge computing systems whenever personal data is involved. This leads to specific requirements for modeling the architecture of edge computing systems, e.g., representation of data and network properties. To the best of our knowledge, no existing modeling language fulfils all these requirements. In our previous work we showed that the commonly used UML profile UMLsec fulfils some of these requirements, and can thus serve as a starting point. The aim of this paper is to create a modeling language which meets all requirements concerning the design of the architecture of edge computing systems accounting for data protection. Thus, we extend UMLsec to satisfy all requirements. We call the resulting UML profile UMLsec4Edge. We follow a systematic approach to develop UMLsec4Edge. We app UMLsec4Edge to real-world use cases from different domains, and create appropriate deployment diagrams and class diagrams. These diagrams show UMLsec4Edge is capable of meeting the requirements.		S. Smolka; J. Laufer; Z. Á. Mann; K. Pohl	2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)					Excluded	Excluded	new_screen			2		2022				
362		ModelGuidance	Model-based development with distributed cognition	Model Driven Engineering (MDE) allows a system to be defined using a series of models. It can refine higher level models into lower level models using model transformations, thereby automating the building of a concrete model and the software development process. This is particularly useful for Requirements Engineering since MDE can bridge the gap between early requirements models, late requirements models, and architectural models. However, requirements elicitation techniques have received little attention in terms of MDE. A major reason is the lack of a formal modelling language for some of these techniques. The definition of a metamodel is an essential step for the specification of a formal modeling language, which is a key prerequisite for Model Driven Engineering (MDE). We introduce a metamodel for Distributed Cognition, a well-known requirements elicitation technique, using the key concepts present in the framework's literature with the aim to integrate Distributed Cognition into MDE. Furthermore, we report on a preliminary case study on a software XP team to validate our metamodel. © 2018 IEEE.		Hundal, K.S.; Mussbacher, G.	Proceedings - 2018 8th International Model-Driven Requirements Engineering Workshop, MoDRE 2018					Excluded	Excluded	new_screen			2		2018				
363		ModelGuidance	Component composition through architectural patterns for problem frames	In this paper, we present a pattern-based software development process using problem frames and corresponding architectural patterns. In decomposing a complex problem into simple subproblems, the relationships between the sub-problems are recorded explicitly. Based on this information, we give guidelines on how to derive the software architecture for the overall problem from the software architectures of the simple subproblems.		C. Choppy; D. Hatebur; M. Heisel	2006 13th Asia Pacific Software Engineering Conference (APSEC'06)					Excluded	Excluded	new_screen			2		2006				
364		ModelGuidance	Pattern-based rewrite and refinement of architectures using graph theory	With the continuous growth of IT application systems, the complexity of architecture modeling and development increases. Patterns document proven solutions for recurring problems in an abstract and human readable manner. Within the domain of IT architectures, they should support the architecture modeling and development process. Due to the documentation of patterns as text documents, they cannot be applied to an architecture automatically: patterns have to be read, understood, adapted to the corresponding use case, and realized manually over and over again. Consequently, architecture modeling considering the variety of documented patterns becomes even more complex and time-consuming. To tackle these issues, we introduce an approach and for an automated application and realization of patterns in architectural graphs using graph transformation techniques. This eases the architecture modeling process in which proven solutions for recurring problems can be selected as required and applied automatically. We present the concept, formalization, and validate our approach based on an application example. © 2019, Springer-Verlag GmbH Germany, part of Springer Nature.		Guth, J.; Leymann, F.	Software-Intensive Cyber-Physical Systems					Excluded	Excluded	new_screen			2		2020				
365		ModelGuidance	On the Use of Component-Based Principles and Practices for Architecting Cyber-Physical Systems	By focussing on Cyber Physical Systems (CPS), this paper investigates how component-based principles and practices are used and support the activity of architecting CPS. For doing so, by running a systematic process, we selected 49 primary studies from the most important publishers search engines. Those papers have been analyzed and their contents classified according to the Classification Framework for Component Models proposed in our previous work. The results show that the main concerns handled by CPS component models are those of integration, performance, and maintainability. The instruments to satisfy those concerns, while architecting CPS, are ad-hoc software/system architecture, model-based approaches, architectural and component languages, and design. The IEC 61499 standard with its functions block is remarkably used to drive the work on six papers. Java is the most frequently used programming language used for implementing the components. Components are deployed mostly at compile time. Interfaces are almost equally distributed into port-based and operation-based. Overall, the results show a transition of technologies and approaches used in Embedded Systems to CPS, but still lacking methods for integrated architecting, in particular in incremental development. © 2016 IEEE.		Crnkovic, I.; Malavolta, I.; Muccini, H.; Sharaf, M.	Proceedings - 2016 19th International ACM SIGSOFT Symposium on Component-Based Software Engineering, CBSE 2016					Excluded	Excluded	new_screen			2		2016				
366		ModelGuidance	Development and evaluation of a component-based context modelling method	In very general terms, a method describes a systematic procedure for problem solving including the required aids and resources. This paper is a continuation of our earlier work that reported on the practices and experiences in the development of a component-based context modelling method in the area of information systems development. The contributions of the paper are (1) the detailed development process of the context modelling method, with a particular focus on artefact evaluation by means of the Framework for Evaluation in Design Science Research (FEDS) (2) additional experiences and lessons learned from the method engineering and application process.		Koç, H.; Sandkuhl, K.	Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)					Excluded	Excluded	new_screen			2		2016				
367		ModelGuidance	Integrating and applying architectural design patterns in space flight software product lines	The unmanned space flight software (FSW) domain contains a significant amount of variability within its required capabilities. Although all FSW execute commands from the ground station to control the spacecraft, there is significant amount of variability in the volume of commands that must be processed, the amount of control given to the ground station versus onboard autonomy, and the amount and type of hardware that requires controlling. This degree of architectural variability makes it difficult to develop a FSW software product line (SPL) architecture that covers the all possible variations. In order to address this challenge, this paper presents a SPL approach for FSW SPLs that manages variability at a higher level of granularity using software architectural design patterns and requires less modeling during the SPL engineering phase. Specifically it describes how variable design patterns can be interconnected to form FSW SPL software architectures. The design patterns are tailored to individual FSW applications during application engineering. The paper describes in detail the application and validation of this approach.		Fant, J.S.; Gomaa, H.; Pettit, R.G.	ICSOFT-EA 2015 - 10th International Conference on Software Engineering and Applications, Proceedings; Part of 10th International Joint Conference on Software Technologies, ICSOFT 2015					Excluded	Excluded	new_screen			2		2015				
368		ModelGuidance	Model-based security analysis for mobile communications	Mobile communication systems are increasingly used in companies. In order to make these applications secure, the security analysis has to be an integral part of the system design and IT management process for such mobile communication systems. This work presents the experiences and results from the security analysis of a mobile system architecture at a large German telecommunications company, by making use of an approach to Model-based Security Engineering that is based on the UML extension UMLsec. The focus lies on the security mechanisms and security policies of the mobile applications which were analyzed using the UMLsec method and tools. Main results of the paper include a field report on the employment of the UMLsec method in an industrial telecommunications context as well as indications of its benefits and limitations. Copyright 2008 ACM.		Jürjens, J.; Schreck, J.; Bartmann, P.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2008				
369		ModelGuidance	An ontology-based framework for modelling security requirements	"In the last years, security in Information Systems (IS) has become an important issue, so that it has to be taken into account in all the stages of IS development, including the early phase of Requirements Engineering (RE). One of the most helpful RE strategies for improving the productivity and quality of software process and products is the reuse of requirements, and this can be facilitated by Semantic Web technologies. In this work, we describe a novel ontology-based framework for representing and reusing security requirements based on risk analysis. A risk analysis ontology and a requirement ontology have been developed and combined to represent formally reusable security requirements and improve security in IS, detecting incompleteness and inconsistency in requirements and achieving semantic processing in requirements analysis. These ontologies have been developed according to a formal method to build and compare ontologies and with a standard language, OWL. This framework will be the basis to elaborate a ""lightweight"" method to elicit security requirements."		Lasheras, J.; Valencia-García, R.; Fernández-Breis, J.T.; Toval, A.	Security in Information Systems - Proceedings of the 6th International Workshop on Security in Information Systems, WOSIS 2008; In Conjunction with ICEIS 2008					Excluded	Excluded	new_screen			2		2008				
370		ModelGuidance	Modes, Features, and State-Based Modeling for Clarity and Flexibility	The behavior of a complex system is frequently defined in terms of operational modes—mutually exclusive sets of the system behaviors. Within the operational modes, collections of features define the behavior of the system.Lucent and understandable modeling of operational modes and features using common state-based notations such as Statecharts or Stateflow can be challenging. In this paper we share some of our experiences from modeling modes and features in the medical device domain. We discuss the challenges and present a generic approach to structuring the modes and features of a generic Patient-Controlled Analgesia infusion pump.		Murugesan, Anitha; Rayadurgam, Sanjai; Heimdahl, Mats P. E.	Proceedings of the 5th International Workshop on Modeling in Software Engineering					Excluded	Excluded	new_screen			2		2013				
371		ModelGuidance	A framework for bidirectional model-to-platform transformations	Model-Driven Engineering (MDE) has established itself as a viable means of coping with the increasing complexity of software systems. Model-to-platform transformations support the required abstraction process that is crucial for a model-driven approach and are, therefore, a central component in any MDE solution. Although there exist numerous strategies and mature tools for certain isolated subtasks or specific applications, a general framework for designing and structuring model-to-platform transformations, which consolidates different technologies in a flexible manner, is still missing, especially when bidirectionality is a requirement. In this paper, we present: (1) An abstract, conceptual framework for designing and structuring bidirectional model-to-platform transformations, (2) a concrete instantiation of this framework using string grammars, tree grammars, and triple graph grammars, (3) a discussion of our framework based on a set of core requirements, and (4) a classification and detailed survey of alternative approaches. © 2013 Springer-Verlag Berlin Heidelberg.		Anjorin, A.; Saller, K.; Rose, S.; Schürr, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2013				
372		ModelGuidance	Transforming Medical Best Practice Guidelines to Executable and Verifiable Statechart Models	Improving effectiveness and safety of patient care is an ultimate objective for medical cyber- physical systems. However, the existing medical best practice guidelines in hospital handbooks are often lengthy and difficult for medical staff to remember and apply clinically. Statechart is a widely used model in designing complex systems and enables rapid prototyping and clinical validation with medical doctors. However, clinical validation is often not adequate for guaranteeing the correctness and safety of medical cyber-physical systems, and formal verification is required. The paper presents an approach that transforms medical best practice guidelines to verifiable statechart models and supports both clinical validation in collaboration with medical doctors and formal verification. In particular, we use an open source statechart tool Yakindu to model best practice guidelines and use the statechart to interact with doctors for validating the model correctness. The statechart model is then automatically transformed to a verifiable formal model, such as timed automata, so that existing formal verification tool, such as UPPAAL, can be used to verify required safety properties. The approach also provides the ability to trace back to the paths in the statechart model (Yakindu model) when a specific property in its associated formal model (UPPAAL model) fails. A cardiac arrest scenario is used as a case study to validate the proposed approach. The tool is available on our website www.cs.iit.edu/ code/software/Y2U. © 2016 IEEE.		Guo, C.; Ren, S.; Jiang, Y.; Wu, P.-L.; Sha, L.; Berlin, R.B.	2016 ACM/IEEE 7th International Conference on Cyber-Physical Systems, ICCPS 2016 - Proceedings					Excluded	Excluded	new_screen			2		2016				
373		ModelGuidance	CyprIoT: Framework for Modelling and Controlling Network-Based IoT Applications	Model-Driven Engineering (MDE) is a paradigm that favors using models to address software engineering problems. Very few attempts have been made to apply this paradigm to the Internet of Things (IoT). Most of the existing MDE approaches focus on abstracting the heterogeneity of IoT things while neglecting network communication heterogeneity. In fact, few attempts target network-based IoT applications. In this paper, we propose a framework, called CyprIoT, to model and control network-based IoT applications using MDE techniques. Our approach relies on 1) Networking Language, to model a network of IoT things 2) Rule-Based Policy Language, to control and supervise the behavior of the modeled network 3) Code Generator, to interpret the model and generate deployable network artifacts and 4) Plug-in System, to customize, enhance or implement expert knowledge into the generated artifacts.		Berrouyne, Imad; Adda, Mehdi; Mottu, Jean-Marie; Royer, Jean-Claude; Tisi, Massimo	Proceedings of the 34th ACM/SIGAPP Symposium on Applied Computing					Included	Excluded	new_screen			2		2019				
374		ModelGuidance	InterPlay: Horizontal Scale-Up and Transition to Design in Scenario-Based Programming	"We describe InterPlay, a simulation engine coordinator that supports cooperation and interaction of multiple simulation and execution tools, thus helping to scale up the design and development cycle of reactive systems. InterPlay involves a number of related ideas. In the first, we concentrate on the interobject design approach involving live sequence charts (LSCs) and its support tool, the play-engine, enabling multiple play-engines to run in cooperation. This makes possible the distributed design of large-scale systems by different teams, as well as the refinement of parts of a system using different play-engines. The second idea concerns combining the interobject approach with the more conventional intraobject approach, involving, for example, statecharts and Rhapsody. InterPlay makes it possible to run the play-engine in cooperation with Rhapsody, and is very useful when some system objects have clear and distinct internal behavior, or in an iterative development process where the design is implementation-oriented and the ultimate goal is to end up with an intraobject implementation. Finally, we have expanded the play-engine's ability to delegate some of the system's functionality to complex GUIs. This enables beneficial interaction with ""smart"" GUIs that have built-in behavior of their own, and which are more naturally implemented in code"		D. Barak; D. Harel; R. Marelly	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2006				
375		ModelGuidance	Improving the efficiency and quality of simulation-based behavioral model verification using dynamic Bayesian criteria	In order to improve the effectiveness of simulation-based behavioral verification, it is important to determine when to stop the current test strategy and to switch to an expectantly more rewarding test strategy. The location of a stopping point is dependent on the statistical model one chooses to describe the coverage behavior during verification. In this paper, we present dynamic Bayesian (DB) and confidence-based dynamic Bayesian (CDB) stopping rules for behavioral VHDL model verification. The statistical assumptions of the proposed stopping rules are based on experimental evaluation of probability distribution functions and correlation functions. Fourteen behavioral VHDL models were experimented with to determine the high efficiency of the proposed stopping rules over the existing ones. Results show that the DB and the CDB stopping rules outperform all the existing stopping rules with an average improvement of at least 69% in coverage per testing patterns used. © 2002 IEEE.		Hajjar, A.; Chen, T.	Proceedings - International Symposium on Quality Electronic Design, ISQED					Excluded	Excluded	new_screen			2		2002				
376		ModelGuidance	An Abstraction-Driven Approach for Complex Model-Based Software Development	This paper proposes to use abstraction level as the dominant driving force to guide the development of complex model-based software system, in place of the linear SDLC, ad hoc prototyping, top-down structured method etc. Based on this abstraction-driven approach, the paper suggests to use a downward spiral process model, incorporating the dual structural and behavioral system models into the development. Golden ratio is used to locate the progression balance between abstraction level and models at different spirals. The contributions of the paper include a re-prioritization of development emphasis and unifying split system models towards one system solution.		K. O. Chow	2010 Second World Congress on Software Engineering					Included	Excluded	new_screen			2		2010				
377		ModelGuidance	Efficient Parametric Model Checking Using Domain-Specific Modelling Patterns	We propose a parametric model checking (PMC) method that enables the efficient analysis of quality-of-service (QoS) properties of component-based systems. Our method builds on recent advances in PMC techniques and tools, and can handle large models by exploiting domain-specific modelling patterns for the software components. We precompute closed-form expressions for key QoS properties of such patterns, and handle system-level PMC by combining these expressions into easy-to-evaluate systems of equations.		Calinescu, Radu; Johnson, Kenneth; Paterson, Colin	Proceedings of the 40th International Conference on Software Engineering: New Ideas and Emerging Results					Excluded	Excluded	new_screen			2		2018				
378		ModelGuidance	Inter-DSL coordination support by combining megamodeling and model weaving	Model-Driven Engineering (MDE) advocates the use of models at every step of the software development process. Within this context, a team of engineers collectively and collaboratively contribute to a large set of interrelated models. Even if the main focus can be on a single model (e.g. a class diagram model), related elements in other models (e.g. a requirement model) often have to be considered and/or accessed. Moreover, all the involved models do not necessarily conform to the same metamodel and thus may have been built using different independent Domain-Specific Languages (DSLs). Such a situation has already been frequently observed in many large-scale industrial deployments of MDE. Manually coordinating all the involved models, i.e. being able to both manage and use the links existing between them, can become a cumbersome and difficult task. As a proposal to solve this inter-DSL coordination issue, we introduce in this paper a generic and extensible inter-model traceability and navigation environment based on the complementary use of megamodeling and model weaving. We illustrate our solution with a concrete working example. © 2010 ACM.		Jouault, F.; Vanhooff, B.; Bruneliere, H.; Doux, G.; Berbers, Y.; Bezivin, J.	Proceedings of the ACM Symposium on Applied Computing					Included	Excluded	new_screen			2		2010				
379		ModelGuidance	A Methodology for Retrofitting Generative Aspects in Existing Applications	Using model-based approaches and code synthesis to engineer information systems improves agile application development and evolution. However, current research lacks systematic approaches to integrate generative aspects in already existing applications. Existing approaches consider partial aspects of the engineering process, such as software language engineering or generator engineering. However, an overall approach for the model-based reconstruction of existing systems is missing. We propose a set of activities for retrofitting the model-based approach into already existing enterprise information systems. Using our experience in language engineering as well as previous generative practical realizations of applications, we have developed a methodology with three phases: problem analysis and decomposition, domain-specific language engineering and application engineering and operation. We demonstrate its practical application using a real-world enterprise information system as an example. Using our methodology developers can make structured, informed decisions when retrofitting a model-based approach into enterprise information systems. © 2021. All Rights Reserved.		Drave, I.; Gerasimov, A.; Michael, J.; Netz, L.; Rumpe, B.; Varga, S.	Journal of Object Technology					Excluded	Excluded	new_screen			2		2021				
380		ModelGuidance	How are UML class diagrams built in practice? A usability study of two UML tools: Magicdraw and Papyrus	Software modeling is a key activity in software development, especially when following any kind of Model Driven Software Engineering (MDSE) process. In this context, standard modeling languages, like the Unified Modeling Language (UML), and tools for supporting the modeling activities become essential. The aim of this study is to analyze how modelers build UML models and how good modeling tools are in supporting this task. Our goal is to draw some useful lessons that help to improve the (UML) modeling process both by recommending changes on the tools themselves and on how UML is taught so that theory and practice of UML modeling are better aligned. Our study employs two research approaches. The main one is an empirical experiment (which analyzes screen recordings registered by undergraduate students during the construction of a UML class diagram). An analytical analysis complements the previous experiment. The study focuses on the most frequent type of UML diagram, the class diagram, and on two tools widely used by the modeling community: MagicDraw and Papyrus.		Planas, Elena; Cabot, Jordi	COMPUTER STANDARDS & INTERFACES					Included	Excluded	new_screen			2		2020				
381		ModelGuidance	Runtime checking of UML association-related constraints	UML class models are important design artifacts used as blueprints of software systems to be built. Yet, implementations are often inconsistent with their models. Although many techniques have been proposed to tackle this problem, some dynamic aspects of a class model are still hard to be verified using existing techniques. In this paper, we present an approach to checking the UML association-related constraints during a program's execution. Our approach instruments event notification mechanism into Java bytecode and verifies the constraints imposed by design-level associations (including compositions), when certain events occur. The empirical studies show that our approach can help efficiently detect inconsistencies between a UML class model and its implementation. © 2007 IEEE.		Kun, W.; Wuwei, S.	Proceedings - ICSE 2007 Workshops 5th International Workshop on Dynamic Analysis, WODA 2007					Excluded	Excluded	new_screen			2		2007				
382		ModelGuidance	Model-Driven Development and Evolution of Customized User Interfaces	One of the main benefits of model-driven development of User Interfaces (UIs) is the increase in efficiency and consistency when developing multiple variants of a UI. For instance, multiple UIs for different target users, platforms, devices, or for whole product families can be generated from the same abstract models. However, purely generated UIs are not always sufficient as there is often need for customizing the individual UI variants, e.g., due to usability issues or specific customer requirements.In this paper we present a model-driven approach for the development of UI families with systematic support for customizations. The approach supports customizing all aspects of a UI (UI elements, screens, navigation, etc.) and storing the customizations in specific models. As a result, a UI family can be evolved more efficiently because individual UI variants can be re-generated (after some changes have been applied to the family) without losing any previously made customizations. We demonstrate this by thirty highly customized real-world products from a commercial family of web information systems called HIS-GX/QIS.		Pleuss, Andreas; Wollny, Stefan; Botterweck, Goetz	Proceedings of the 5th ACM SIGCHI Symposium on Engineering Interactive Computing Systems					Included	Excluded	new_screen			2		2013				
383		ModelGuidance	Multi-objective risk analysis with goal models	Risks of software projects are often ignored and risk analysis is left for later stages of project life-cycle, resulting in serious financial losses. This paper proposes a goal-oriented risk analysis framework that includes inter-dependencies among treatments and risks in terms of likelihood and generate optimal solutions with respect to multiple objectives such as goal rewards, treatment costs, or risk factor. The Loan Origination Process illustrates our approach and a detailed analysis of the visual notation is provided. © 2016 IEEE.		Başak Aydemir, F.; Giorgini, P.; Mylopoulos, J.	Proceedings - International Conference on Research Challenges in Information Science					Excluded	Excluded	new_screen			2		2016				
384		ModelGuidance	On the search for a level-agnostic modelling language	The use of models is increasing in software engineering, especially within the MDE initiative. Models are usually communicated by visualizing them, typically using a graphical modelling language. The architecture commonly used to standardize a software engineering modelling language utilizes multiple levels despite the fact that the basic assumptions are only valid for a pair of levels. This has led several research groups to seek a means by which modelling languages can be created, and later standardized, without resorting to 'fixes' necessitated by the use of strict metamodelling and a multilevel hierarchy. Here, we describe a novel single-level approach based on 'everything is an object', which permits effective flattening of such a hierarchy, thus obviating all the paradoxical concerns in the literature over the last two decades. © 2013 Springer-Verlag.		Henderson-Sellers, B.; Clark, T.; Gonzalez-Perez, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2013				
385		ModelGuidance	A meta model approach using UML for task assignment policy in software process	We present a UML based meta model approach for task assignment policy in the software process. It provides three levels of the model: meta, conceptual, and instance, and also provides multiple views of the model: organization, process, and product. It has benefits compared to the conventional role model, in terms of expressive power, flexibility, and inconsistency control. We implemented our model using ConceptBase and also highlight features of the implementation. © 2002 IEEE.		Lee, S.; Shim, J.; Wu, C.	Proceedings - Asia-Pacific Software Engineering Conference, APSEC					Excluded	Excluded	new_screen			2		2002				
386		ModelGuidance	An approach for performance requirements verification and test environments generation	Model-based testing (MBT) is a method that supports the design and execution of test cases by models that specify the intended behaviors of a system under test. While systematic literature reviews on MBT in general exist, the state of the art on modeling and testing performance requirements has seen much less attention. Therefore, we conducted a systematic mapping study on model-based performance testing. Then, we studied natural language software requirements specifications in order to understand which and how performance requirements are typically specified. Since none of the identified MBT techniques supported a major benefit of modeling, namely identifying faults in requirements specifications, we developed the Performance Requirements verificatiOn and Test EnvironmentS generaTion approach (PRO-TEST). Finally, we evaluated PRO-TEST on 149 requirements specifications. We found and analyzed 57 primary studies from the systematic mapping study and extracted 50 performance requirements models. However, those models don’t achieve the goals of MBT, which are validating requirements, ensuring their testability, and generating the minimum required test cases. We analyzed 77 Software Requirements Specification (SRS) documents, extracted 149 performance requirements from those SRS, and illustrate that with PRO-TEST we can model performance requirements, find issues in those requirements and detect missing ones. We detected three not-quantifiable requirements, 43 not-quantified requirements, and 180 underspecified parameters in the 149 modeled performance requirements. Furthermore, we generated 96 test environments from those models. By modeling performance requirements with PRO-TEST, we can identify issues in the requirements related to their ambiguity, measurability, and completeness. Additionally, it allows to generate parameters for test environments. © 2022, The Author(s).		Abdeen, W.; Chen, X.; Unterkalmsteiner, M.	Requirements Engineering					Excluded	Excluded	new_screen			2		2022				
387		ModelGuidance	Modeling China metro train route occlusion operation method based on time petri nets (D)			Zhang, Y.; Wang, Y.; Wang, G.; Sun, J.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					Excluded	Excluded	new_screen			2		2015				
388		ModelGuidance	A process to integrate transformation templates in the model-driven engineering of user interfaces	Approaches for Model-Driven Engineering (MDE) of user interfaces have to consider design knowledge and presentation guidelines to produce adequate interfaces. Some of the issues related to MDE approaches for user interface development are: i) they tend to lead to the generation of very similar user interfaces, introducing the need for manual tweaking when customizations are required; ii) the complexity for user interface designers to deal with model transformation languages. The Transformation Templates approach was proposed in previous works to face these problems. In this paper, we define a process to incorporate Transformation Templates in different approaches for MDE of user interfaces. The process was defined using SPEM. To illustrate our proposal, we applied the process to incorporate Transformation Templates in an MDE method called OO-Method.		Aquino, N.; Cernuzzi, L.; Pastor, O.	CIbSE 2013: 16th Ibero-American Conference on Software Engineering - Memorias de la 16th Conferencia Iberoamericana de Ingenieria de Software, CIbSE 2013					Excluded	Excluded	new_screen			2		2013				
389		ModelGuidance	Automatic test data generation using the activity diagram and search-based technique	In software testing, generating test data is quite expensive and time-consuming. The manual generation of an appropriately large set of test data to satisfy a specified coverage criterion carries a high cost and requires significant human effort. Currently, test automation has come at the cost of low quality. In this paper, we are motivated to propose a model-based approach utilizing the activity diagram of the system under test as a test base, focusing on its data flow aspect. The technique is incorporated with a search-based optimization heuristic to fully automate the test data generation process and deliver test cases with more improved quality. Our experimental investigation used three open-source software systems to assess and compare the proposed technique with two alternative approaches. The experimental results indicate the improved fault-detection performance of the proposed technique, which was 11.1% better than DFAAD and 38.4% better than EvoSuite, although the techniques did not differ significantly in terms of statement and branch coverage. The proposed technique was able to detect more computation-related faults and tends to have better fault detection capability as the system complexity increases. © 2020 by the authors.		Jaffari, A.; Yoo, C.-J.; Lee, J.	Applied Sciences (Switzerland)					Excluded	Excluded	new_screen			2		2020				
390		ModelGuidance	Combining architectural design decisions and legacy system evolution	Software development is characterized by ongoing design decisions that must take into account numerous requirements, goals, and constraints. When changing long-living and legacy systems, former decisions have to be considered. In order to minimize the risk of taking wrong or misleading decisions an explicit representation of the relevant aspects is crucial. Architectural decision modeling has proven to be an effective means to represent these aspects, the required knowledge, and properties of a potential solution. However, existing approaches do not sufficiently cover the ongoing evolution of decisions and artifacts. They fail in particular to represent relations to existing systems on a fine-grained level to allow for impact analysis and a later comprehension of decisions. Furthermore, the effort for capturing and modeling of design decisions has to be reduced. In our paper we integrate existing approaches for software architectural design decision making. We extend them by fine-grained traceability to elements of existing systems and explicit means for modeling the evolution of decisions. We show how relevant decisions can easily be identified and developers are supported in decision making. © 2014 Springer International Publishing Switzerland.		Gerdes, S.; Lehnert, S.; Riebisch, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2014				
391		ModelGuidance	Evaluating software architecture in a model-based approach for enterprise information system design	Enterprise information system architecture design is the pro- cess of defining and optimizing its structure (both software and hardware) to effectively support provided functionality. System architects are combining software and hardware vital components, usually defined by other stakeholders, and are dealing with both functional and non functional requirements. Alternative architecture solution evaluation is usually a part of the design process, aiming to determine if the defined requirements are satisfied. A model-based approach, constituted of discrete views, each of which facilitates a discrete design task, has been proposed, while Systems Modeling Language (SysML) has been adopted for the model representation. In this paper, emphasis is given on the Evaluation View, aiming at the exploration of alternative software and hardware combination scenarios proposed in other views. The view facilitates the management of simulation experiments and results and the verification of predefined requirements. A case study, where the proposed model-based design approach has been applied is also discussed. Copyright 2010 ACM.		Tsadimas, A.; Nikolaidou, M.; Anagnostopoulos, D.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2010				
392		ModelGuidance	Model driven development of mobile applications using drools knowledge-based rule	Nowadays, the significance of automatic transformation of object oriented code from design models has increased due to its benefits such as cost reduction and time efficiency. Model driven development (MDD) absolutely needs automatic approach and method to generate system from model. This paper contributes the efficient Drools rule-based transformation approach to automate the mobile application development process. In our approach, the textual model Umple considered as primary artifacts that drive the whole mobile application. The consistency of source and target model and the assessment of transformability are the critical issues in model transformation domain. In this paper, we attempt to address these issues with measuring the accuracy of consistency between source and target model and assessing the transformability using object oriented metrics. Results reveal that our approach achieved the high accuracy of consistency and sound quality of transformability.		E. E. Thu; N. Nwe	2017 IEEE 15th International Conference on Software Engineering Research, Management and Applications (SERA)					Excluded	Excluded	new_screen			2		2017				
393		ModelGuidance	Generating a language-independent graphical user interfaces from UML models	The cost of the software development is high and there is a need to automate parts or all activities of the software development to reduce the development costs. In this work, the User Interface (UI) design is automated and UIs are generated for language-independent code from Unified Modeling Language (UML) diagrams. These diagrams are used to generate both the content of the UIs and the navigation through the use interfaces. Based on end-user feedback, the UML diagrams and the UI prototype can be iteratively refined. To demonstrate this work, a tool that automates the generation of UI prototype is built. The tool generates a prototype that is coded using an eXtensable Markup Language (XML) called the UI Markup Language (UIML). The proposed approach is validated and UIs are generated for two case studies. © 2016, Zarka Private Univ. All rights reserved.		Shatnawi, A.; Shatnawi, R.	International Arab Journal of Information Technology					Included	Excluded	new_screen			2		2016				
394		ModelGuidance	A software engineering point of view on digital twin architecture	Digital twins, along with Internet of Things and Artificial Intelligence, have been identified as one of the key technologies for Industry 4.0. However, the definition of Digital Twin (DT) is still abstract and context-dependent. In this paper, we present a metamodel that supports concrete and operational descriptions of digital twin deployment. This metamodel encompasses the different aspects of deployment, including the definition of hardware and software components that compose the layered cyber-physical architectures of the digital twin, along with the installation and instantiation tasks that compose deployment processes. Multiple configurations can also be defined to support the deployment of a digital twin in different execution contexts. The relevance of this metamodel was evaluated by two case studies. The first consists in deploying the digital twin of a cobot in a simulation environment. The second applies the approach in a home automation environment. In both cases, our metamodel provides complete and precise descriptions of the deployment process and thus constitutes a viable first step towards a model-driven approach for digital twin deployment. © 2022 IEEE.		Bechu, G.; Beugnard, A.; Cao, C.G.L.; Perez, Q.; Urtado, C.; Vauttier, S.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					Excluded	Excluded	new_screen			2		2022				
395		ModelGuidance	Transformation of UML models towards OWL ontologies	This article presents a contribution to the work taken in the bridging software development and ontology technologies. This contribution makes it possible to generate automatically an ontology OWL (Web Ontology Language) starting from a model UML and to profit from the convergence between UML and OWL. Our approach is carried out in the Eclipse platform, we use a style sheet XSL to make the transformation of a model UML describes in Topcased in an OWL ontolgy represented in RDF/XML form. The transformation is based on transformation rules which make it possible to connect the concepts of UML and OWL.		A. Belghiat; M. Bourahla	2012 6th International Conference on Sciences of Electronics, Technologies of Information and Telecommunications (SETIT)					Excluded	Excluded	new_screen			2		2012				
396		ModelGuidance	"""Use case+control case"" driven approach for software analysis and design"	"As software systems and their operational environments become more and more complex, the topic of software dependability has attracted more and more attention. The software analysis and design are both required to focus on the functionality and the dependability. However, there still lacks an effective approach to consider the functionality and the dependability simultaneously during software analysis and design. Based on cybernetics, this paper proposes a ""use case+control case"" driven approach for software analysis and design, which aims to address the software functionality and dependability under a unified framework. During requirements analysis, the ""use case+control case"" model supports the co-modeling of the functional requirements and the dependability requirements. During system design, the design techniques proposed by ICONIX approach are extended to identify the functionality objects that realize the use cases, and the dependability objects that realize the control cases. A case is also used to illustrate the feasibility of the proposed approach. ©2013 ISCAS."		Liu, C.; Zhang, W.; Zhao, H.-Y.; Jin, Z.	Ruan Jian Xue Bao/Journal of Software					Excluded	Excluded	new_screen			2		2013				
397		ModelGuidance	Searching Models, Modeling Search: On the Synergies of SBSE and MDE	In the past years, several researchers applied search-based optimization algorithms successfully in the software engineering domain to obtain automatically near-optimal solutions to complex problems posing huge solution spaces. More recently, such algorithms have also been proven useful for solving problems in model engineering. However, applying search-based optimization algorithms to problems in model engineering efficiently and effectively is a challenging endeavor demanding for expertize in both, search-based algorithms as well as model engineering formalisms and techniques. In this paper, we report on our experiences in applying such search-based algorithms for model engineering problems and propose a model-driven approach to ease the adoption of search-based algorithms for the area of model engineering.		Kessentini, Marouane; Langer, Philip; Wimmer, Manuel	Proceedings of the 1st International Workshop on Combining Modelling and Search-Based Software Engineering					Excluded	Excluded	new_screen			2		2013				
398		ModelGuidance	Domain mapping using extended UML object diagrams	A method where extended UML object diagrams specify the translation is presented. The method is visual and therefore produces specifications that are clear and concise and easier to create and maintain. The approach can be used in modeling tools with different levels of customizability.		Milicev, D.	IEEE Software					Excluded	Excluded	new_screen			2		2002				
399		ModelGuidance	Conceptual modeling for system requirements enhancement	Systems designers have to cope with the ever growing complexity of nowadays systems. This issue becomes dramatic in the aeronautics domain, due to the huge number of functions the systems have to support, the significant number of sub-system elements required to implement these functions and their inter-connections. Although requirements engineering is a good answer to the issue of system specification, as it enables the definition of a contract specifying the constraints the system architecture has to take into account, it does not scale very well when the size and the complexity of the systems increase significantly. Model Driven Engineering (MDE) approaches are currently used by software engineers to enhance software quality and increase capitalization in product line delivery for complex systems, but are not yet widely used at the system architecture level. As such, there is still a big gap between the system engineering world and the software engineering world, that is particularly obvious in requirement processing, leading to misreadings and misinterpretations of the system requirements by software engineers, with important consequences at the software architecture level. In this paper, we propose an MDE approach to address this issue at the system architecture level, contributing to bridge the gap between system and software architectures. In particular, we will describe an approach to deal with the expression of requirements in a MDE context, which relies on the notion of system conceptual modeling. © 2009 Springer Berlin Heidelberg.		Le Pors, E.; Grisvard, O.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2009				
400		ModelGuidance	A model-based approach for developing event-driven architectures with AsyncAPI	In this Internet of Things (IoT) era, our everyday objects have evolved into the so-called cyber-physical systems (CPS). The use and deployment of CPS has especially penetrated the industry, giving rise to the Industry 4.0 or Industrial IoT (IIoT). Typically, architectures in IIoT environments are distributed and asynchronous, communication being guided by events such as the publication of (and corresponding subscription to) messages. While these architectures have some clear advantages (such as scalability and flexibility), they also raise interoperability challenges among the agents in the network. Indeed, the knowledge about the message content and its categorization (topics) gets diluted, leading to consistency problems, potential losses of information and complex processing requirements on the subscriber side to try to understand the received messages. In this paper, we present our proposal relying on AsyncAPI to automate the design and implementation of these architectures using model-based techniques for the generation of (part of) event-driven infrastructures. We have implemented our proposal as an open-source tool freely available online. © 2020 ACM.		Gómez, A.; Iglesias-Urkia, M.; Urbieta, A.; Cabot, J.	Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2020					Excluded	Excluded	new_screen			2		2020				
401		ModelGuidance	Towards a framework for model migration	Model migration is needed to transform a model from one modelling language to another to reuse these models and thus, to reduce the costs of building new models. This topic has received much attention mainly because of the OMG's MDA initiative. However, these approaches are tailored to transform design models. In this paper, we argue that this approach cannot be applied to the field of domain modelling. Therefore, we propose a theoretical framework for model migration, which extends the existing approaches adding a role and a process model to satisfy the requirements of model migrations in a material problem domain. © Springer-Verlag 2004.		Esswein, W.; Gehlert, A.; Seiffert, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2004				
402		ModelGuidance	Reconciling TGGs with QVT	The Model Driven Architecture (MDA) is an approach to develop software based on different models. There are separate models for the business logic and for platform specific details. Moreover, code can be generated automatically from these models. This makes transformations a core technology for MDA. QVT (Query/View/Transformation) is the transformation technology recently proposed for this purpose by the OMG.TGGs (Triple Graph Grammars) are another transformation technology proposed in the mid-nineties, used for example in the FUJABA CASE tool. In contrast to many other transformation technologies, both QVT and TGGs declaratively define the relation between two models. With this relation definition, a transformation engine can execute a transformation in both directions and, based on the same definition, can also propagate changes from one model to the other.In this paper, we compare the concepts of QVT and TGGs. It turns out that TGGs and QVT have many concepts in common. In fact, fundamental parts of QVT-Core can be implemented by a TGG transformation engine. Moreover, we discuss how both technologies could profit from each other.		Greenyer, Joel; Kindler, Ekkart	Proceedings of the 10th International Conference on Model Driven Engineering Languages and Systems					Excluded	Excluded	new_screen			2		2007				
403		ModelGuidance	Use case paths model revealing through natural language requirements analysis	"The approaches for extraction and representation of knowledge from textual user requirements could be summarized in two groups: i) when we have in mind an end model and seek, mine and represent knowledge for it. In short, this approach can be defined as ""knowledge driven from a target model""; ii) when we have in mind knowledge in a text, and seek an appropriate model to represent it. The intermediate model obtained in this manner can be processed further, to achieve another kind of end model. We define this approach as ""model driven from source knowledge"". This paper presents an approach of the second kind, for analyzing textual user requirements and extraction and representation of knowledge as a graphical requirement engineering (RE) model - Use Case Paths."		Ilieva, M.G.	Proceedings of the 2007 International Conference on Artificial Intelligence, ICAI 2007					Included	Excluded	new_screen			2		2007				
404		ModelGuidance	Modeling of service oriented architecture from business process to service realisation	This paper deals with modeling of Service-Oriented Architecture (SOA). SOA is an architectural style for analysis, design, maintaining and integration of enterprise applications that are based on services. Services are autonomous platform-independent entities that enable access to one or more capabilities, which are accessible by provided interfaces. The goal of SOA is to align business and IT architectures. Hence, a new designed service has to meet business requirements that are traditionally specified by a business process diagram. The approach, presented in this paper, helps to bridge the semantic gap between business requirements and IT architecture by using a method for transformation of business processes diagrams into services diagrams. In particular, the method deals with process realisation based on services and it describes choreographing of services towards fulfilling business goals.		Rychlý, M.; Weiss, P.	ENASE 2008 - Proceedings of the 3rd International Conference on Evaluation of Novel Approaches to Software Engineering					Excluded	Excluded	new_screen			2		2008				
405		ModelGuidance	Debugging with timed automata mutations	Model-based Debugging is an application of Model-based Diagnosis techniques to debugging computer systems. Its basic principle is to compare a model, i.e., a description of the correct behaviour of a system, to the observed behaviour of the system. In this paper we show how this technique can be applied in the context of model-based mutation testing (MBMT) with timed automata. In MBMT we automatically generate a set of test sequences out of a test model. In contrast to general model-based testing, the test cases of MBMT cover a pre-defined set of faults that have been injected into the model (model mutation). Our automatic debugging process is purely black-box. If a test run fails, our tool reports a diagnosis as a set of model mutations. These mutations provide possible explanations why the test case has failed. For reproducing the failure, we also generate a set of minimal test cases leading to the implementation fault. The technique is implemented for Uppaal's timed automata models and is based on a language inclusion check via bounded model checking. It adds debugging capability to our existing test-case generators. A car-alarm system serves as illustrating case study. © 2014 Springer International Publishing.		Aichernig, B.K.; Hörmaier, K.; Lorber, F.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2014				
406		ModelGuidance	Strategies and Best Practices for Model-Based Systems Engineering Adoption in Embedded Systems Industry	[Context] Model-based Systems Engineering (MBSE) advocates the integrated use of models throughout all development phases of a system development life-cycle. It is also often suggested as a solution to cope with the challenges of engineering complex systems. However, MBSE adoption is no trivial task and companies, especially large ones, struggle to achieve it in a timely and effective way. [Goal] We aim to discover what are the best practices and strategies to implement MBSE in companies that develop embedded software systems. [Method] Using an inductive-deductive research approach, we conducted 14 semi-structured interviews with experts from 10 companies. Further, we analyzed the data and drew some conclusions which were validated by an on-line questionnaire in a triangulation fashion. [Results] Our findings are summarized in an empirically validated list of 18 best practices for MBSE adoption and through a prioritized list of the 5 most important best practices. [Conclusions] Raising engineers' awareness regarding MBSE advantages and acquiring experience through small projects are considered the most important practices to increase the success of MBSE adoption.		Amorim, Tiago; Vogelsang, Andreas; Pudlitz, Florian; Gersing, Peter; Philipps, Jan	Proceedings of the 41st International Conference on Software Engineering: Software Engineering in Practice					Excluded	Excluded	new_screen			2		2019				
407		ModelGuidance	An empirical approach toward the resolution of conflicts in goal-oriented models	One significant problem requirements engineers have to cope with is the management of unclear requirements, ambiguities, and conflicts that may arise between stakeholders. Such issues may be desirable since they may allow for further elicitation of requirements that would have been missed otherwise. Goal models capture the objectives and other intentions of different stakeholders, together with their relationships. They can be used to refine unclear requirements and to detect conflicts and ambiguities early during model validation. However, resolving such ambiguities and conflicts is key for the successful implementation of the goal models. In this paper, we propose a novel approach to validate models in the Goal-oriented Requirement Language and resolve conflicts between the perspectives of intervening stakeholders (and especially between stakeholders of a given group). Our approach is based on a statistical analysis of empirical data that we collect from surveys designed for each group of stakeholders. We apply concept analysis in order to fix goal-model artifacts that are subject to conflict. We illustrate our approach using a case study of a goal model describing the involvement of undergraduate students in university research activities. © 2015, Springer-Verlag Berlin Heidelberg.		Hassine, J.; Amyot, D.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2017				
408		ModelGuidance	Verification of MARTE/CCSL time requirements in Promela/SPIN	Nowadays, the significance of automatic transformation of object oriented code from design models has increased due to its benefits such as cost reduction and time efficiency. Model driven development (MDD) absolutely needs automatic approach and method to generate system from model. This paper contributes the efficient Drools rule-based transformation approach to automate the mobile application development process. In our approach, the textual model Umple considered as primary artifacts that drive the whole mobile application. The consistency of source and target model and the assessment of transformability are the critical issues in model transformation domain. In this paper, we attempt to address these issues with measuring the accuracy of consistency between source and target model and assessing the transformability using object oriented metrics. Results reveal that our approach achieved the high accuracy of consistency and sound quality of transformability.		Yin, L.; Mallet, F.; Liu, J.	Proceedings - 2011 16th IEEE International Conference on Engineering of Complex Computer Systems, ICECCS 2011					Excluded	Excluded	new_screen			2		2011				
409		ModelGuidance	Model-driven software verification	In the classic approach to logic model checking, software verification requires a manually constructed artifact (the model) to be written in the language that is accepted by the model checker. The construction of such a model typically requires good knowledge of both the application being verified and of the capabilities of the model checker that is used for the verification. Inadequate knowledge of the model checker can limit the scope of verification that can be performed; inadequate knowledge of the application can undermine the validity of the verification experiment itself. In this paper we explore a different approach to software verification. With this approach, a software application can be included, without substantial change, into a verification test-harness and then verified directly, while preserving the ability to apply data abstraction techniques. Only the test-harness is written in the language of the model checker. The test-harness is used to drive the application through all its relevant states, while logical properties on its execution are checked by the model checker. To allow the model checker to track state, and avoid duplicate work, the test-harness includes definitions of all data objects in the application that contain state information. The main objective of this paper is to introduce a powerful extension of the SPIN model checker that allows the user to directly define data abstractions in the logic verification of application level programs. © Springer-Verlag 2004.		Holzmann, G.J.; Joshi, R.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2004				
410		ModelGuidance	A generic model decomposition technique and its application to the Eclipse modeling framework	Model-driven software development aims at easing the process of software development by using models as primary artifacts. Although less complex than the real systems, they are based on models tend to be complex nevertheless, thus making the task of handling them non-trivial in many cases. In this paper, we propose a generic model decomposition technique to facilitate model management by decomposing complex models into smaller sub-models that conform to the same metamodel as the original model. The technique is based upon a formal foundation that consists of a formal capturing of the concepts of models, metamodels, and model conformance; a formal constraint language based on EssentialOCL; and a set of formally proved properties of the technique. We organize the decomposed sub-models in a mathematical structure as a lattice, and design a linear-time algorithm for constructing this decomposition. The generic model decomposition technique is applied to the Eclipse modeling framework, and the result is used to build a solution to a specific model comprehension problem of Ecore models based upon model pruning. We report two case studies of the model comprehension method: one in BPMN and the other in fUML. © 2013, Springer-Verlag Berlin Heidelberg.		Ma, Q.; Kelsen, P.; Glodt, C.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2015				
411		ModelGuidance	A synergistic model-driven approach for persistence modeling with UML	The Model Driven Development (MDD) approach proposes that models (and model-to-model transformations) play the main role on system development. However, there is not a consensual notation to model persistence based upon object-relational mapping frameworks: while UML lacks specific resources for persistence modeling, the entity-relationship model does not make reference to the dynamic concepts existing in UML. This paper proposes MD-JPA, a UML profile for persistence modeling based on the well-known Java Persistence API 2 (JPA) standard for object-relational mapping, pursuing the modeling of transient and persistent elements in a more coherent and synergistic way. This paper describes the main characteristics of MD-JPA as well as the way that models that adopt such profile can them be used to generate a Java implementation by the application of the proposed model transformations on a MDD approach. Finally, an open source tool was developed to make the results of this work available to the community. © 2011 Elsevier Inc. All rights reserved.		Torres, A.; Galante, R.; Pimenta, M.S.	Journal of Systems and Software					Excluded	Excluded	new_screen			2		2011				
412		ModelGuidance	Interaction Modelling for IoT	Informal design artefacts allow end-users and non-experts to contribute to software design ideas and development. In contrast, software engineering techniques such as model-driven development support experts in ensuring quality properties of the software they propose and build. Each of these approaches have benefits which contribute to the development of robust, reliable and usable software, however it is not always obvious how best to combine these two. In this paper we describe a novel technique which allows us to use informal design artefacts, in the form of ideation card designs, to generate formal models of IoT applications. To implement this technique, we created the Cards-to-Model (C2M) tool which allows us to automate the model generation process. We demonstrate this technique with a case study for a safety-critical IoT application called 'Medication Reminders'. By generating formal models directly from the design we reduce the complexity of the modelling process. In addition, by incorporating easy-to-use informal design artefacts in the process we allow non-experts to engage in the design and modelling process of IoT applications. © 2021 IEEE.		Turner, J.; Bowen, J.; Van Zandwijk, N.	Proceedings - Asia-Pacific Software Engineering Conference, APSEC					Excluded	Excluded	new_screen			2		2021				
413		ModelGuidance	Model Based Testing in Practice at Microsoft	As part of Microsofts Trustworthy Computing [4] initiative the company has sought many ways to increase reliability. One approach being extensively investigated and used is Model Based Testing. With a Finite State Machine modeling tool (TMT) successfully deployed and in use by many test groups, a need for more powerful and exible modeling has arisen. Several product groups are exploring the use of the Abstract State Machine Language (AsmL) and its associated test tool (AsmL/T). Results from both approaches have shown an increased ability to nd defects earlier, including in the specification and design stages, as well as achieve higher structural code coverage on the actual systems under test.		Stobie, K.	Electronic Notes in Theoretical Computer Science					Excluded	Excluded	new_screen			2		2005				
414		ModelGuidance	Model-based approach for engineering adaptive user interface requirements	Although Model-Based User Interface (MBUI) design approaches have been suggested and researched over a long period of time, the advantages of adopting them into the development of Adaptive User Interface (AUI) have not stood out. We believe that it is due to the lack of an integration of the Requirements Engineering (RE) process, and methodologies for Model-based AUI development. Since RE provides a solid base to the development of software, requirements of AUI have to be preceded appropriately in the development process. Previously, we suggested a RE method for AUI reflecting the viewpoint of Self Adaptive System (SAS). In this paper, we elaborate on our previous method grounded on a model-based approach. The proposed method is illustrated with an example scenario, which makes adaptations of the user interface at run-time by conforming to the context of users. Finally, an evaluation of our method is provided by a case study at the end of the paper. © Springer-Verlag Berlin Heidelberg 2015.		Park, K.; Lee, S.-W.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2015				
415		ModelGuidance	Extending WebML for modeling multi-channel context-aware Web applications	This paper focuses on conceptual modeling of multichannel, context aware Web applications, and in particular, proposes some solutions conceived within the WebML method. WebML is a conceptual model for data-intensive Web applications, which already offers some constructs for one-to-one personalization and multi-channel deliver. In this paper, we introduce some new extensions that allow representing a context model at data level, and exploit it at hypertext level for offering context-aware, customized services and contents, accessible through multiple channels. © 2004 IEEE.		Ceri, S.; Daniel, F.; Matera, M.	Proceedings - 4th International Conference on Web Information Systems Engineering Workshops, WISEW 2003: 3rd International Workshop on Web and Wireless Geographical Information Systems, W2GIS 2003, 1st Web Services Quality Workshop, WQW 2003 and 1st Workshop on Multichannel and Mobile Information Systems, MMIS 2003					Included	Excluded	new_screen			2		2004				
416		ModelGuidance	An Automated Hybrid Approach for Generating Requirements Trace Links	Trace links between requirements and software artifacts provide available traceability information and in-depth insights for different stakeholders. Unfortunately, establishing requirements trace links is a tedious, labor-intensive and fallible task. To alleviate this problem, Information Retrieval (IR) methods, such as Vector Space Model (VSM), Latent Semantic Indexing (LSI), and their variants, have been widely used to establish trace links automatically. But with the widespread use of agile development methodology, artifacts that can be used to generate automatic tracing links are getting shorter and shorter, which decreases the effects of traditional IR-based trace link generation methods. In this paper, Biterm Topic Model-Genetic Algorithm (BTM-GA), which is effective in managing short-text artifacts and configuring initial parameters, is introduced. A hybrid method VSM+BTM-GA is proposed to generate requirements trace links. Empirical experiments conducted on five real and frequently-used datasets indicate that (1) the hybrid method VSM+BTM-GA outperforms the others, and its results can achieve the “Good” level, where recall and precision are no less than 70% and 30%, respectively; (2) the performance of the hybrid method is stable and (3) BTM-GA can provide a number of “hard-to-find” trace links that complement the candidate trace links of VSM.		Wang, Bangchao; Peng, Rong; Wang, Zhuo; Wang, Xiaomin; Li, Yuanbang	INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING					Excluded	Excluded	new_screen			2		2020				
417		ModelGuidance	Requirements engineering for safety critical systems: An approach for avionic systems	Safety critical software systems are defined to be those systems that should unanticipated failure occur, there could be the harm to life or property. All software life-cycle development methodologies place emphasis on the requirements elicitation and analysis, as this is the most crucial phase of the development life-cycle. This is because many system failures have their genesis at the point of requirements definition and analysis. Avionic software system development is an important and expanding area of work. There are universally established specifications for software development in avionics, which have been recently updated. The work that is presented in this paper, describes a research effort for defining a model-based software development life-cycle for avionic software system development that is based on a universally accepted specification standard, and focused on the requirements capture and modeling phase of the life-cycle. © 2016 IEEE.		Grant, E.S.	2016 2nd IEEE International Conference on Computer and Communications, ICCC 2016 - Proceedings					Excluded	Excluded	new_screen			2		2017				
418		ModelGuidance	Representing Hierarchical State Machine Models in SMT-LIB	We motivate and present a proposal for how to represent the syntax of behavioural models written in extended finite-state machine languages with hierarchical states (e.g., the Statecharts family) in SMT-LIB. By including the state structure explicitly in the SMT-LIB model, our goal is to facilitate effective automated deductive reasoning, which can exploit the structure found in the state hierarchy. We present a novel method that combines deep and shallow encoding techniques to describe models that have both state hierarchy and use the rich datatypes found in SMT-LIB. Our representation permits varying semantics to be chosen for the syntax recognizing the rich variety of semantics that exist for this family of modelling languages. We hope that discussion of these representation issues will facilitate model sharing for investigation of analysis techniques.		N. A. Day; A. Vakili	2016 IEEE/ACM 8th International Workshop on Modeling in Software Engineering (MiSE)					Excluded	Excluded	new_screen			2		2016				
419		ModelGuidance	Promoting the Software Evolution in AOSD with Early Aspects: Architecture-Oriented Model-Based Pointcuts	Aspect oriented systems suffer from an issue named pointcut fragility problem, which occurs when a poincut unintentionally captures or misses a given join point as a consequence of apparently harmless modifications of the base elements or system structure. One promising approach to cope with this problem is the definition of pointcuts in terms of elements of an intermediary conceptual model. In this paper we investigate the benefits of defining these conceptual models at early stages of the development. Concretely, we use the AO-ADL architectural language and, in particular, its support to define: (1) semantics-based compositions, and (2) parameterized architectural templates. We also demonstrate the feasibility of our approach through a case study.		Pinto, Monica; Fuentes, Lidia; Valenzuela, Juan A.; Pires, Paulo F.; Delicato, Flavia C.	Proceedings of the 2009 ICSE Workshop on Aspect-Oriented Requirements Engineering and Architecture Design					Excluded	Excluded	new_screen			2		2009				
420		ModelGuidance	Model transformations for migrating legacy models: An industrial case study	Many companies in the automotive industry have adopted MDD in their vehicle control software development. As a major automotive company, General Motors has been using a custom-built, domain-specific modeling language, implemented as an internal proprietary metamodel, to meet the modeling needs in its control software development. As AUTOSAR (AUTomotive Open System ARchitecture) is being developed as a standard to ease the process of integrating components provided by different suppliers and manufacturers, there is a growing demand to migrate these GM-specific, legacy models to AUTOSAR models. Given that AUTOSAR defines its own metamodel for various system artifacts in automotive software development, we explore using model transformations to address the challenges in migrating GM legacy models to their AUTOSAR equivalents. As a case study, we have built a model transformation using the MDWorkbench tool and the Atlas Transformation Language (ATL). This paper reports on the case study, makes observations based on our experience to assist in the development of similar types of transformations, and provides recommendations for further research. © 2012 Springer-Verlag.		Selim, G.M.K.; Wang, S.; Cordy, J.R.; Dingel, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2012				
421		ModelGuidance	Code generation for a family of executable modelling notations	We are investigating semantically configurable model-driven engineering (MDE). The goal of this work is a modelling environment that supports flexible, configurable modelling notations, in which specifiers can configure the semantics of notations to suit their needs and yet still have access to the types of analysis tools and code generators normally associated with MDE. In this paper, we describe semantically configurable code generation for a family of behavioural modelling notations. The family includes variants of statecharts, process algebras, Petri Nets, and SDL88. The semantics of this family is defined using template semantics, which is a parameterized structured operational semantics in which parameters represent semantic variation points. A specific notation is derived by instantiating the family's template semantics with parameter values that specify semantic choices. We have developed a code-generator generator (CGG) that creates a suitable Java code generator for a subset of derivable modelling notations. Our prototype CGG supports 26 semantics parameters, 89 parameter values, and 7 composition operators. As a result, we are able to produce code generators for a sizable family of modelling notations, though at present the performance of our generated code is about an order of magnitude slower than that produced by commercial-grade generators. © 2010 Springer-Verlag.		Prout, A.; Atlee, J.M.; Day, N.A.; Shaker, P.	Software and Systems Modeling					Included	Excluded	new_screen			2		2012				
422		ModelGuidance	Example-Driven Modeling: Model = Abstractions + Examples	We propose Example-Driven Modeling (EDM), an approach that systematically uses explicit examples for eliciting, modeling, verifying, and validating complex business knowledge. It emphasizes the use of explicit examples together with abstractions, both for presenting information and when exchanging models. We formulate hypotheses as to why modeling should include explicit examples, discuss how to use the examples, and the required tool support. Building upon results from cognitive psychology and software engineering, we challenge mainstream practices in structural modeling and suggest future directions.		Bąk, Kacper; Zayan, Dina; Czarnecki, Krzysztof; Antkiewicz, Micha\l; Diskin, Zinovy; Wąsowski, Andrzej; Rayside, Derek	Proceedings of the 2013 International Conference on Software Engineering					Included	Excluded	new_screen			2		2013				
423		ModelGuidance	Accelerating the development of health and social services systems through model-driven engineering: Two case studies	The Integrated Center for Health and Social Services in Gaspesia, Québec (CIHSSG) needed new software systems in order to better serve its customers and offer new services. However, as a small organization, resources, both human and financial, are limited. This is why CIHSSG mandated us to come up with a solution that enables the development and acquisition of software systems with the lowest possible cost. We proposed the development of the new systems through the adoption of a model-driven engineering approach (MDE). In this paper, we present the case studies, our MDE approach and the results who show how our approach has accelerated the development of the new systems while reducing the cost of their development and maintenance. © 2015 IEEE.		Khriss, I.; McKibben, A.	Proceedings - 2015 International Conference on Computational Science and Computational Intelligence, CSCI 2015					Excluded	Excluded	new_screen			2		2016				
424		ModelGuidance	Leveraging Multi-Level Modeling for Multi-Domain Quality Assessment	Quality Evaluation Systems (QESs) are a class of software systems which receive evaluation requests and quality requirement specifications as inputs and produce results as outputs of an assessment process. This class of systems usually work with a quality model including quality definitions and metrics, and produce the output as a quantitative evaluation of a subject. QESs can be implemented using model-driven techniques and dedicated languages, for domain-specific evaluation of different subjects. However, applying traditional two-level metamodeling techniques for this scenario entails that every time a QES is required, a new modeling framework, with consequent engine for interpreting the newly defined models, must be re-developed from scratch. To overcome this repetitive process, in this paper, we propose a Multi-Level Modeling (MLM) approach for realizing the artifacts involved in the development phase of a QES which are reusable across multiple domains. We demonstrate the approach with running examples from three different application domains comprising different evaluation scenarios. © 2021 IEEE.		Rossi, M.T.; Dal Molin, M.; Iovino, L.; De Sanctis, M.; Wimmer, M.	Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021					Excluded	Excluded	new_screen			2		2021				
425		ModelGuidance	Incremental modeling of system architecture satisfying SysML functional requirements	The aim of this work is to propose a methodological approach to model and verify Component-Based Systems (CBS), directly from SysML requirement diagrams, and to ensure formally the architecture consistency of the specified systems. The architecture consistency is guaranteed, when the components that interact in CBS are compatible and all component requirements are preserved by the composition. We propose to exploit functional requirements of CBS, specified with SysML diagrams, and the composition of components to specify incrementally system architecture. Component interfaces are specified with SysML sequence diagrams to capture their behaviors (protocols). From a requirement diagram, we associate atomic requirements, represented as LTL properties, to reusable components satisfying them. LTL properties are verified on the components with SPIN model-checker. Then, we specify system architecture incrementally, with SysML Block Definition Diagram (BDD) and Internal Block Diagram (IBD), by treating, one by one the atomic requirements. © 2014 Springer International Publishing Switzerland.		Carrillo, O.; Chouali, S.; Mountassir, H.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2014				
426		ModelGuidance	A Model-driven Development for Creating Accessible Web Menus	Web pages are composed by several elements that allow users to interact with available content. Some of these elements, such as menus, are responsible for assisting the navigation in the website, helping in the localization and access of the information requested by the user. However, many of menus available in Internet are not developed in an accessible manner, which creates accessibility barriers for many users, especially users with disabilities. Non-accessible menus hinder users find the information that they are looking for and therefore they can give up accessing the web site. This paper aims at addressing the problem by helping developers to create accessible web menus based on model-driven approach. Adopting this approach can help developers build accessible menus without knowing the technical details about accessibility. In direction to this objective, we initially studied the different types of menus and their structures, as well as the accessibility guidelines that involve creating accessible menus. From the study, we developed a meta-model that originated the DSL (Domain Specific Language) called AMenu (Accessible Menu). Then we included all the technical details about accessibility in the transformations. Finally, we presented an exploratory evaluation of DSL, discussing their efficiency and limitations. The results indicate a reduction in efforts for developing accessible web menus, since developers do not have to deal with technical details of accessibility. Our approach provides an alternative to traditional approaches to development for creating accessible web menus. The principles used in this study can be included in CASE tools and IDEs with great acceptance in the industry and therefore facilitate and disseminate the development of accessible systems.		Antonelli, H.L.; Silva, E.A.N.D.; Fortes, R.P.M.	Procedia Computer Science					Excluded	Excluded	new_screen			2		2015				
427		ModelGuidance	"The ""physics"" of notations: A scientific approach to designing visual notations in software engineering"	Visual notations form an integral part of the language of software engineering (SE). Yet historically, SE researchers and notation designers have ignored or undervalued issues of visual representation. In evaluating and comparing notations, details of visual syntax are rarely discussed. In designing notations, the majority of effort is spent on semantics, with graphical conventions often an afterthought. Typically no design rationale, scientific or otherwise, is provided for visual representation choices. While SE has developed mature methods for evaluating and designing semantics, it lacks equivalent methods for visual syntax. This tutorial defines a set of principles for designing cognitively effective visual notations: ones that are optimised for human communication and problem solving. Together these form a design theory, called the Physics of Notations as it focuses on the physical (perceptual) properties of notations rather than their logical (semantic) properties. The principles were synthesised from theory and empirical evidence from a wide range of fields and rest on an explicit theory of how visual notations communicate. They can be used to evaluate, compare and improve existing visual notations as well as to construct new ones. The tutorial identifies serious design flaws in some of the leading SE notations together with practical suggestions for improving them. It also showcases some examples of visual notation design excellence from SE and other fields. © 2010 ACM.		Moody, D.L.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2010				
428		ModelGuidance	Model-Based Ideal Testing of GUI Programs-Approach and Case Studies	Traditionally, software testing is aimed at showing the presence of faults. This paper proposes a novel approach to testing graphical user interfaces (GUI) for showing both the presence and absence of faults in the sense of ideal testing. The approach uses a positive testing concept to show that the GUI under consideration (GUC) does what the user expects; to the contrary, the negative testing concept shows that the GUC does not do anything that the user does not expect, building a holistic view. The first step of the approach models the GUC by a finite state machine (FSM) that enables the model-based generation of test cases. This is always possible as the GUIs are considered as strictly sequential processes. The next step converts the FSM to an equivalent regular expression (RE) that will be analyzed first to construct test selection criteria for excluding redundant test cases and construct test coverage criteria for terminating the positive test process. Both criteria enable us to assess the adequacy and efficiency of the positive tests performed. The negative tests will be realized by systematically mutating the FSM to model faults, the absence of which are to be shown. Those mutant FSMs will be handled and assessed in the same way as in positive testing. Two case studies illustrate and validate the approach; the experiments' results will be analyzed to discuss the pros and cons of the techniques introduced. © 2013 IEEE.		Kilincceker, O.; Silistre, A.; Belli, F.; Challenger, M.	IEEE Access					Excluded	Excluded	new_screen			2		2021				
429		ModelGuidance	Using Aspect-orientation Techniques to Improve Reuse of Metamodels	Metamodelling is an activity that attracts attention of the research community dealing with the Model-Driven Development (MDD). To be reusable in different MDD approaches a metamodel should be unaware of being extended by another metamodel. This property of metamodel is called obliviousness. This paper shows that current techniques implementing metamodels do not maintain obliviousness when some elements of the extended metamodel and the elements of the original model have association relations. Three different approaches to reuse of metamodels are analyzed. One of the approaches uses traditional object-oriented techniques. Two other approaches use aspect-oriented techniques. The paper shows that the third approach, which considers relationships as first-class citizens at the implementation level by using relationship aspects, guarantees obliviousness of metamodels. © 2007 Elsevier B.V. All rights reserved.		Reina Quintero, A.M.; Torres Valderrama, J.	Electronic Notes in Theoretical Computer Science					Excluded	Excluded	new_screen			2		2007				
430		ModelGuidance	A software modeling approach to ontology design via extensions to ODM and OWL	Ontologies are built to establish standard terminologies representing a semantic agreement between humans and knowledge systems via representational frameworks (e.g., KIF, DAML+OIL, OWL, etc.) that have been proposed in the research community, with limited adoption in industry. One possible reason is a lack of a formal model and associated process to more precisely and accurately design and develop ontologies. The authors' prior work explored UML, entity-relationship diagrams, and XML as compared to RDF and OWL, identifying modeling capabilities lacking in ontologies. In all three approaches, design precedes instantiation which contrasts with ontology developers who build ontologies at the application level targeted to a specific domain. The paper proposes design-level modeling enhancements to ontologies by extending the OMG Ontology Definition Model (ODM) and OWL grammar with capabilities from the three aforementioned approaches, promoting a software engineering-based process. As a result, this work provides a more software engineering-oriented process to ontology design and development. Copyright © 2013, IGI Global.		Saripalle, R.K.; Demurjian, S.A.; De La Rosa Algarín, A.; Blechner, M.	International Journal on Semantic Web and Information Systems					Excluded	Excluded	new_screen			2		2013				
431		ModelGuidance	An Approach to Communicating Process Modeling of MARTE	Precisely describing complicate interaction process is still an open problem in MARTE(Modeling and Analysis of Realtime Embedded System). In this paper, we propose an approach to modeling interaction behaviors to enhance MARTE modeling ability. MARTE is published by OMG(Object Management Group) in Aug, 2010 as a standard modeling language for modeling real time and embedded system. Our approach is based on timed CSP(Communicating Sequential Processes). To describe the multiform time structure in MARTE, we make an extension to timed CSP. The syntax and semantics of the communicating process specification are given and also the laws, the trace model and the failures model are defined. One of the main advantages of our method is to help people to modeling the complicate interaction process with process algebra, thus to simplify the modeling and verification of the interaction and concurrent behaviors in real-time and embedded systems between different processes. The approach is applied to model and analyze a Train Over Speed Protection System for Shanghai Bell Company.		Wu, Zhike; Liu, Jing; Chen, Xiaohong; Chen, Mingsong	Proceedings of the Fourth Asia-Pacific Symposium on Internetware					Included	Excluded	new_screen			2		2012				
432		ModelGuidance	Near real-time electric load approximation in low voltage cables of smart grids with models@run.time	Micro-generations and future grid usages, such as charging of electric cars, raises major challenges to monitor the electric load in low-voltage cables. Due to the highly interconnected nature, real-time measurements are problematic, both economically and technically. This entails an overload risk in electricity networks when cables must be disconnected for maintenance reasons or are accidentally damaged. Therefore, it is of great interest for electricity grid providers to anticipate the load in networks and quicker detect failures. However, computing the electric load in cables requires computational intensive power flow calculations and live consumption measurements. Today's view of the grid is usually based on on-field documentation of cables, fuses, and measurements by technicians and therefore often outdated. Thus, the electric load is usually only simulated in case of major topology variations. However, live measurements of smart meters provide new opportunities. In this paper we present a novel approach for a near-time electric load approximation by deriving in live the current electric topology and cable loads from smart meter data. We leverage the models@run.time paradigm to combine live measurements with topology characteristics of the grid. Our approach enables to approximate the load in cables, not only for the current grid topology, but also to simulate topology changes for maintenance purposes. We showed that this allows a near real-time approximation while remaining very accurate (average deviation of 1.89% compared to offline power-flow calculation tools). Developed with a grid operator, this approach will be integrated in a monitoring and warning system and as an embeddable solution for on-field simulation. © 2016 ACM.		Hartmann, T.; Moawad, A.; Fouquet, F.; Reckinger, Y.; Klein, J.; Le Traon, Y.	Proceedings of the ACM Symposium on Applied Computing					Excluded	Excluded	new_screen			2		2016				
433		ModelGuidance	OCL and Model Driven Engineering	Precise modeling is essential to the success of the OMG's Model Driven Architecture initiative. At the modeling level (M1) OCL allows for the precision needed to write executable models. Can OCL be extended to become a full high-level executable language with side-effects? At the meta-level (M2), queries, views and transformations are subjects that will be vital to the success of the OMG's Model Driven Architecture initiative. Will OCL 2.0 become an essential part of the Queries/Views/Transformations standard and what will be its application areas in industry? Can the features of OCL 2.0 be used in the Model Driven Engineering (MDE) approach? This workshop aims at bringing together people from academia that are expected to report on inspiring ideas for innovative application scenarios and tools, and industrial practitioners, which are expected to provide statements on their view of the future of OCL in the context of MDE. © Springer-Verlag Berlin Heidelberg 2005.		Bézivin, J.; Baar, T.; Gardner, T.; Gogolla, M.; Hähnle, R.; Hussmann, H.; Patrascoiu, O.; Schmitt, P.H.; Warmer, J.	Lecture Notes in Computer Science					Excluded	Excluded	new_screen			2		2005				
434		ModelGuidance	Managing the evolution of aspect-oriented software with model-based pointcuts	In spite of the more advanced modularisation mechanisms, aspect-oriented programs still suffer from evolution problems. Due to the fragile pointcut problem, seemingly safe modifications to the base code of an aspect-oriented program can have an unexpected impact on the semantics of the pointcuts defined in that program. This can lead to broken aspect functionality due to accidental join point misses and unintended join point captures. We tackle this problem by declaring pointcuts in terms of a conceptual model of the base program, rather than defining them directly in terms of how the base program is structured. As such, we achieve an effective decoupling of the pointcuts from the base program's structure. In addition, the conceptual model provides a means to verify where and why potential fragile pointcut conflicts occur, by imposing structural and semantic constraints on the conceptual model, that can be verified when the base program evolves. To validate our approach we implemented a model-based pointcut mechanism, which we used to define some aspects on SmallWiki, a medium-sized application, and subsequently detected and resolved occurrences of the fragile pointcut problem when this application evolved. © Springer-Verlag Berlin Heidelberg 2006.		Kellens, A.; Mens, K.; Brichau, J.; Gybels, K.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2006				
435		ModelGuidance	UML profile for mining process: Supporting modeling and simulation based on metamodels of activity diagram	An UML profile describes lightweight extension mechanism to the UML by defining custom stereotypes, tagged values, and constraints. They are used to adapt UML metamodel to different platforms and domains. In this paper we present an UML profile for models supporting event driving simulation. In particular, we use the Arena simulation tool and we focus on the mining process domain. Profiles provide an easy way to obtain well-defined specifications, regulated by the Object Management Group (OMG). They can be used as a presimulation technique to obtain solid models for the mining industry. In this work we present a new profile to extend the UML metamodel; in particular we focus on the activity diagram. This extended model is applied to an industry problem involving loading and transportation of minerals in the field of mining process. © 2014 Andrea Giubergia et al.		Giubergia, A.; Riesco, D.; Gil-Costa, V.; Printista, M.	Modelling and Simulation in Engineering					Excluded	Excluded	new_screen			2		2014				
436		ModelGuidance	A method for matching models in UML-B	UML-B is a graphical front-end formal modelling language of the formal method Event-B. UML-B models semantics are given by the corresponding generated Event-B. Identifying similarities between models has several benefits such as model comparison, integration and evolution. Several matching and comparison methods have been done in the context of model driven software engineering. However, matching models via a systematic method is not supported yet in UML-B. In this work, we propose a matching method for UML-B elements based on their semantics. This method includes variable-based matching, event-based matching and state-machine matching. The variable-based matching provides rules for matching UML-B classes, attributes, states and variables. The event-based matching provides rules and cases for matching UML-B transitions and class-events. The state-machine matching provides rules for matching UML-B state-machines based on the state and transition matching rules. The matching rules are formalized by means of the generated corresponding Event-B specifications. The correctness of the rules is justified via preserving the compatibility of the matched state-variables and corresponding modifying events including their matched guards and actions. These rules are illustrated via a communication-based case study to show their applicability. © 2005 – ongoing JATIT & LLS.		Jasser, M.B.; Said, M.Y.; Ghani, A.A.A.; Samat, P.A.	Journal of Theoretical and Applied Information Technology					Excluded	Excluded	new_screen			2		2018				
437		ModelGuidance	Software Trustworthy Modeling and Verification Algorithm for CPS Time Attributes	Cyber-physical system, that is, CPS is a system that integrates physical and computer elements to detect the environment. It can intelligently respond to dynamic changes in the real world and provide excellent application possibilities. However, the time attribute of CPS is located in a complex physical environment, and the surrounding physical changes will affect the behavior of the time attribute of CPS. Existing verification methods are usually used for the overall performance of the software, and cannot directly assess the impact of power consumption on the effectiveness of CPS scheduling software. Therefore, this paper is dedicated to modeling the software effectiveness of CPS time attributes and evaluating the feasibility of the verification algorithm. A software modeling and verification algorithm based on CPS time attributes is proposed. According to some rules have been defined, to ensure the time, safety and reliability of the software trusted modeling and verification algorithms for CPS time attributes in the network environment Sex. The research goal of this research is to verify the algorithm based on software reliability modeling and CPS scheduling attributes, aiming to provide a framework for the integration of software reliability modeling, and a model-based verification algorithm for CPS scheduling attributes. Based on the relevant knowledge and theory in practice, this paper proposes a software credibility modeling and verification algorithm suitable for the time attribute of CPS. Experimental evidence shows that the construction of CPS time attribute system will greatly improve the efficiency of software credibility modeling and verification algorithms, and can promote the design and optimization of software credibility modeling and verification algorithms. © 2021, The Author(s), under exclusive license to Springer Nature Switzerland AG.		Wu, H.; Zhang, X.	Advances in Intelligent Systems and Computing					Excluded	Excluded	new_screen			2		2021				
438		ModelGuidance	Towards a Domain Specific Language for Engineering Collective Adaptive Systems	Heterogeneous agents that cooperate to accomplish collective tasks constitute Collective Adaptive Systems (CAS). Engineering a CAS not only involves the definition of the individual agents, but also their roles in achieving a collective task and adaptation strategies to counteract to environmental changes. Current solutions for specifying CAS typically tackle the problem at a low level of abstraction (e.g., writing XML files), making this task time-consuming and error-prone. Moreover, such a low level of abstraction hinders the understandability of the specification. Model-Driven Engineering (MDE) proposes to reduce the complexity of development by adopting models as first class artifacts in the process. In this respect, this work proposes a MDE approach to enhance CAS specification. In particular, we introduce a domain-specific language (DSL) made-up of three main views: one devoted to adaptive systems design; one addressing ensembles definition; and one tackling the collective adaptation. These three separate aspects are woven seamlessly by the DSL to constitute a complete CAS design. While the different views allow us to exploit separation-of-concerns to reduce complexity and focus on a specific aspect of the system, facing CAS specification at a higher-level of abstraction permits to use concepts closer to the experts of the involved domains. Moreover, the precise definition of modeling concepts through corresponding meta-models enables correctness-by-construction of the system specification.		A. Bucchiarone; A. Cicchetti; M. De Sanctis	2017 IEEE 2nd International Workshops on Foundations and Applications of Self* Systems (FAS*W)					Excluded	Excluded	new_screen			2		2017				
439		ModelGuidance	Performance modelling of smart cyber-physical systems	Context: the dynamic nature of complex Cyber-Physical Systems (CPS) introduces new research challenges since they need to smartly self-adapt to changing situations in their environment. This triggers the usage of methodologies that keep track of changes and raise alarms whether extra-functional requirements (e.g., safety, reliability, performance) are violated. Objective: this paper investigates the usage of software performance engineering techniques as support to provide a model-based performance evaluation of smart CPS. The goal is to understand at which extent performance models, specifically Queueing Networks (QN), are suitable to represent these dynamic scenarios. Method and Results: we evaluate the performance characteristics of a smart parking application where cars need to communicate with hot-spots to find an empty spot to park. Through QN we are able to efficiently derive performance predictions that are compared with long-run simulations, and the relative error of model-based analysis results is no larger than 10% when transient or congestion states are discarded. Conclusion: the usage of performance models is promising in this domain and our goal is to experiment further performance models in other CPS case studies to assess their effectiveness. © 2018 Association for Computing Machinery.		Bures, T.; Matena, V.; Mirandola, R.; Pagliari, L.; Trubiani, C.	ICPE 2018 - Companion of the 2018 ACM/SPEC International Conference on Performance Engineering					Excluded	Excluded	new_screen			2		2018				
440		ModelGuidance	Modeling and simulation of an operational transformation algorithm using finite state machines	Although the principles of real-time collaborative editing have been explored since the eighties, team collaboration software facilitating the completion of tasks as a group continues to be a very hot research topic. A series of theoretical and practical results obtained by the research and industrial communities originated in the theory of distributed computing. They were devised for managing the concurrent nature of user actions and for maintaining the consistency of data as changes are introduced randomly, by multiple users and in real-time. As such, centralized collaborative editing servers were designed to allow users to work in parallel on a document from a typical web browser. In order to maintain the consistency of the content being modified at different sites in different orders, Operational Transformation (OT) mechanisms are at the core of collaboration servers enabling web-based co-editing. However, as expected of modern web application deployments, a centralized OT algorithm is required that must also exhibit properties such as scalability and reliability. In this paper, the processes involved in the client-server interactions of OT are modeled as real-time systems using Finite State Machine (FSM) theory. The consistency of the data is controlled by formal groups of FSMs. Hierarchical FSMs are used to define and simulate the real-time behavior of client and server components when processing and transforming changes initiated by users. The FSM-based OT implementation is tested using random inputs and the approach is shown to be helpful for organizing and managing the complex distributed aspects of such algorithms. © 2018 IEEE.		Gadea, C.; Ionescu, B.; Ionescu, D.	SACI 2018 - IEEE 12th International Symposium on Applied Computational Intelligence and Informatics, Proceedings					Excluded	Excluded	new_screen			2		2018				
441		ModelGuidance	Improving efficiency of change impact assessment using graphical requirement specifications: An experiment	Objective: Graphical requirements representation is often considered needed to advance model-driven development. Dedicated modelling languages include formalisms for graphically representing requirements, and together with new methods for structuring requirements, graphical modelling promises improvements such as more efficient change management. This paper examines whether the use of a graphical notation of a requirements affects the task of assessing the impact of a proposed change to a requirements specification. Method: The efficiency of using a graphical requirements representation was examined through an experiment - using 18 student subjects. Time, perceived confidence and accuracy were measured as dependent variables. Result: The results showed that using a graphical representation decreased the time required and increased the perceived confidence, but the accuracy decreased. However, the statistical analysis of the results showed that only the difference in time was significant. Furthermore, there was a large difference in variance within the dependent variables between the groups. © 2010 Springer-Verlag.		Mellegård, N.; Staron, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2010				
442		ModelGuidance	A feature-based survey of model view approaches	When dealing with complex systems, information is very often fragmented across many different models expressed within a variety of (modeling) languages. To provide the relevant information in an appropriate way to different kinds of stakeholders, (parts of) such models have to be combined and potentially revamped by focusing on concerns of particular interest for them. Thus, mechanisms to define and compute views over models are highly needed. Several approaches have already been proposed to provide (semi)automated support for dealing with such model views. This paper provides a detailed overview of the current state of the art in this area. To achieve this, we relied on our own experiences of designing and applying such solutions in order to conduct a literature review on this topic. As a result, we discuss the main capabilities of existing approaches and propose a corresponding research agenda. We notably contribute a feature model describing what we believe to be the most important characteristics of the support for views on models. We expect this work to be helpful to both current and potential future users and developers of model view techniques, as well as to any person generally interested in model-based software and systems engineering. © 2017, Springer-Verlag GmbH Germany.		Bruneliere, H.; Burger, E.; Cabot, J.; Wimmer, M.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2019				
443		ModelGuidance	Dealing with uncertainties in the performance modelling of software systems	Models play a central role in the assessment of software non-functional properties like performance and reliability. Models can be used both in the initial phases of development to support the designer decisions and at runtime to evaluate the impact of changes in the existing software. However, being abstraction, the models include perse a certain degree of uncertainty. Nevertheless, often this aspect is neglected and models are used beyond their capabilities. Recognising the presence of uncertainties and managing them, would increase the level of trust in a given software model. In this paper we exploit a recently defined taxonomy that classifies the different types of uncertainties and we define a method that, starting from a given model, helps in recognising the existence of uncertainty, in classifying and managing it. We show the method at work on an example application considering the performance of the application as target non-functional property. Copyright © 2014 ACM 978-1-4503-2577-6/14/06 ...$15.00.		Perez-Palacin, D.; Mirandola, R.	QoSA 2014 - Proceedings of the 10th International ACM SIGSOFT Conference on Quality of Software Architectures (Part of CompArch 2014)					Excluded	Excluded	new_screen			2		2014				
444		ModelGuidance	Model-based adaptation of component behaviors	During interoperation process among components at signature level and behavioral level, many kinds of message mismatches happened. The classical way to solve the mismatch problems is to generate adaptor protocols (semi-) automatically in according to sets of component interface specifications and adaptation contracts, to authors knowledge, it can not perfectly solve the mismatch problem when messages transmit with parameters. In this paper, the author firstly apply the composition operator to synchronous vector and make it include all the mismatch relations of the transmitted messages with parameters, then, adaptor protocols are generated automatically to solve the mismatch problems based on Petri net encoding and Tina tools. The experimental results show the approach can better solve the mismatch problem. ©2009 IEEE.		Zheng, J.; Jiang, J.	Proceedings - 2009 International Conference on Computational Intelligence and Software Engineering, CiSE 2009					Excluded	Excluded	new_screen			2		2009				
445		ModelGuidance	Extending ERS for Modelling Dynamic Workflows in Event-B	Event-B is a state-based formal method for modelling and verifying the consistency of discrete systems. Event refinement structures (ERS) augment Event-B with hierarchical diagrams, providing explicit support for workflows and refinement relationships. Despite the variety of ERS combinators, ERS still lacks the flexibility to model dynamic workflows that support dynamic changes in the degree of concurrency. Specifically in the cases where the degree of parallelism is data dependent and data values can change during execution. In this paper, we propose two types of extensions in ERS to support dynamic modelling using Event-B. The first extension is supporting data-dependent workflows where data changes are possible. The second extension improves ERS by providing exception handling support. Semantics are given to an ERS diagram by generating an Event-B model from it. We demonstrate the Event-B encodings of the proposed ERS extensions by modelling a concurrent emergency dispatch case study. © 2017 IEEE.		Dghaym, D.; Butler, M.; Fathabadi, A.S.	Proceedings of the IEEE International Conference on Engineering of Complex Computer Systems, ICECCS					Excluded	Excluded	new_screen			2		2018				
446		ModelGuidance	Model Checking UML Activity Diagrams in FDR	The Unified Modeling Language (UML) is the de-facto industrial standard for modeling object-oriented software systems. UML Activity diagrams (ADs) can be used for software modeling and they have undergone significant changes with UML 2.0 specification, and no longer been a special kind of diagrams of UML state machines. ADs, however, are lack of formal semantics like other diagrams in UML official specifications and therefore they cannot be performed formal system behavior analysis. Verify if a UML model meets the required properties by model checking has become a key issue. Many attempts have been made to provide formalization for UML State Diagrams, but little for ADs. This paper formalize the UML ADs and then employs the Hoare's Communicating Sequential Processes to specify its operational and behavior semantics. The presented formalization makes it possible to reason about the behavior of a UML AD in CSP. A software tool for supporting to transfer an AD into CSPM specification has been implemented. Hence it provides an approach to model checking UML ADs by model-checker FDR. Finally, the formalisms and model checking are explicitly illustrated through a simple but non-trivial example. © 2009 IEEE.		Xu, D.; Miao, H.; Philbert, N.	Proceedings of the 2009 8th IEEE/ACIS International Conference on Computer and Information Science, ICIS 2009					Included	Excluded	new_screen			2		2009				
447		ModelGuidance	Model-driven composition of context-aware web services using ContextUML and aspects	Service Oriented Architectures (SOAs) are constantly gaining ground for the provision of business to business as well as user-centric services, mainly in the form of Web Services technology. SOAs enable service providers to design and deploy new,composite service offerings out of existing component services. In order to match end-user expectations with respect to personalization and ease of use, these services should be designed in a manner that allows them to exhibit a certain level of context-awareness which is a basic element towards a richer end-user experience. However, in the majority of such services, context-handling is still tightly coupled with the core functionality of the service, resulting in a design which is difficult to implement and maintain. The paper proposes the decoupling of core service logic from context-related functionality by adopting a Model-driven approach based on a modified version of the ContextUML metamodel. Core service logic and context handling are treated as separate concerns at the modeling level as well as in the resulting source code where Aspect Oriented Programming (AOP) encapsulates context-dependent behavior in discrete code modules. The design of a restaurant finder service is used to portray the modified ContextUML metamodel and the service modeling process which is covered in full. Respective code snippets belonging to the executable version of the service (part of work in progress) are also provided, illustrating the transition from model to code and the resulting separation of concerns. © 2007 IEEE.		Prezerakos, G.N.; Tselikas, N.D.; Cortese, G.	Proceedings - 2007 IEEE International Conference on Web Services, ICWS 2007					Excluded	Excluded	new_screen			2		2007				
448		ModelGuidance	Modelling a knowledge management system architecture with INGENIAS methodology	Nowadays knowledge management is a topic of vital importance as companies have realized that it offers a competitive advantage. In order to develop a knowledge management system that helps companies to take advantage of their knowledge, different technologies have been used. One of those which has proved to be rather efficient is that of intelligent agents, since these agents can develop tasks on behalf of users. Moreover, agents may use different intelligent techniques and communicate with each other. Taking this into account we are developing a multiagent architecture to help developers to implement knowledge management systems. Before designing the architecture we studied what agent methodology was the most suitable to carry out this task. After a preliminary study we consider that MASCommonKADS and INGENIAS could be the most convenient. In this paper we describe why we finally chose INGENIAS to design our architecture. Moreover, the design of the architecture using the INGENIAS model is also described. © 2006 IEEE.		Soto, J.P.; Vizcaíno, A.; Portillo, J.; Piattini, M.	Proceedings - 15th International Conference on Computing, CIC 2006					Excluded	Excluded	new_screen			2		2006				
449		ModelGuidance	Towards declarative and incremental model transformation	Model Driven Engineering (MDE) has proven to be a promising approach in software engineering. Model management and maintenance stands at the core of the MDE approach, while it still needs more theoretical and technical support for the realization of its expected functionalities, like model transformation, refactoring, migration and synchronization. In this thesis proposal, I introduce a declarative Model Transformation definition in the meta-model layer, as the foundation for model transformation. I motivate the declarative method by discussing its usefulness for incremental model transformation. This PhD proposal's objectives are the implementation of the declarative method, developing the necessary semantics for the incremental model transformation, and applying the incrementality to some MDE scenarios.		Gholizadeh, H.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2013				
450		ModelGuidance	Facilitating migration of cloud infrastructure services - A model-based approach	In cloud computing, modeling can be used to specify service topologies. Following a model-driven approach provisioning can be automated resulting in a significant reduction of time and costs. Yet, a forward engineering approach is limited to initial setups. That is, changes introduced posterior to a generation are not addressed per se when a complete regeneration is to be avoided. For dealing with differential changes of infrastructure service models, a model-based round-trip engineering approach is proposed that combines the power of model-driven generation with runtime reflection. For this, a de facto runtime model is reverse-engineered and model differences are calculated and operated on for enforcing a de jure model. While showcasing how to evolve a forward engineering approach accordingly, a particular implication of this contribution is the possibility to facilitate migration of cloud infrastructure services.		Holmes, T.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2015				
451		ModelGuidance	Model-Based Approach to Design and Develop Usable and Dependable Recommender Systems	Large companies rely on recommender systems to support users' processes of decision-making and analysis of large datasets of items. In critical context, such as civil aircraft cockpit, recommender systems can be a powerful tool for operators to support their tasks. Operators can be confronted with choosing the right option depending on the current alerts and context from a set of alternatives. The main goal of the presented PhD is to propose a model-based approach for the design and the development of dependable and usable recommender systems. This paper elaborates on challenges and approaches for engineering dependable and usable recommender systems.		Bouzekri, Elodie	Proceedings of the ACM SIGCHI Symposium on Engineering Interactive Computing Systems					Excluded	Excluded	new_screen			2		2018				
452		ModelGuidance	A generic process for the design and generation of software product line skeleton architectures	This paper presents a process, a method and a framework for developing families of software systems in a domain. The process is generic (domain-independent) and produces skeleton software architectures as Software Product Lines. The genericity is supported by the metamodels (abstract languages) that are defined in order to describe the Reference Architecture (structure view, behavior view and variability view) of the system domain. A standardized Production Plan takes the Reference Architecture as input and produces the equivalent Skeleton Software Architecture (component-connector view) using a Feature Model configuration (describing the system to be) as output. This Skeleton Software Architecture includes the structure and behavior of the target software product. A framework has been implemented to support the approach. The process is applied, as an example, to the Diagnostic Expert Systems domain. Our approach is based on Model-Driven Engineering techniques and the Software Product Line paradigm. A domain analysis must be done in order to build the Reference Architecture.		Cabello, M.E.; Ramos, I.; Santana, O.A.; Beristain, S.I.	International Journal of Software Engineering and Knowledge Engineering					Included	Excluded	new_screen			2		2014				
453		ModelGuidance	Model-Driven Development of High-Integrity Distributed Real-Time Systems Using the End-to-End Flow Model	Building High-integrity Distributed Real-Time (HDRT) systems requires a rigorous methodology to assist in the design and development of verifiable software. This paper describes an approach based on the Model-Driven Engineering (MDE) paradigm to ease the automatic generation of HDRT applications from high-level system models. Since those applications must be amenable to stringent timing analysis, such as the determination of worst-case execution time or schedulability analysis, we present the integration of a set of timing analysis tools with a toolset for MDE. In addition, this paper explores a new approach to integrating the real-time end-to-end flow model with the automatic generation of Raven scar-compliant source code in distribution middleware.		H. Perez; J. J. Gutierrez; E. Asensio; J. Zamorano; J. A. de la Puente	2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications					Excluded	Excluded	new_screen			2		2011				
454		ModelGuidance	Towards knowledge-intensive software engineering framework for self-adaptive software	A self-adaptive system reacts to the changing environment by modifying its functionality in relation to the encountered state of the environment. In order to adapt to a new situation, such system goes through many decision points during the adaptation process. Knowledge forms the basis of decision making within the adaptation process. There are already many existing self-adaptive system frameworks. However, these frameworks have limitation in the way they represent the rationale for adaptation and the semantics behind the knowledge they use. This paper takes a step forward by proposing a knowledge-intensive adaptation framework to both manage knowledge and support the analytical decision making process. The proposed approach represents the adaptation knowledge by using ontology which helps to organize, analyze and extend knowledge. Ontology is able to represent the semantics behind knowledge and provide the evidence for the adaptation. The proposed approach uses a special ontology named the Adaptation Problem Domain Ontology. It specifies the system goals, features, architectures, and the relationship between them. This ontology is used to answer the problem of adaptation at each decision point and determine the appropriate system structure by reasoning the semantics behind knowledge. Thus, the system can consider the semantics behind knowledge for adaptation, and then the stakeholders can understand the adaptation process. We apply the proposed framework to the smart grid domain and show how the system adapts to a new situation using rationale for adaptation and the semantics behind the knowledge. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.		Lee, H.-C.; Lee, S.-W.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					Excluded	Excluded	new_screen			2		2015				
455		ModelGuidance	On use case identification	Identifying the real requirements is the single hardest part of system development. While requirements specify the capabilities of the software system, use cases specify how to deliver these capabilities. It is important to identify real use cases because wrong use cases make it difficult to design, implement, test and maintain the software system. This increases effort and costs, and reduces software quality. Unfortunately, identifying real use cases is not easy for many software engineers, due to the lack of a clear definition. In this paper, we provide a definition and present a use case derivation methodology. Experiments and experiences show that the proposed method improves the correctness and completeness of the use cases identified. Copyright © 2013 by Knowledge Systems Institute Graduate School.		Kung, D.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					Excluded	Excluded	new_screen			2		2013				
456		ModelGuidance	A practical framework for applying UML	This paper presents practical strategies and techniques for putting UML to work based on the author's project experiences. A design philosophy is outlined for realizing the vision of black-box reuse in terms of a service-based architecture that capitalizes on the emergence of component technology. The paper discusses the role of the architecture in providing a framework for applying UML in the practical contexts of business process improvement and the need to leverage existing software and models. The need for an iterative and incremental delivery process is a well established theme of object-orientation (Booch, 1993). This paper is mainly concerned with the equally important, but less well-understood, need to employ an architectural cycle across projects. A simplified scenario is used to examine the role that different UML modeling techniques play throughout the process, to show how the architecture helps shape UML techniques, and to focus on some of the key issues and pitfalls that typically confront the developer. © Springer-Verlag Berlin Heidelberg 1999.		Allen, P.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		1999				
457		ModelGuidance	An MDA approach to develop web components	Model-Driven Development (MDD) supports the automating of code generation by performing a set of transfomations between models. This approach is currently been applied to specific domains and in particular in the web domain, and this is because web aplications have evolved with the appearance of AJAX and Web 2.0 technology, and a new breed of applications for the Internet has emerged. However, as web applications become more and more complex, the performance degree is negatively affected, since the initial stages of software life cycle are not incorporated into the development process of this type of applications. In order to solve this problem, this paper proposes a model-driven architecture to support web application development from the design to the implementation model. With this objective, the following tasks have been performed: first a new profile extends UML with new concepts from the web domain, next a new framework supports web application development by composing web components, and finally, a transformation model generates web applications from the UML extension proposed. The main contributions of this work is a cost and complexity reduction of web applications, and a high reusability degree achieved, since web components can be reused in different web applications. © 2013 Springer-Verlag.		Herrero Agustin, J.L.; Carmona, P.; Lucio, F.	Advances in Intelligent Systems and Computing					Excluded	Excluded	new_screen			2		2013				
458		ModelGuidance	Integrating Z in DEVS: A case study lift control system	We present a case study to illustrate the usefulness of formal methods (FM) for improving Verification and Validation processes (V&V) of Discrete EVent Specification (DEVS). The formalisms employed is Z. Although DEVS is well-established Modeling and Simulation (M&S) framework, DEVS models lack the possibility to be verified formally by developing rigorous proofs of their properties. Integrating FM in DEVS, will cover this lack. In fact, it will permit to check consistency of DEVS models with formal specification and theorem proving techniques. The case study employed is a lift control system. We present a model for the system described by the DEVS formalism. In addition, we formalized required safety properties for the system with a predicate logic assertion, we specified the model with Z and formally verified that the behavior of the control conforms the safety requirement.		Trojet, M.W.; Hamri, M.E.-A.; Frydman, C.	Proceedings of the 2008 International Conference on Software Engineering Research and Practice, SERP 2008					Excluded	Excluded	new_screen			2		2008				
459		ModelGuidance	An efficient design model validation for the quality software development	Models are the main artifacts of the software development process which generally follows a model-based paradigm. Business process models and data models play an important role in building information systems and to represent the perspective on business knowledge and close depended on relations, which is important to be validated to maintain the fault free and quality software development. Therefore, the design relevant models are acts as the blueprints for the quality assurance in software development. In this paper, we propose an efficient design model validation (DMV) supported utilizing the prescribed “specification language” for the proclaiming construction of transformation attributes based on the invariants, pre and post-conditions for generating partial functions used can be transformed for testing evaluation. We broaden the utilize of specification languages for automatic creation of input test models. We also used the prototypes of the Eclipse plug-in to provide specifications and calculations of metrics in related to models supported by the Eclipse Modeling Framework. © 2005 – ongoing JATIT & LLS.		Narendhar, M.; Anuradha, K.	Journal of Theoretical and Applied Information Technology					Excluded	Excluded	new_screen			2		2017				
460		ModelGuidance	Integration of data validation and user interface concerns in a DSL for web applications	Data validation rules constitute the constraints that data input and processing must adhere to in addition to the structural constraints imposed by a data model. Web modeling tools do not make all types of data validation explicit in their models, hampering full code generation and model expressivity. Web application frameworks do not offer a consistent interface for data validation. In this paper, we present a solution for the integration of declarative data validation rules with user interface models in the domain of web applications, unifying syntax, mechanisms for error handling, and semantics of validation checks, and covering value well-formedness, data invariants, input assertions, and action assertions. We have implemented the approach in WebDSL, a domain-specific language for the definition of web applications. © 2010 The Author(s).		Groenewegen, D.M.; Visser, E.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2013				
461		ModelGuidance	A lightweight approach for model-driven service-oriented modeling: from CIM to PSM	Currently, Service-Oriented Architecture and Model-Driven Architecture are two hot paradigms in developing information systems and software. This paper proposes a lightweight approach for service-oriented system development based on MDA philosophy. The method suggest to model the domain with a domain specific modeling language and then map the domain model to platform independent model which is built with UML. The platform independent model can be transformed to platform specific models described by OWL-S and WS-BPEL. A domain ontology is defined to provide domain knowledge for semantic annotation through the whole process. An instance is provided to illustrate the approach, including the modeling and transforming models from CIM to PSM. This method offers an effective and agile way to develop applications in heterogeneous and dynamic environments. © 2011 Binary Information Press December, 2011.		Zhang, Y.; Liu, X.; Wang, Z.; Chen, L.	Journal of Computational Information Systems					Excluded	Excluded	new_screen			2		2011				
462		ModelGuidance	Modeling Access Control Requirements in Feature Model	Access control requirements (ACRs) are software requirements about limiting privileges of users from accessing sensitive software resources. ACRs often interact with functional requirements (FRs), conform to an access control model, are constrained by authorization constraints of organizations, and change frequently. Current requirements modeling technologies, such as use case modeling approaches, object-oriented analysis, and feature-oriented approaches, are initially designed to model FRs, and cannot explicitly and efficiently model the ACRs. In real world, it is still very difficult for the developers to model and evolve the complex and changeful ACRs of large-scale software applications while ensuring the consistency between ACRs and FRs. This paper analyzes the challenges of modeling ACRs, presents a feature-based approach to modeling the ACRs to overcome them, and illustrates the approach in an online store application.		L. Sun; G. Huang	2009 16th Asia-Pacific Software Engineering Conference					Excluded	Excluded	new_screen			2		2009				
463		ModelGuidance	An architecture modeling method for supporting reliability-based risk analysis of ship command and control systems	Architectural level reliability-based risk analysis is important for finding risky components during the early stage of developing Ship Command and Control Systems (SCCSs). Therefore, an Architecture Modeling Method (AMM) for supporting reliability-based risk analysis of SCCSs is needed. In previous studies, a generic framework was proposed to derive AMMs for large-scale software-intensive systems. The framework has been applied to derive an AMM (named as SAMM) for supporting architecture description during the development process of SCCSs. In this study, based on the framework, an AMM is defined to support reliability-based risk analysis of SCCSs by extending SAMM, named as SAMM4RRA. SAMM4RRA contains one architecture viewpoint and 11 models and an UML/SysML-based architecture description language. An industrial application of SAMM4RRA, along with the subsequent application of the derived SAMM4RRA architecture model (i.e., a deployed SCCS prototype) was conducted to evaluate SAMM4RRA. Results show that SAMM4RRA meets all the requirements for describing the architecture of SCCSs with the purpose of supporting reliability-based risk analysis. © 2013 Asian Network for Scientific Information.		Fan, Z.; Zhang, L.	Information Technology Journal					Excluded	Excluded	new_screen			2		2013				
464		ModelGuidance	Composing models at two modeling levels to capture heterogeneous concerns in requirements	"Requirements specification is initially scattered in numerous partial models (viewpoints), describing heterogeneous concerns (typically functional and non-functional ones). To define these concerns, requirements analysts prefer describing them separately with metamodels so that they can be properly identified, reused and tooled. The production of one unified view of requirements from separate viewpoints is a complex issue which requires a composition process working at two levels of modeling. At the meta-level, separate ""of-the-shelf"" metamodels allow defining either concerns or variation in the operational semantics. These metamodels have to be composed into a core metamodel, which captures the information and semantics needed for expressing and analyzing the requirements of a dedicated application domain (e.g. real-time critical systems, telecom services). At the instance-level, viewpoints are composed to produce a global requirements model, which has to be conformant with the core metamodel. Although the same composition mechanism is used for both levels, we emphasize in this paper the strong coupling between the two steps and the difficulty to make both compositions consistent with each other. We thus propose a process for dealing with two-level of composition. The process is illustrated in the context of a platform specialized for requirements analysis purposes. © 2010 Springer-Verlag."		Brottier, E.; Le Traon, Y.; Nicolas, B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2010				
465		ModelGuidance	Architectural model for designing agent-based system	Abstract. Multi-agent systems are increasingly being used to model and control complex domains. There is a lack of system architecture methods and tools to manage the scale and complexity of Multi-Agent systems. This paper proposes an architecting process and toolkit support to rapidly prototype an agent-based system by selecting agent technology components in the context of a given high level reference architecture and associated requirements. The paper also proposes an architectural process for constructing a deployment-based system by iteratively evaluating and determining if the requirements of the agent technologies are satisfied by the site at which the architecture will be deployed. The system is evaluated based on adherence to infrastructure constraints such as the ability of technologies to integrate and interoperate with one another and their ability to deploy at specific sites. Under this research toolkits were developed which help to construct and deploy prototype models of the multi-agent system.		Gujral, N.; Ahn, J.; Suzanne Barber, K.	17th International Conference on Software Engineering and Knowledge Engineering, SEKE 2005					Excluded	Excluded	new_screen			2		2005				
466		ModelGuidance	A framework of model-driven web application testing	Web applications have become complex and crucial in many fields. In order to assure their quality, a high demand for systematic methodologies of Web application testing is emerging. In this paper, a methodology of Model-Driven Testing (MDT) for Web application is presented. Model is the core of this method. Web application model is built to describe the system under testing. Test case models are generated based-on the web application model. Test deployment model and test control model are designed to describe the environment and process of test execution. The test engine executes test cases based-on the test deployment and control model automatically. After that, testing results are reflected to test case models. A framework is designed for supporting this methodology. In order to get better extensibility and flexibility, it is loose-coupled by a modeler and a tester. The modeler enables developers to design meta-models, and is responsible for creating, visualizing and saving models. The tester takes in charge of recovering the tested Web application model, generating test cases, and executing test. © 2006 IEEE.		Li, N.; Ma, Q.-Q.; Wu, J.; Jin, M.-Z.; Liu, C.	Proceedings - International Computer Software and Applications Conference					Excluded	Excluded	new_screen			2		2006				
467		ModelGuidance	Formal behavioral modeling and compliance analysis for Service-oriented systems	In this paper, we present a framework for formal modeling and verification of service-based business processes with focus on their compliance to external regulations such as Segregation of Duties (SoD) or privacy protection policies. In our framework, control/data flow is modeled using the exogenous coordination language Reo. Reo process models are designed from scratch or (semi-)automatically obtained from BPMN, UML or WS-BPEL specifications. Constraint automata (CA), a semantic model for Reo, provide state-based representations of process workflows and enable their verification by means of model checking technology. Various extensions of CA make it possible to analyze time-, resource- and Quality-of-Service (QoS) process models. © 2009 Springer Berlin Heidelberg.		Kokash, N.; Arbab, F.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
468		ModelGuidance	Designing serious games for learning support in medicine studies: A specific method to elicit and formalize requirements	In Spain, the new Medicine degrees of the European Higher Education Area (EHEA) have incorporated Information Technologies (IT) subjects to develop horizontal competences in their curriculum. Medicine Studies are costly for Higher Education (HE) institutions and, then, every cost-effective educational innovation is welcomed. There are different general approaches for designing and developing serious games in general, but specific target disciplines as Medicine (educational and professional training), lack of tailor-made methodologies, even in eliciting requirements under the Requirements Engineering (RE) framework, as a subfield of Software Engineering. In medical higher education, the main objective of using games is to engage learners in complex problem spaces that replicate real world situations, as it happens in hospital emergencies, surgery operations and so on, without the constraints and risks of the day to day practice (patient injuries, health complications and death). Therefore, the development of serious HE games is a complex, time consuming and costly process, especially for learning medical skills. In this Work in Progress, we address the problem of lacking suitable methodologies in the design and development processes of educational serious games for HE medical environments. Our proposal is a semi-formal and simple method to elicit and formalize the specific teaching needs identified in subjects or practices of Medicine degrees, in order to design and develop serious games based on sound educational principles and theories and on RE rules.		O. Colteli; X. Grandi; R. Tosca; P. Latorre; J. S. Sánchez; L. V. Lizán; F. Ros-Bernal; C. Martínez-Cadenas	2014 IEEE Frontiers in Education Conference (FIE) Proceedings					Excluded	Excluded	new_screen			2		2014				
469		ModelGuidance	From UML Modeling to UPPAAL Model checking of 5G Dynamic Service Orchestration	The new 5G technology has the ability to create logical communication networks, called network slices, which are specifically carved to serve particular application domains. Due to the mix of applications criticality, it becomes crucial to verify if the applications' service level agreements are met, especially for the mission-critical scenarios, before the system is up and running. In this paper, we propose a novel framework for modeling and verifying 5G orchestration of dynamic services, which considers simultaneous access of network slices, admission of new requests to slices, virtual network function scheduling, and routing. Due to the dynamic nature of the problem such verification becomes a challenging issue. By combining the benefits of modeling in user-friendly UML, with model checking using UPPAAL, our framework helps to address the issue by enabling both modeling and formal verification at design stage. We demonstrate our approach on a case study that involves: (i) a mission-critical 5G-assisted robot surgery e-health application, accomplished by using a health slice that is simultaneously accessed by various health professionals using a 5G-enabled camera, and (ii) a less critical video streaming application using a video slice, accessed via various 5G-enabled mobile phones, within the same area as the robotic application. By employing our approach, one can verify that the critical health application meets its timeliness requirements, but also that all slices are eventually served in the system. © 2021 ACM.		Kunnappilly, A.; Backeman, P.; Seceleanu, C.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2021				
470		ModelGuidance	System Design with Object Oriented Petri Nets Formalism	The actual trend in the research of system design aims at an efficiency and safety of developing processes as well as at the quality of resulted systems. There were investigated and developed many methodologies of system design based on models -- they are known as Model-Based Design. These methodologies use executable semi-formal models allowing for transformations including code generation in selected language. Nevertheless, the further development or debugging by means of prime models is impossible. This paper brings an outline of our approach to Model-Based Design based on the Object Oriented Petri Nets formalism allowing for clear modeling, the possibility to check correctness by simulation techniques as well as by formal verifications. The model is an executable program valid through all development stages including the target application. The paper depicts the basis of the formalism and used techniques.		R. Kocí; V. Janoušek	2008 The Third International Conference on Software Engineering Advances					Excluded	Excluded	new_screen			2		2008				
471		ModelGuidance	Construction and Analysis of Petri Net Model for Distributed Cyber-Physical Systems	A Distributed Cyber-Physical System (DCPS) composition poses challenges in determining its emergent behaviour. These challenges occur due to (1) the appearance of causal loops of information and energy flow through cyber and physical channels and (2) inherent non-determinism in the temporally ordered flow of events within independently evolving interacting processes of Constituent Systems (CSs). Hence, there is a need to construct a model of the envisaged schematic of DCPS composition for analysis and verification of its significant properties in the conceptual design stage of the system development life cycle. This paper presents a procedure to construct DCPS composition models in Petri net formalism using distributed abstractions. The model for each CS is obtained from elementary constructs using compositional operators. The interaction among CSs occurs through channels obtained by connecting send and receive constructs of two CSs participating in an interaction. The internal processing within a CS characterizing its primary function is abstracted in a generic pass-through construct. Representing these constructs with compositional operators results in the complete DCPS model in Petri net formalism. A toolchain with Reference net workshop (Renew) as an integrated Petri net editing and analysis platform is configured to support DCPS modelling, simulation and analysis. The Renew tool functionality has been enhanced with a plugin designed and developed by authors to facilitate the drawing of the distributed composition model. A low-level Petri net analysis (Lola) v2.0 plugin is employed to verify the Petri net and temporal properties of the modelled DCPS scenarios. The properties of the resultant model are verified using well-established algorithms to analyze Petri nets. Further, system properties specified using temporal logic can be verified using model-checking algorithms for Petri nets. A moderately complex scenario involving interactions among six CSs illustrates the presented approach. © 2022, DESIDOC.		Sood, V.; Nema, M.K.; Kumar, R.; Nene, M.J.	Defence Science Journal					Excluded	Excluded	new_screen			2		2022				
472		ModelGuidance	Model-Driven Test Case Design for Model-to-Model Semantics Preservation	Model transformations used in model-driven software development need to be semantics-preserving, i.e., the meaning of a model must not be distorted by the transformation. Testing whether a transformation preserves the dynamic semantics of a model requires oracles such as model checkers, which explore the runtime statespace of models. The high amount of repetitive code to integrate heterogeneous transformation engines and test oracles makes the design of semantics preservation tests a tedious task. In this paper, we apply the approach of model-driven testing to the domain of model transformation. We present a visual domain-specific language for the design of model transformation tests, which reduces test cases to their essential components. Our language enables an immediate execution of test cases with precise validation feedback. We evaluate our approach in terms of a case study based on the MechatronicUML modeling language for the software development of cyber-physical systems.		Gerking, Christopher; Ladleif, Jan; Schäfer, Wilhelm	Proceedings of the 6th International Workshop on Automating Test Case Design, Selection and Evaluation					Excluded	Excluded	new_screen			2		2015				
473		ModelGuidance	Empowering UML application design with task models	This paper describes a practical method to include task modelling into Unified Modeling Language-based (UML-based) software engineering. The reason for this undertaking is increasing awareness of the capability and handiness of task models to picture the functionalities of a system (as awaited by customers), but also the lack of expressive power of UML use case diagrams, when underspecified, to make the functionalities of a system fully understandable to software developers. The described method builds on a task modelling software, a plugin transforming task models into use case diagrams and use case descriptions, and a UML software enabling to display use case diagrams. The plugin puts a set of rules interpreting the content of task models at work, in order to generate an XML file readable by the UML software, and a ready-to-use PDF output containing the use case descriptions. The advantages of this workflow are to enforce the link between the different project stakeholders (customer, architect, developers), to allow for cost-free iterations affecting the requirement scheme, to enable usable incremental modelling and to introduce interface design into the first step of the design process.		H. M. Lam; T. Wettengel; H. T. Thong	ICIMU 2011 : Proceedings of the 5th international Conference on Information Technology & Multimedia					Excluded	Excluded	new_screen			2		2011				
474		ModelGuidance	Formalized entity extraction methodology for changeable business requirements	Without a formal methodology extracting entities from business descriptions, a business requirement in the real world cannot be abstracted correctly into an entity-relationship schema. Once core entities are discovered, we can obtain an Entity-Relationship Diagram (ERD) by inserting relationships between/among the relevant entities and by aggregating some attributes into one of the entities or relationships. There have been so many studies on formal guidelines for extracting entities from business descriptions. Most of them adopt a knowledge-based approach which consults a knowledge base to recommend entity candidates. However, the knowledge-based approach usually fails to construct the most appropriate ERD for a given business domain. The approach performs the entity extraction on the stiff premise that an object would be classified as an entity if it happen to be classified as an entity once or more in past applications. The previous studies did not consider the flexibility in the object classification that even the same object could be regarded as either an entity or an attribute according to the various concerns of field workers. In this paper, we discuss some limitations of the previous researches on object classification and propose a new methodology for flexible entity extraction. To evaluate the practicality of the devised methodology, we developed a tool for the methodology and performed a case study on option trading applications with the tool.		Kim, N.; Lee, S.; Moon, S.	Journal of Information Science and Engineering					Excluded	Excluded	new_screen			2		2008				
475		ModelGuidance	On modeling and satisfaction of non-functional requirements using cloud computing	Specification of the non-functional requirements of applications and determining the required resources for their execution are activities that demand a great deal of technical knowledge, frequently resulting in an inefficient use of resources. Cloud computing is an alternative for provisioning of resources, which can be done using either the provider's own infrastructure or the infrastructure of one or more public clouds, or even a combination of both. It enables more flexibly/elastic use of resources, but does not solve the specification problem. In this paper we present an approach that uses models at runtime to facilitate the specification of non-functional requirements and resources, aiming to facilitate dynamic support for application execution in cloud computing environments with shared resources. © 2013 IEEE.		Gomes, R.; Costa, F.; Bencomo, N.	2nd IEEE Latin American Conference on Cloud Computing and Communications, LatinCloud 2013					Excluded	Excluded	new_screen			2		2013				
476		ModelGuidance	From AADL to timed automaton-A verification approach	The AADL is considered as one of the most powerful language for modeling the embedded systems. In this work, we propose an approach for the verification of the AADL architecture by using of the timed automata formalism. Indeed, the AADL architecture cannot be directly analyzed by model checking. An alternative for achieving that is to use the model driven engineering technology to extract an analysis model so that the properties can be verified using a model checker toolbox. The goal of this effort is to insure some properties of the AADL models using the Uppaal model checker. We show the application of our approach to an example.		Hamdane, M.E.; Chaoui, A.; Strecker, M.	International Journal of Software Engineering and its Applications					Excluded	Excluded	new_screen			2		2013				
477		ModelGuidance	Service-oriented modeling: An ontology-based approach	Service-oriented computing has been obtaining more and more attention recently. Current works mainly concentrate on the service products and the standards to realize service-oriented computing. An important unaddressed problem is service-oriented modeling that is one of the fundamental elements you need to support SOA. This paper proposes an ontology-based approach for service-oriented modeling. This approach introduces hierarchical ontology systems in specific domain, which not only facilitate service reuse, but also facilitate reuse of application templates, collaboration patterns and workflows. This paper also presents an iterative process for service-oriented modeling. © 2007 IEEE.		Wu, B.; Jin, Z.	Proceedings - ICEBE 2007: IEEE International Conference on e-Business Engineering - Workshops: SOAIC 2007; SOSE 2007; SOKM 2007					Excluded	Excluded	new_screen			2		2007				
478		ModelGuidance	Developing a model-driven reengineering approach for migrating PL/SQL triggers to Java: A practical experience	Model-driven software engineering (MDE) techniques are not only useful in forward engineering scenarios, but can also be successfully applied to evolve existing systems. RAD (Rapid Application Development) platforms emerged in the nineties, but the success of modern software technologies motivated that a large number of enterprises tackled the migration of their RAD applications, such as Oracle Forms. Our research group has collaborated with a software company in developing a solution to migrate PL/SQL monolithic code on Forms triggers and program units to Java code separated in several tiers. Our research focused on the model-driven reengineering process applied to develop the migration tool for the conversion of PL/SQL code to Java. Legacy code is represented in form of KDM (KnowledgeDiscovery Metamodel) models. In this paper, we propose a software process to implement a model-driven re-engineering. This process integrates a TDD-like approach to incrementally develop model transformations with three kinds of validations for the generated code. The implementation and validation of the re-engineering approach are explained in detail, as well as the evaluation of some issues related with the application of MDE. (C) 2019 Published by Elsevier Inc.		Fernandez Candel, Carlos Javier; Garcia Molina, Jesus; Bermudez Ruiz, Francisco Javier; Hoyos Barcelo, Jose Ramon; Sevilla Ruiz, Diego; Cuesta Viera, Benito Jose	JOURNAL OF SYSTEMS AND SOFTWARE					Excluded	Excluded	new_screen			2		2019				
479		ModelGuidance	Dynamic non-functional requirements based model-driven agent development	The Belief-Desire-Intention (BDI) agent model is one of the more favoured models used to develop various agents due to both its flexibility and conceptual adaptability. This is mainly with regards to its ability to distinguish between a series of plans through a tailored plan selection function such that the plan most suitable to the current situation is selected. Since BDI agents were first proposed however, their creation process has mainly been entirely functional. This means that in order to properly implement them, specific expertise and knowledge is required. In sight of this, we propose in this paper an entirely model-driven approach based on the Extended Non-Functional Requirements framework. This approach allows agents to be directly derived from an accompanying extended NFR-framework model. The developer therefore only requires knowledge and expertise in this specific framework, which is significantly easier to understand. This derived agent can then select plans from the model's entities with respect to their hierarchy, and influenced by any contributions that they may make; selecting plans which exhibit the highest benefit to the overall system. This model-driven approach is focused on operating within a dynamic environment, which to our knowledge, is the first of its kind. This approach is evaluated experimentally. © 2015 IEEE.		Goncalves, J.; Krishna, A.	Proceedings - 2015 24th Australasian Software Engineering Conference, ASWEC 2015					Excluded	Excluded	new_screen			2		2015				
480		ModelGuidance	Formal model-driven engineering: Generating data and behavioural components	Model-driven engineering is the automatic production of software artefacts from abstract models of structure and functionality. By targeting a specific class of system, it is possible to automate aspects of the development process, using model transformations and code generators that encode domain knowledge and implementation strategies. Using this approach, questions of correctness for a complex, software system may be answered through analysis of abstract models of lower complexity, under the assumption that the transformations and generators employed are themselves correct. This paper shows how formal techniques can be used to establish the correctness of model transformations used in the generation of software components from precise object models. The source language is based upon existing, formal techniques; the target language is the widely-used SQL notation for database programming. Correctness is established by giving comparable, relational semantics to both languages, and checking that the transformations are semantics-preserving. © C.-W. Wang and J. Davies.		Wang, C.-W.; Davies, J.	Electronic Proceedings in Theoretical Computer Science, EPTCS					Excluded	Excluded	new_screen			2		2012				
481		ModelGuidance	Aspect-Oriented Requirements Engineering: A Use Case Based Approach	Aspect oriented software development has shown a new level of modularization at design and implementation level. A technique is presented in this paper for aspect oriented modeling of requirements. An extension is proposed for UML use case relationships that enable the requirements model to capture the crosscutting nature of different software concerns. Using aspect oriented modeling of requirements can lead to better system design. System's understandability and traceability is improved that leads to better design and easier maintenance		H. Sharif; S. Rehan; G. A. Farrukh	2005 Pakistan Section Multitopic Conference					Excluded	Excluded	new_screen			2		2005				
482		ModelGuidance	Model-driven development of graphical tools fujaba meets GMF	In this paper we describe and evaluate our combination of the Fujaba CASE-Tool with the Graphical Modeling Framework (GMF) of the Eclipse IDE. We created an operational model with Fujaba and used it as input for a GMF editor generation process. This allows us to introduce a new approach for generating fully operational models including graphical editors for model representation and transformation. By making our developement process explicit this paper acts as a guide for applying this approach to other projects as well.		Buchmann, T.; Dotor, A.; Westfechtel, B.	ICSOFT 2007 - 2nd International Conference on Software and Data Technologies, Proceedings					Excluded	Excluded	new_screen			2		2007				
483		ModelGuidance	Formal modeling of system properties for simulation-based verification of requirements: Lessons learned	Requirement analysis, modeling and verification are an important part of the development process. There is a strong need for integrating these aspects into a formalized model-driven development process, together with a dedicated methodology as well as effective tool-chains. In this context, the paper presents a Modelica-based implementation of an approach for the formal modeling of system properties and the simulation-based verification of requirements. The tool-chain and the workflow adopted are described. The solution is applied to evaluate different design variants of a trailing-edge high-lift system. Two ways to feed the requirements model are explored: in an early phase, data series are used to evaluate the requirements themselves; then a co-simulation of the requirements model with the 3D-model of the system is used to evaluate and identify what design variants best meet the system requirements. Furthermore, the lessons learned from the experimentation, pros and cons, what needs to be solved about the approach, and the steps that it currently misses are discussed.		Aiello, F.; Garro, A.; Lemmens, Y.; Dutré, S.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2017				
484		ModelGuidance	Towards Integrated IoT-Languages	Internet of things(IoT) is a nascent technology that envisages connecting everything to the Internet and intends to improve people's lives by providing intelligent services ubiquitously. As IoT comprises heterogeneous technology stack it is difficult for developers to describe IoT components for further exploiting on IoT development activities. Model-driven engineering posses required capabilities to describe heterogeneous IoT components, separate stakeholders' concerns and one of the best candidates to handle the IoT development challenges.Therefore, there is a need to develop a set of languages, which models IoT systems from different perspectives and keep those models consistent. This paper intends to describe an integrated multi-viewpoint approach to develop IoT systems.		M. Artikov; J. Meier; A. Winter	2019 International Conference on Information Science and Communications Technologies (ICISCT)					Excluded	Excluded	new_screen			2		2019				
485		ModelGuidance	Towards developing consistent misuse case models	Secure software development should begin at the early stages of the development life cycle. Misuse case modeling is a technique that stems from traditional use case modeling, which facilitates the elicitation and modeling functional security requirements at the requirements phase. Misuse case modeling is an effective vehicle to potentially identify a large subset of these threats. It is therefore crucial to develop high quality misuse case models otherwise end system developed will be vulnerable to security threats. Templates to describe misuse cases are populated with syntax-free natural language content. The inherent ambiguity of syntax-free natural language coupled with the crucial role of misuse case models in development can have a very detrimental effect. This paper proposes a structure that will guide misuse case authors towards developing consistent misuse case models. This paper also presents a process that utilizes this structure to ensure the consistency of misuse case models as they evolve, eliminating potential damages caused by inconsistencies. A tool was developed to provide automation support for the proposed structure and process. The feasibility and application of this approach were demonstrated using two real-world case studies. (C) 2011 Elsevier Inc. All rights reserved.		El-Attar, Mohamed	JOURNAL OF SYSTEMS AND SOFTWARE					Excluded	Excluded	new_screen			2		2012				
486		ModelGuidance	CHESS: An open source methodology and toolset for the development of critical systems	This paper presents the CHESS open source methodology and toolset, aiming to improve MDE practices and technologies to better address safety, reliability, performance, robustness and other non-functional concerns, while guaranteeing correctness of component development and composition for critical embedded systems. Copyright © 2016 held by the author(s).		Mazzini, S.; Favaro, J.; Puri, S.; Baracchi, L.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2016				
487		ModelGuidance	Diagram interchange for UML	XMI is a standardized mechanism for exchanging UML models. However, this mechanism does not sufficiently fulfill the goal of a model interchange: it doesnot include the exchange of diagram information. XMI asdefined for UML 1.x isonly capable of transporting information on the elementsin an UML model but not information as to how these elements are represented and laid out in diagrams. This paper proposes an extension to the UML metamodel to represent diagram information in a graph-oriented manner. The approach presented isable to fix the deficiency for UML 1.x and solve the problem for UML 2.0. The approach washanded in for standardization to the OMG in response to the Diagram Interchange RFP. © Springer-Verlag Berlin Heidelberg 2002.		Boger, M.; Jeckle, M.; Mueller, S.; Fransson, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2002				
488		ModelGuidance	Aspect-oriented requirements engineering with problem frames	Nowadays, the requirements of various stakeholders for a system do not only increase the complexity of the system-to-be, but also contain different cross-cutting concerns. In such a situation, requirements engineers are really challenged to master the complexity and to deliver a coherent and complete description of the system-to-be. Hence, they are in need for methods which reduce the complexity, handle functional and quality requirements, check completeness and reveal interactions, and are tool supported to lower the effort. One possible option to handle the complexity of a system-to-be is the separation of concerns. Both, aspect-oriented requirements engineering and the problem frames approach implement this principle. Therefore, we propose a combination of both, the AORE4PF (Aspect-Oriented Requirements Engineering for Problem Frames) method. AORE4PF provides guidance for classifying requirements, separating the different concerns, modeling requirements for documentation and application of completeness and interaction analyses, and weaving the reusable parts to a complete and coherent system. AORE4PF provides tool support for most activities. We exemplify our method using a smart grid case obtained from the NESSoS project. For validation, the results of a small experiment in the field of crisis management systems are presented. Copyright © 2014 SCITEPRESS - Science and Technology Publications.		Faßbender, S.; Heisel, M.; Meis, R.	ICSOFT-PT 2014 - Proceedings of the 9th International Conference on Software Paradigm Trends					Excluded	Excluded	new_screen			2		2014				
489		ModelGuidance	Designing domain specific languages for verification: First steps	This paper introduces a first approach at developing a design methodology for creating domain specific languages focused towards modelling and verification. The work presented is ongoing. The overall aim of the work is to show how capturing domain specific knowledge, and then tailoring proof goals around this domain specific knowledge, can improve automatic verification results, whilst also providing a graphical domain specific language.		James, P.; Roggenbach, M.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2011				
490		ModelGuidance	Model-driven development with predictable quality	The PACC Starter Kit is an eclipse-based development environment that combines a model-driven development approach with reasoning frameworks that apply performance, safety, and security analyses. These analyses predict runtime behavior based on specifications of component behavior and are accompanied by some measure of confidence.		Ivers, J.; Moreno, G.A.	Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA					Excluded	Excluded	new_screen			2		2007				
491		ModelGuidance	Knowledge acquisition and ontology modelling for construction of a control and monitoring expert system	This paper presents the processes of knowledge acquisition and ontology development for structuring the knowledge based of an expert system. Ontological engineering is a process that facilitates construction of the knowledge base of an intelligent system. Ontology is the study of the organization and classification of knowledge. Ontological engineering in artificial intelligence has the practical goal of constructing frameworks for knowledge that allow computational systems to tackle knowledge-intensive problems and it supports knowledge sharing and reuse. To illustrate the process of conceptual modelling using the Inferential Modelling Technique as a basis for ontology construction, the tool and processes are applied to build an expert system in the domain of monitoring of a petroleum-production facility.		Chan, C.W.; Peng, Y.; Chen, L.-L.	International Journal of Systems Science					Excluded	Excluded	new_screen			2		2002				
492		ModelGuidance	Automated validation of IoT device control programs through domain-specific model generation	The IoT is a networked system of physical devices controlled by embedded software whose validity is a pre-requisite to ensuring the correct behavior of the entire system. To automate the verification and validation process of such control software, this work constructs a validation model by composing pre-defined behavioral patterns of an operating system that is compliant with the OSEK/VDX international standard and models of application programs abstracted w.r.t. interactions with the underlying operating system. This validation model is used to perform property checking using the model checker SPIN to ensure that the behavior of the control program complies with the original intention of the program design. We automated the model generation process and applied it to 9 benchmark programs for the open source IoT OS Erika. © Springer International Publishing AG, part of Springer Nature 2018.		Choi, Y.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2018				
493		ModelGuidance	Research review: Investigating goal-oriented requirements engineering for business processes	Business processes are designed to execute strategies that aim at achieving organisational goals. During the last decade, several methods have been proposed that prescribe the use of goal-oriented requirements engineering techniques for supporting different business process management activities, in particular business process modelling. The integration of goal modelling and business process modelling aims at increasing the alignment between business strategies and the processes with their supporting IT systems. This new research area, which the authors call Goal-Oriented Requirements Engineering for Business Processes (GORE-for-BP), is developing rapidly, but without a clear conceptualization of the focus and scope of the proposed GORE-for-BP methods. Furthermore, an overview is lacking of which methods exist and what their level of maturity is. This paper therefore presents a research review of the GORE-for-BP area, with the aim of identifying relevant methods and assessing their focus, scope, and maturity. This study used Systematic Literature Review and Method Meta-Modelling as research methods to identify and evaluate the state of the GORE-for-BP research area and to propose a research agenda for directing future research in the area. Nineteen methods were identified, which is an indication of an active research area. Although some similarities were found with respect to how goal models are transformed into business process models (or vice-versa), there is also considerable divergence in modelling languages used and the extent of coverage of typical requirements engineering and business process management lifecycle phases. Furthermore, the exploitation of requirements engineering techniques in the full business process management lifecycle is currently under researched. Also, the maturity of the methods found in terms of the formalisation of the transformation activity, the elaboration of method guidelines, and the extent to which methods are validated, can be further improved. Copyright © 2013, IGI Global.		Poels, G.; Decreus, K.; Roelens, B.; Snoeck, M.	Journal of Database Management					Excluded	Excluded	new_screen			2		2013				
494		ModelGuidance	A measure for modelling non-functional requirements using extended use case	In order to describe requirements for the proposed software, use case plays a very significant role. Generally use case models the functional requirements. However, Non-Functional Requirements (NFRs) are often captured only generically at a fairly high level therefore there is vital need to include details regarding NFRs necessary for the proposed software's at initial stages of system development. Modeling NFR with Use Case has been a subject of many research projects in the past but because of great diversity in number and types of NFR it makes use case distracting and hard to read. This paper attempts to propose an aspect oriented approach with new artifacts to model required NFRs associated with a particular use case to improve the modularity and complexity of Use Case. These artifacts are Kernel to represent standard Use Case functionality, Applicability condition to apply constraint and NFRCase to mitigate risk associated with an applicability condition. The proposal is illustrated with an example and metric has been formulated. Result validates that the proposal is compared well with prevalent approaches proposed in past. © 2016 IEEE.		Kaur, H.; Sharma, A.	Proceedings of the 10th INDIACom; 2016 3rd International Conference on Computing for Sustainable Global Development, INDIACom 2016					Excluded	Excluded	new_screen			2		2016				
495		ModelGuidance	Aspect-oriented modeling of technology heterogeneity in microservice architecture	Microservice Architecture (MSA) is a novel approach for the development and deployment of service-based software systems. MSA puts a strong emphasis on loose coupling and high cohesion of services. This increases service-specific independence, which is considered to result in a better scalability, adaptability, and quality of software architectures. Another perceived benefit of adopting MSA is technology heterogeneity. Microservice teams are free to employ the technologies they deem to be most appropriate for service implementation and operation. However, technology heterogeneity increases the number of technologies in a microservice architecture with the risk to introduce technical debt and steeper learning curves for team members. In this paper, we present an approach to streamline the usage of different technologies in MSA-based software systems. It employs Aspect-oriented Modeling to make technology decisions in microservice architectures explicit and enable reasoning about them. Therefore, a set of languages for model-driven microservice development is extended with means to define, modularize, and apply MSA technology aspects. The usage and characteristics of our approach are shown and discussed in the context of a case study from the mobility domain. © 2019 IEEE.		Rademacher, F.; Sachweh, S.; Zundorf, A.	Proceedings - 2019 IEEE International Conference on Software Architecture, ICSA 2019					Excluded	Excluded	new_screen			2		2019				
496		ModelGuidance	Experience report: A safety engineering tool supporting error model creation and visualization	In this paper, we present a novel software tool called AVL Safety Extensions which is part of a tool framework for model-based automotive safety engineering. The tool framework supports a tool dependent methodology (TDM) which covers the left-hand V-model phases of ISO 26262-3 and ISO 26262-4 and requires the use of the language SSML (System Safety Modeling Language). The AVL Safety Extensions support safety engineers applying the TDM by creating consistent and complete work products and by simplifying and automating workflow steps. We present the AVL Safety Extensions in the context of the tool framework, the language SSML and the TDM focusing on the AVL Safety Extensions' capabilities for error model creation and visualization supporting safety analysis techniques such as FTA (Fault Tree Analysis) and FMEA (Failure Modes and Effects Analysis). Moreover, we illustrate the applicability of the presented approach using an industrial case study of hybrid electric vehicle development. © 2014 IEEE.		Mader, R.; Obendrauf, R.; Prinz, P.; Griessnig, G.	Proceedings - International Symposium on Software Reliability Engineering, ISSRE					Excluded	Excluded	new_screen			2		2014				
497		ModelGuidance	Consistency checking of re-engineered UML class diagrams via datalog+/-	UML class diagrams (UCDs) are a widely adopted formalism for modeling the intensional structure of a software system. Although UCDs are typically guiding the implementation of a system, it is common in practice that developers need to recover the class diagram from an implemented system. This process is known as reverse engineering. A fundamental property of reverse engineered (or simply re-engineered) UCDs is consistency, showing that the system is realizable in practice. In this work, we investigate the consistency of re-engineered UCDs, and we show is pspace-complete. The upper bound is obtained by exploiting algorithmic techniques developed for conjunctive query answering under guarded Datalog+/-, that is, a key member of the Datalog+/- family of KR languages, while the lower bound is obtained by simulating the behavior of a polynomial space Turing machine. © Springer International Publishing Switzerland 2015.		Gottlob, G.; Orsi, G.; Pieris, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2015				
498		ModelGuidance	An Algorithmic Approach for Generating Behavioral UML Models Using Natural Language Processing	The process of transformation from informal requirements stated in natural language into a formal specification such as Unified Modeling Language (UML) is an important challenge. User requirements that are expressed in natural language can be very problematic, which makes the requirements analysis a difficult task. In this paper, we propose a method to analyze the natural language requirements and generate sequence and collaboration diagrams from these requirements, which are commonly used to describe the behavior of software systems. A case study was accomplished to compare the diagrams generated by the proposed approach to the diagrams produced by other approaches. The results showed that the elements of the sequence and collaboration diagrams extracted through our approach are very satisfactory and they would be acceptable as initial analysis models. © 2021 ACM.		Abdelnabi, E.A.; Maatuk, A.M.; Abdelaziz, T.M.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2021				
499		ModelGuidance	Conceptual modelling and the quality of ontologies: A comparison between object-role modelling and the object paradigm	Ontologies are key enablers for sharing precise and machine-understandable semantics among different applications and parties. Yet, for ontologies to meet these expectations, their quality must be of a good standard. The quality of an ontology is strongly based on the design method employed. This paper addresses the design problems related to the modelling of ontologies, with specific concentration on the issues related to the quality of the conceptualisations produced. The paper aims to demonstrate the impact of the modelling paradigm adopted on the quality of ontological models and, consequently, the potential impact that such a decision can have in relation to the development of software applications. To this aim, an ontology that is conceptualised based on the Object Role Modelling (ORM) approach is re-engineered into a one modelled on the basis of the Object Paradigm (OP). Next, the two ontologies are analytically compared using the specified criteria. The conducted comparison highlights that using the OP for ontology conceptualisation can provide more expressive, reusable, objective and temporal ontologies than those conceptualised on the basis of the ORM approach.		Al Asswad, M.M.; Al-Debei, M.M.; De Cesare, S.; Lycett, M.	18th European Conference on Information Systems, ECIS 2010					Excluded	Excluded	new_screen			2		2010				
500		ModelGuidance	Qualifying use case diagram associations	Object-oriented software engineering methodology defines systems requirements in the form of flow-oriented use cases. According to the OOSE approach, use cases should play a major role throughout the development process. Use cases have five key stakeholders: customers, systems and business analysts, systems architects and developers, software testing and quality assurance engineers, and project managers. Given these stakeholders' broad interests, the use case approach presents obvious challenges. The technique must provide information to a diverse group of people at different project phases. It must also describe the problem domain, the systems requirements, and customer expectations correctly and completely. The authors propose that conceptual use case diagrams can be created by considering the domain model and drawing upon the subject matter experts' critical analysis.		Dedeke, AN; Lieberman, B	COMPUTER					Excluded	Excluded	new_screen			2		2006				
501		ModelGuidance	Supporting agent-based distributed software development through modeling and simulation	In today's software engineering environment, it is becoming increasingly commonplace for team members and stakeholders to be distributed in multiple locations and time zones. Under these circumstances, the coordination of software development activities becomes increasingly more complex. One solution uses mobile agent-based tools to support collaborative software engineering tasks, such as requirements management. Despite the fact that development and validation of such tools would be facilitated by the use of modeling and simulation, very little work relating formal methods to agent-based system development has been performed. This paper therefore presents a hierarchical colored Petri Net (CPN) model as a formal framework for agent-based distributed software development, and demonstrates its usefulness by applying the framework to the development of a requirements management system. © 2003 IEEE.		Cai, L.; Chang, C.K.; Cleland-Huang, J.	Proceedings of the IEEE Computer Society Workshop on Future Trends of Distributed Computing Systems					Included	Excluded	new_screen			2		2003				
502		ModelGuidance	Supporting the linked data approach to maintain coherence across rich EMF models	In many development environments, Model-Driven Engineering (MDE) may well be limited to parts of the complete product development process due to the lack of interoperability mechanisms that connect the product data across the model-based engineering tools being used. This is especially the case if the tools are not designed to work tightly together, and/or if they do not share a common technological basis. In this paper, we investigate the use of the OASIS OSLC interoperability standard to facilitate the integration of models from different languages into a single coherent view. We evaluate a fully-automated code generator that provides OSLC interfaces for EMF-based modelling tools, allowing the exposure of modelling elements from any rich modelling language. We argue that such a generator is a critical component for reducing the cost of providing rich and specialized tool interfaces, generally needed when integrating modelling tools. The study is based on a case study that addresses the development process – and the corresponding integrated software engineering environment - at Volvo Trucks used when developing a new electronic architecture including heavy vehicle functions. © Springer International Publishing Switzerland 2016.		El-Khoury, J.; Ekelin, C.; Ekholm, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2016				
503		ModelGuidance	Model-based security risk analysis for networked embedded systems	Finding a balance between functional and non-functional requirements and resources in embedded systems has always been a challenge. What brings this challenge into a sharper focus is that embedded devices are increasingly deployed in many networked applications, some of which will form the backbone of the critical information infrastructures on which we all depend. The Security-Enhanced Embedded system Development (SEED) process has proposed a set of tools that a bridge the two islands of expertise, the engineers specialised in embedded systems development and the security experts. This paper identifies a gap in the tool chain that links the identification of assets to be protected to the associated security risks seen from different stakeholder perspectives. The needed tool support for systematic prioritisation of identified assets, and the selection of security building blocks at design stage based on a risk picture of different stakeholders, are characterised. The ideas are illustrated in a smart metering infrastructure scenario. © Springer International Publishing Switzerland 2016.		Vasilevskaya, M.; Nadjm-Tehrani, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2016				
504		ModelGuidance	Novel approach to establish model-based development and virtual commissioning in practice	Due to several challenges such as faster development cycles or growing customer demands, the engineering of machines and plants is becoming increasingly complex. Methods such as model-based development and virtual commissioning (i.e. an early commissioning of plant control by means of virtual machine models) are known in theory, academia and industry. These methods can significantly contribute to face time, quality and cost challenges within the development of machines and plants. However, the application and implementation of these methods and related tools are a major task. One challenge is the integration of several models in various description languages. In addition, the usage often fails because of a lack of willingness and knowledge. In addition, innovative methods also require new work- and data flows in the respective enterprises. Therefore, the challenge is to cope with historically grown structures. For this reason, this paper proposes an approach to address the challenge of introducing model-based development and virtual commissioning in enterprises in the field of machinery and plant engineering. After presenting a novel three-step methodology to introduce these methods, the theoretical implementation of virtual commissioning is described in detail. Afterwards, an industrial application example with explanation of the realization of virtual commissioning is presented and critically discussed. Finally, a summary with results and benefits and an insight to future research aspects with regard to the design of cyber-physical system and related topics is given. © 2018, Springer-Verlag London Ltd., part of Springer Nature.		Ahrens, M.; Richter, C.; Hehenberger, P.; Reinhart, G.	Engineering with Computers					Excluded	Excluded	new_screen			2		2019				
505		ModelGuidance	Towards a tracing framework for Model-Driven software systems	Understanding software behavior by analyzing its execution traces is an important enabler for many software engineering tasks. In Model-Driven Development (MDD), dynamic analysis methods are often used to analyze executable models to enable the understanding of software behavior in early stages of the development process. An execution trace of a model can provide information to help reason about executable models. However, understanding an execution trace is not an easy task due to the size and complexity of typical traces. In this work, we aim at tackling this problem by proposing a model tracing framework, comprising compaction techniques to simplify the analysis of large traces at a higher level of abstraction, and a model tracing language, to capture run-time behavior of the executed model adequately. © 2016 IEEE.		Hojaji, F.; Zamani, B.; Hamou-Lhadj, A.	2016 6th International Conference on Computer and Knowledge Engineering, ICCKE 2016					Excluded	Excluded	new_screen			2		2016				
506		ModelGuidance	A model-based approach for reliability assessment in component-based systems	This paper describes a formal framework for reliability assessment of component-based systems with respect to specific missions. A mission comprises of different timed mission stages, with each stage requiring a number of highlevel functions. The work presented here describes a modeling language to capture the functional decomposition and missions of a system. The components and their alternatives are mapped to basic functions which are used to implement the system-level functions. Our contribution is the extraction of mission-specific reliability block diagram from these high-level models of component assemblies. This is then used to compute the mission reliability using reliability information of components. This framework can be used for real-time monitoring of system performance where reliability of the mission is computed over time as the mission is in progress. Other quantities of interest such as mission feasibility, function availability can also be computed using this framework. Mission feasibility answers the question whether the mission can be accomplished given the current state of components in the system and function availability provides information if the function is available in the future given the current state of the system. The software used in this framework includes Generic Modeling Environment (GME) and Python. GME is used for modeling the system and Python for reliability computations. The proposed methodology is demonstrated using a radio-controlled (RC) car in carrying out a simple surveillance mission.		Nannapaneni, S.; Dubey, A.; Abdelwahed, S.; Mahadevan, S.; Neema, S.	PHM 2014 - Proceedings of the Annual Conference of the Prognostics and Health Management Society 2014					Excluded	Excluded	new_screen			2		2014				
507		ModelGuidance	Model-Driven Engineering of Monitoring Application for Sensors and Actuators Networks	Cyber-Physical Systems (CPSs) encompass both Information Infrastructures and networks of physical devices. Applications for monitoring them are usually implemented after the physical systems that they have to monitor: the CPS has to be running in order to monitor it. Monitoring applications define communications between the elements of those systems, and are compliant with their designs. Such applications can be complicated to develop, maintain and evolve, especially if the physical system changes. This paper brings an approach for engineering CPS monitoring applications, relying on model-driven techniques for generating a platform using the MQTT communication protocol for monitoring the CPS. First, it provides a meta-model for modeling sensors and actuators networks. Second, it introduces EMIT a monitoring platform for sensors and actuators networks. Third, it presents a transformation from models of sensors and actuators networks to automatically generate Emit monitoring configuration. We illustrate our approach on a case study and discuss its limitations and improvement points. © 2020 IEEE.		La Fosse, T.B.; Cheng, Z.; Rocheteau, J.; Mottu, J.-M.	Proceedings - 46th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2020					Excluded	Excluded	new_screen			2		2020				
508		ModelGuidance	A modeling profile for availability analysis of composite cloud services	Service Oriented Architectures and service-centric models arose in the last years as a standard de-facto in IT enterprises for offering practically any kind of services to users world-wide. Heterogeneity (of operating systems, programming languages, software and hardware infrastructures etc.) and transparency (for users) are the key issues of the actual trends in developing and providing services. In particular Cloud-based models provide means for realizing and distributing everything-as-a-service, including infrastructures, hardware and software platforms and services. Even if at the moment Service-centric models and technologies are mature in the IT scenario, Composition, analysis and validation of Cloud services is an open research challenge. In this work we describe a methodology based on Multi-Agent Models which allows for description, composition and verification of requirements of Cloud-based services. The methodology uses a modeling profile able to describe services as agents in a multi-agent environment and it is based on Model Driven Engineering (MDE) techniques. The proposed methodology includes a verification process for requirements that exploits formal methods during the whole life cycle of services. An example of the application of the proposed techniques will be reported also. © 2014 IEEE.		Amato, F.; Moscato, F.	Proceedings - 2014 9th International Conference on P2P, Parallel, Grid, Cloud and Internet Computing, 3PGCIC 2014					Included	Excluded	new_screen			2		2014				
509		ModelGuidance	Value-Based Dynamic Composition of Web Services	Dynamic composition of Web services encounters many challenges including selecting qualified services, composing services dynamically, and assuring quality of services. This article proposes a value model and its representation language, VSDL (value-based service description language), of Web services, and an architecture of value-added service broker of dynamically composing Web services based on the value model. The value model defines a common model of diverse quality aspects of Web services. We also propose a value meta-model representing relationships among values. The value-added service broker provides value-based service selection, composition and assurance of services. To specify service interfaces with values, the VSDL extends the service interface descriptions of WSDL with the value model. Based on the VSDL, the value-added service broker generates process of composing services and generates WS-BPEL codes for composition. We implemented a prototype of value-added service broker and demonstrated the effusiveness with a case study using three dictionary services.		K. Nakamura; M. Aoyama	2006 13th Asia Pacific Software Engineering Conference (APSEC'06)					Excluded	Excluded	new_screen			2		2006				
510		ModelGuidance	Software Architecture in Model Driven Architecture	The development of software architecture is complex due to the absence of a standard way that would lead the generation of software architecture artifacts. This paper proposes a method that would allow to derive the software architecture of any system based on its analysis model. For that purpose, we introduce a new layer to the model driven architecture (MDA) that takes into account the software architecture. The analysis model is termed the architecture independant model (AIM), which is compliant to the UML 2.0 metamodel. In addition, we consider the software architecture in the architecture specific model (ASM), which complies to the defined architectural metamodel. The mapping of AIM into ASM is conducted by using the both metamodels.		N. Elleuch; A. Khalfallah; S. B. Ahmed	2007 International Symposium on Computational Intelligence and Intelligent Informatics					Excluded	Excluded	new_screen			2		2007				
511		ModelGuidance	Towards a Process for Architectural Modelling in Agile Software Development	Agile methods and architectural modelling have been considered to be mutually exclusive. On the one hand, agile methods try to reduce overheads by avoiding activities that do not directly contribute to the immediate needs of the current project. This often leads to bad cross-project reuse. On the other hand, architectural modelling is considered a pre requisite for the systematic cross-project reuse and for the resulting increase in software developer productivity. The theme of this paper is to address the relationship between agile methods and architectural modelling and to propose a novel process for agile architectural modelling, which drives requirements elicitation through the use of patterns and components. This process is in-line with agile principles and is illustrated on an example application. Additionally, the paper points out the challenges connected to the process validation and proposes an approach for the empirical validation addressing these challenges.		Durdik, Zoya	Proceedings of the Joint ACM SIGSOFT Conference – QoSA and ACM SIGSOFT Symposium – ISARCS on Quality of Software Architectures – QoSA and Architecting Critical Systems – ISARCS					Excluded	Excluded	new_screen			2		2011				
512		ModelGuidance	What Petri Nets Oblige Us to Say Comparing Approaches for Behavior Composition	We identify and demonstrate a weakness of Petri Nets (PN) in specifying composite behavior of reactive systems. Specifically, we show how, when specifying multiple requirements in one PN model, modelers are obliged to specify mechanisms for combining these requirements. This yields, in many cases, over-specification and incorrect models. We demonstrate how some execution paths are missed, and some are generated unintentionally. To support this claim, we analyze PN models from the literature, identify the combination mechanisms, and demonstrate their effect on the correctness of the model. To address this problem, we propose to model the system behavior using behavioral programming (BP), a software development and modeling paradigm designed for seamless integration of independent requirements. Specifically, we demonstrate how the semantics of BP, which define how to interweave scenarios into a single model, allow for avoiding the over-specification. Additionally, while BP maintains the same mathematical properties as PN, it provides means for changing the model dynamically, thus increasing the agility of the specification. We compare BP and PN in quantitative and qualitative measures by analyzing the models, their generated execution paths, and the specification process. Finally, while BP is supported by tools that allow for applying formal methods and reasoning techniques to the model, it lacks the legacy of PN tools and algorithms. To address this issue, we propose semantics and a tool for translating BP models to PN and vice versa. Author		Elyasaf, A.; Yaacov, T.; Weiss, G.	IEEE Transactions on Software Engineering					Excluded	Excluded	new_screen			2		2022				
513		ModelGuidance	Utilizing User Interface Models for Automated Instantiation and Execution of System Tests	Scripts for automated system tests often contain technical knowledge about the user interface (UI). This makes test scripts brittle and hard to maintain which leads to high maintenance costs. As a consequence, automation of system tests is often abandoned.We present a model-driven approach that separates UI knowledge from test scripts. Tests are defined on a higher level, abstracting from UI usage. During test instantiation, abstract tests are enriched with UI information and executed against the system. We demonstrate the application of our approach to graphical UIs (GUIs) such as rich clients and web applications. To show the feasibility, we present a prototypical implementation testing the open-source application Bugzilla.		Hauptmann, Benedikt; Junker, Maximilian	Proceedings of the First International Workshop on End-to-End Test Script Engineering					Excluded	Excluded	new_screen			2		2011				
514		ModelGuidance	Semantics weaving in aspects modeling for mobile software	A semantic weaving approach of aspect-oriented approach for context modeling for mobile embedded software is proposed in this paper. It includes an aspect-oriented modeling process, notations extended from Unified Modeling Language (UML) of structural and behavioral perspectives, as well as the semantic weaving mechanism. In this paper, aspects modeling process is provided to separate the concerns of the mobile software and extended notations with the meta-model framework are depicted in the class diagram and sequence diagram to facilitate aspects modeling of structural and behavioral perspectives. Furthermore, a pointcut model consisting of structural and behavioral model is provided to describe the relationship between base and aspect models, and semantic weaving rules extended from trace-based semantics are provided to facilitate the weaving mechanism for the proposed aspect approach. © 2014 American Scientific Publishers All rights reserved.		Jiang, Y.-Y.F.; Huang, W.-J.; Syu, Y.	Advanced Science Letters					Excluded	Excluded	new_screen			2		2014				
515		ModelGuidance	Model transformation product lines	Model transformations enable automation in Model-Driven Engineering (MDE) and are key to its success. The emphasis of MDE on using domain-specific languages has caused a proliferation of meta-models, many of them capturing variants of base languages. In this scenario, developing a transformation for a new meta-model is usually performed manually with no reuse, even if comparable transformations for similar meta-models exist. This is a suboptimal process that precludes a wider adoption of MDE in industry. To improve this situation, we propose applying ideas from software product lines to transformation engineering. Our proposal enables the definition of meta-model product lines to capture the variability within a domain, on top of which transformations can be defined in a modular way. We call this construction transformation product line (TPL), and propose mechanisms for their construction, extension and analysis. TPLs are supported by a tool, Merlin, which is agnostic to the transformation language and lifts analyses based on model finding to the TPL. Finally, we report on an evaluation showing the benefits of building and analysing TPLs compared to building and analysing each individual transformation. © 2018 Association for Computing Machinery.		De Lara, J.; Guerra, E.; Chechik, M.; Salay, R.	Proceedings - 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018					Excluded	Excluded	new_screen			2		2018				
516		ModelGuidance	Generating model with uncertainty by means of JTL	In Model-Driven Engineering, the potential advantages of using bidirectional transformations are largely recognized. Despite its crucial function, in certain cases bidirectionality has somewhat limited success because of the ambivalence concerning non-bijectivity. In fact, consistently propagating changes from one side to the other is typically non univocal as more than one correct solution is admitted. This gives place to a form of uncertainty which means that, rather than having a single model, we actually have a set of possible models but we do not know what is the right one. In this paper, we discuss how dealing with multiple solutions is important and requires specialized tools and support. In particular, handling a set of models explicitly is generally non-viable. Thus, we extended the JTL semantics to generate a model with uncertainty which is semantically equivalent to the set of models it represents. The approach is implemented and a metamodel-independent technique is proposed.		Rosa, G.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2015				
517		ModelGuidance	Actor-Based Methods, Concepts and Tools for Analysing Emergent Behaviour: An Introduction to a Model Based Approach	Effective organizational decision-making often requires deep understanding of various aspects of an organisation such as goals, structure, business-as-usual, operational processes etc. The large size of an organisation, its socio-technical characteristics, and fast business dynamics make this a challenging endeavor. This tutorial presents a model-based simulation approach to organisational decision-making. We introduce a new technology that supports the approach and illustrate how it is applied to real life problems using real world case studies.		Clark, Tony; Kulkarni, Vinay; Barat, Souvik; Barn, Balbir	Proceedings of the 11th Innovations in Software Engineering Conference					Excluded	Excluded	new_screen			2		2018				
518		ModelGuidance	An MDA-based environment for generating access control policies	Identity management and access control are essential in the enterprise IT landscape in order to control access to applications and to fulfil laws or regulations. The global competition of enterprises leads to short development cycles and fast changes of IT applications, which requires also an error-free and quick adaption of its security. The model-driven development of access control policies promises to cope with this situation. This work introduces an mda-based environment for generating access control policies. A comprehensive overview is given on the organisational aspects, describing details of roles, artefacts and tools involved. On this basis the four phases of a model-driven development process for access control policies and their organisational aspects are presented. © 2009 Springer.		Klarl, H.; Marmé, F.; Wolff, C.; Emig, C.; Abeck, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
519		ModelGuidance	Considering context and users in interactive systems analysis	Although the take-up of formal approaches to modelling and reasoning about software has been slow, there has been recent interest and facility in the use of automated reasoning techniques such as model checking [5] on increasingly complex systems. In the case of interactive systems, formal methods can be particularly useful in reasoning about systems that involve complex interactions. These techniques for the analysis of interactive systems typically focus on the device and leave the context of use undocumented. In this paper we look at models that incorporate complexity explicitly, and discuss how they can be used in a formal setting. The paper is concerned particularly with the type of analysis that can be performed with them. © 2008 Springer Berlin Heidelberg.		Campos, J.C.; Harrison, M.D.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2008				
520		ModelGuidance	Use case and user interface patterns for data oriented applications	Use case driven software development starts, in general, with abstract problem domain descriptions of how the users see themselves using the system being developed, and involves a series of iterative refinement steps that incrementally add detail to the use case model, bringing those descriptions to the solution domain. Use cases involve interactions between human actors and the system state. These interactions are held within interaction spaces, which are modeled through a user interface model. Business applications are in general data-driven, comprising a set of typical functions that the users can make on the system. When a use case driven approach is used to develop data-oriented applications those typical functions pop-up as use case patterns, and their interactions occur within a set of user interface patterns. This paper presents a set of use case patterns and the corresponding user interface patterns typically found in data-oriented business applications. For that, a user interface metamodel and corresponding concrete user interface modeling language are also proposed. © Springer International Publishing Switzerland 2015.		da Cruz, A.M.R.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2015				
521		ModelGuidance	Towards the principled design of software engineering diagrams	"Diagrammatic specification, modelling and programming languages are increasingly prevalent in software engineering and, it is often claimed, provide natural representations which permit intuitive reasoning. A desirable goal of software engineering is the rigorous justification of such reasoning, yet many formal accounts of diagrammatic languages confuse or destroy any natural reading of the diagrams; hence they cannot be said to be intuitive. The answer, we feel, is to examine seriously the meaning and accuracy of the terms: ""natural"" and ""intuitive"" in this context. The paper highlights, and illustrates by means of examples taken from industrial practice, an ongoing research theme of the authors. We take a deeper and more cognitively informed consideration of diagrams which leads us to a more natural formal underpinning that permits: (i) the formal justification of informal intuitive arguments, without placing the onus of formality upon the engineer constructing the argument; and (ii) a principled approach to the identification of intuitive (and counter-intuitive) features of diagrammatic languages."		C. Gurr; K. Tourlas	Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium					Excluded	Excluded	new_screen			2		2000				
522		ModelGuidance	Metamodeling and Model Transformations in Modeling and Simulation	Metamodeling and model transformations are the key concepts in Model Driven Development (MDD) approaches as they provide a mechanism for automated development of well structured and maintainable systems. However, neither defining a metamodel nor developing a model transformation is an easy task. In this paper, we provide an overview of metamodeling and model transformations in MDD and discuss about the use of a MDD approach in Modeling and Simulation (M&amp;S). In order to support the development of successful model transformations, we define the criteria for the evaluation of model transformations.		Cetinkaya, Deniz; Verbraeck, Alexander	Proceedings of the Winter Simulation Conference					Excluded	Excluded	new_screen			2		2011				
523		ModelGuidance	Automated analysis of timing information in UML diagrams	This work introduces an approach to adding timing information to UML diagrams for modeling embedded systems. In order to perform automated formal analysis of these UML diagrams with timing information, we extend a previously developed UML formalization framework to provide Promela semantics for the timing elements of the UML diagrams. The paper describes the application of our approach to an electronically controlled steering system obtained from one of our industrial collaborators.		S. Konrad; L. A. Campbell; B. H. C. Cheng	Proceedings. 19th International Conference on Automated Software Engineering, 2004.					Included	Excluded	new_screen			2		2004				
524		ModelGuidance	Incremental verification of architecture specification language for real-time systems	The concept of software architecture has recently emerged as a new way to improve our ability to effectively construct large scale software systems. However, there is no formal architecture specification language available to model and analyze temporal properties of complex real-time systems. In this paper, an object-oriented logic-based architecture specification language for real-time systems is discussed. Representation of the temporal properties and timing constraints, and their integration with the language to model real-time concurrent systems is given. Architecture based specification languages enable the construction of large system architectures and provide a means of testing and validation. In general, checking the timing constraints of real-time systems is done by applying model checking to the constraint expressed as a formula in temporal logic. The complexity of such a formal method depends on the size of the representation of the system. It is possible that this size could increase exponentially when the system consists of several concurrently executing real-time processes. This means that the complexity of the algorithm will be exponential in the number of processes of the system and thus the size of the system becomes a limiting factor. Such a problem has been defined in the literature as “state explosion problem”. We propose a method of incremental verification of architectural specifications for real-time systems. The method has a lower complexity in a sense that it does not work on the whole state space, but only on a subset of it that is relevant to the property to be verified.		Tsai, JJP; Sistla, AP; Sahay, A; Paul, R	INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING					Excluded	Excluded	new_screen			2		1998				
525		ModelGuidance	A code merger to support reverse engineering towards model-driven software development	Model-driven engineering is a promising approach whose feasibility for commercial development is currently being validated. While most approaches discuss forward-engineering steps, only little research has been done on model-driven software migration. More precisely, it is unclear how to transform - or reverse engineer - existing code into generated and hand-crafted artifacts. We present an iterative approach to this problem. Assuming some evolving high-level representations of a software legacy system, code generators may produce a second version of the system to an extend where hand-crafted code is still necessary for completion. In this report we present a code merger that completes the generated code by reusing the implementation of the software legacy system.		Haase, O.; Moll, N.; Zerr, P.	MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development					Excluded	Excluded	new_screen			2		2013				
526		ModelGuidance	Modelling Agile Backlogs as Composable Artifacts to support Developers and Product Owners	The DevOps paradigm combines (agile) software development and IT operations to deliver high-quality software, thanks to a feedback loop where “ops” feed “devs” and vice versa. In this context, a central challenge is to reduce as much as possible the duration of the feedback loop, allowing stakeholders to reduce their time-to-market and release process duration. This paper describes how to model a product backlog (usually expressed as informal user stories in plain text in an agile context) as a queryable graph-based model. This graph is automatically extracted from existing artifacts thanks to natural language processing techniques. Then, developers and product owners can support their iteration planning process by leveraging the model, enacting a short-range impact analysis feedback loop of their planning decisions. The approach considers the iterative and incremental nature of agile methods through the definition of composition operators to incrementally build the models. We have validated this approach on five industrial scenarios, on top of a reference open-source dataset of 22 product backlogs, representing 1, 671 user stories © 2022. Journal of Object Technology.All Rights Reserved.		Mosser, S.; Pulgar, C.; Reinharz, V.	Journal of Object Technology					Excluded	Excluded	new_screen			2		2022				
527		ModelGuidance	Innovation Welcome: An Agile Approach to Model-Based Development of Safety-Critical Embedded Systems	From concept to production, intelligent tools are needed to pave the way for stress-free development of complex automotive embedded systems. While automotive products depend more and more on software as the distinguishing feature to achieve a competitive edge, the addition of software features to the overall system functionality comes at a hefty price. As the development times become shorter and shorter, the simultaneous increase in complexity demands diligent partitioning of the software development tasks and ultimately the collaboration of many multi-disciplinary development teams that work in parallel. This leads to a multitude of independently developed software artifacts, each of which will eventually be required to seamlessly integrate into the overall system architecture. Of course, such a seamless integration can ultimately only be achieved if the artifact development follows a very disciplined, if not rigid, development process. However, the more the process is policed, the more the feature engineers will be required to follow procedure and the less they will be able to exploit their creative potential. This is a conundrum that is hard to solve. Rigid development rules are necessary to ensure functional safety, artifact integrity, and consistency throughout the development process. On the other hand, agile development that facilitates product innovation on a functional level is necessary to gain a competitive edge. The two objectives, if viewed within the context of a traditional software development process, are competing objectives and one typically has to be content with a compromise. But what if there is a way to achieve both objectives simultaneously? What if there is a way to delegate the policing to a suite of intelligent development tools that shelter each feature developer when unleashing his/her creative potential? This presentation describes a new, agile, architecture-centric software development paradigm and a companion tool framework that facilitates stress and error-free software development across all stages of a production software development program that is highly agnostic to the specific business rules of an organization.		J. Mills; R. Turin; J. Mangas; S. Ranville	2018 IEEE International Conference on Software Architecture Companion (ICSA-C)					Excluded	Excluded	new_screen			2		2018				
528		ModelGuidance	Event-B patterns and their tool support	Event-B has given developers the opportunity to construct models of complex systems that are correct-by-construction. However, there is no systematic approach, especially in terms of reuse, which could help with the construction of these models. We introduce the notion of design patterns within the framework of Event-B to shorten this gap. Our approach preserves the correctness of the models, which is critical in formal methods and also reduces the proving effort. Within our approach, an Event-B design pattern is just another model devoted to the formalisation of a typical sub-problem. As a result, we can use patterns to construct a model which can subsequently be used as a pattern to construct a larger model. We also present the interaction between developers and the tool support within the associated RODIN Platform of Event-B. The approach has been applied successfully to some medium-size industrial case studies. © 2010 Springer-Verlag.		Hoang, T.S.; Fürst, A.; Abrial, J.-R.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2013				
529		ModelGuidance	Non-functional requirements analysis modeling for software product lines	In most IT projects, software developers usually pay attention to functional requirements that satisfy business needs of the system. Non-functional requirements (NFR) such as performance, usability, security, etc. are usually handled ad-hoc during the system testing phase, when it is late and costly to fix problems. Due to the importance and criticality of NFR, the author study the problem of modeling NFR for software product lines (SPL), which adds yet an additional dimension of complexity. This paper will survey the software engineering literature, in search of a systematic way to analyze and design NFR, from the perspectives of the concept of commonality and variability of SPL and the characteristics of NFR. Finally, the author proposes a methodology based on the extension of product line UML-based software engineering (PLUS) techniques, for a unified and automated method to model NFR throughout all phases of SPL engineering.		Q. L. Nguyen	2009 ICSE Workshop on Modeling in Software Engineering					Excluded	Excluded	new_screen			2		2009				
530		ModelGuidance	DynaMod project: Dynamic analysis for model-driven software modernization	Our project DynaMod addresses model-driven modernization of software systems. Key characteristics of the envisioned approach are: (1) combining static and dynamic analysis for extracting models of a legacy system's architecture and usage profile; (2) augmenting these models with information that is relevant to the subsequent architecture-based modernization steps; and (3) automatically generating implementation artifacts and test cases based on the information captured in the models. This paper provides an overview of the DynaMod project.		Van Hoorn, A.; Frey, S.; Goerigk, W.; Hasselbring, W.; Knoche, H.; Köster, S.; Krause, H.; Porembski, M.; Stahl, T.; Steinkamp, M.; Wittmüss, N.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2011				
531		ModelGuidance	Generating ontologies through organizational modeling	Ontologies are recognized as important component of information systems supporting business processes within and across organizations. At modeling time, they contribute identifying key elements from business processes; at development time, their structure can be translated automatically into information system's source code; finally, at run time, through queries and reasoning, they provide proper data for decision making. Additionally, ontologies provide the basis for sharing and publishing organizational information through the Semantic Web. However, representing organizational information directly into an ontology requires specialized expertise in the ontology engineering domain, thus, ontologies are not generated using a domain language easily for the organizational domain experts. In this work, we propose the use of specialized organizational modeling techniques as starting point to model the organization, thereby, ensuring the proper definition of the organizational knowledge. Then, a mechanism is provided to automatically transform the organizational knowledge in its corresponding ontological representation. Our proposed approach is based on Model Driven Engineering ideas and it involves: A) the development of an ontology representing the metamodel of two widely used organizational modeling techniques i∗ and Tropos and b) the systematic transformation of i∗ based modeling primitives into instances of the ontology. Copyright © 2013 by Knowledge Systems Institute Graduate School.		Najera, K.; Martinez, A.; Perini, A.; Estrada, H.	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE					Excluded	Excluded	new_screen			2		2013				
532		ModelGuidance	A metamodel for modeling system features and their refinement, constraint and interaction relationships	This paper presents a metamodel for modeling system features and relationships between features. The underlying idea of this metamodel is to employ features as first-class entities in the problem space of software and to improve the customization of software by explicitly specifying both static and dynamic dependencies between system features. In this metamodel, features are organized as hierarchy structures by the refinement relationships, static dependencies between features are specified by the constraint relationships, and dynamic dependencies between features are captured by the interaction relationships. A first-order logic based method is proposed to formalize constraints and to verify constraints and customization. This paper also presents a framework for interaction classification, and an informal mapping between interactions and constraints through constraint semantics. © Springer-Verlag 2006.		Mei, H.; Zhang, W.; Zhao, H.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2006				
533		ModelGuidance	Modeling software architectures with goals in virtual university environment	Recently, the coupling of goal-based and user-centered approaches has resulted in a tremendous impact on the research of software engineering. However, there is no systematic way in the extant approaches to handling the effects of requirements on the structuring of software architectures. As an attempt towards the investigation of the interactions among goals, scenarios, and software architectures, we proposed, in this paper, a goal-driven architecture trade-off analysis method to analyze and construct software architectures in an incremental manner. We also identified criteria for architecture evaluation and verification and explored the possible types of realization of software architectures for goals. The proposed approach is illustrated using the problem domain of virtual university environment. © 2002 Elsevier Science B.V. All rights reserved.		Lee, J.; Hsu, K.-H.	Information and Software Technology					Excluded	Excluded	new_screen			2		2002				
534		ModelGuidance	Matching model-snippets	An important demand in Model-Driven Development is the simple and efficient expression of model patterns. Current approaches tend to distinguish the language they use to express patterns from the one for modelling. Consequently, productivity is reduced by dealing with a distinct new language, and new intermediate steps are introduced in order to support pattern-matching. In this paper we propose a framework for expressing patterns as model-snippets. We present how model-snippets are specified upon concepts in a given domain (meta-model), and how we perform pattern-matching with model-snippets, whatever the meta-model. We also provide an implementation which is well integrated with existing technologies, such as Eclipse Modelling Framework. © Springer-Verlag Berlin Heidelberg 2007.		Ramos, R.; Barais, O.; Jézéquel, J.-M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2007				
535		ModelGuidance	Reusability and modularity of safety specifications for supervisory control	Supervisory control theory, introduced by Ramadge and Wonham, provides a method to synthesize a supervisor that keeps a discrete-event system model inside a previously specified safe state space. In order to apply this technique on physical plants, the user has to provide a model representation of the latter, on the one hand, and of the safety specification on the other hand. This contribution introduces three methods to improve that modeling process and decrease the necessary manual effort by syntactic means. These are hierarchical namespaces for events and automata, automaton templates with abstract roles, and conditional transitions and prohibitions. © 2016 IEEE.		Gobe, F.; Ney, O.; Kowalewski, S.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					Excluded	Excluded	new_screen			2		2016				
536		ModelGuidance	Using Responsibilities for Early Identification of Hot Spots Reused in Frameworks Modeling	This paper illustrates the applicability of a responsibility-driven method for the car racing games domain. The method is a new approach for domain analysis that aims to identify hot spots from a set of concrete examples. Its purpose is to provide the reuse as much software artifacts as possible from the domain concrete examples, thus increasing the consistence at the framework modeling level. The proposed method also has a supporting tool.		S. N. Matos; C. T. Fernandes	2008 32nd Annual IEEE International Computer Software and Applications Conference					ConflictExcluded	Excluded	new_screen			2		2008				
537		ModelGuidance	Model-based development of an automatic train operation component for communication based train control	In recent years, there has been a significant development in the world of conventional and/or urban railway systems. The evolution of technologies is leading to deployment of new signaling and control systems, including the Communication-Based Train Control widespread primarily in metro network. Strengths of this technology are continuous bi-directional communication track to train, so as to provide timely information on the status of the train and the line, but especially the possibility of implementing automatic guidance through the ATO (Automatic Train Operation). ATO manages the running of the train by adjusting traction and braking according to safety limits, but replaces the driver also in other operations such as opening-closing doors or the initialization of the train. In this article, we describe the development of an ATO system by adopting a Model Driven Approach that aims to increase the coherence between the analysis and the implementation phase. The main blocks of the system were modeled with the UML notation, starting from the functional requirements, while to show their behavior were used statecharts. At the end a testing activity was performed for the verification and validation of the whole model in order to demonstrate the properties of consistency, completeness and correctness. © 2014 IEEE.		Di Claudio, M.; Fantechi, A.; Martelli, G.; Menabeni, S.; Nesi, P.	2014 17th IEEE International Conference on Intelligent Transportation Systems, ITSC 2014					Excluded	Excluded	new_screen			2		2014				
538		ModelGuidance	System-level design based on UML/MARTE for FPGA-based embedded real-time systems	This paper discusses an approach to generate VHDL descriptions from high-level specifications, namely UML/MARTE models that include aspect-oriented semantics. Standard UML diagrams describe the handling of functional requirements, whereas crosscutting concerns associated with the non-functional requirements are handled by aspects. UML to-VHDL transformation is performed automatically by a script-based code generation tool named GenERTiCA. For that, mapping rules scripts define how to generate VHDL constructs from model elements, including the implementation of aspects adaptations. The generated VHDL description does not require any manual modification, in order to be fully synthesized onto a FPGA device. Some case studies have been performed to evaluate the proposed approach, including examples of real systems implemented as a FPGA-based embedded system. Obtained results show an improvement in system design in terms of an increase in system performance as well as a better utilization of FPGA reconfigurable resources. Such positive results are related to a better modularization of components achieved by using the proposed high-level approach. These case studies demonstrate the practicability of full translation of platform-independent specifications into VHDL descriptions. © 2016 Springer Science + Business Media New York.		Leite, M.; Wehrmeister, M.A.	Design Automation for Embedded Systems					Excluded	Excluded	new_screen			2		2016				
539		ModelGuidance	Modeling scenario variability as crosscutting mechanisms	Variability management is a common challenge for Software Product Line (SPL) adoption, since developers need suitable mechanisms for specifying and implementing variability that occurs at different SPL artifacts (requirements, design, implementation, and test). In this paper, we present a novel approach for use case scenario variability management, enabling a better separation of concerns between languages used to manage variabilities and languages used to specify use case scenarios. The result is that both representations can be understood and evolved in a separate way. We achieve such a goal by modeling variability management as a crosscutting phenomenon, for the reason that artifacts such as feature models, product configurations, and configuration knowledge crosscut each other with respect to each specific SPL member. After applying our approach to different case studies, we achieved a better feature modularity and scenario cohesion. Copyright 2009 ACM.		Bonifácio, R.; Borba, P.	Proceedings of the 8th ACM International Conference on Aspect-Oriented Software Development, AOSD'09					Excluded	Excluded	new_screen			2		2009				
540		ModelGuidance	Formalizing refactoring by using graph transformation	Refactoring is one of the promising techniques for improving software design by means of behavior-preserving structural transformation, and is widely taken into practice. In particular, it is frequently applied to design models represented with UML such as class diagrams. However, since UML design models includes multiple diagrams which are closely related from various views, to get behavior-preserving property, we should get the other types of design information and should handle with the propagation of the change on a diagram to the other diagrams. For example, to refactor a class diagram, we need behavioral information of methods included in the class and should also refactor diagrams which represent the behavior, such as state diagrams, activity diagrams. In this paper, we introduce refactoring on design models as transformations of a graph described by UML class diagram and action semantics. First, we define basic transformations of design models that preserve the behavior of designed software. and compose them into refactoring operations. We use Object Constraint Language (OCL) to specify when we can apply a refactoring operation. Furthermore we implement our technique on a graph transformation system AGG to support the automation of refactoring, together with evaluation mechanism of OCL expressions. Some illustrations are presented to show its effectiveness. The work is the first step to handle with refactoring on UML design models in integrated way.		Kazato, H; Takaishi, M; Kobayashi, T; Saeki, M	IEICE TRANSACTIONS ON INFORMATION AND SYSTEMS					Excluded	Excluded	new_screen			2		2004				
541		ModelGuidance	Leveraging model-driven monitoring for event-driven business process control	Event-driven business process management can help businesses to monitor and guarantee correct and efficient execution of their business processes. Two examples of this are using events to monitor processes and control execution. However, many companies lack mature, executable process models and rely on legacy software systems to execute processes. Creating a customized event infrastructure in such an environment is a cumbersome task. In previous work we detailed aPro, an architecture for model-driven design and implementation of business process monitoring. This paper describes how to use real-time monitoring data to control business process execution in real-time, extending the model-driven approach.		Koetter, F.; Kochanowski, M.; Kintz, M.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2014				
542		ModelGuidance	Slicing-based techniques for visualizing large metamodels	In model-driven engineering, a model describes an aspect of a system. A model conforms to a metamodel that defines the concepts and relationships of a given domain. Metamodels are thus corner-stones of various meta-modeling activities that require a good understanding of the metamodels or parts of them. Current metamodel editing tools are based on standard visualization and navigation features, such as physical zooms. However, as soon as metamodels become larger, navigating through large metamodels becomes a tedious task that hinders their understanding. In this work, we promote the use of model slicing techniques to build visualization techniques dedicated to metamodels. We propose an approach based on model slicing, inspired from program slicing, to build interactive visualization techniques dedicated to metamodels. These techniques permit users to focus on metamodel elements of interest, which aims at improving the understand ability. This approach is implemented in a metamodel visualizer, called Explen. © 2014 IEEE.		Blouin, A.; Moha, N.; Baudry, B.; Sahraoui, H.	Proceedings - 2nd IEEE Working Conference on Software Visualization, VISSOFT 2014					Excluded	Excluded	new_screen			2		2014				
543		ModelGuidance	Concurrent and distributed model transformations based on Linda	Recently Model-Driven Engineering (MDE) is becoming more and more popular as it is able to solve complex problems by exploiting the abstraction power of models. As models, metamodels and model transformations are the heart of MDE, they play a vital role. Nevertheless, existing transformation languages and accompanying tools cannot deal with large models such those used in the fields of astronomy, genetics, etc. The main problems are related to the storage of very large models, the unreasonable time needed to execute the transformation and the impossibility of transforming distributed or streaming models. We tackle this problem by means of incorporating the concurrent and distributed mechanisms that Linda (a mature coordination language for parallel processes) provides into model transformation approaches.		Burgueño, L.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2013				
544		ModelGuidance	Anomaly analyses for feature-model evolution	Software Product Lines (SPLs) are a common technique to capture families of software products in terms of commonalities and variabilities. On a conceptual level, functionality of an SPL is modeled in terms of features in Feature Models (FMs). As other software systems, SPLs and their FMs are subject to evolution that may lead to the introduction of anomalies (e.g., non-selectable features). To fix such anomalies, developers need to understand the cause for them. However, for large evolution histories and large SPLs, explanations may become very long and, as a consequence, hard to understand. In this paper, we present a method for anomaly detection and explanation that, by encoding the entire evolution history, identifies the evolution step of anomaly introduction and explains which of the performed evolution operations lead to it. In our evaluation, we show that our method significantly reduces the complexity of generated explanations. © 2018 Association for Computing Machinery.		Nieke, M.; Thüm, T.; Mauro, J.; Yu, I.C.; Seidl, C.; Franzke, F.	GPCE 2018 - Proceedings of the 17th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, co-located with SPLASH 2018					Excluded	Excluded	new_screen			2		2018				
545		ModelGuidance	Developing next generation ADLs through MDE techniques	Despite the flourishing of languages to describe software architectures, existing Architecture Description Languages (ADLs) are still far away from what it is actually needed. In fact, while they support a traditional perception of a Software Architecture (SA) as a set of constituting elements (such as components, connectors and interfaces), they mostly fail to capture multiple stakeholders concerns and their design decisions that represent a broader view of SA being accepted today. Next generation ADLs must cope with various and ever evolving stakeholder concerns by employing semantic extension mechanisms. In this paper we present a framework, called byADL - Build Your ADL, for developing a new generation of ADLs. byADL exploits model-driven techniques that provide the needed technologies to allow a software architect, starting from existing ADLs, to define its own new generation ADL by: i) adding domain specificities, new architectural views, or analysis aspects, ii) integrating ADLs with development processes and methodologies, and iii) customizing ADLs by fine tuning them. The framework is put in practice in different scenarios showing the incremental extension and customization of the Darwin ADL. © 2010 ACM.		Di Ruscio, D.; Malavolta, I.; Muccini, H.; Pelliccione, P.; Pierantonio, A.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2010				
546		ModelGuidance	A model-based authorware for the construction of distributed multimedia systems	Distributed multimedia systems typically involve a sophisticated user interaction. Further, objects are allocated on physically distributed computing systems, and multimedia data must be transferred across heterogeneous networks in a timely manner. These systems often have complex requirements on a user interaction, quality of service and temporal order among media streams. The design and implementation of these requirements are inherently complex and present an extraordinary design and programming challenge. Generally, these complex requirements cannot be adequately captured using a single model or a design notation. The challenge amounts to (i) identification of multiple, often orthogonal models, each capturing a specific aspect of the requirements, and (ii) provision of an authorware that supports the composition of these models. In this paper, we propose to capture the multimedia requirements in three different models: configuration, user control and presentation, and demonstrate how the composition of these models can be supported by an authorware using the Java and CORBA technologies. The concepts are illustrated using a real-life example based on a virtual city tour application that features distributed controls, collaborative work and multimedia presentations. Various distributed multimedia applications like video phone, video conferencing and distributed presentation have been successfully constructed using the proposed multiple models and authorware. The results are encouraging and the approach can shorten the development of multimedia applications considerably. © 1999 Elsevier Science B.V. All rights reserved.		Cheung, S.C.; Chanson, S.T.	Information and Software Technology					Excluded	Excluded	new_screen			2		1999				
547		ModelGuidance	Extending a Model Transformation Language Using Higher Order Transformations	Model driven engineering is a paradigm for software development on different platforms. Models are (semi) automatically refined in a series of steps, each step adding more information to eventually produce software code. However, the specification of model transformations which define these refinements is still performed in a manual fashion. A specification may be very complex, difficult to understand or time-consuming to produce. There is need for a higher level language for improving expressivity of the basic transformation mechanism. Consequently, we need higher order transformations for converting the extra features adding expressivity into the basic formalism, thus providing a mechanism for implementing extensions to the core language. This approach is tested on a few cases including evolution and refinement to other paradigms (e.g. transformation from a UML activity diagram into communicating sequential processes).		O. Muliawan	2008 15th Working Conference on Reverse Engineering					Excluded	Excluded	new_screen			2		2008				
548		ModelGuidance	Search-based metamodel matching with structural and syntactic measures	The use of different domain-specific modeling languages and diverse versions of the same modeling language often entails the need to translate models between the different languages and language versions. The first step in establishing a transformation between two languages is to find their corresponding concepts, i.e.; finding correspondences between their metamodel elements. Although, metamodels use heterogeneous terminologies and structures, they often still describe similar language concepts. In this paper, we propose to combine structural metrics (e.g.; number of properties per concept) and syntactic metrics to generate correspondences between metamodels. Because metamodel matching requires to cope with a huge search space of possible element combinations, we adapted a local and a global metaheuristic search algorithm to find the best set of correspondences between metamodels. The efficiency and effectiveness of our proposal is evaluated on different matching scenarios based on existing benchmarks. In addition, we compared our technique to state-of-the-art ontology matching and model matching approaches. © 2014 Elsevier Inc. All rights reserved.		Kessentini, M.; Ouni, A.; Langer, P.; Wimmer, M.; Bechikh, S.	Journal of Systems and Software					Excluded	Excluded	new_screen			2		2014				
549		ModelGuidance	Threat-driven modeling framework for secure software using aspect-oriented stochastic Petri nets	Design-level vulnerabilities are a main source of security risks in software. To improve the reliability of software design, this paper presents a modified threat-driven modeling framework, to determine which threats require mitigation and how to mitigate the threats. To specify the functions and threat mitigations of a security design as a whole, aspect-oriented Stochastic Petri nets are used as a formal amplified model. Moreover, this paper proposes an adapted augmented approach to define software security metrics based on vulnerabilities included in the software systems and their impacts on software quality. The Common Vulnerability Scoring System (CVSS), a vulnerability scoring system designed to provide a standardized method for rating software vulnerabilities, is used as the basis in the metric definition and calculations. Furthermore, a case study is detailed, which shows the essence and feasibility of using aspect-oriented stochastic Petri net models for threat modeling and that the proposed security metrics are consistent with common practice.		Sherief, N.H.; Abdel-Hamid, A.A.; Mahar, K.M.	INFOS2010 - 2010 7th International Conference on Informatics and Systems					Excluded	Excluded	new_screen			2		2010				
550		ModelGuidance	Design and process metamodels for modelling and verification of safety-related software applications in smart building systems	Smart building is an example of a cyber-physical system that adopts the internet of things in order to every component, each person, and every process can be accessed from everywhere. This paper proposes a novel software engineering approach for the design of the smart building systems, namely, the metamodels for modelling and verification of smart building safety-related software applications. Two different metamodels are proposed: the design metamodel and the process metamodel. Their use allows not only to define a design structure and safety properties of smart embedded devices but also to model and validate corresponding safety scenarios. To demonstrate an effectiveness of the proposed approach, a case study is done to model and verify a prototype of a safety-related software system in a smart building. © 2018 Association for Computing Machinery.		Fatehah, M.; Mezhuyev, V.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2018				
551		ModelGuidance	Context-aware design of reflective middleware in the internet of everything	We daily experience the interaction with physical objects which are becoming smarter and smarter with the ability to communicate with each other as well as with different information systems.While, on the one hand, we are assisting to the rise of a pervasive Internet of Things (IoT) or an Internet of Everything (IoE), on the other hand we face the need of a new generation of objects able to adapt to external inputs coming from the environment they are dipped in. New modeling techniques, pattern and paradigm for composing and developing software and services able to deal with changing context and requirements are necessary. Self-adaptive systems are modern applications whose running part should be able to react on its own, by dynamically adapting its behavior, in order to sustain a required set of qualities of service, and dynamic changes in the context or in the user requirements. Here, we propose a solution allowing a IoT Middleware to conform to Reflective programming paradigm thus giving more flexibility and adaptability to the network behavior. © Springer International Publishing AG 2016.		Mongiello, M.; di Noia, T.; Nocera, F.; di Sciascio, E.; Parchitelli, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2016				
552		ModelGuidance	Introducing variability into aspect-oriented modeling approaches	Aspect-Oriented Modeling (AOM) approaches propose to model reusable aspects, or cross-cutting concerns, that can be composed in different systems at a model or code level. Building complex systems with reusable aspects helps managing software complexity. But in general, reusability of an aspect is limited to a particular context. On the one hand, if the target model does not match the template point-to-point, the aspect cannot be applied. On the other hand, even when it is actually applied, it is woven into the target model always in the same way. In this paper1, we point out the needs of variability in the AOM approaches and introduce seamless variability mechanisms in an existing AOM approach to improve reusability. Our aspects can fit various contexts and can be composed into the base model in different ways. Introducing variability into AOM approaches will turn standard aspects into highly reusable aspects. © Springer-Verlag Berlin Heidelberg 2007.		Lahire, P.; Morin, B.; Vanwormhoudt, G.; Gaignard, A.; Barais, O.; Jézéquel, J.-M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2007				
553		ModelGuidance	Resource contention analysis of service-based systems through fUML-driven model execution	Model-driven software engineering not only enables the efficient development of software but also facilitates the analysis of non-functional properties (NFPs). As UML, the most adopted modeling language for designing software, lacks in formal execution semantics, current approaches translate UML models into dedicated analysis models, before NFPs can be computed. However, such transformations introduce additional complexity for the users and developers of analysis tools. To avoid this additional complexity, we show how the analysis of certain NFPs can be performed solely based on UML models without translating them into, e.g., queuing networks. Therefore, we leverage the execution semantics of fUML, a recent OMG standard, to gain execution traces from UML models and, based on these traces, compute indices, such as response time, taking into account the contention of resources, as well as different resource management configurations, such as balancing and scaling strategies.		Fleck, M.; Berardinelli, L.; Langer, P.; Mayerhofer, T.; Cortellessa, V.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2013				
554		ModelGuidance	A UML profile and a methodology for real-time systems design	Modern real-time systems are increasingly complex and pervasive. Model Driven Engineering (MDE) is the emerging approach for the design of complex systems, strongly based on the usage of abstract models as key artifacts, from which an implementation is derived through a series of well-defined (automated) transformations. The widely adopted input notation in MDE is the Unified Modeling Language (UML). To express models in a particular domain, and notably for the modeling of real-time embedded systems, UML profiles have been proposed, which enrich the set of UML native elements with a consistent set of extensions. In this trend, this paper develops an approach to the design of realtime systems, based on a UML profile which is obtained from the OMG standard SPT-Profile, with a few necessary modifications. © 2006 IEEE.		Bartolini, C.; Bertolino, A.; De Angelis, G.; Lipari, G.	Proceedings - 32nd Euromicro Conference on Software Engineering and Advanced Applications, SEAA					Included	Excluded	new_screen			2		2006				
555		ModelGuidance	Runtime configuration validation for self-configurable systems	Runtime configuration validation is a critical requirement if we are to build reliable self-adaptive systems. This paper describes a model-based approach that supports runtime validation of candidate configurations. The approach is based on MeCSV, a metamodel we propose, that allows a technology-neutral specification of systems' configurations and validity constraints. A constraint-checker relying on this specification verifies dynamically candidate configurations before their deployment. Experimental results with a messaging platform show viable validation overhead demonstrating the feasibility of the approach. © 2013 IFIP.		Akue, L.; Lavinal, E.; Desprats, T.; Sibilla, M.	Proceedings of the 2013 IFIP/IEEE International Symposium on Integrated Network Management, IM 2013					Excluded	Excluded	new_screen			2		2013				
556		ModelGuidance	A lightweight component-based development approach for enterprise applications	Component-based development (CBD) is considered as a promising way to improve software productivity and quality by reusing some pre-existing components. However, in real practice, such a paradigm is not fully exploited by many enterprise application (EA) software companies because of the much needed effort and cost. For addressing these problems, we propose a lightweight approach that divides an EA into hierarchical component elements and maps them to a CBD environment based on Eclipse. Such an approach takes most characteristics of EAs into account and the modularity and reusability of the components are assured by OSGi. A real case study focusing on refactoring legacy software to a component-based one with our approach is illustrated its validity. © 2011 IEEE.		Zhou, J.; Zhao, D.; Liu, J.	Proceedings - International Computer Software and Applications Conference					Excluded	Excluded	new_screen			2		2011				
557		ModelGuidance	Software requirements patterns and meta model: A strategy for enhancing requirements reuse (RR)	Reuse is a fundamental activity in software development lifecycle, which can be employed at any stage of development. Reuse of software artefacts, such as requirements, architectures, models, test cases among others, improves software quality and productivity. Because of its higher level of abstraction, requirements reuse (RR) is recognized as reuse approach that can provide more benefits in software development. A number of RR approaches are reported in the literature. These include domain-specific, pattern-based, ontology-based and general approaches. However, these approaches lack a strategy that could incorporate some key aspects of reuse, which are, reusable structure, variability modeling (VM) and traceability of software artefacts. In line with this, we make our contribution in this paper by (1) presenting the concepts and importance of software requirements patterns (SRP) and meta model for the enhancement of RR; (2) proposing a meta modeling strategy based on software product line engineering (SPLE), which comprises SRP, VM and traceability. We believe our proposal is novel and can support developers in SPL and model-driven engineering (MDE) benefit more from reuse in the course of software developments. © 2016 IEEE.		Ya'u, B.I.; Nordin, A.; Salleh, N.	Proceedings - 6th International Conference on Information and Communication Technology for the Muslim World, ICT4M 2016					Excluded	Excluded	new_screen			2		2017				
558		ModelGuidance	A Framework Based on Model Driven Engineering and Model Weaving to Support Data-Driven Interoperability for Smart Grid Applications	The smart grid is envisioned as a new and improved power grid. The high complexity of this system of systems is raising the need of engineering methodologies that manages this complexity. The Model Driven Engineering (MDE) approach has been proposed in literature to increase the productivity and reduce the software development costs. The MDE deals with complexity by using models as the main artifacts of the software development process. Moreover, the use of standard-compliant models to represent data in the power system domain its being strongly encouraged to improve interoperability. In this paper, we propose a framework based on Model Driven Engineering and the weaving of models to support the development of interoperable applications for the smart grid domain. Our approach separates the modeling of the application from the modeling of the data that is shared between applications. The elements of those models are related using the weaving technique. The proposed approach was implemented on Eclipse platform, and two applications were developed and deployed to validate the approach.		Felix, Eder; Lopes, Denivaldo; Jr., Osvaldo Sousa	Proceedings of the 2020 European Symposium on Software Engineering					Excluded	Excluded	new_screen			2		2020				
559		ModelGuidance	Modeling Web-search scenarios exploiting user and source profiles	In this paper we propose a user profile based approach for supporting Web-oriented search. Differently from traditional syntax-based approaches, our method is semantic driven. Indeed, for each user, a profile is constructed and handled for representing her/his interests. Whenever a user submits a query, a classical Web search engine is activated for determining a (probably large) set of answer data sources. After this, the user profile is exploited for determining the subset of those data sources which best conforms to user interests. In order to semantically compare the content of a data source with a user profile, a formal inference framework, provided by a specialized probabilistic variant of Description Logics, is exploited.		Palopoli, L.; Rosaci, D.; Terracina, G.; Ursino, D.	AI Communications					Excluded	Excluded	new_screen			2		2001				
560		ModelGuidance	Bridging the Gap between OpenMBEE and Git	Git and its workflows as well as best practices are the de-facto standard in the Software Engineering world. Can we leverage those concepts for Model-Based Systems Engineering (MBSE)? How could a Git “enabled” OpenMBEE approach look like? Branching and merging are core capabilities in agile methods, and thus, are required for agile MDSE. Dedicated tools for supporting these capabilities for models based on Git have been proposed recently, but their integration within a tool chain consisting of several heterogeneous tools is still a challenge. Therefore, in this paper, we will discuss how ideas and tools from OpenMBEE can be leveraged to enable working with Git in MDSE without losing the capabilities provided by OpenMBEE/MMS Backends.		D. Siegl	2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)					Excluded	Excluded	new_screen			2		2021				
561		ModelGuidance	Leveraging annotation-based modeling with Jump	The capability of UML profiles to serve as annotation mechanism has been recognized in both research and industry. Today’s modeling tools offer profiles specific to platforms, such as Java, as they facilitate model-based engineering approaches. However, considering the large number of possible annotations in Java, manually developing the corresponding profiles would only be achievable by huge development and maintenance efforts. Thus, leveraging annotation-based modeling requires an automated approach capable of generating platform-specific profiles from Java libraries. To address this challenge, we present the fully automated transformation chain realized by Jump, thereby continuing existing mapping efforts between Java and UML by emphasizing on annotations and profiles. The evaluation of Jump shows that it scales for large Java libraries and generates profiles of equal or even improved quality compared to profiles currently used in practice. Furthermore, we demonstrate the practical value of Jump by contributing profiles that facilitate reverse engineering and forward engineering processes for the Java platform by applying it to a modernization scenario. © 2016, The Author(s).		Bergmayr, A.; Grossniklaus, M.; Wimmer, M.; Kappel, G.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2018				
562		ModelGuidance	Model-Driven Requirements for Humans-on-The-Loop Multi-UAV Missions	The use of semi-Autonomous Unmanned Aerial Vehicles (UAVs or drones) to support emergency response scenarios, such as fire surveillance and search-And-rescue, has the potential for huge societal benefits. Onboard sensors and artificial intelligence (AI) allow these UAVs to operate autonomously in the environment. However, human intelligence and domain expertise are crucial in planning and guiding UAVs to accomplish the mission. Therefore, humans and multiple UAVs need to collaborate as a team to conduct a time-critical mission successfully. We propose a meta-model to describe interactions among the human operators and the autonomous swarm of UAVs. The meta-model also provides a language to describe the roles of UAVs and humans and the autonomous decisions. We complement the meta-model with a template of requirements elicitation questions to derive models for specific missions. We also identify common scenarios where humans should collaborate with UAVs to augment the autonomy of the UAVs. We introduce the meta-model and the requirements elicitation process with examples drawn from a search-And-rescue mission in which multiple UAVs collaborate with humans to respond to the emergency. We then apply it to a second scenario in which UAVs support first responders in fighting a structural fire. Our results show that the meta-model and the template of questions support the modeling of the human-on-The-loop human interactions for these complex missions, suggesting that it is a useful tool for modeling the human-on-The-loop interactions for multi-UAVs missions. © 2020 IEEE.		Agrawal, A.; Cleland-Huang, J.; Steghofer, J.-P.	Proceedings - 10th International Model-Driven Requirements Engineering Workshop, MoDRE 2020					Excluded	Excluded	new_screen			2		2020				
563		ModelGuidance	Predicting the Performance of Privacy-Preserving Data Analytics Using Architecture Modelling and Simulation	Privacy-preserving data analytics is an emerging technology which allows multiple parties to perform joint data analytics without disclosing source data to each other or a trusted third-party. A variety of platforms and protocols have been proposed in this domain. However, these systems are not yet widely used, and little is known about them from a software architecture and performance perspective. Here we investigate the feasibility of using architectural performance modelling and simulation tools for predicting the performance of privacy-preserving data analytics systems. We report on a lab-based experimental study of a privacy-preserving credit scoring application that uses an implementation of a partial homomorphic encryption scheme. The main experiments are on the impact of analytic problem size (number of data items and number of features), and cryptographic key length for the overall system performance. Our modelling approach performed with a relative error consistently under 5% when predicting the median learning time for the scoring application. We find that the use of this approach is feasible in this technology domain, and discuss how it can support architectural decision making on trade-offs between properties such as performance, cost, and security. We expect this to enable the evaluation and optimisation of privacy-preserving data analytics technologies. © 2018 IEEE.		Yasaweerasinghelage, R.; Staples, M.; Weber, I.; Paik, H.-Y.	Proceedings - 2018 IEEE 15th International Conference on Software Architecture, ICSA 2018					Excluded	Excluded	new_screen			2		2018				
564		ModelGuidance	Toward a human-centered UML for risk analysis: Application to a medical robot	Safety is now a major concern in many complex systems such as medical robots. A way to control the complexity of such systems is to manage risk. The first and important step of this activity is risk analysis. During risk analysis, two main studies concerning human factors must be integrated: task analysis and human error analysis. This multidisciplinary analysis often leads to a work sharing between several stakeholders who use their own languages and techniques. This often produces consistency errors and understanding difficulties between them. Hence, this paper proposes to treat the risk analysis on the common expression language UML (Unified Modeling Language) and to handle human factors concepts for task analysis and human error analysis based on the features of this language. The approach is applied to the development of a medical robot for tele-echography. © 2004 by International Federation for Information Processing. All rights reserved.		Guiochet, J.; Motet, G.; Baron, C.; Boy, G.	IFIP Advances in Information and Communication Technology					Included	Excluded	new_screen			2		2004				
565		ModelGuidance	Mobile platforms and multi-mobile platform development	Mobile devices and mobile applications have a significant effect on the present and on the future of the software industry. The diversity of mobile platforms necessitates the development of the same mobile application for all major mobile platforms, which requires considerable development effort. Mobile application developers are multiplatform developers, but they prioritize the platforms, therefore, not all platforms are equally important for them. Appropriate methods, processes and tools are required to support the development in order to achieve better productivity. The main motivation of our research activity is to provide a method, which increases the development productivity and the quality of the applications and also reduces the time to market. The paper discusses our model-driven results on the field of multi-mobile platform development.		Charaf, H.; Ekler, P.; Mészáros, T.; Kelényi, I.; Kovari, B.; Albert, I.; Forstner, B.; Lengyel, L.	Acta Cybernetica					Excluded	Excluded	new_screen			2		2014				
566		ModelGuidance	Model-driven multi-level safety analysis of critical systems	Model-driven engineering is a promising approach used to develop and analyze complex systems from different domains. In this paper, we focus on the safety aspect and introduce a methodology and associated framework for model-driven safety analysis (SA) of large critical systems. The methodology is meant to cope with design complexity and reduce time of SA process. The framework, called Sophia, supports proposed methodology and includes facilities (i) to automatically perform various SA methods, (ii) to make semantic connections with formal SA tools, (iii) to represent SA results in the system modeling environment. We illustrate our approach using a case study from transport domain. © 2015 IEEE.		Yakymets, N.; Perin, M.; Lanusse, A.	9th Annual IEEE International Systems Conference, SysCon 2015 - Proceedings					Included	Excluded	new_screen			2		2015				
567		ModelGuidance	A Use Case in Model-Based Robot Development Using AADL and ROS	Designing a robotic application is a challenging task. It requires a vertical expertise spanning various fields, starting from hardware and low-level communication to high-level architectural solution for distributed applications. Today a single expert cannot undertake the entire effort of creating a robust and reliable robotic application. The current landscape of robotics middlewares, ROS in primis, does not offer a solution for this problem yet; developers are expected to be both architectural designers and domain experts. In our previous works we used the Architecture Analysis and Description Language to define a model-based approach for robot development, in an effort to separate the competences of software engineers and robotics experts, and to simplify the merge of software artifacts created by the two categories of developers. In this work we present a practical use-case, i.e., an autonomous wheelchair, and how we used a combination of model-based developed and automatic code generation to completely re-design and re-implement an existing architecture originally written by hand.		Bardaro, Gianluca; Semprebon, Andrea; Matteucci, Matteo	Proceedings of the 1st International Workshop on Robotics Software Engineering					Excluded	Excluded	new_screen			2		2018				
568		ModelGuidance	Applying a Def-Use approach on signal exchange to implement SysML model-based testing	Model-Based Testing (MBT) uses a model of the System Under Test as reference to automatically derive test cases. Since it is often not reasonable to cover all the behaviours formalized in the model, coverage criteria are applied to select a relevant subset of model behaviours. In this paper, we propose a dedicated test coverage criterion, based on Def-Use criteria on signal exchange, to implement MBT approach from Systems Modeling Language (SysML) test models to validate mechatronic systems. This novel criterion is introduced and the relevance of the approach from SysML models is discussed regarding results obtained with a dedicated MBT toolchain implementing this criterion. © 2013 Springer-Verlag.		Ambert, F.; Bouquet, F.; Lasalle, J.; Legeard, B.; Peureux, F.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2013				
569		ModelGuidance	Embedding scenario-based modeling in statecharts	Scenario-based modeling (SBM) is an approach for creating executable models for reactive systems where each artifact specifies a separate aspect of overall system behavior. SBM has many advantages, including structural alignment with requirements, intuitiveness and incrementality, and it is available in visual languages (e.g., LSC), textual languages (e.g., Java, C++) and DSLs (e.g., SML). In this position paper, we argue that endowing the Statecharts visual formalism with SBM capabilities can significantly benefit software and system engineering, enhancing intuitive visualization of specifications and designs, and their scalability and amenability to formal verification. We demonstrate the position by amalgamating Statecharts and SBM within the YAKINDU Statechart Tools. © 2018 CEUR-WS. All rights reserved.		Marron, A.; Hacohen, Y.; Harel, D.; Mülder, A.; Terfloth, A.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2018				
570		ModelGuidance	Adaptive Agent Model: Software Adaptivity using an Agent-oriented Model-Driven Architecture	Model-Driven Architecture (MDA) promotes the development of software systems through successive building and generation of models, improving the reusability of models. Applying the same principles to the area of Agent-Oriented Software Engineering (AOSE) advances the ideas behind MDA even more significantly, due to the inherent adaptivity of software agents We describe an appropriate set of models originating from requirements specification and transformable to models understandable and executable by agents thus demonstrating an Agent-oriented Model-Driven Architecture (AMDA)approach. In AMDA, agents use hierarchical business knowledge models with business process rules at the top, business rules to control policy and logic in the middle and a base layer defining business concepts. Being externalised, knowledge is easily configurable by human beings and applied by software agents. A real case study is used to illustrate the process. The main advances over the object-oriented MDA are (i) the addition of component dynamics (ii) the use of agent-executable rule-based business models and (iii) a proposed higher level of abstraction with the direct representation of business requirements. (C) 2008 Elsevier B.V. All rights reserved.		Xiao, Liang; Greer, Des	INFORMATION AND SOFTWARE TECHNOLOGY					Excluded	Excluded	new_screen			2		2009				
571		ModelGuidance	Integrating System and Software Engineering Through Modeling	"System engineers who are responsible for capturing the formal requirements of a system typically have relied on text-based tools and free-form diagrams, otherwise known as ""shall statements"" and ""PowerPoint engineering"". In our work with the space interferometry mission (SIM) at NASA's Jet Propulsion Laboratory, we found the need to unambiguously represent behaviors and interfaces using common language and terminology across multiple project elements, for example, throughout different levels of system engineering and among system, software, and controls engineering. The system engineers adopted portions of the Unified Modeling Language (UML) [1] as a means to effectively communicate interfaces and desired system behaviors. UML sequence diagrams were used to capture scenarios and provide context for and understanding of the intent of the typical ""shall statements"". UML Statechart diagrams were used to capture dynamic behavior. In practice, the system and software engineers would iterate together on these models. Iterating on models proved to be a highly effective method of ""fleshing-in"" loosely worded and ambiguous requirements. Requirements have typically been difficult for the software engineer to implement without understanding the intent behind the requirements. Through the process of modeling, we found that system and software engineers effectively communicated interfaces and behavior. Modeling provided other benefits as well, notably, the ability to auto-generate portions of the flight code from these models and to apply formal methods to prove various correctness properties regarding the model. In this paper, we will describe in further detail how system engineers used modeling as an effective communication tool to capture requirements, their context, and the ensuing design throughout multiple levels of the system and within a subsystem. This increased software engineers' understanding of and insight into the system, making the software design process more efficient. In addition, we will describe how software engineers leveraged the models to improve the quality and reduce the cost of the final software product."		J. Mindock; G. Watney	2008 IEEE Aerospace Conference					Included	Excluded	new_screen			2		2008				
572		ModelGuidance	StreamGen: Model-driven Development of Distributed Streaming Applications	Distributed streaming applications, i.e., applications that process massive streams of data in a distributed fashion, are becoming increasingly popular to tame the velocity and the volume of Big Data. Nevertheless, the widespread adoption of data-intensive processing is still limited by the non-trivial design paradigms involved, which deal with the unboundedness and volume of involved data streams and by the many distributed streaming platforms, each with its own characteristics and APIs. In this article, we present StreamGen, a Model-Driven Engineering tool to simplify the design of such streaming applications and automatically generate the corresponding code. StreamGen is able to automatically generate fully working and processing-ready code for different target platforms (e.g., Apache Spark, Apache Plink). Evaluation shows that (i) StreamGen is general enough to model and generate the code, offering comparable performance against a preexisting similar and well-known application; (ii) the tool is fully compliant with streaming concepts defined as part of the Google Dataflow Model; and (iii) users with little computer science background and limited experience with big data have been able to work with StreamGen and create/refactor an application in a matter of minutes.		Guerriero, Michele; Tamburri, Damian Andrew; Di Nitto, Elisabetta	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					Excluded	Excluded	new_screen			2		2021				
573		ModelGuidance	RISA: Object-oriented Modeling and Simulation of Real-time distributed System for Air defense	This paper describes Object-oriented Modeling and Simulation of RISA(Real-time dIstributed System for Air defense), especially focused on advanced software engineering method using design patterns including object-oriented modeling method by UML (Unified Modeling Language). Modeling by UML presented by several diagrams helps users develop the relevant domain-specific models and provides the foundation to build robust software architecture based on HLA (High Level Architecture). The RISA system composed of six components (federates) SMCC, MFR, ECS, LAU, ATS, MSL - is constructed by object-oriented design patterns related to HLA-based techniques. Design patterns in RISA are divided into four categories. The first design pattern category related to user interface (UI) includes Active Object pattern, Model-View-Controller (MVC) pattern. The second related to Domain-specific layer contains facade pattern for unified interface of database and integrator pattern for many models. The third related to database has Persistence Layer pattern for persistent objects. The fourth related to synchronization includes Strategy pattern for time synchronization including time-stepped, event-driven and optimistic mechanisms and Command pattern for callback. The object-oriented design through modeling in RISA provides the system with modification, extensibility, flexibility through abstraction, encapsulation, inheritance and polymorphism. Also, design patterns which are reusable solutions to recurring problems that occur during software development simplify the software development process and reduce costs because the reusability of software is increased when a system is developed.		Lee, TD; Jeon, BJ; Jeong, CS; Choi, SY	OBJECT-ORIENTED INFORMATION SYSTEMS					Included	Excluded	new_screen			2		2003				
574		ModelGuidance	Ontology-based model synchronisation	Models are the central artifact in Model-Driven Software Development (MDSD). Being defined by meta models, they expose a strict syntactic structure. This property allows for processing models mechanically and using generic tools for arbitrary models. However, the well known meta modelling languages (e.g., Essential MOF (EMOF)) do not have a formal semantical foundation. Rather, the semantics of models is defined implicitly and informal in respective specification documents. To resolve this restriction, the integration of models and ontologies has been proposed earlier [1]. In contrast to models, ontologies do have a formal grounding and allow for more sophisticated reasoning about the information represented therein. This paper presents an approach to employ the ontological representation of models for synchronising changes across related models. Existing ideas from ontology mapping and alignment are applied to model synchronisation to investigate to what extent these technologies can be used in MDSD.		Rieckhof, F.; Seifert, M.; Aßmann, U.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2010				
575		ModelGuidance	Software reuse: MDA-based ontology development to support data access over legacy applications	Unified Modeling Language (UML) and ontology share common properties such as classes, properties and instances. We propose using Model-Driven Architecture (MDA) enriched with ontological approach to provide ontology development method. The method leverages the UML model in the initial phase of ontology development, and then the produced ontology is aligned with specific domain ontology. The steps involved consist of: (1) generating the UML model from the legacy application, (2) generating OWL ontology from the UML model, (3) enriching the generated ontology with domain ontology, and (4) incorporating the ontology in ontology-based query answering. For simulation, the query is implemented using SPARQL over the OpenBiblio database. © 2011 Springer-Verlag.		Santoso, H.-A.; Haw, S.-C.; Lee, C.-S.	Communications in Computer and Information Science					Included	Excluded	new_screen			2		2011				
576		ModelGuidance	Feature models supporting trade-off decisions in early mechatronic systems design	Many development projects cause serious challenges to their developers: a rich set of new features has to be implemented within a restricted schedule and tight budget constraints. Often, this necessitates trade-offs: Certain features are incorporated into later releases to reduce risk of schedule delay. To support release planning, transparency regarding possible feature-trade-offs is needed: What exactly is the set of all planned features, what alternatives exist and how do they depend on each other? Especially in mechatronic systems design defining possible feature-trade-offs results in a big challenge. Due to its multidisciplinary character, dependencies from mechanics, electronics and software have to be considered. Within this contribution, we introduce feature-models as an appropriate approach to bring transparency into trade-off decisions. The model is integrated into a modelling technique for early mechatronic systems specification that supports the emerging approach of Model-Based Systems Engineering. By this, we show how feature-models enrich the engineering of complex mechatronic systems.		Kühn, A.; Bremer, C.; Dumitrescu, R.; Gausemeier, J.	Proceedings of NordDesign 2014 Conference, NordDesign 2014					Excluded	Excluded	new_screen			2		2014				
577		ModelGuidance	Applying Event-B refinement to the sliding window protocol	The sliding window protocol (SWP) is a useful protocol in network communications. It can ensure a correct data transfer over unreliable channels where frames may be duplicated, lost, or re-ordered. This paper presents an incremental formal modeling of the SWP using Event-B method. We model the protocol step by step by using refinement, a technique of Event-B. The first step will be the modeling of the most abstract specification of the protocol. Then by each refinement more details of the protocol specification will be added to the model. By this approach, the model will be a more explicit representation of the target protocol by each refinement. Through a refinement approach, we prove that the abstract goals concerning sending and receiving windows of different size of the SWP are satisfied. In the developed Event-B models of the SWP described in this paper, all proofs are generated and discharged by the Rodin tool. © 2015 IEEE.		Mimouni, S.E.; Bouhdadi, M.	Proceedings - IEEE 18th International Conference on Computational Science and Engineering, CSE 2015					Excluded	Excluded	new_screen			2		2015				
578		ModelGuidance	Towards a Model Driven eLearning Framework to Improve Quality of Teaching	There is a significant dearth of time and qualified teachers to make 200 million adult illiterates of India spread across 22 Indian Languages literate and it would take massive effort to address the scale and variety challenges. In this paper, we summarize four and half years of our experience of analyzing and improving a decade-long technology to adult literacy problem. Based on this experience and extensive interviews with teachers/learners and with the goal of devising quality instruction at attractive productivity rates through technology, we propose GAMBLE as a unified modelling framework and technical platform to organize instructional material in the form of data (facts, cases, rules and models). Essentially GAMBLE allows learners to perform well at all levels (remember, understand, apply, analyze, evaluate and create) of Bloom'sTaxonomy. We briefly present the case of applying GAMBLE framework to adult literacy and discuss its broad applications for school education as well.		S. Chimalakonda; K. V. Nori	2012 IEEE Fourth International Conference on Technology for Education					Excluded	Excluded	new_screen			2		2012				
579		ModelGuidance	Maintaining component-based system based on reflection mechanism	In the practice of software engineering, component-based software development is getting a main stream, more and more software products are composed by different components. But meanwhile, problems lying in component itself and the process of integrating or isolating component influence the reliability of software systems. Be simple to say, how to maintain component-based system effectively? to solve this problem, this paper proposes an approach which is based on meta information modeling and architecture reflection technologies.		Li Xiaojian; Zheng Ying	4th International Conference on New Trends in Information Science and Service Science					Excluded	Excluded	new_screen			2		2010				
580		ModelGuidance	Model-based version and configuration management for a web engineering lifecycle	During a lifecycle of a large-scale Web application, Web developers produce a wide variety of inter-related Web objects. Following good Web engineering practice, developers often create them based on a Web application development method, which requires certain logical models for the development and maintenance process. Web development is dynamic, thus, those logical models as well as Web artifacts evolve over time. However, the task of managing their evolution is still very inefficient because design decisions in models are not directly accessible in existing file-based software configuration management repositories. Key limitations of existing Web version control tools include their inadequacy in representing semantics of design models and inability to manage the evolution of model-based objects and their logical connections to Web documents. This paper presents a framework that allows developers to manage versions and configurations of models and to capture changes to model-to-model relations among Web objects. Model-based objects, Web documents, and relations are directly represented and versioned in a structure-oriented manner.		Nguyen, T.N.	Proceedings of the 15th International Conference on World Wide Web					Excluded	Excluded	new_screen			2		2006				
581		ModelGuidance	Multi-modeling Approach to Performance Engineering of Cyber-Physical Systems Design	The modeling and analysis of Cyber Physical Systems (CPS) is inevitably challenging due to the intrinsic problem of merging the specification of different ensembles that indicate hardware, software and physical aspects of such systems. This intrinsic complexity is exacerbated in performance engineering since multiple models need to co-exist in order to get meaningful performance indicators. In this paper we introduce a guided process called IMPACt (multI Modelling performAnce Cps),which helps architects during the design phase, to better understand the behavior of the system under development and the design choices they made, through performance analysis on results obtained by runnable models derived from system high-level specification. © 2017 IEEE.		Pagliari, L.; Mirandola, R.; Trubiani, C.	Proceedings of the IEEE International Conference on Engineering of Complex Computer Systems, ICECCS					Included	Excluded	new_screen			2		2018				
582		ModelGuidance	Identifying and managing complex modules in executable software design models-empirical assessment of a large telecom software product	Using design models instead of executable code has shown itself to be an efficient way of increasing abstraction level of software development. However, applying established code-based software engineering methods to design models can be a challenge - due to different abstraction levels, the same metrics as for code are not applicable for the design models. One of practical challenges in using metrics at the model level is applying complexity-prediction formulas developed using code-based metrics to design models. The existing formulas do not apply as they do not take into consideration the behavior part of the models - e.g. State charts. In this paper we address this challenge by conducting a case study at one of the large telecom products at Ericsson with the goal to identify which metrics can predict complex, hard to understand and hard to maintain software modules based on their design models. We use both statistical methods like regression to build prediction formulas and qualitative interviews to codify expert designers' perception of which software modules are complex. The results of this case study show that such measures as the number of non-self-transitions, transition per states or state depth can be combined in order to identify software units that are perceived as complex by expert designers. Our conclusion is that these metrics can be used in other companies to predict complex modules, but the coefficients should be recalculated per product to increase the prediction accuracy. © 2014 IEEE.		Rezaei, H.; Ebersjo, F.; Sandahl, K.; Staron, M.	Proceedings - 2014 Joint Conference of the International Workshop on Software Measurement, IWSM 2014 and the International Conference on Software Process and Product Measurement, Mensura 2014					Excluded	Excluded	new_screen			2		2014				
583		ModelGuidance	Towards multi-modeling for domain description	Domain modeling is a key task in the development of a software product line. We identified two popular modeling paradigms: Feature-oriented domain modeling (FODM) and domain specific modeling (DSM). The appropriate choice of the modeling paradigm is a crucial decision for the development of an efficient and easy to use domain model. For complex and heterogeneous domain descriptions, for example embedded system descriptions, different representation techniques can be useful to describe the different parts of the system. We propose a method to combine both representation techniques to realize a domain specific multi modeling approach. This supports not only a more natural domain description, but can as well be seen as a support for knowledge transfer between different stakeholders. Copyright © 2011 ACM.		Leitner, A.; Kreiner, C.; Mader, R.; Steger, C.; Weiß, R.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2011				
584		ModelGuidance	Documenting software using adaptive software artifacts	Creating and using software documentation presents numerous challenges, namely in what concerns the expression of knowledge structures, consistency maintenance and classification. Adaptive Software Artifacts is a flexible approach to expressing structured contents that tackles these concerns, and that is being realized in the context of a Software Forge. Copyright © 2013 by the Association for Computing Machinery, Inc. (ACM).		Correia, F.F.	SPLASH 2013 - Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, and Applications: Software for Humanity					Excluded	Excluded	new_screen			2		2013				
585		ModelGuidance	Formal Modeling and Verification of Multi-Robot Interactive Scenarios in Service Settings	Service robots are increasingly widespread in healthcare and domestic assistance settings. Nevertheless, the literature still lacks robotic application development approaches that can deal with the complexity of multi-agent systems and the unpredictability of human behavior. We target this issue by building upon a model-driven development framework for human-robot interactive scenarios that relies on formal analysis (Statistical Model Checking) to estimate the probability of success of the robotic mission. We extend the framework’s scope to scenarios featuring multi-robot fleets, a broader range of human-robot interaction contingencies, and task handover between robots. We also present an extended model of human behavior to capture interaction patterns implying close contact or competition with the robot. In the latter case, the user can specify alternative mission plans for the robot, depending on the competition outcome. We illustrate the approach’s effectiveness and scalability through a case study from the healthcare setting, featuring multiple mobile robots and humans with diverse physiological characteristics and requesting a broad spectrum of services.		L. Lestingi; C. Sbrolli; P. Scarmozzino; G. Romeo; M. M. Bersani; M. Rossi	2022 IEEE/ACM 10th International Conference on Formal Methods in Software Engineering (FormaliSE)					Excluded	Excluded	new_screen			2		2022				
586		ModelGuidance	A model-based approach to combining static and dynamic verification techniques	Given the complementary nature of static and dynamic analysis, there has been much work on identifying means of combining the two. In particular, the use of static analysis as a means of alleviating the overheads induced by dynamic analysis, typically by trying to prove parts of the properties, which would then not need to be verified at runtime. In this paper, we propose a novel framework which combines static with dynamic verification using a model-based approach. The approach allows the support of applications running on untrusted devices whilst using centralised sensitive services whose use is to be tightly regulated. In particular, we discuss how this approach is being adopted in the context of the Open Payments Ecosystem (OPE) — an ecosystem meant to support the development of payment and financial transaction applications with strong compliance verification to enable adoption by payment institutions. © Springer International Publishing AG 2016.		Azzopardi, S.; Colombo, C.; Pace, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2016				
587		ModelGuidance	Requirements modeling and validation using Bi-layer use case descriptions	Extension of the modeling notations and formal languages for use case description are the commonly suggested solutions for adding precision to use case models. Practitioners have often argued against adoption of such techniques citing reasons like the steep learning curve for formal languages; and the quickness in using imprecise use case descriptions for communicating to different stake-holders of the system. In this paper we introduce the Archetest modeling environment, which through a unique bi-layer approach accepts use case descriptions in their imprecise form and then assists in adding precision through a wizard driven process. Thereby, it lends itself to both quick and precise modeling. Also the two forms of the use case models are self contained and cross-linked. This allows different modelers, the precise and the imprecise, to collaborate and also supports stake-holder specific feedbacks of the automated analysis. We describe the structure of Archetest's use case models, and show how these models are amenable to automated processing. We present a case study which reports on typical modeling times using Archetest and demonstrates its scalability. © 2008 Springer-Verlag Berlin Heidelberg.		Sinha, A.; Kaplan, M.; Paradkar, A.; Williams, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2008				
588		ModelGuidance	Software Reliability and Testing Time Allocation: An Architecture-Based Approach	With software systems increasingly being employed in critical contexts, assuring high reliability levels for large, complex systems can incur huge verification costs. Existing standards usually assign predefined risk levels to components in the design phase, to provide some guidelines for the verification. It is a rough-grained assignment that does not consider the costs and does not provide sufficient modeling basis to let engineers quantitatively optimize resources usage. Software reliability allocation models partially address such issues, but they usually make so many assumptions on the input parameters that their application is difficult in practice. In this paper, we try to reduce this gap, proposing a reliability and testing resources allocation model that is able to provide solutions at various levels of detail, depending upon the information the engineer has about the system. The model aims to quantitatively identify the most critical components of software architecture in order to best assign the testing resources to them. A tool for the solution of the model is also developed. The model is applied to an empirical case study, a program developed for the European Space Agency, to verify model's prediction abilities and evaluate the impact of the parameter estimation errors on the prediction accuracy.		Pietrantuono, Roberto; Russo, Stefano; Trivedi, Kishor S.	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2010				
589		ModelGuidance	Automated Microservice Identification from Design Model	In recent years, with the growing popularity of DevOps, microservices architecture has become a popular topic in both academia and industry for its agility, flexibility and scalability. A big challenge in designing a microservices architecture is to find an appropriate partition of the system into microservices. Domain-driven design is widely used as the guiding principle of microservices design, but this approach lacks unified modelling language and tools, and the design process mainly depends on the experience and intuition of architects. In this article, we present an approach to automatically extract microservices from a design model. A design model consists of a design class diagram, use case definitions specified by object sequence diagrams. Our work firstly parses the XML file of the design model to obtain the critical information of a design model, including class name, class attributes, class methods, and the method call between classes. Then, the relation between classes is evaluated by a relation matrix from the static and dynamic perspective. Subsequently, controller classes are identified as the boundary of the microservices. We ultimately cluster classes into the microservices by optimizing the multi-objective of high cohesion, low coupling and low network load. A prototype demo is designed and implemented to support the automation of the approach in the way of a web application. A case study is applied to illustrate the usefulness of the proposed approach. © VDE VERLAG GMBH - Berlin - Offenbach.		Zhou, X.; Xiong, J.	CIBDA 2022 - 3rd International Conference on Computer Information and Big Data Applications					Excluded	Excluded	new_screen			2		2022				
590		ModelGuidance	Are the current architectural practices suitable for safety aspects of medical devices? An exploratory investigation	We have investigated approaches in the literature to assess the quality of the software architectures of medical devices, and have found evidence that there is a lack of methodologies for evaluating the software architecture design aspects of medical devices that might affect system safety. Such evidences were identified when evaluating the software architecture of the FDA Generic Infusion Pump searching for architectural evaluation approaches available in the literature. In order to fill this gap, we propose a set of quality questions that focus on analyzing software architecture design aspects of medical devices aiming safety. We show arguments on why reference projects such as the FDA Generic Infusion Pump system must satisfy our new quality questions. The quality questions were integrated into a quality model commissioned by the Brazilian Health Ministery for the certification of medical devices. © 2014 IEEE.		Leite, F.; Antonino, P.O.; Barbosa, P.; Kemmann, S.; Mendonca, R.	2014 IEEE 16th International Conference on e-Health Networking, Applications and Services, Healthcom 2014					Excluded	Excluded	new_screen			2		2014				
591		ModelGuidance	Architectural decision identification in architectural patterns	When modeling recurring architectural decisions for reuse, the boundaries of the knowledge asset under construction must be defined in a scoping step. This paper introduces and combines two supporting concepts for this step, pattern-centric decision identification rules and generic meta issues; one particular meta issue catalog is also presented. The resulting general-purpose decision identification method is validated by identifying 35 decisions that recur in enterprise application development and service-oriented architecture design. Copyright 2012 ACM.		Zimmermann, O.	ACM International Conference Proceeding Series					Excluded	Excluded	new_screen			2		2012				
592		ModelGuidance	Managing the quality of software product line architectures through reusable model transformations	In model-driven engineering of applications, the quality of the software architecture is realized and preserved in the successive stages of its lifecycle through model transformations. However, limited support for reuse in contemporary model transformation techniques forces developers of product line architectures to reinvent transformation rules for every variant of the product line, which can adversely impact developer productivity and in turn degrade the quality of the resulting software architecture for the variant. To overcome these challenges, this paper presents the MTS (Model-transformation Templatization and Specialization generative transformation process, which promotes reuse in model transformations through parameterization and specialization of transformation rules. MTS defines two higher order transformations to capture the variability in transformation rules and to specialize them across product variants. The core idea behind MTS is realized within a graphical model transformation tool in a way that is minimally intrusive to the underlying tool's implementation. The paper uses two product line case studies to evaluate MTS in terms of reduction in efforts to define model transformation rules as new variants are added to the product line, and the overhead in executing the higher order transformations. These metrics provide an indirect measure of how potential degradation in the quality of software architectures of product lines caused due to lack of reuse can be alleviated by MTS. © 2011 ACM.		Kavimandan, A.; Gokhale, A.; Karsai, G.; Gray, J.	CompArch'11 - Proceedings of the 2011 Federated Events on Component-Based Software Engineering and Software Architecture - QoSA+ISARCS'11					Excluded	Excluded	new_screen			2		2011				
593		ModelGuidance	Using UML profiles to interchange DSML and UML models: A proposal for MDD approaches	A key requirement for MDD solutions is to have a modeling language that allows the correct representation of conceptual models. Nowadays, there are two options that are the most widely used for the definition of these modeling languages: 1) the specification of a domain-specific modeling language (DSML) or 2) the customization of UML. In practice, these two modeling alternatives are viewed as opposite solutions. However, since both alternatives provide benefits for the application of MDD solutions, in this paper, we present a proposal that uses UML profile extension mechanisms to interchange modeling information between DSML-based models and UML models. This proposal shows how these two modeling alternatives can be integrated in a unique MDD solution. © 2009 IEEE.		Giachetti, G.; Marín, B.; Pastor, O.	Proceedings of the 2009 3rd International Conference on Research Challenges in Information Science, RCIS 2009					Excluded	Excluded	new_screen			2		2009				
594		ModelGuidance	Inferring finite state machines without reset using state identification sequences	Identifying the (finite state) control structure of a black box system from the traces observed in finite interaction is of great interest for many model-based activities, such as model-based testing or model-driven engineering. There are several inference methods, but all those methods assume that the system can be reset whenever necessary. In this paper, we address the issue of inferring a finite state machine (FSM) that cannot be reset; we propose a method, inspired by FSM-based testing generation methods. We assume classical testing hypotheses, namely that we are given a bound n on the number of states and a set W of characterizing sequences to distinguish states. To the best of our knowledge, this is the first model inference method that does not require resetting the system, and does not require an external oracle to decide on equivalence. The length of the test sequence is polynomial in n and the exponent depends on the cardinal |W| of the characterization set. © IFIP International Federation for Information Processing 2015.		Groz, R.; Simao, A.; Petrenko, A.; Oriat, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2015				
595		ModelGuidance	Definition of consistency rules between UML use case and activity diagram	Consistency is the situation where two or more overlapping elements of different diagrams that describe the behavior of system are jointly satisfiable. It is one of the attributes to measure the quality of UML model. Even though the research on consistency between diagrams is rapidly increased, there is still lack of research of consistency driven by use case. Therefore, this paper will define elements of use case and activity diagram, also consistency between them using logic approach. Based on an example of UML model consists of both diagrams, we show how the diagrams fulfilled our proposed consistency rules. Furthermore, the elements involved in the consistency rules are detected and formally reasoned. © 2011 Springer-Verlag.		Ibrahim, N.; Ibrahim, R.; Saringat, M.Z.; Mansor, D.; Herawan, T.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2011				
596		ModelGuidance	A mechanism for data interchange between embedded software sub-systems developed using heterogenous modeling domains	In the domain of embedded systems, the complexities involved in embedded software development are being successfully addressed by the emerging field of model-based software development and testing. However, in embedded systems, the underlying embedded software is often expected to collaborate with various hardware, mechanical, electrical modules/technologies. To address this aspect of heterogeneity in embedded systems, practitioners of model-based embedded software engineering are required to use more than one modeling language. This is essential to address the multi-faceted design aspects/requirements of an embedded system. This paper elaborates on the existing data interchange and coupling mechanisms between embedded software sub-systems modeled using UML and Matlab/Simulink. While there are some existing coupling mechanisms for data exchange among heterogenous modeling domains, they are all not applicable to all real-time operating systems and/or limited to a few simulation studies. This paper addresses the aforementioned gaps and proposes a simple, generic methodology for data exchange between events (in UML domain) and signals (in Matlab/Simulink domain). The proposed approach is elaborated using a seesaw (real-word) embedded software system application scenario example. Initial prototype implementation of the proposed approach, experimental results and some future directions are outlined. Copyright © 2015 SCITEPRESS - Science and Technology Publications.		Iyenghar, P.; Samson, B.; Spieker, M.; Noyer, A.; Wuebbelmann, J.; Westerkamp, C.; Pulvermueller, E.	MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings					Excluded	Excluded	new_screen			2		2015				
597		ModelGuidance	Data integration between objectiver and DB-main: A case study of a Model-Driven Interoperability bridge	In building software systems, the integration of tools with the purpose of exchanging data (i.e. tool interoperability) is common practice. Such an integration is one of the application scenarios of Model-Driven Engineering (MDE), which is often called Model-Driven Interoperability (MDI). In the last few years, some MDI approaches have been presented, and they have shown how MDE techniques are useful in bridging tools in order to integrate data. However, the number of case studies is still limited and more practical experiences of building MDI bridges should be published. In this article, we present an MDI bidirectional bridge that integrates the Objectiver and DB-Main tools. DB-Main database schemas are obtained from Objectiver object models, and they are kept consistent. Through this case study, we contrast the majority of techniques that can be used to implement a MDI solution. We mainly focus on the level of automation offered by each alternative. Some lessons learned are commented on. © Copyright 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.		Bermúdez Ruiz, F.J.; García Molina, J.J.; Díaz García, O.	MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development					Excluded	Excluded	new_screen			2		2016				
598		ModelGuidance	Model-based requirements and properties specifications trends for early design verification of embedded systems	Model Based System Engineering (MBSE) has shown promising results for early design verification of embedded systems. It requires to specify system properties / constraints at higher abstraction level along with the structural and behavioral requirements. However, selection of appropriate requirement and property specifications approaches is challenging due to complex behavioral / temporal aspects of embedded systems. To analyze the scientific advancements, in this article, an investigation of emerging trends for the representation of constraints and the utilization/customization of UML along with its SYSML / MARTE profiles is presented. 52 researches are selected through a Systematic Literature Review (SLR). It allows to analyze the utilization and customization of aforementioned profiles for requirement specification of embedded systems. Another outcome is the identification and comparative analysis of properties specification trends for the representation of embedded systems constraints at higher abstraction level. This investigation certainly benefits the researchers and practitioners for the selection of appropriate requirement and property specification approaches in MBSE for embedded systems. © 2016 IEEE.		Rashid, M.; Anwar, M.W.; Azam, F.; Kashif, M.	2016 11th Systems of Systems Engineering Conference, SoSE 2016					Excluded	Excluded	new_screen			2		2016				
599		ModelGuidance	Model Checking of Visual Scripts Created by UE4 Blueprints	This paper proposes a method for applying model checking for video game logic written by Unreal Engine 4 Blueprints. We use a model-checker NuSMV to verify game logic. We provide a method for representing behavior written in blueprints as an input model for NuSMV. In Unreal Engine 4 Blueprints, game logic is described as node-graph style visual scripts. In the proposed method, inputs and outputs of nodes are modeled as variables in the model. The behaviors of the inputs and outputs are represented as transitions of the variables. We also conduct an application experiment of the proposed method for the game logic written by Unreal Engine 4 Blueprints. © 2020 IEEE.		Igawa, N.; Yokogawa, T.; Takahashi, M.; Arimoto, K.	Proceedings - 2020 9th International Congress on Advanced Applied Informatics, IIAI-AAI 2020					Excluded	Excluded	new_screen			2		2020				
600		ModelGuidance	Behaviour pattern-based model generation for model-based testing	This paper presents the concept of using behavioral pattern mining to generate models for model-based testing. These patterns are mined from observations captured from execution scenarios of the system under test, and the different patterns are combined in order to provide a suitable higher-level model for model-based testing. The concept is first discussed on a general level, providing a basis for implementation of semi-automated model generation algorithms based on combinations of different behavioral patterns. This concept is illustrated by showing how to generate extended finite state-machine models in a format suitable for model-based testing. The generated model is further validated by applying it for model-based testing of a real software component, where it reveals actual faults in the system under test. In addition to the benefits, the discovered limitations of the approach are discussed. Future work is discussed as potential means to address these limitations. © 2009 IEEE.		Kanstrén, T.	Computation World: Future Computing, Service Computation, Adaptive, Content, Cognitive, Patterns, ComputationWorld 2009					Excluded	Excluded	new_screen			2		2009				
601		ModelGuidance	A user-centered approach for modelingweb interactions using colored petri nets	Interactions are communication acts which take place between at least two agents and result in information interchange. To represent these activities, formal methods can be used to model interaction flows and Colored Petri Nets (CPNs) are a handy formal language with graphical notation for modeling systems. This paper introduces wiCPN (Web Interaction Modeling Using Colored Petri Nets), a language based on CPNs for representing Web interactions with improved notation. Our proposal is first presented with its proper refinements over traditional CPNs. Next, we have applied the approach for modeling the interaction of Classroom eXperience's (CX)Web front-end, a real u-learning environment. As CX is an educational system developed to assist instructors and students during academic activities, we verified the developed model's reachability to ensure it was able to represent users different access levels. We also validated our proposal with user experiments, comparing it with UML. Our designed model represented CX's interaction correctly, considering user access levels and maintaining an understandable notation. Results indicate advantages of wiCPN over UML for modeling interactive interfaces. By gathering strengths of Petri Nets with a higher level graphical notation, wiCPN propitiated better understanding of the model, representing interaction in a structured and intuitive way. Copyright © 2015 SCITEPRESS - Science and Technology Publications.		Brant-Ribeiro, T.; Araújo, R.; Mendonça, I.; Soares, M.S.; Cattelan, R.G.	ICEIS 2015 - 17th International Conference on Enterprise Information Systems, Proceedings					Excluded	Excluded	new_screen			2		2015				
602		ModelGuidance	D-REQs: Determination of security & safety requirements in workshops based on the use of model-based systems engineering	Cyber-physical systems, like autonomous vehicles, are intelligent and networked. The development of such systems requires cooperation between different stakeholders. A lack of system understanding can lead to unidentified (safety relevant) security requirements (SRSR) in early engineering. This can increase product development costs or compromise system safety compliance. Model-based systems engineering (MBSE) improves the system understanding by using models. Conducting workshops in the context of MBSE promotes interaction between stakeholders so that confusion regarding SRSR can be resolved already in the workshop. Using the models created, requirements can be derived in the workshop. However, established security & safety approaches are not specifically designed to be used in conjunction with MBSE and requirements engineering. In this paper, we present an extension of our previously developed SAVE approach. This extension supports a team of stakeholders in workshops to derive SRSR using MBSE. We illustrate our approach with an example from the automotive domain and present an initial field study of the application of our approach, based on a 2-month student project.		S. Japs; H. Anacker; L. Kaiser; J. H. SE-TRIP; R. Dumitrescu; F. Kargl	2021 IEEE 29th International Requirements Engineering Conference Workshops (REW)					Included	Excluded	new_screen			2		2021				
603		ModelGuidance	Formal modeling and analysis of ad hoc Zone Routing Protocol in Event-B	Ad hoc routing protocols are responsible for searching a route from the source to the destination under the dynamic network topology. Hybrid routing protocols combine the features of proactive and reactive approaches. So, the formal specification of a hybrid routing protocol in the dynamic network environment is a challenge. In this paper, we formally analyze the Zone Routing Protocol (ZRP), a hybrid routing framework, using Event-B. We develop the formal specification by the refinement mechanism. It allows us to gradually model the network environment, the construction of routing zones, route discovery based on bordercasting service and routing update. We prove the stabilization property in the inactive environment. In addition, we demonstrate that discovered routes hold the loop freedom and validity in each reachable system state. To present that the formalization is consistent with the informally expressed requirements, we adopt an animator, ProB, to validate our model. Our work provides reference to analyze extensions of the ZRP and other hybrid routing protocols. © 2017, Springer-Verlag GmbH Germany.		Fu, C.; Zheng, K.	International Journal on Software Tools for Technology Transfer					Excluded	Excluded	new_screen			2		2019				
604		ModelGuidance	Model-based data-intensive service abstraction refinement	As an important technique to encapsulate data and integrate computing resources over Internet, Web service becomes one of the most promising infrastructures for developing the cross-platform application in SOA and SOC. However, due to the characteristics of heterogeneous, open, and collaborative, the correctness of data-intensive service should be guaranteed during its application. Considering the explosive data among services, this paper proposes a model-based data-intensive services abstraction refinement to model and verify the data-intensive service. First, the data flows and service interactions are formalized into DEFSM (Data-Related Extended Finite State Machine) model, which can describe the functional interactions and their parallel interactions. Second, the CEGAR (Counterexample-Guided Abstraction Refinement) method is employed to verify the correctness of the data-intensive service interaction. Third, the data-related property abstraction is used to refine the DEFSM model through spurious counterexample, partitioning the over-abstracted state into two independent states. Finally, a case study about online ticket sale system is designed to demonstrate the feasibility of our proposed method.		Yin, Y.; Gao, H.; Yu, D.	Journal of Internet Technology					Excluded	Excluded	new_screen			2		2013				
605		ModelGuidance	Towards a step semantics for story-driven modelling	Graph Transformation (GraTra) provides a formal, declarative means of specifying model transformation. In practice, GraTra rule applications are often programmed via an additional language with which the order of rule applications can be suitably controlled. Story-Driven Modelling (SDM) is a dialect of programmed GraTra, originally developed as part of the Fujaba CASE tool suite. Using an intuitive, UML-inspired visual syntax, SDM provides usual imperative control flow constructs such as sequences, conditionals and loops that are fairly simple, but whose interaction with individual GraTra rules is nonetheless non-trivial. In this paper, we present the first results of our ongoing work towards providing a formal step semantics for SDM, which focuses on the execution of an SDM specification. © 2016, Open Publishing Association. All rights reserved.		Kulcsár, G.; Anjorin, A.	Electronic Proceedings in Theoretical Computer Science, EPTCS					Excluded	Excluded	new_screen			2		2016				
606		ModelGuidance	Specification of non-functional requirements: A hybrid approach	When specifying user requirements, not only it is critical to ensure correct and unambiguous specification of functional requirements, but also that of non-functional requirements (NFRs). In fact, resolving ambiguities from user specified natural language NFRs and specifying the correct ones in a formal language have attracted significant attention. Our current research focuses on the issues pertaining the same. We observe that it is a usual practice for a user to narrate the NFRs in natural language and the requirement engineers manually try to express the same, using some semi-formal or formal language notations. However, inaccurate and the laborious manual approach may fail to detect all the NFRs and correctly remove the ambiguities in those detected. Hence, current research attempts have focused on automating the conversion of natural language NFRs to formal notations. In literature, there exist numerous approaches that take requirements as input and output the extended UML counterpart including NFRs. However, majority of the approaches do not support ambiguity resolution and verification of the extracted NFRs that are fairly essential. In this paper, we propose and discuss a hybrid approach viz. NFRs-Specifier, that attempts to resolve ambiguities, extract NFR's, perform verification and generate NFRs specification by means of the extended UML model.		Shah, U.S.; Patel, S.J.; Jinwala, D.C.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2016				
607		ModelGuidance	Progress and Quality Modeling of Requirements Analysis Based on Chaos	It is important and difficult for us to know the progress and quality of requirements analysis. We introduce chaos and software requirements complexity to the description of requirements decomposing, and get a method which can help us to evaluate the progress and quality. The model shows that requirements decomposing procedure has its own regular pattern which we can describe in a equation and track in a trajectory. The requirements analysis process of a software system can be taken as normal if its trajectory coincide with the model. We may be able to predict the time we need to finish all requirements decomposition in advance based on the model. We apply the method in the requirements analysis of homephone service management system, and the initial results show that the method is useful in the evaluation of requirements decomposition.		J. Ge; Y. Fang	2008 Advanced Software Engineering and Its Applications					Excluded	Excluded	new_screen			2		2008				
608		ModelGuidance	Applying Formal Software Engineering Techniques to Smart Grids	Engineering complex systems that have to meet critical requirements is a difficult task, especially if multiple engineering disciplines are involved. Common practice in domains like the automotive or avionic industry shows that formal methods improve engineering process efficiency for embedded software due to abilities like abstraction, early verification and iterative refinement. This paper presents how existing formal software engineering methods can be adapted to meet the needs of the smart grid domain. A case study demonstrates how we develop a basic interdisciplinary but semantically integrated decomposition of a household including electric and software behavior. Finally, we provide first simulation results to evaluate the feasibility of the model as well as the presented engineering method.		Hackenberg, Georg; Irlbeck, Maximilian; Koutsoumpas, Vasileios; Bytschkow, Denis	Proceedings of the First International Workshop on Software Engineering Challenges for the Smart Grid					Excluded	Excluded	new_screen			2		2012				
609		ModelGuidance	Genie in a model? Why model driven security will not secure your web application	More often a new software development methodology called Model Driven Engineering (MDE) is used to increase productivity by supporting powerful code generation tools, which allows a less errorprone implementation process. However the idea of modeling system aspects during the design phase - so called Model Driven Security (MDS) - was proposed by the scientific community decades ago and yet it is still unclear whether MDS can improve the security of a software project. In this paper we provide a comprehensive evaluation of current MDS approaches based on a web application scenario in regards to the most common web security attacks. We discuss their strengths and limitations as well as the practicability of MDS for modern web application security in general. © 2014 Innovative Information Science and Technology Research Group. All rights reserved.		Hochreiner, C.; Frühwirt, P.; Ma, Z.; Kieseberg, P.; Schrittwieser, S.; Weippl, E.	Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications					Excluded	Excluded	new_screen			2		2014				
610		ModelGuidance	Towards a Model-Integrated Runtime Monitoring Infrastructure for Cyber-Physical Systems	"Runtime monitoring is essential for ensuring the safe operation and enabling self-adaptive behavior of Cyber-Physical Systems (CPS). It requires the creation of system monitors, instrumentation for data collection, and the definition of constraints. All of these aspects need to evolve to accommodate changes in the system. However, most existing approaches lack support for the automated generation and setup of monitors and constraints for diverse technologies and do not provide adequate support for evolving the monitoring infrastructure. Without this support, constraints and monitors can become stale and become less effective in long-running, rapidly changing CPS. In this ""new and emerging results"" paper we propose a novel framework for model-integrated runtime monitoring. We combine model-driven techniques and runtime monitoring to automatically generate large parts of the monitoring framework and to reduce the maintenance effort necessary when parts of the monitored system change. We build a prototype and evaluate our approach against a system for controlling the flights of unmanned aerial vehicles."		Vierhauser, Michael; Marah, Hussein; Garmendia, Antonio; Cleland-Huang, Jane; Wimmer, Manuel	Proceedings of the 43rd International Conference on Software Engineering: New Ideas and Emerging Results					ConflictExcluded	Excluded	new_screen			2		2021				
611		ModelGuidance	A Model-Driven Engineering Transition-Based GUI Testing Technique	Model Driven Engineering (MDE) have arisen as a new software development paradigm which is based on creating a set of models that represent the GUI, afterwards to generate the GUI based on these models using a series of transformations to convert the models between the different levels of abstractions, which enables the automation of the development process. This inspires us to think of a model-based testing technique that is able to test the GUIs that are designed using Model-Driven engineering by finding the proper model that can serve as a testing model. This paper proposes model-based testing technique that is derived from the design models used to develop the GUI in the Model-Driven Engineering paradigm.		E. M. Saleh; O. Al Sheik Salem	2015 International Conference on Computational Science and Computational Intelligence (CSCI)					Included	Excluded	new_screen			2		2015				
612		ModelGuidance	Tool support for automatic model transformation specification using concrete visualisations	Complex model transformation is crucial in several domains, including Model-Driven Engineering (MDE), information visualisation and data mapping. Most current approaches use meta-model-driven transformation specification via coding in textual scripting languages. This paper demonstrates a novel approach and tool support that instead provides for specification of correspondences between models using concrete visualisations of source and target models, and generates transformation scripts from these by-example model correspondence specifications. © 2013 IEEE.		Avazpour, I.; Grundy, J.; Grunske, L.	2013 28th IEEE/ACM International Conference on Automated Software Engineering, ASE 2013 - Proceedings					Excluded	Excluded	new_screen			2		2013				
613		ModelGuidance	Using models of partial knowledge to test model transformations	Testers often use partial knowledge to build test models. This knowledge comes from sources such as requirements, known faults, existing inputs, and execution traces. In Model-Driven Engineering, test inputs are models executed by model transformations. Modelers build them using partial knowledge while meticulously satisfying several well-formedness rules imposed by the modelling language. This manual process is tedious and language constraints can force users to create complex models even for representing simple knowledge. In this paper, we want to simplify the development of test models by presenting an integrated methodology and semi-automated tool that allow users to build only small partial test models directly representing their testing intent. We argue that partial models are more readable and maintainable and can be automatically completed to full input models while considering language constraints. We validate this approach by evaluating the size and fault-detecting effectiveness of partial models compared to traditionally-built test models. We show that they can detect the same bugs/faults with a greatly reduced development effort. © 2012 Springer-Verlag.		Sen, S.; Mottu, J.-M.; Tisi, M.; Cabot, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2012				
614		ModelGuidance	Detecting and resolving model inconsistencies using transformation dependency analysis	Model inconsistency management is a crucial aspect of model-driven software engineering. It is therefore important to provide automated support for this activity. The problem is, however, that the resolution of inconsistencies may give rise to new inconsistencies. To address this problem, we propose to express inconsistency detection and resolutions as graph transformation rules, and to apply the theory of critical pair analysis to analyse potential dependencies between the detection and resolution of model inconsistencies. As a proof-of-concept, we report on an experiment that we have carried out along these lines using the critical pair analysis algorithm implemented in the state-of-the-art graph transformation tool AGG. The results show that both anticipated and unexpected dependencies between inconsistency detection and resolution rules are found by AGG. We discuss how the integration of the proposed approach into contemporary modelling tools may improve inconsistency management in various ways. © Springer-Verlag Berlin Heidelberg 2006.		Mens, T.; Van Straeten, R.D.; D'Hondt, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2006				
615		ModelGuidance	What is a multi-modeling language?	"In large software projects often multiple modeling languages are used in order to cover the different domains and views of the application and the language skills of the developers appropriately. Such ""multi-modeling"" raises many methodological and semantical questions, ranging from semantic consistency of the models written in different sublanguages to the correctness of model transformations between the sublanguages. We provide a first formal basis for answering such questions by proposing semantically well-founded notions of a multi-modeling language and of semantic correctness for model transformations. In our approach, a multi-modeling language consists of a set of sublanguages and correct model transformations between some of the sublanguages. The abstract syntax of the sublanguages is given by MOF meta-models. The semantics of a multi-modeling language is given by associating an institution, i.e., an appropriate logic, to each of its sublanguages. The correctness of model transformations is defined by semantic connections between the institutions. © 2009 Springer Berlin Heidelberg."		Boronat, A.; Knapp, A.; Meseguer, J.; Wirsing, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
616		ModelGuidance	Creating Formal Models from Informal Design Artefacts	The use of robust software engineering processes is essential in the design and development of interactive systems. This ensures that software is both functionally correct and also usable in the required context. There are a variety of software engineering techniques that can be used to consider different aspects of a system under construction, and at different stages in the development process. There is, however, a natural tension between formal approaches (typically used in the domain of safety-critical systems to consider functional correctness) and informal design approaches, which focus on users and user requirements in a manner which is accessible by stakeholders. In this paper we present two new approaches which enable a tighter coupling of informal design requirements with formal models. We present examples of these two approaches and discuss the benefits that transformations between the informal and formal provide. We also discuss the current limitations of such work along with recommendations about how these might be addressed. © 2022 Taylor & Francis Group, LLC.		Bowen, J.; Weyers, B.; Liu, B.	International Journal of Human-Computer Interaction					Excluded	Excluded	new_screen			2		2022				
617		ModelGuidance	Cloud computing security: Architecture, mechanism and modeling	With the wide use of cloud computing services, tenants require higher and higher security assurance. The characteristics of cloud computing are dynamics, randomness, complexity and openness, which make the original security solutions difficult to be applied to the cloud environment, so this is a big obstacle to the development of cloud computing. We analyze the features and security challenges of cloud computing, and do a survey on security architecture, mechanism and model. We propose a security architecture which needs trusted root, trusted link and trusted high level services to be the security assurance, and it also needs controllable, monitorable security management and measurable process of security optimization. We analyze and compare the present research results of security model and mechanism in the cloud. At last, we propose a security modeling method based on the multiqueue multiserver model.		Lin, C.; Su, W.-B.; Meng, K.; Liu, Q.; Liu, W.-D.	Jisuanji Xuebao/Chinese Journal of Computers					Excluded	Excluded	new_screen			2		2013				
618		ModelGuidance	Testing from formal specifications, a generic approach	Deriving test cases from specifications is now recognised as a major application of formal methods to software development. Several methods have been proposed for various formalisms: behavioural descriptions such as transition systems, model-based specifications, algebraic specifications, etc. This article presents a general framework for test data selection from formal specifications. A notion of “exhaustive test set” is derived from the semantics of the formal notation and from the definition of a correct implementation. Then a finite test set is selected via some “selection hypotheses”, This approach has been illustrated by its application to algebraic specifications, object-oriented Petri nets (CO-OPN2), LUSTRE, and full LOTOS. © Springer-Verlag Berlin Heidelberg 2001.		Gaudel, M.-C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2001				
619		ModelGuidance	Software quality improvement via pattern-based model refactoring	This paper describes an approach to refactoring a software model using design patterns to improve design quality. In this approach, we define a design pattern as a set of three components, a problem specification characterizing problem models, a solution specification characterizing solution models and a transformation specification describing how a problem model should be transformed to a solution model. A problem model is checked for pattern applicability against the problem specification. If the pattern is applicable, the transformation specification is instantiated and applied to the model to incorporate the pattern's solution properties. The resulting model is a solution model conforming to the solution specification of the pattern. We demonstrate the approach using the Visitor design pattern and a distributed monitoring system. © 2008 IEEE.		Kim, D.-K.	Proceedings of IEEE International Symposium on High Assurance Systems Engineering					Included	Excluded	new_screen			2		2008				
620		ModelGuidance	Towards formal checking of Web services substitutability	Web services are considered as one of the emerging technologies in the development, deployment and integration of Internet applications, and this, thanks to their features of universal interoperability and their ability to be reused and composed with other web services. Their substitution is one of the most challenging topics in service computing area. In this paper, we investigate a context-independent substitutability of Web services. We use Open Colored Petri Nets (OCNets) as a formal modeling framework of web services and we propose an approach for verifying the substitutability which proceeds in two steps. First, we compare the structures of OCNets' interfaces while deducting the type of the relation between them. After that, we generate the services automata of the OCNets, and we compare their behaviors by using the algorithm WS Behavioral Substitutability Checking. © 2016 IEEE.		Bourouz, S.; Zeghib, N.	ICAASE 2016 - Proceedings of the International Conference on Advanced Aspects of Software Engineering					Excluded	Excluded	new_screen			2		2017				
621		ModelGuidance	Addressing multi-domain integration challenge in robotics using model-based approach	Software development for robotic systems require knowledge from several domains. This paper highlights the application of domain modeling in SafeRobots Framework for designing robotic systems. We discuss how heterogeneous domain models can be modeled and integrated for systematic software development, and how it can be employed in intelligent model evolution.		Ramaswamy, A.; Monsuez, B.; Tapus, A.	CEUR Workshop Proceedings					Included	Excluded	new_screen			2		2014				
622		ModelGuidance	Reliability modeling and verification of communication algorithm flow for intelligent control system	The intelligent system controls the subsystems of each aircraft in real time to ensure the normal development of the tasks of the aircraft system. In the process of system communication, the control system is required to strictly control the correctness of the control algorithm flow and the accuracy of the control sequence in order to ensure the safety of the aircraft system. This paper uses UPPAAL, a formal model detection tool based on time automata theory, to formally model and validate the algorithm flow of an intelligent system and a subsystem. First, the algorithm flow of the intelligent system is analyzed, and then it is formally modeled using the time automaton method. Second, the properties that need to be verified are extracted from the algorithm flow and described with the formal language BNF. Finally, the function and performance correctness are automatically verified using the UPPAAL model detection tool. The experimental results verify that the intelligent system meets the security, accessibility and activity requirements. © 2021 IEEE.		Ran, W.; Jiajia, W.	Proceedings - 2021 4th International Conference on Advanced Electronic Materials, Computers and Software Engineering, AEMCSE 2021					Excluded	Excluded	new_screen			2		2021				
623		ModelGuidance	Generating multi-objective programs from variant-rich EAST-ADL product line architectures	The design of robust architectures for software-intensive systems in the automotive domain is a complex task and a considerable engineering challenge. Even conventional systems are usually subject to a multitude of conflicting design goals, such as unit cost and weight minimization, dependability augmentation and timing control. One feasible approach to resolve these conflicting levers on a system's architecture is to perform an optimization analysis on a concretely defined design space, which in general is vast. For the purpose of the approach presented here, this design space is represented b fi an automated identification of variation points relevant for design space exploration. The identied variability information is then transformed into a convenient mathematical representation for product-line-aware architecture optimization.		Wägemann, T.; Werner, A.	Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)					Excluded	Excluded	new_screen			2		2015				
624		ModelGuidance	Stable Template for Stable Analysis Patterns (Represented by Ontologies)	Raminhos' template is used as a representation of analysis patterns, and it was generated: from experience, by analogies, and based on design patterns. However, analysis patterns are rarely reused, because there are some difficulties in their adaptation to different domains. In this article we report, in order to reduce these difficulties, integration of Raminhos' template with concepts of the software stability model. The resulting template allows identifying different stability types of components: from enduring (most stable objects), to specific objects for a given scenario. This information allows effective adaptation of analysis patterns to several domains. Other problem is that descriptions of analysis patterns are difficult to be stored and utilized. To reduce this problem, we describe the storage of the stable template components, and their relations, as knowledge, using ontologies. To validate the description by means of the stable template, and its ontology representation, three analysis patterns were used: 1) reservation and use of reusable entities, 2) order and envoice of products, and 3) inventory. © 2015 IEEE.		García, M.G.; Jiménez, R.C.M.; Brito, J.M.V.; Ramírez, R.M.L.	IEEE Latin America Transactions					Excluded	Excluded	new_screen			2		2015				
625		ModelGuidance	Extended design-by-contract approach to specification and conformance testing of distributed software	Increasing effort in development of high quality distributed systems requires ground methodological base. Design by Contract approach looks very promising as a candidate since it helps to obtain component-wise specification and design, to separate concerns between developers, and makes development of high quality complex systems a manageable process. Unfortunately, in its classic form it can hardly be applied to distributed network applications because of lack of adequate means to describe asynchronous events. We extend Design by Contract with capabilities to describe callbacks and asynchronous communication between components and apply it to specify distributed software and to develop conformance test suites in automated manner. Specifications are developed in extensions of programming languages that makes them clear for industrial developers and decreases test construction effort. Practical results of numerous successful applications of the method are described.		Kuliamin, V.; Pakoulin, N.; Petrenko, A.	WMSCI 2005 - The 9th World Multi-Conference on Systemics, Cybernetics and Informatics, Proceedings					Excluded	Excluded	new_screen			2		2005				
626		ModelGuidance	RobotML for industrial robots: Design and simulation of manipulation scenarios	Robotic systems are a typical example of complex systems. Their design involves a combination of different technologies, requiring a multi-disciplinary approach. This is particularly challenging when a robotic system is required to interact either with humans or other entities within its environment. To tackle this complexity, we propose a design and validation approach based on MDE (Model-Driven Engineering) principles for industrial manipulators. We propose an extension of RobotML for manipulation, a modelling environment based on the Papyrus tool, which was developed specifically for the robotics domain. The extension is aiming to model a complete robotic setting, including protagonists, objects, their properties, the interactions between them, the services provided by the robots, and the actions they can perform. Then we propose to use model execution techniques to validate the design models. We illustrate our approach on a robotic scenario dedicated to the Sybot collaborative robot. © 2016 IEEE.		Kchir, S.; Dhouib, S.; Tatibouet, J.; Gradoussoff, B.; Da Silva Simoes, M.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					Included	Excluded	new_screen			2		2016				
627		ModelGuidance	Comparing high-level modeling approaches for embedded system design	This paper presents a comparison between three different high-level modeling approaches for embedded systems design, focusing on systems that require dataflow models. The proposed evaluation investigates the facilities provided by these approaches for expressing system requirements, functional specification, and timing constraints. Properties like model readability, testability, and implementability are also considered. Moreover, the support to different Models of Computation is also evaluated. A Crane Control System is used as case study to apply the proposed comparison criteria. © 2005 IEEE.		Brisolara, L.; Becker, L.; Carro, L.; Wagner, F.; Pereira, C.E.; Reis, R.	Proceedings of the Asia and South Pacific Design Automation Conference, ASP-DAC					Excluded	Excluded	new_screen			2		2005				
628		ModelGuidance	Engineering and hardening of functional fail-operational architectures for highly automated driving	Rising automation levels in the automotive domain demand a shift from the fail-safe to the fail-operational paradigm. Fail-operational architectures and behaviors are inherently more complex and thus require special diligence from a safety engineering point of view. In this work, we present how we tailored and applied a methodology that facilitates the design of fail-operational architectures from early design stages on by enabling informed judgment regarding the gradually evolved architecture's fitness for purpose. The method specifically considers resilience regarding dynamic changes in environmental conditions, including V2X aspects and internal capabilities. In this paper, we summarize our experiences in applying the methodology in a highway pilot case study. Furthermore, we present essential extensions of the methodology for modeling and evaluating the operational design domain. © 2019 IEEE.		Adler, R.; Akram, M.N.; Feth, P.; Fukuda, T.; Ishigooka, T.; Otsuka, S.; Schneider, D.; Yoshimura, K.	Proceedings - 2019 IEEE 30th International Symposium on Software Reliability Engineering Workshops, ISSREW 2019					Excluded	Excluded	new_screen			2		2019				
629		ModelGuidance	UML 2.0 ACTIVITY DIAGRAMS/CSP INTEGRATED APPROACH FOR MODELING AND VERIFICATION OF SOFTWARE SYSTEMS	This paper proposes an approach that integrates UML 2.0 Activity Diagrams (UML2-ADs) and the communicating sequential process (CSP) for modeling and verifying software systems. A UML2-AD is used for modeling a software system, while a CSP is used for verification purposes. The proposed approach consists of another way of transforming UML2-AD models to CSP models. It also focuses on checking the correctness of some properties of the transformation itself. These properties are specified using linear temporal Logic (LTL) and verified using the GROOVE model checker. This approach is based on model- driven engineering (MDE). The meta-modeling is realized using the AToMPM tool, while the model transformation and the correctness of its properties are realized using the GROOVE tool. Finally, we illustrated this approach through a case study. © 2021. Author(s). This is an open access publication, which can be used, distributed and reproduced in any medium according to the Creative Commons CC-BY 4.0 License. All Rights Reserved.		Elmansouri, R.; Meghzili, S.; Chaoui, A.	Computer Science					Included	Excluded	new_screen			2		2021				
630		ModelGuidance	Model-based development of adaptive UIs for multi-channel self-service systems	Self-Service Systems are technically complex and provide products and services to end users. Due to the heterogeneity of the users of such systems and their short residence time, the usability of a system’s user interface is of great importance. Currently, an intuitive and flexible usage is often limited because of the monolithic system architecture of existing Self-Service Systems. Furthermore, today’s Self-Service Systems represent the one-and-only endpoint of communication with a customer when processing a transaction. The integration of the customer’s personal computing devices, like desktop PC, notebook, and smartphone is not sufficiently covered yet. In order to tackle these problems, we have established a methodology for developing adaptive UIs for Multi-Channel Self-Services where a customer may, for example, start a transaction on a PC at home, modify it with the smartphone, and finally finish it at a Self-Service terminal. In this paper we describe our integrated model-based approach for the development of adaptive user interfaces for distributed Multi-Channel Self-Service Systems. © IFIP International Federation for Information Processing 2014.		Yigitbas, E.; Fischer, H.; Kern, T.; Paelke, V.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2014				
631		ModelGuidance	Proving the Safety of a Sliding Window Protocol with Event-B	This paper presents an Event-B modeling of the general version of the Sliding Window Protocol (SWP). SWPs ensure reliable data transfer over unreliable media by routing frames together with their indexes. Providing SWPs with formal guarantees is recognized to be quite complex. The experiment we present here shows that Event-B refinement is a suitable approach to ensure the safety of the protocol. First a simple model is developed with unbounded frame indexes. Then bounded indexes and modular arithmetic are introduced, as concrete indexes have fixed size. At this “hybrid” level, unbounded indexes are not used any more in computations but they are still useful to express some properties. Finally, abstract general media are refined towards queues, as an example of implementation. All unbounded indexes fully disappear in the final model. © 2021, Springer Nature Switzerland AG.		Coudert, S.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2021				
632		ModelGuidance	Run-time requirements verification for reconfigurable systems	Context: Modern software systems often are distributed, run on virtualized platforms, implement complex tasks and operate on dynamically changing and unpredictable environments. Such systems need to be dynamically reconfigured or evolve in order to continue to meet their functional and non-functional requirements, as load and computation need to change. Such reconfiguration and/or evolution actions may cause other requirements to fail. Objective: Given models that describe with a degree of confidence the requirements that should hold in a running software system, along with their inter-dependencies, our objective is to propose a framework that can process these models and estimate the degree requirements hold as the system is dynamically altered or adapted. Method: We present an approach where requirements and their inter-dependencies are modeled using conditional goal models with weighted contributions. These models can be translated into fuzzy rules, and fuzzy reasoners can determine whether and to what degree, a requirement may be affected by a system change, or by actions related of other requirements. Results: The proposed framework is evaluated for its performance and stability on goal models of varying size and complexity. The experimental results indicate that the approach is tractable even for large models and allows for dealing with models where contribution links are of varying importance or weight. Conclusion: The use of conditional weighted goal models combined with fuzzy reasoners allowed for the tractable run-time evaluation of the degree by which system requirements are believed to hold, when such systems are dynamically altered or adapted. The approach aims to shed light towards the development of run-time requirements verification and validation techniques for adaptive systems or systems that undergo continuous, or frequent evolution. (C) 2016 Elsevier B.V. All rights reserved.		Chatzikonstantinou, George; Kontogiannis, Kostas	INFORMATION AND SOFTWARE TECHNOLOGY					Included	Excluded	new_screen			2		2016				
633		ModelGuidance	Using self-organizing maps to learn hybrid timed automata in absence of discrete events	Modern industrial plants become more complex and consequently monitoring them often exceeds the capabilities of human operators. Model-based diagnosis is a commonly used approach to identify anomalies and root causes within a system through the use of models, which are often times manually created by experts. However, manual modelling takes a lot of effort and is not suitable for today's fast-changing systems. Today, the large amount of sensor data provided by modern plants enables data-driven solutions and models can be learned from data, significantly reducing the manual modelling efforts. These data-driven solutions enable tasks such as condition monitoring: Anomalies can be detected automatically, giving operators the chance to restore the plant to a working state before production losses occur. The choice of the model depends on a couple of factors, one of which is the type of the available signals. Hybrid timed automata are one type of model which separate the systems behaviour into different modes, e.g. 'valve open' or 'motor is running' through discrete events which are for example created from binary signals of the plant or through real-valued signal thresholds, defined by experts. The real-valued signals are then separated into the corresponding modes to improve the anomaly detection process in comparison to unseparated data. The anomaly detection for hybrid timed automata combines the detection of timing errors and sequence errors in the mode changes and the detection of anomalies in the real-valued signals. However, binary signals or expert knowledge to generate the much needed discrete events are not always available from the plant and automata can not be learned. The unsupervised, nonparametric approach presented and evaluated in this paper uses self-organizing maps and watershed transformations to allow the use of hybrid timed automata on data where learning of automata was not possible before. © 2017 IEEE.		Von Birgelen, A.; Niggemann, O.	IEEE International Conference on Emerging Technologies and Factory Automation, ETFA					Excluded	Excluded	new_screen			2		2017				
634		ModelGuidance	SQME: a framework for modeling and evaluation of software architecture quality attributes	Designing a software architecture that satisfies all quality requirements is a difficult task. To determine whether the requirements are achieved, it is necessary to quantitatively evaluate quality attributes on the architecture model. A good evaluation process should have proper answers for these questions: (1) how to feedback the evaluation results to the architecture model (i.e., improve the architecture based on the evaluation results), (2) how to analyze uncertainties in calculations, and (3) how to handle conflicts that may exist between the quality preferences of stakeholders. In this paper, we introduce SQME as a framework for automatic evaluation of software architecture models. The framework uses evolutionary algorithms for architecture improvement, evidence theory for uncertainty handling, and EV/TOPSIS for making trade-off decisions. To validate the applicability of the framework, a case study is performed, and a software tool is developed to support the evaluation process. © 2018, Springer-Verlag GmbH Germany, part of Springer Nature.		Sedaghatbaf, A.; Azgomi, M.A.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2019				
635		ModelGuidance	Systematic construction of i* strategic dependency models for socio-technical systems	Goal- and agent-oriented models have become a consolidated type of artifact in various software and knowledge engineering activities. Several languages exist for representing such type of models but there is a lack of associated methodologies for guiding their construction up to the necessary level of detail. In this paper we present RiSD, a method for building Strategic Dependency (SD) models in the i* notation. RiSD is defined in a prescriptive way to reduce uncertainness when constructing the model. RiSD tackles three fundamental issues: (1) it tends to reduce the average size of the resulting models; (2) it defines some traceability relationships among model elements; (3) it provides some lexical and syntactical conventions. As a result, we may say that RiSD supports the construction process of goal- and agent-oriented models whilst increasing their understanding. © World Scientific Publishing Company.		Franch, X.; Grau, G.; Mayol, E.; Quer, C.; Ayala, C.; Cares, C.; Navarrete, F.; Haya, M.; Botella, P.	International Journal of Software Engineering and Knowledge Engineering					Excluded	Excluded	new_screen			2		2007				
636		ModelGuidance	Model driven design of heterogeneous synchronous embedded systems	Synchronous embedded systems are becoming more and more complicated and are usually implemented with integrated hardware/software solutions. This implementation manner brings new challenges to the traditional model-driven design environments such as SCADE and STATEMATE, that supports pure hardware or software design. In this paper, we propose a co-design tool Tsmart-Edola to facilitate the system developers, and automatically generate the executable VHDL code and C code from the formal verified SyncBlock computation model. SyncBlock is a lightweight high-level system specification model with well defined syntax, simulation and formal semantics. Based on which, the graphical model editor, graphical simulator, verification translator, and code generator are implemented and seamlessly integrated into the Tsmart-Edola. For evaluation, we apply Tsmart-Edola to the design of a real-world train controller based on the international standard IEC 61375. Several critical ambiguousness or bugs in the standard are detected during formal verification of the constructed system model. Furthermore, the generated VHDL code and C code of Tsmart-Edola outperform that of the state-of-the-art tools in terms of synthesized gate array resource consumption and binary code size. © 2016 ACM.		Zhang, H.; Jiang, Y.; Liu, H.; Zhang, H.; Gu, M.; Sun, J.	ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering					Excluded	Excluded	new_screen			2		2016				
637		ModelGuidance	Trace-based Timing Analysis of Automotive Software Systems: An Experience Report	Trace-based timing analysis is a technique, which assesses the software timing requirements against the timing information contained in so-called traces, which are files collected from simulation tools or by running the actual systems. In this experience report, we describe our joint effort with Volvo Group Trucks Technology in designing and developing a round-trip, model-based framework for the trace-based timing analysis of automotive software. To validate the proposed framework, we use a mix of observational and descriptive methods. In particular, we validate the correctness and feasibility of the proposed approach using the Washer Wiper automotive functionality. Eventually, we discuss lessons learnt, the benefits and limitations of the proposed framework. © 2021 IEEE.		Bucaioni, A.; Ferko, E.; Lonn, H.	Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021					Excluded	Excluded	new_screen			2		2021				
638		ModelGuidance	Improving Adaptive Monitoring with Incremental Runtime Model Queries	Runtime models are often employed in different forms in self-adaptive software. They reflect, due to the causal connection, the current state of the adaptable software. Runtime model querying can be used to check whether the runtime model indicates the need for an adaptation or collect the information necessary to decide which adaptation should be performed. Given a set of runtime model queries, a natural question is how the effort to obtain and maintain the required information at runtime can be reduced. Besides the general need to reduce the overhead resulting from self-adaptation concerning its environmental impact, also restricted resources may make this a particularly relevant optimization. Two opportunities for effort reduction are the query evaluation and the necessary system state sensing. In this paper we consider both opportunities by investigating how our approach for adaptive monitoring with architecture runtime models can be improved through a better integration with an enhanced mechanism for incremental querying. We outline how incremental queries in this context can be optimized to better support adaptive monitoring. We compare different approach variants and present first very promising evaluation results that indicate that the optimized incremental queries have the potential to substantially reduce the monitoring effort and query time.		M. Barkowsky; T. Brand; H. Giese	2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)					Excluded	Excluded	new_screen			2		2021				
639		ModelGuidance	Towards Model Checking Android Applications	As feature-rich Android applications (apps for short) are increasingly popularized in security-sensitive scenarios, methods to verify their security properties are highly desirable. Existing approaches on verifying Android apps often have limited effectiveness. For instance, static analysis often suffers from a high false-positive rate, whereas approaches based on dynamic testing are limited in coverage. In this work, we propose an alternative approach, which is to apply the software model checking technique to verify Android apps. We have built a general framework named DROIDPF upon Java PathFinder (JPF), towards model checking Android apps. In the framework, we craft an executable mock-up Android OS which enables JPF to dynamically explore the concrete state spaces of the tested apps; we construct programs to generate user interaction and environmental input so as to drive the dynamic execution of the apps; and we introduce Android specific reduction techniques to help alleviate the state space explosion. DROIDPF focuses on common security vulnerabilities in Android apps including sensitive data leakage involving a non-trivial flow- and context-sensitive taint-style analysis. DROIDPF has been evaluated with 131 apps, which include real-world apps, third-party libraries, malware samples and benchmarks for evaluating app analysis techniques like ours. DROIDPF precisely identifies nearly all of the previously known security issues and nine previously unreported vulnerabilities/bugs.		Bai, Guangdong; Ye, Quanqi; Wu, Yongzheng; Botha, Heila; Sun, Jun; Liu, Yang; Dong, Jin Song; Visser, Willem	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2018				
640		ModelGuidance	Connectors as designs: Modeling, refinement and test case generation	Over the past years, the need for high-confidence coordination mechanisms has intensified as new technologies have appeared for the development of service-oriented applications, making formalization of coordination mechanisms critical. Unifying Theories of Programming (UTP) provide a formal semantic foundation not only for programming languages but also for various expressive specification languages. A key concept in UTP is design: the familiar pre/post-condition pair that describes a contract. In this paper we use UTP to formalize Reo connectors, whereby connectors are interpreted as designs in UTP. This model can be used as a semantic foundation for proving properties of connectors, such as equivalence and refinement relations between connectors. Furthermore, it can be used as a reference document for developing tool support for Reo, such as test case generators. A fault-based method to generate test cases for component connectors from specifications is also provided in this paper. For connectors, faults are caused by possible errors during the development process, such as wrongly used channels, missing or redundant subcircuits, or circuits with wrongly constructed topology. We give test cases and connectors a unifying formal semantics by using the notion of design in UTP, and generate test cases by solving constraints obtained from a specification and a faulty implementation. A prototype serves to demonstrate the automatization of the approach. © 2010 Elsevier B.V. All rights reserved.		Meng, S.; Arbab, F.; Aichernig, B.K.; Atefnoaei, L.; De Boer, F.S.; Rutten, J.	Science of Computer Programming					Excluded	Excluded	new_screen			2		2012				
641		ModelGuidance	Effective unit-testing in model-based software development	Model-based software development is extensively used in avionics and automotive safety critical control software ap- plications. In model-based software development, highly op- timized code is generated automatically from models. Such code is often hard to understand and this can make it difficult to write test cases. Therefore, in model based software development, test cases have to be derived based on the models to achieve coverage of code auto-generated from the models. Further, safety standards in those domains of- ten demand e ective unit-testing method to check functional requirements as well as achieve 100% code coverage. In this paper, we first discuss three methods for unit testing in model based software development, namely Modified Condition & Decision Coverage (MCDC), Classification tree and Exploratory methods. We then discuss results of our field study conducted on 3 live projects at Robert Bosch Engineering & Business Solutions Limited to check on the e ectiveness of three approaches. Based on the results from our field study, we conclude that MCDC method along with boundary value analysis is most productive to check func- tional requirements as well as achieve 100% coverage of auto- generated code. Copyright 2014 ACM.		Kamma, D.; Maruthi, P.	9th International Workshop on Automation of Software Test, AST 2014 - Proceedings					Excluded	Excluded	new_screen			2		2014				
642		ModelGuidance	Bug Localization in Model-Based Systems in the Wild	The companies that have adopted the Model-Driven Engineering (MDE) paradigm have the advantage of working at a high level of abstraction. Nevertheless, they have the disadvantage of the lack of tools available to perform bug localization at the model level. In addition, in anMDE context, a bug can be related to different MDE artefacts, such as design-time models, model transformations, or run-time models. Starting the bug localization in the wrong place or with the wrong tool can lead to a result that is unsatisfactory. We evaluate how to apply the existing model-based approaches in order to mitigate the effect of starting the localization in the wrong place. We also take into account that software engineers can refine the results at different stages. In our evaluation, we compare different combinations of the application of bug localization approaches and human refinement. The combination of our approaches plus manual refinement obtains the best results. We performed a statistical analysis to provide evidence of the significance of the results. The conclusions obtained from this evaluation are: humans have to be involved at the right time in the process (or results can even get worse), and artefact-independence can be achieved without worsening the results.		Arcega, Lorena; Font, Jaime; Haugen, Oystein; Cetina, Carlos	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					Excluded	Excluded	new_screen			2		2022				
643		ModelGuidance	Architectural runtime models for integrating runtime observations and component-based models	Keeping track of modern software applications while dynamically changing requires strong interaction of evolution activities on development level and adaptation activities on operation level. Knowledge about software architecture is key for both, developers while evolving the system and operators while adapting the system. Existing architectural models used in development differ from those used in operation in terms of purpose, abstraction and content. Consequences are limited reuse of development models during operation, lost architectural knowledge and limited phase-spanning consideration of software architecture. In this paper, we propose modeling concepts of the iObserve approach to align architectural models used in development and operation. We present a correspondence model to bridge the divergent levels of abstraction between implementation artifacts and component-based architectural models. A transformation pipeline uses the information stored in the correspondence model to update architectural models based on changes during operation. Moreover, we discuss the modeling of complex workload based on observations during operation. In a case study-based evaluation, we examine the accuracy of our models to reflect observations during operation and the scalability of the transformation pipeline. Evaluation results show the accuracy of iObserve. Furthermore, evaluation results indicate iObserve adequately scales for some cases but shows scalability limits for others. © 2020 Elsevier Inc.		Heinrich, R.	Journal of Systems and Software					Excluded	Excluded	new_screen			2		2020				
644		ModelGuidance	Search-based detection of model level changes	Software models, defined as code abstractions, are iteratively refined, restructured, and evolved due to many reasons such as reflecting changes in requirements or modifying a design to enhance existing features. For understanding the evolution of a model a-posteriori, change detection approaches have been proposed for models. The majority of existing approaches are successful to detect atomic changes. However, composite changes, such as refactorings, are difficult to detect due to several possible combinations of atomic changes or eventually hidden changes in intermediate model versions that may be no longer available. Moreover, a multitude of refactoring sequences may be used to describe the same model evolution. In this paper, we propose a multi-objective approach to detect model changes as a sequence of refactorings. Our approach takes as input an exhaustive list of possible types of model refactoring operations, the initial model, and the revised model, and generates as output a list of refactoring applications representing a good compromise between the following two objectives (i) maximize the similarity between the expected revised model and the generated model after applying the refactoring sequence on the initial model, and (ii) minimize the number of atomic changes used to describe the evolution. In fact, minimizing the number of atomic changes can important since it is maybe easier for a designer to understand and analyze a sequence of refactorings (composite model changes) rather than an equivalent large list of atomic changes (Weissgerber and Diehl 2006). Due to the huge number of possible refactoring sequences, a metaheuristic search method is used to explore the space of possible solutions. To this end, we use the non-dominated sorting genetic algorithm (NSGA-II) to find the best trade-off between our two objectives. The paper reports on the results of an empirical study of our multi-objective model changes detection technique as applied on various versions of real-world models taken from open source projects and one industrial project. We compared our approach to the simple deterministic greedy algorithm, multi-objective particle swarm optimization (MOPSO), an existing mono-objective changes detection approach, and two model changes detection tools not based on computational search. The statistical test results provide evidence to support the claim that our proposal enables the generation of changes detection solutions with correctness higher than 85 %, in average, using a variety of real-world scenarios. © 2016, Springer Science+Business Media New York.		Kessentini, M.; Mansoor, U.; Wimmer, M.; Ouni, A.; Deb, K.	Empirical Software Engineering					Excluded	Excluded	new_screen			2		2017				
645		ModelGuidance	A graph-model-based testing method compared with the classification tree method for test case generation	In automotive industry, mechanic control units are more and more replaced by electronic devices that are often aggregated in electronic control units (ECU). Systematic testing is one of the preferred industrial validation methods to ensure functionality of those ECUs. It is imperative to reduce the costs and improve the effectiveness of testing by automating the testing process. This paper introduces a model-based testing method using event sequence graphs and compares this approach with the classification tree method which is popular in automotive industry. A case study applies both methods to the formal specification of an adaptive cruise control unit for generation and selection of test cases. To enable a meaningful comparison, test costs and number of faults revealed by both methods will be compared. © 2009 IEEE.		Belli, F.; Hollmann, A.; Kleinselbeck, M.	SSIRI 2009 - 3rd IEEE International Conference on Secure Software Integration Reliability Improvement					Excluded	Excluded	new_screen			2		2009				
646		ModelGuidance	Goal-oriented methodology for agent system development	The Goal-Orientation is one of the key features in agent systems. This paper proposes a new methodology for multi-agent system development based on Goal Net model. The methodology covers the whole life cycle of the agent system development, from requirement analysis, architecture design, detailed design to implementation. A Multi-Agent Development Environment (MADE) that facilitates the design and implementation of agent systems is presented. A case study on an agent-based e-learning system developed using the proposed methodology is illustrated in this paper. Copyright © 2006 The Institute of Electronics, Information and Communication Engineers.		Shen, Z.; Miao, C.; Gay, R.; Li, D.	IEICE Transactions on Information and Systems					Excluded	Excluded	new_screen			2		2006				
647		ModelGuidance	Cloud function performance: A component modeling approach	Cloud Functions are a trend in cloud computing in which developers are allowed to install code in a Function-as-a-Service (FaaS) platform able to manage provisioning, execution, monitoring and automatic scaling. The underlying infrastructure in FaaS platforms is hidden from the developers and designers and, since the influence of the infrastructure is unknown, this makes it difficult to apply software performance engineering approaches on cloud functions, which could lead to wrong or inaccurate performance estimations. In this study, we explore the use of component-based modeling and simulation in order to generate performance estimations of an exemplar cloud function which was exercised using a variety of workloads. A cloud function was both implemented and instrumented to record performance data in a log file, which was associated with its invocations. Providing the log file as an input, we extracted a component-based performance model in a format suitable for running simulations on the Palladio Component Model, to validate whether the generated model could explain the runtime behavior of the function. Using this approach and further tunings in the model, we were able to validate that the simulations could explain more than 95% of the function’s behavior and that component-based modeling and simulation can be considered a serious option when trying to explain the behavior of a cloud function. Copyright © 2021 The Authors, some rights reserved;		Flores-González, M.; Trejos-Zelaya, I.	CLEI Eletronic Journal (CLEIej)					Excluded	Excluded	new_screen			2		2021				
648		ModelGuidance	A framework for handling variants of software models	The United Nations Centre for Trade Facilitation and Electronic Business (UN/CEFACT) envisions seamless information exchange between business partners in electronic commerce. Therefore, UN/CEFACT provides the UML Profile for Core Components for the definition of document models based on UML class diagrams. Having used this approach for three years in practice, it became evident that managing document model versions is a prerequisite for successfully utilizing Core Components. While managing software versions in the area of Software Engineering is well understood and successfully applied in industrial projects, the direct application of the same techniques for versioning models is conditionally appropriate. In this research abstract we propose to combine techniques from traditional Software Configuration Management with the concepts of reference modeling, where similar problems are addressed in a different context. © 2010 ACM.		Pichler, C.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2010				
649		ModelGuidance	Modeling software development practices using reusable project patterns: A case study	Software process improvement in software development organizations is a complex task that can be solved using knowledge management strategies. The definition and use of process patterns is a proven approach to apply knowledge management strategies in software engineering organizations. One of the main problems for the effective application of process patterns is the difficulty of formalizing the knowledge about the development process using these approaches. In this paper, a framework to manage software project patterns is presented. This framework is composed of a model called reusable project pattern (RPP) and a tool called sdpReuser. It is able to formalize the knowledge on software development projects from software development methodologies, reference frameworks, best practices and also tacit knowledge, useful to software engineers. The authors carried out a case study at the University Carlos III of Madrid, where junior software engineers used RPP. This study shows that the quality of pattern formalization correlates with experience in specific software engineering methods, the quality of the references in software engineering practices and the collaboration among software engineers to develop an RPP. It also analyzed the usefulness of RPP information elements to help software engineers to identify the most appropriate RPP and how to adapt it to project restrictions. Copyright © 2013 John Wiley & Sons, Ltd.		Martín, D.; Guzmán, J.G.; Urbano, J.; Amescua, A.	Journal of Software: Evolution and Process					Excluded	Excluded	new_screen			2		2014				
650		ModelGuidance	A view-based approach for improving software documentation practices	Documentation is an integral part of a software system. It contains the information that is necessary to effectively and successfully develop, use, and maintain a system. In practice, however, the creation of appropriate documentation is largely neglected. This paper investigates the reasons for this neglect, presents view-based software documentation, our approach to improve the current situation, and reports on empirical evidence in support of the presented approach. Because the quality of documentation depends on its usage, view-based software documentation exploits existing software modeling techniques to provide all users of documentation with the documentation they require for performing their tasks. View-based software documentation has been empirically validated in a series of experiments and case studies that showed that the approach improves the completeness, correctness, and usefulness of produced and maintained documentation. One of the experiments is described here in more detail. © 2006 IEEE.		Bayer, J.; Muthig, D.	Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems					Excluded	Excluded	new_screen			2		2006				
651		ModelGuidance	Modeling mechanical functional architectures in SysML	Innovations in Cyber-Physical System (CPS) are driven by functionalities and features. Mechanical Engineering, on the other hand, is mainly concerned with the physical product architecture, i.e., the hierarchical arrangement of physical components and assemblies that forms the product, which is not explicitly linked to these functions. A holistic model-driven engineering approach for CPS, therefore, needs to bridge the gap between functions and the physical product architecture to enable agile development driven by automation. In the theoretical field of mechanical design methodology, functional architectures describe the functionality of the system under development as a hierarchical structure. However, in practice, these are typically not considered let alone modeled. Existing approaches utilizing mechanical functional architectures, however, do not formalize the relation between the functional architecture and the geometric design. Therefore, we conceived a meta-model that defines modeling-languages for modeling functional architectures of mechanical systems and physical solutions, i.e., interconnections of physical effects and geometries, as refinements of the functional components. We have encoded the meta-model as a SysML profile and applied it within an interdisciplinary, industrial project to model an automotive coolant pump. Our contribution signposts the potential of functional structures to not only bridge the gap between function and geometry in mechanics but also to integrate the heterogeneous domains participating in CPS engineering. © 2020 ACM.		Drave, I.; Rumpe, B.; Wortmann, A.; Berroth, J.; Hoepfner, G.; Jacobs, G.; Spuetz, K.; Zerwas, T.; Guist, C.; Kohl, J.	Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2020					Excluded	Excluded	new_screen			2		2020				
652		ModelGuidance	A statecharts - Based software development process for implementing atomic read/ write shared memory in mobile ad hoc network	Mobile agents' paradigm and technology is emerging as a powerful tool for engineering highly dynamic, reconfigurable distributed systems and applications in heterogeneous environments. This paper proposes a statecharts-based development process for implementing atomic read/write shared memory in mobile ad hoc networks(geoqurums approach),which allows for a seamless transition from the specification of mobile agent behavior to its implementation and adaptation to target mobile agent systems. In particular ,modeling of the mobile agent behavior is visual and its coding is seamlessly supported by the Mobile Active Object Framework(MAOF).the coded agent behavior can be adapted to platform-specific mobile agents by means of the Mobile Agent Adaptation Framework(MAAF).thus , enabling re-use of existing mobile agent systems.		Omara, F.A.; Shihata, R.A.	INFOS2010 - 2010 7th International Conference on Informatics and Systems					Excluded	Excluded	new_screen			2		2010				
653		ModelGuidance	A Model-Driven Development Framework for Satellite On-Board Software	Traditional satellites are designed and developed according to specific functions, resulting in large size, high price and long development cycle. With the rapid development of small satellite technology, the satellite has higher and higher degree of modularization. Similar to smartphones, satellites can dynamically upload “Apps” in-orbit, achieving the transition from “function satellites” to “smart satellites”. In view of the rapid, efficient and reliable development of on-board software, a model-driven software development framework and a development tool chain are proposed in this paper. To solve the problems of lack of standardized architecture in on-board software development, poor communication of various development stages, serious coupling of software and hardware, and low automation, the framework adopts unified architecture, standardized components, configurable integration and automatic code generation. The development tool chain provides a complete set of tools for entire on-board software development based on the model-driven framework. It improves the software reusability by decoupling software design from hardware platform and shortens the development period by automatically connecting the various development stages. Finally, this paper demonstrates and assesses the process of developing iSat-1, which is a CubeSat for function in-orbit defined experiment. © 2021, ICST Institute for Computer Sciences, Social Informatics and Telecommunications Engineering.		Qin, J.; Yang, N.; Wang, Y.; Yang, J.; Du, J.	Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering, LNICST					Excluded	Excluded	new_screen			2		2021				
654		ModelGuidance	Model-driven reverse engineering of legacy graphical user interfaces	Businesses are increasingly beginning to modernise those of their legacy systems that were originally developed with Rapid Application Development (RAD) or Fourth Generation Language (4GL) environments, in order to benefit from new platforms and technologies. In these systems, the Graphical User Interface (GUI) layout is implicitly provided by the position of the GUI elements (i.e. coordinates). However, taking advantage of current features of GUI technologies often requires an explicit, high-level layout model. We propose a Model-Driven Engineering process with which to perform the automatic reverse engineering of RAD-built GUIs, which is focused on discovering the implicit layout, and produces a GUI model in which the layout is explicit. As an example of the approach, we apply an automatic reengineering process to this model in order to generate a Java Swing user interface.		Sanchez Ramon, Oscar; Sanchez Cuadrado, Jesus; Garcia Molina, Jesus	AUTOMATED SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2014				
655		ModelGuidance	A PLA-based privacy-enhancing user modeling framework and its evaluation	Reconciling personalization with privacy has been a continuing interest in user modeling research. This aim has computational, legal and behavioral/attitudinal ramifications. We present a dynamic privacy-enhancing user modeling framework that supports compliance with users' individual privacy preferences and with the privacy laws and regulations that apply to each user. The framework is based on a software product line architecture. It dynamically selects personalization methods during runtime that meet the current privacy constraints. Since dynamic architectural reconfiguration is typically resource-intensive, we conducted a performance evaluation with four implementations of our system that vary two factors. The results demonstrate that at least one implementation of our approach is technically feasible with comparatively modest additional resources, even for websites with the highest traffic today. To gauge user reactions to privacy controls that our framework enables, we also conducted a controlled experiment that allowed one group of users to specify privacy preferences and view the resulting effects on employed personalization methods. We found that users in this treatment group utilized this feature, deemed it useful, and had fewer privacy concerns as measured by higher disclosure of their personal data. © 2012 Springer Science+Business Media B.V.		Wang, Y.; Kobsa, A.	User Modeling and User-Adapted Interaction					Excluded	Excluded	new_screen			2		2013				
656		ModelGuidance	Model Driven RichUbi - A Model-Driven Process to Construct Rich Interfaces for Context-Sensitive Ubiquitous Applications	Software development that meets the demand of Ubiquitous Computing, in which access to applications occurs anywhere, anytime and from different devices, has raised new challenges for Software Engineering. Among these challenges it stands out the development of context-sensitive ubiquitous applications. Much of the effort required for building such applications can be reduced through the reuse of the application's modeling. Different parts of a ubiquitous application can be reused, such as the user interface. Generate the interfaces' code so that they can self-adapt according to the different access contexts makes the application more dynamic and personalized. Therefore, by combining the conceptions of rich interfaces, domain-specific modeling, and context sensitivity, this paper presents a development process, called Model Driven RichUbi, to support the construction of rich interfaces for context-sensitive ubiquitous applications.		C. E. Cirilo; A. F. d. Prado; W. L. d. Souza; L. A. M. Zaina	2010 Brazilian Symposium on Software Engineering					Excluded	Excluded	new_screen			2		2010				
657		ModelGuidance	A Logic-Based Approach for the Verification of UML Timed Models	This article presents a novel technique to formally verify models of real-time systems captured through a set of heterogeneous UML diagrams. The technique is based on the following key elements: (i) a subset of Unified Modeling Language (UML) diagrams, called Coretto UML (C-UML), which allows designers to describe the components of the system and their behavior through several kinds of diagrams (e.g., state machine diagrams, sequence diagrams, activity diagrams, interaction overview diagrams), and stereotypes taken from the UML Profile for Modeling and Analysis of Real-Time and Embedded Systems; (ii) a formal semantics of C-UML diagrams, defined through formulae of the metric temporal logic Tempo Reale ImplicitO (TRIO); and (iii) a tool, called Corretto, which implements the aforementioned semantics and allows users to carry out formal verification tasks on modeled systems. We validate the feasibility of our approach through a set of different case studies, taken from both the academic and the industrial domain.		Baresi, Luciano; Morzenti, Angelo; Motta, Alfredo; Pourhashem, Mohammad Mehdi K.; Rossi, Andmatteo	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					Excluded	Excluded	new_screen			2		2017				
658		ModelGuidance	An integration of product-line engineering and model-driven development makes the full automation feasible	A Product Line (PL) is a set of products (applications) that share common assets in a domain. Product Line Engineering (PLE) is a set of principles, techniques, mechanisms, and processes that enables the realization of produce lines. Core assets, the common assets, are created and instantiated to make products in PLE. Model Driven Architecture (MDA) is a new software development paradigm which emphasizes its feasibility with automatically developing product by using model transformation. Therefore, we can get advantages of both two paradigms, PLE and MDA, as core assets are represented as PIM in MDA with predefined automatic mechanism. In this paper, we introduce a framework for automating software development in PLE using MDA. In the framework, we suggest a process which is based on PLE process and in which MDA techniques are applied. To effectively apply the given process, the proposed process should be augmented with a supporting tool in order to fully automate software production. Finally, our tool with PLE, MDA, and Eclipse techniques is used to improve productivity, applicability, maintainability and quality of product through automation.		Choi, S.W.; Her, J.S.; Chang, S.H.; La, H.J.; Min, H.G.; Kim, S.D.	Proceedings of the 10th IASTED International Conference on Software Engineering and Applications, SEA 2006					Excluded	Excluded	new_screen			2		2006				
659		ModelGuidance	A pattern-based approach for improving model quality	UML class diagrams play a central role inmodeling activities, and it is essential that class diagrams keep their high quality all along a product life cycle. Correctness problems in class diagrams are mainly caused by complex interactions among class-diagram constraints. Detection, identification, and repair of such problems require background training. In order to improve modelers' capabilities in these directions, we have constructed a catalog of anti-patterns of correctness and quality problems in class diagrams, where an anti-pattern analyzes a typical constraint interaction that causes a correctness or a quality problem and suggests possible repairs. This paper argues that exposure to correctness anti-patterns improvesmodeling capabilities. The paper introduces the catalog and its pattern language, and describes experiments that test the impact of awareness to modeling problems in class diagrams (via concrete examples and anti-patterns) on the analysis capabilities of modelers. The experiments show that increased awareness implies increased identification. The improvement is remarkably noticed when the awareness is stimulated by anti-patterns, rather than by concrete examples.		Balaban, Mira; Maraee, Azzam; Sturm, Arnon; Jelnov, Pavel	SOFTWARE AND SYSTEMS MODELING					Included	Excluded	new_screen			2		2015				
660		ModelGuidance	Developer discussion topics on the adoption and barriers of low code software development platforms	Low-code software development (LCSD) is an emerging approach to democratize application development for software practitioners from diverse backgrounds. LCSD platforms promote rapid application development with a drag-and-drop interface and minimal programming by hand. As it is a relatively new paradigm, it is vital to study developers’ difficulties when adopting LCSD platforms. Software engineers frequently use the online developer forum Stack Overflow (SO) to seek assistance with technical issues. We observe a growing body of LCSD-related posts in SO. This paper presents an empirical study of around 33K SO posts (questions + accepted answers) containing discussions of 38 popular LCSD platforms. We use Topic Modeling to determine the topics discussed in those posts. Additionally, we examine how these topics are spread across the various phases of the agile software development life cycle (SDLC) and which part of LCSD is the most popular and challenging. Our study offers several interesting findings. First, we find 40 LCSD topics that we group into five categories: Application Customization, Database and File Management, Platform Adoption, Platform Maintenance, and Third-party API Integration. Second, while the Application Customization (30%) and Data Storage (25%) topic categories are the most common, inquiries relating to several other categories (e.g., the Platform Adoption topic category) have gained considerable attention in recent years. Third, all topic categories are evolving rapidly, especially during the Covid-19 pandemic. Fourth, the How-type questions are prevalent in all topics, but the What-type and Why-type (i.e., detail information for clarification) questions are more prevalent in the Platform Adoption and Platform Maintenance category. Fifth, LCSD practitioners find topics related to Platform Query the most popular, while topics related to Message Queue and Library Dependency Management as the most difficult to get accepted answers to. Sixth, the Why-type and What-type questions and Agile Maintenance and Deployment phase are the most challenging among practitioners. The findings of this study have implications for all three LCSD stakeholders: LCSD platform vendors, LCSD developers/practitioners, Researchers, and Educators. Researchers and LCSD platform vendors can collaborate to improve different aspects of LCSD, such as better tutorial-based documentation, testing, and DevOps support. © 2022, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.		Alamin, M.A.A.; Uddin, G.; Malakar, S.; Afroz, S.; Haider, T.; Iqbal, A.	Empirical Software Engineering					Excluded	Excluded	new_screen			2		2023				
661		ModelGuidance	Model-based system configuration approach for Internetware	Internetware, a new software paradigm, enables systems to be built and evolved for better service quality according to changes in the environment. However, at the same time Internetware greatly complicates system management tasks due to the autonomy, cooperation and evolution of its components. In fact, the configuration of large-scale Internet-based software in the real scenarios is likely to involve a large number of components and hundreds of associated configuration options with variables, whose values may be dynamically determined depending on the execution environment, or to cope with needs of customers. In this paper, we firstly analyze the configuration issues of Internetware, and then present a model-based engineering approach to managing the configuration for Internetware systematically. Based on the Architecture Based Composition model, an internetware configuration process model is proposed that abstracts the configuration in the lifecycle of Internetware. Focusing on the fundamental activities in configuration process, the methods and mechanisms of analyzing and performing the configuration in terms of its constraints, dependencies, heterogeneity and dynamics, with supporting tools to realize the configuration automation, are presented. The proposed methods and mechanisms have been implemented, validated and rolled out in IBM software products and Cloud center. © 2013 Science China Press and Springer-Verlag Berlin Heidelberg.		Li, Y.; Sun, K.W.; Yang, J.; Liu, T.C.; Zeng, L.Z.	Science China Information Sciences					Excluded	Excluded	new_screen			2		2013				
662		ModelGuidance	Using abstraction in MDA-based reverse engineering for creative evolution	Creativity becomes an ever important feature in software development nowadays as software application in various domains is on an ever rapid growth. It leads to changes on system requirements, hoping to improve systems with attractive creativity features. Consequently, creative computing is aroused as an emerging research field in software engineering. Currently, there are researches working on approaches and processes to develop creative software from scratch. However, evolving existing systems can achieve the same purpose, though it is hard to add creativity features to legacy systems by traditional software evolution approaches. Obviously, based on experiences over decades from software community, development from scratch might cause a waste in terms of resources. To solve this problem, this paper proposes a Model Driven Architecture based reverse engineering method for creative evolution. Abstraction techniques are explored, classified, designed and applied in this proposed approach. Meanwhile, details and roles of abstraction techniques were developed for each step. Also, an e-learning system is chosen as a case study to illustrate, validate and evaluate the proposed method. Overall, our work aims to contribute to software evolution methodology and its application creatively.		D. Jing; H. Yang; H. Hakeem	2014 20th International Conference on Automation and Computing					Excluded	Excluded	new_screen			2		2014				
663		ModelGuidance	The WUI-toolkit: A model-driven UI development framework for wearable user interfaces	"We introduce the ""WUI-Toolkit"" as a framework to support and ease the development of wearable user interfaces (WUIs). The toolkit presents a first step towards a model-driven UI design approach in wearable computing that allows even non UI experts the generation of usable and context-aware WUIs. Based on an abstract model of an envisioned user interface that is independent of any concrete representation, the toolkit is able to generate a device- and context-specific UI for a given wearable computing system at runtime. The toolkit features the ability to use available context sources and can automatically adapt generated interfaces to maintain their usability. We present the current architecture including the capabilities of the abstract model and introduce a Tenderer developed to generate graphical WUIs suitable for monocular head-mounted displays in industrial applications. © 2007 IEEE."		Witt, H.; Nicolai, T.; Kenn, H.	Proceedings - International Conference on Distributed Computing Systems					Excluded	Excluded	new_screen			2		2007				
664		ModelGuidance	Symbolic Execution for Realizability-Checking of Scenario-Based Specifications	Scenario-based specification with the Scenario Modeling Language (SML) is an intuitive approach for formally specifying the behavior of reactive systems. SML is close to how humans conceive and communicate requirements, yet SML is executable and simulation and formal realizability checking can find specification flaws early. The realizability checking complexity is, however, exponential in the number of scenarios and variables. Therefore algorithms relying on explicit-state exploration do not scale and, especially when specifications have message parameters and variables over large domains, fail to unfold their potential. In this paper, we present a technique for the symbolic execution of SML specifications that interprets integer message parameters and variables symbolically. It can be used for symbolic realizability checking and interactive symbolic simulation. We implemented the technique in ScenarioTools. Evaluation shows drastic performance improvements over the explicit-state approachfor a range of examples. Moreover, symbolic checking produces more concise counter examples, which eases the comprehension of specification flaws.		J. Greenyer; T. Gutjahr	2017 ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems (MODELS)					Excluded	Excluded	new_screen			2		2017				
665		ModelGuidance	Model-based verification of safety contracts	The verification of safety becomes crucial in critical systems where human lives depend on the correct functioning of such systems. Formal methods have often been advocated as necessary to ensure the reliability of software systems, albeit with a considerable effort. In any case, such an effort is cost-effective when verifying safety-critical systems. Safety requirements are usually expressed using safety contracts, in terms of assumptions and guarantees. To facilitate the adoption of formal methods in the safety-critical software industry, we propose the use of well-known modelling languages, such as UML, to model a software system, and the use of OCL to express the system safety contracts within UML. A UML model enriched with OCL constraints is then transformed to a Petri net model that enables to formally verify such safety contracts. We apply our approach to an industrial case study that models a train doors controller in charge of the opening and closing of train doors. Our approach allows to perform an early safety verification, which increases the confidence of software engineers while designing the system. © Springer International Publishing Switzerland 2015.		Gómez-Martínez, E.; Rodríguez, R.J.; Elorza, L.E.; Rezabal, M.I.; Earle, C.B.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2015				
666		ModelGuidance	A UML model consistency verification approach based on meta-modeling formalization	UML language provides a promising way to overcome software system complexity. In particular, UML is a unified language that handles different aspects of software modeling. However, its features are not independent which is the source of numerous inconsistencies. Present consistency checking techniques are limited either to certain UML features or to certain kinds of inconsistencies. Our study aims at developing a unified checker which is able to handle all inconsistencies on all UML features. This paper develops the translation from UML models to CLP (Constraint Logic Programming) clauses taking advantage of meta-modeling techniques. CLP is also used to express consistency rules. Then CLP solver can automatically detect inconsistencies. Copyright 2006 ACM.		Malgouyres, H.; Motet, G.	Proceedings of the ACM Symposium on Applied Computing					Excluded	Excluded	new_screen			2		2006				
667		ModelGuidance	Towards rewriting-based formal model for component-based systems verification	Component Oriented Programming (COP) offers promising gains including time-savings, cost-reduction, and increased productivity via components reuse. However, using off-the-shelf components properly and safely is a serious challenge, which implies the significant need to specify and verify the components and their assemblies, up to the level of the full system (built from components) to assure its correctness. Current component modeling frameworks possess none or weak built-in support for the verification. They mainly lack formal analysis tools, do not support all component-based systems features, or they are not easy to use. In this paper, we propose a formal model for designing and verifying component-based systems using rewriting logic and Maude. First, we define a formal meta-model for COP to capitalize all main concepts. Then, we propose a Maude-based transformation engine to generate the formal specification of component-based systems. Hence formal analysis can be performed using Maude tools. © 2016 IEEE.		Debza, A.A.; Bouanaka, C.; Zeghib, N.	ICAASE 2016 - Proceedings of the International Conference on Advanced Aspects of Software Engineering					Excluded	Excluded	new_screen			2		2017				
668		ModelGuidance	A theoretical approach for modelling Cloud Services Composition	Cloud services are designed to provide remote and scalable access to applications and resources. They are inclined to be composed for creating more complex value-added services. Cloud Services Composition (CSC) has become an increasingly active area in both research topics and technological fields. An important and challenging issue in this area is how to model Cloud services for supporting services composition with all its facets. Relying heavily on mathematical definitions, formal methods may be applied in this context to provide a precise model of Cloud Services Composition. This paper investigates the use of Milner's bigraphs for modelling Cloud Services Composition. As its main result, we first present a meta-model for Cloud Services Composition. Then, we define a Bigraph model for Cloud Services Composition (BiG-CSC), which associates a formal semantic to the meta-model. Finally, a graphical environment based on the Eclipse Modelling Framework is proposed to validate our modelling methodology for Cloud Services Composition.		Z. Benzadri; N. Hameurlain; F. Belala; C. Bouanaka	2016 International Conference on Advanced Aspects of Software Engineering (ICAASE)					Excluded	Excluded	new_screen			2		2016				
669		ModelGuidance	A Brief History of Models and Model Based Systems Engineering and the Case for Relational Orientation	Models are at the heart of science and engineering. Model-based approaches to software development and systems engineering use technologies to include graphical modeling languages, such as the Systems Modeling Language, that support system design and analysis through machine readable models. This paper traces key historical contributions of software and systems engineers over the past five decades to show a coherent concept of models and how they can be used for software and systems engineering. Recent model-based systems engineering methodologies supported by commercially available modeling tools are also summarized. Relational orientation is seen to be the underlying viewpoint that expresses and binds these approaches. Relational orientation for systems engineering (ROSE) is then specified using a general systems methodology. Systems are seen to access each other's models in ROSE much like classes in object orientation access each other's objects. Object-oriented frames for software engineering are extended to relational frames to specify an innovative framework for system design and analysis. This generalizes the axiomatic design approach of N. P. Suh. A repeatable procedure supporting greater concurrency between design and verification is also demonstrated for searching the solution space in linear axiomatic design.		Dickerson, Charles E.; Mavris, Dimitri	IEEE SYSTEMS JOURNAL					Excluded	Excluded	new_screen			2		2013				
670		ModelGuidance	UCLAONT: Ontology-Based UML Class Models Verification Tool	The software design model performs an important role in modern software engineering methods. Especially in Model-Driven Engineering (MDE), it is treated as an essential asset of software development; even programming language code is produced by the models. If the model has errors, then they can propagate into the code. Model verification tools check the presence of errors in the model. This paper shows how a UML class model verification tool has been built to support complex models and unsupported elements such as XOR constraints and dependency relationships. This tool uses ontology for verifying the UML class model. It takes a class model in XMI format and generates the OWL file. Performs verification of model in two steps: (1) uses the ontology-based algorithm to verify association multiplicity constraints; and (2) uses ontology reasoner for the verification of XOR constraints and dependency relationships. The results show the proposed tool improves the verification efficiency and supports the verification of UML class model elements that have not been supported by any existing tool.		Rajab, Adel; Hafeez, Abdul; Shaikh, Asadullah; Alghamdi, Abdullah; Al Reshan, Mana Saleh; Hamdi, Mohammed; Rajab, Khairan	APPLIED SCIENCES-BASEL					Excluded	Excluded	new_screen			2		2022				
671		ModelGuidance	Approaches to Collaborative Software Development	Software development is becoming more and more complex. Traditionally and to date, the software development process rather corresponds to job-shop manufacturing. Therefore, the ever growing demands for different kinds of software as well as the ongoing globalization require more efficient development processes. Both scientific literature and practical experience hence postulate a necessary industrialization of software development and design of novel forms of specialization, task distribution, and collaboration. Existing approaches to collaborative software development can be classified and analyzed according to multiple categories. By evaluating these, current deficiencies are identified and discussed for further investigation.		T. Hildenbrand; F. Rothlauf; M. Geisser; A. Heinzl; T. Kude	2008 International Conference on Complex, Intelligent and Software Intensive Systems					Excluded	Excluded	new_screen			2		2008				
672		ModelGuidance	An Approach to Modeling and Analyzing Reliability for Microservice-Oriented Cloud Applications	Microservice architecture is a cloud-native architectural style, which has attracted extensive attention from the scientific research and industry communities to benefit independent development and deployment. However, due to the complexity of cloud-based platforms, the design of fault-tolerant strategies for microservice-oriented cloud applications becomes challenging. In order to improve the quality of service, it is essential to focus on the microservice with more criticality and maximize the reliability of the entire cloud application. This paper studies the modeling and analysis of service reliability in the cloud environment. Firstly, a formal description language is defined to model microservice, user request, and container accurately. Secondly, the reliability analysis is conducted to measure a critical microservice's fluctuation and vibration attributes within a period, and the related properties of the constructed model are analyzed. Thirdly, a fault-tolerant strategy with redundancy operation has been proposed to optimize cloud application reliability. Finally, the effectiveness of the method is verified by experiments. The simulation results show that the algorithm obtains the maximum benefits and has high performance through several experiments. © 2021 Zheng Liu et al.		Liu, Z.; Fan, G.; Yu, H.; Chen, L.	Wireless Communications and Mobile Computing					Excluded	Excluded	new_screen			2		2021				
673		ModelGuidance	Deriving requirements model from textual use cases	In this paper, we present an approach to derive structured requirements models from textual use case requirements in the form of process diagrams and ontology using methods based on computational linguistics. These proposed requirements models are capable of modelling both structural and behavioural entities present in a use case. We consider a corpus containing 123 actual requirements use cases created by Infosys Ltd. and translated them to process diagrams and ontology. For evaluating the performance of conversion we propose a few metrics and show that on average our linguistic engine miss-identified 2% of actions and missed out only 3% of the actions described in the input text. Copyright © 2014 ACM.		Sawant, K.P.; Roy, S.; Sripathi, S.; Plesse, F.; Sajeev, A.S.M.	36th International Conference on Software Engineering, ICSE Companion 2014 - Proceedings					Excluded	Excluded	new_screen			2		2014				
674		ModelGuidance	Describing software architectures by system structure and properties	To support architecture based development, different modeling notations and languages, so called architecture description languages (ADLs), have been designed. To be of help in the development process, software architectures must be described in a complete and consistent manner but without being overloaded with information provided to the system stakeholders. Current architecture description languages provide information about software architectures in a domain independent way. This may lead to inappropriate and incomplete descriptions of software architectures. We introduce a flexible and extensible language called Architecture Structure Description Language (ASDL) developed for describing structural aspects of software architectures and their properties. We thereby focus on the domain of embedded real time systems that have to meet certain timing and safety constraints. The language was developed in an architecture recovery process of a real world Train Control System (TCS) and has been used to describe and reason about TCS's architecture. © 1998 IEEE.		Eixelsberger, W.; Gall, H.	Proceedings - International Computer Software and Applications Conference					Excluded	Excluded	new_screen			2		1998				
675		ModelGuidance	Sketching with a purpose: Moving from supporting modeling to supporting software engineering activities	With the advent of large interactive displays and the increasing ubiquity of touch-enabled devices, digital sketching tools are becoming viable alternatives to classic whiteboards for the design and engineering of software systems. In this paper, we argue that current sketching tools still focus largely on creating sketches as artifacts (mostly, models), rather than recognizing sketches as byproducts of engineers' thought processes as they tackle a broad variety of complex engineering activities. We therefore advocate a more activity-than artifact-oriented view of sketching and propose research on a number of ways in which digital sketching can support cognitively demanding software engineering activities more directly. © 2018 ACM.		Book, M.; Van Der Hoek, A.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2018				
676		ModelGuidance	A model-driven approach for formal verification of embedded systems using timed colored petri nets	The exponential use of time dependant and concurrent embedded systems in safety critical situations demands correctness of their behavior. Early design phase verification techniques allow us to ensure system's safety with minimum cost. In Model Driven Software Engineering (MDSE), Unified Modeling Language (UML) is considered as a standard way to visualize system's design but it is a semiformal language and lacks support for precise verification mechanisms to guarantee system's safety. To solve this issue, we have proposed a model driven approach to formalize timed and concurrent embedded systems using Timed Colored Petri Nets. This paper describes the rules for transformation of timed UML State Machines (source model) to Timed Colored Petri Nets (target model). We have focused on timing and behavioral aspects of concurrent embedded systems. We have also demonstrated the applicability of our approach with the help of a benchmark case study using CPN Tools. © 2018 IEEE.		Moin, F.; Azam, F.; Anwar, M.W.	2018 IEEE 4th International Conference on Computer and Communications, ICCC 2018					Excluded	Excluded	new_screen			2		2018				
677		ModelGuidance	Prioritization of test scenarios using hybrid genetic algorithm based on UML activity diagram	Software testing is an essential part of the SDLC(Software Development Life Cycle). Test scenarios are used to derive test cases for model based testing. However, with the software rapidly growing in size and complexity, the cost of software will be too high if we want to test all the test cases. So this paper presents an approach using Hybrid Genetic Algorithm(HGA) to prioritize test scenarios, which improves efficiency and reduces cost as well. The algorithm combines Genetic Algorithm(GA) with Particle Swarm Optimization(PSO) algorithm and uses Local Search Strategy to update the local and global best information of the PSO. The proposed algorithm can prioritize test scenarios so as to find a critical scenario. Finally, the proposed method is applied to several typical UML activity diagrams, and compared with the Simple Genetic Algorithm(SGA). The experimental results show that the proposed method not only prioritizes test scenarios, but also improves the efficiency, and further saves effort, time as well as cost.		X. Wang; X. Jiang; H. Shi	2015 6th IEEE International Conference on Software Engineering and Service Science (ICSESS)					Excluded	Excluded	new_screen			2		2015				
678		ModelGuidance	Responsibility modeling for identifying sociotechnical threats to the dependability of coalitions of systems	With the rise of cloud computing and system-of-systems we are entering an era where mission critical services and applications will be dependent upon coalitions-of-systems. Coalitions-of-systems (CoS) are a class of system similar to systems-of-systems but they differ in that they interact to further overlapping self-interests rather than an overarching mission. Assessing the sociotechnical dependability of CoS is an open research question of societal importance as existing sociotechnical dependability analysis techniques typically do not assess threats associated with coalition partners reneging on responsibilities or leaving a coalition. We use a cloud computing based case study to demonstrate that a responsibility modeling based risk analysis approach enables the identification of these threats. We provide first evidence that inspecting the distribution of liabilities among coalition partners may indicate the fragility of overlapping self-interests. © 2011 IEEE.		Greenwood, D.; Sommerville, I.	Proceedings of 2011 6th International Conference on System of Systems Engineering: SoSE in Cloud Computing, Smart Grid, and Cyber Security, SoSE 2011					Excluded	Excluded	new_screen			2		2011				
679		ModelGuidance	Automated Detection of Discontinuities in Models Inferred from Execution Traces	Modern applications (e.g., the so called Future Internet applications) exhibit properties that make them hard to model once for all. In fact, they dynamically adapt to the user's habits, to the context, to the environment, they dynamically discover new services and components to integrate, they modify themselves through reflection, automatically. Model inference techniques are based on the observation of the application behavior (trace collection) and on its generalization into a model. Model inference supports testing, understanding and evolution of the software. However, inferred models may become obsolete at run time, due to the evolution or the self-modifications of the software. We investigate an approach for the automated detection of model discontinuities, based on a trade off between delay of the detection and accuracy, measured in terms of few false negatives.		A. Marchetto; C. D. Nguyen; P. Tonella	2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops					Excluded	Excluded	new_screen			2		2011				
680		ModelGuidance	Formal modelling and validation for software process based on CPN	Currently, many modelling methods for software process are semiformal. It is difficult to analyze semantics and verify correctness for a key system. Coloured Petri Net (CPN) based on mathematics is an executable model, which has rigorous formal semantics and analysis methods. This paper presents a method of formal modelling and validation for software process that transforms UML model based on RUP to CPN and uses simulation to investigate the behaviour of modelled system. © 2012 IEEE.		Tian, B.	ICSESS 2012 - Proceedings of 2012 IEEE 3rd International Conference on Software Engineering and Service Science					Included	Excluded	new_screen			2		2012				
681		ModelGuidance	A modeling framework to implement preemption policies in non-Markovian SPNs	Petri nets represent a useful tool for performance, dependability, and performability analysis of complex systems. Their modeling power can be increased even more if nonexponentially distributed events are considered. However, the inclusion of nonexponential distributions destroys the memoryless property and requires to specify how the marking process is conditioned upon its past history. In this paper, we consider, in particular, the class of stochastic Petri nets whose marking process can be mapped into a Markov regenerative process. An adequate mathematical framework is developed to deal with the considered class of Markov Regenerative Stochastic Petri Nets (MRSPN). An unified approach for the solution of MRSPNs where different preemption policies can be defined in the same model is presented. The solution is provided both in steady-state and in transient condition. An example concludes the paper.		Bobbio, A; Puliafito, A; Tekel, M	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2000				
682		ModelGuidance	"Lessons for software modeling from ""architecture 101"" movie"	"In software modeling, it is difficult to properly arrange the modeling of system structure and behavior as the traversal between software models usually lacks a clear progression path. Taking an inter-disciplinary approach, this paper tackles the problem by borrowing ideas from a successful movie ""Architecture 101"". The commonalities between the movie and modeling are studied. The result is a proposal for multi-modeling construction. The benefits include more explicit guidance in software development. And the progression from model to code is made more productive."		Chow, K.-O.; Wong, T.-L.	International Journal of Software Engineering and its Applications					Excluded	Excluded	new_screen			2		2013				
683		ModelGuidance	An MDE approach for user interface adaptation to the context of use	With the advent of new media and the delivery of recent means of communication, associated with the progress of networks, the circumstances of software use, as well as the skills and the preferences of the users who exploit them, are constantly varying. The adaptation of the User Interface (UI) has become a necessity due to the variety of the contexts of use. In this paper, we propose an approach based on models for the generation of adaptive UI. To reach this objective, we have made use of parameterized transformation principle in the framework of the Model Driven Engineering (MDE) for the transformation of the abstract interface into a concrete interface. The parameter of this transformation plays the role of the context of use. The paper develops two parts: meta-models for every constituent of the context of use and the adaptation rules. © 2010 IFIP International Federation for Information Processing.		Bouchelligua, W.; Mahfoudhi, A.; Benammar, L.; Rebai, S.; Abed, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2010				
684		ModelGuidance	A Simulation Approach for Performance Validation during Embedded Systems Design	Due to the time-to-market pressure, it is highly desirable to design hardware and software of embedded systems in parallel. However, hardware and software are developed mostly using very different methods, so that performance evaluation and validation of the whole system is not an easy task. In this paper, we propose a simulation approach to bridge the gap between model-driven software development and simulation based hardware design, by merging hardware and software models into a SystemC based simulation environment. An automated procedure has been established to generate software simulation models from formal models, while the hardware design is originally modeled in SystemC. As the simulation models are annotated with timing information, performance issues are tackled in the same pass as system functionality, rather than in a dedicated approach. For designing real-time systems, although performance evaluation based on simulation cannot provide guarantees of safety, it can provide realistic performance values to validate whether the performance requirements are really satisfied or not and show how pessimistic the static analysis is. Further, the simulative approach is also able to provide the developers an insight into the system architecture to help find bottlenecks of the system. We use the simulative approach as a complement of static analysis and combine them in an integral development cycle. © Springer-Verlag Berlin Heidelberg 2008.		Wang, Z.; Haberl, W.; Herkersdorf, A.; Wechs, M.	Communications in Computer and Information Science					Excluded	Excluded	new_screen			2		2009				
685		ModelGuidance	An integrative modelling language for agent-based simulation of traffic	Traffic is a key aspect of everyday life. Its study, as it happens with other complex phenomena, has found in simulation a basic tool. However, the use of simulations faces important limitations. Building them requires considering different aspects of traffic (e.g. urbanism, car features, and individual drivers) with their specific theories, that must be integrated to provide a coherent model. There is also a variety of simulation platforms with different requirements. Many of these problems demand multidisciplinary teams, where the different backgrounds can hinder the communication and validation of simulations. The Model-Driven Engineering (MDE) of simulations has been proposed in other fields to address these issues. Such approaches develop graphical Modelling Languages (MLs) that researchers use to model their problems, and then semi-automatically generate simulations from those models. Working in this way promotes communication, platform independence, incremental development, and reutilisation. This paper presents the first steps for a MDE framework for traffic simulations. It introduces a tailored extensible ML for domain experts. The ML is focused on human actions, so it adopts an Agent-Based Modelling perspective. Regarding traffic aspects, it includes concepts commonly found in related literature following the Driver-Vehicle-Environment model. The language is also suitable to accommodate additional theories using its extension mechanisms. The approach is supported by an infrastructure developed using Eclipse MDE projects: the ML is specified with Ecore, and a model editor and a code generator tools are provided. A case study illustrates how to develop a simulation based on a driver's behaviour theory for a specific target platform using these elements. © 2016 The Institute of Electronics, Information and Communication Engineers.		Fernández-Isabel, A.; Fuentes-Fernández, R.	IEICE Transactions on Information and Systems					Excluded	Excluded	new_screen			2		2016				
686		ModelGuidance	Challenges when using Model Driven Architecture in the development of Safety Critical Software	The model driven architecture (MDA) is an approach to software engineering in which models are systematically developed and transformed into code. This paper discusses some of the issues which would need to be overcome when attempting to certify a safety critical design or software developed with the MDA approach, partially based on our experience with an avionics software case study. We particularly focus on the need to certify MDA artefacts and produce a compelling system safety case		P. Conmy; R. F. Paige	Fourth International Workshop on Model-Based Methodologies for Pervasive and Embedded Software (MOMPES'07)					Excluded	Excluded	new_screen			2		2007				
687		ModelGuidance	Modeling Interactions among Cyber-Physical Services	Modeling interactions among cyber-physical services is a crucial problem for analyzing behaviors of a composed system, where these cyber-physical services communicate with each other via synchronous and asynchronous messages. In this paper, we present an approach for modeling interactions of cyber-physical systems, which can be automated under the tool support. First, a service model is proposed to represent a cyber-physical service using a labeled transition system, where the order of executing transitions in a cyber-physical service is defined. Second, a synchronous composition is defined to compose a set of cyber-physical services communicating with synchronous messages into a cyber-physical system. Third, an asynchronous composition is defined to compose cyber-physical services interacting asynchronously through FIFO buffers, where three types of interactions are considered. Finally, experimental results show that our approach is automated and effective. © 2022 IEEE.		Chen, B.; Xu, H.; Yang, Q.; Lu, G.; Li, H.	Proceedings of the 2022 IEEE International Conference on Dependable, Autonomic and Secure Computing, International Conference on Pervasive Intelligence and Computing, International Conference on Cloud and Big Data Computing, International Conference on Cyber Science and Technology Congress, DASC/PiCom/CBDCom/CyberSciTech 2022					Included	Excluded	new_screen			2		2022				
688		ModelGuidance	MODEL-BASED RICH INTERNET APPLICATIONS CRAWLING: “MENU” AND “PROBABILITY” MODELS	Strategies for “crawling” Web sites efficiently have been described more than a decade ago. Since then, Web applications have come a long way both in terms of adoption to provide information and services and in terms of technologies to develop them. With the emergence of richer and more advanced technologies such as AJAX, “Rich Internet Applications” (RIAs) have become more interactive, more responsive and generally more user friendly. Unfortunately, we have also lost our ability to crawl them. Building models of applications automatically is important not only for indexing content, but also to do automated testing, automated security assessments, automated accessibility assessment and in general to use software engineering tools. We must regain our ability to efficiently construct models for these RIAs. In this paper, we present two methods, based on “Model-Based Crawling” (MBC) first introduced in [1]: the “menu” model and the “probability” model. These two methods are shown to be more effective at extracting models than previously published methods, and are much simpler to implement than previous models for MBC. A distributed implementation of the probability model is also discussed. We compare these methods and others against a set of experimental and “real” RIAs, showing that in our experiments, these methods find the set of client states faster than other approaches, and often finish the crawl faster as well..		Choudhary, Suryakant; Dincturk, Emre; Mirtaheri, Seyed; v Bochmann, Gregor; Jourdan, Guy-Vincent; Onut, Iosif Viorel	JOURNAL OF WEB ENGINEERING					Excluded	Excluded	new_screen			2		2014				
689		ModelGuidance	An MDA approach for the development of data warehouses	Different modeling approaches have been proposed to overcome every design pitfall of different data warehouse (DW) components. However, most of them offer partial solutions that deal only with isolated aspects of the DW and do not provide developers with an integrated and standard framework for designing all DW relevant components, such as ETL processes, data sources, DW repository and so on. To overcome this problem, this paper describes how to align the whole DW development process with a Model Driven Architecture (MDA) framework. We then focus on describing one part of it: an MDA approach for the development of the DW repository, because it is the cornerstone of any DW system. Therefore, we describe how to build the different MDA models for the DW repository by using an extension of the Unified Modeling Language (UML) and the Common Warehouse Metamodel (CWM). Transformations between models are also clearly and formally established by using the Query/View/Transformation (QVT) language. Finally, a case study is provided to exemplify the benefits of our MDA framework. © 2006 Elsevier B.V. All rights reserved.		Mazón, J.-N.; Trujillo, J.	Decision Support Systems					Excluded	Excluded	new_screen			2		2008				
690		ModelGuidance	Architecture analysis of enterprise systems modifiability - Models, analysis, and validation	Enterprise architecture (EA) models can be used in order to increase the general understanding of enterprise systems and to perform various kinds of analysis. This paper presents instantiated architectural models based on a metamodel for enterprise systems modifiability analysis, i.e. for assessing the cost of making changes to enterprise-wide systems. The instantiated architectural models detailed are based on 21 software change projects conducted at four large Nordic companies. Probabilistic relational models (PRMs) are used for formalizing the EA analysis approach. PRMs enable the combination of regular entity-relationship modeling aspects with means to perform enterprise architecture analysis under uncertainty. The modifiability metamodel employed in the analysis is validated with survey and workshop data (in total 110 experts were surveyed) and with the data collected in the 21 software change projects. Validation indicates that the modifiability metamodel contains the appropriate set of elements. It also indicates that the metamodel produces estimates within a 75% accuracy in 87% of the time and has a mean accuracy of 88% (when considering projects of 2000 man-hours or more). © 2010 Elsevier Inc. All rights reserved.		Lagerström, R.; Johnson, P.; Höök, D.	Journal of Systems and Software					Excluded	Excluded	new_screen			2		2010				
691		ModelGuidance	A high-level Petri nets-based approach to verifying task structures	As knowledge-based system technology gains wider acceptance, there is an increasing need for verifying knowledge-based systems to improve the reliability and quality. Traditionally, attention has been given on verifying knowledge-based systems at the knowledge level, which only addresses structural errors such as redundancy, conflict, and circularity in rule bases. No semantic error such as inconsistency in the requirements specification level has been checked. In this paper, we propose the use of task structures for modeling user requirements and domain knowledge at the requirements specification level, and the use of high-level Petri nets for expressing and verifying the task structure-based specifications. Issues in mapping task structures into high-level Petri nets are identified, for example, the representation of task decomposition, constraints, and state model; the distinction between follow and immediately follow operators; and the composition operator in task structures. The verification of task structures using high-level Petri nets is performed on model specifications of a task through constraints satisfaction and relaxation techniques and on process specifications of the task based on the reachability property and the notion of specificity.		Lee, J.; Lai, L.F.	IEEE Transactions on Knowledge and Data Engineering					Excluded	Excluded	new_screen			2		2002				
692		ModelGuidance	Model-driven engineering in agent-based modeling and simulation: A case study in the traffic signal control domain	Model-driven engineering (MDE) is an approach for improving productivity in software development. This approach was exploited in the context of agent-based modeling and simulation (ABMS) only to a certain extent. Previous work has not shown real evidence of the benefits that MDE promotes in ABMS. This paper thus explores the use of MDE in ABMS with a case study in the traffic domain. Wc propose a domain analysis method to identify domain concepts and a modeling language that provides building blocks for them. Our evaluation gives evidence that our MDE approach reduces the effort to develop agent-based simulations. © Copyright 2017, International Foundation for Autonomous Agents and Multiagent Systems (www.ifaamas.org). All rights reserved.		Santos, F.; Nunes, I.; Bazzan, A.L.C.	Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems, AAMAS					Excluded	Excluded	new_screen			2		2017				
693		ModelGuidance	Analyzable Modeling of Legacy Communication in Component-Based Distributed Embedded Systems	We present extensions to the existing industrial component model Rubus Component Model (RCM). By introducing special purpose components to encapsulate and abstract the communication protocols in distributed embedded systems we allow use of legacy nodes and legacy protocols in a component-based and model-based software engineering environment. With the addition of these components, RCM will be able to support state-of-the-practice development processes of distributed embedded systems where communication rules are defined early in the development process. The proposed extension also allows model-based and component-based development of new nodes that are deployed in the legacy systems that use predefined communication rules. We also demonstrate how an end-to-end timing model can be extracted from a distributed embedded system modeled with extended RCM. The extracted model is then used to perform an end-to-end timing analysis that we implemented in the Rubus Analysis Framework.		S. Mubeen; J. Maki-Turja; M. Sjodin; J. Carlson	2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications					Excluded	Excluded	new_screen			2		2011				
694		ModelGuidance	Automated behavior modeling for verifying safety-relevant modules	Despite employing state-of-the-art safety mechanisms, the intractable variety of possible dynamical behaviors requires automating verification in safety-relevant domains like automated driving. This paper proposes an automatic modeling approach for safety-relevant modules amenable to verification of formal requirements. A logical predicate abstraction is imposed over the module's inputs and outputs. By stimulating the module with possible finite input sequences, an approximate behavior model is obtained. The approximation accuracy can be improved by increasing the trace length. Then, the satisfaction of the specification is evaluated by model checking in an iterative manner, as shown for the implementation of an automated driving system supervisor. © 2021 IEEE.		Nenchev, V.	Proceedings - 2021 5th IEEE International Conference on Robotic Computing, IRC 2021					Excluded	Excluded	new_screen			2		2021				
695		ModelGuidance	Model-driven development of condition monitoring software	High availability of automation systems is one of the main goals for the companies from all industrial branches. To achieve and maintain this high availability, the condition monitoring of the automation systems is an essential building block. However, as automation systems become increasingly equipped with numerous mechanical, electrical, and software components, creating a condition monitoring solution is becoming more and more challenging and requires knowledge from multiple engineering disciplines. Today, creating a condition monitoring solution is mostly based on the experience and preferences of the developers without a systematic and interdisciplinary method. Today, methods and tools supporting an interdisciplinary development exist. However, they do not fully consider condition monitoring relevant information. In addition, tools that increase software productivity and ease the adjustment of condition monitoring software are lacking. The main goal of this paper is to narrow the condition monitoring expertise gap by proposing convenient, systematic, and automated techniques to support the development of condition monitoring solutions from their design to their implementation. To achieve this goal, we propose an extension of the CONSENS systems engineering method to face issues caused in the design phase. By adopting a Model-Driven Development (MDD) approach, we propose a Domain-Specific Language (DSL) for condition monitoring that promotes increased understandability, and automation during the software implementation phase. © 2018 Association for Computing Machinery.		Pasic, F.	21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings, MODELS-Companion 2018					Excluded	Excluded	new_screen			2		2018				
696		ModelGuidance	Goal-oriented requirement analysis for data warehouse design	Several surveys indicate that a significant percentage of data warehouses fail to meet business objectives or are outright failures. One of the reasons for this is that requirement analysis is typically overlooked in real projects. In this paper we propose a goal-oriented approach to requirement analysis for data warehouses, based on the Tropos methodology. Two different perspectives are integrated for requirement analysis: organizational modeling, centered on stakeholders, and decisional modeling, focused on decision makers. Our approach can be employed within both a demand-driven and a mixed supply/demand-driven design framework: in the second case, while the operational sources are still explored to shape hierarchies, user requirements play a fundamental role in restricting the area of interest for analysis and in choosing facts, dimensions, and measures. The methodology proposed, supported by a prototype, is described with reference to a real case study. © 2005 ACM.		Giorgini, P.; Rizzi, S.; Garzetti, M.	DOLAP 2005 - Proceedings of the 8th ACM International Workshop on Data Warehousing and OLAP, co-located with CIKM 2005					Excluded	Excluded	new_screen			2		2005				
697		ModelGuidance	Non-functional requirement modeling and analysis in an aspect-oriented architectural approach	The demand for developing high quality software systems presents additional challenges throughout the software development lifecycle. Software architects need effective techniques and tools to aid them in modeling and analyzing non-functional requirements. This paper presents an aspect-oriented approach to support the modeling and automated analysis of non-functional requirements for software architectures. The well-established Unified Modeling Language (UML) is used in the approach to describe software architectures. Nonfunctional requirements are modeled as aspects in an extended version of UML. The automated analysis of nonfunctional requirements is achieved by automatically translating an extended UML design into existing formal methods. The approach is illustrated using an example aspect - throughput performance aspect and an example system - Domain Name System (DNS).		Dai, L.; Cooper, K.	International Conference on Software Engineering Theory and Practice 2007, SETP 2007					Excluded	Excluded	new_screen			2		2007				
698		ModelGuidance	Easy Modelling and Verification of Unpredictable and Preemptive Interrupt-Driven Systems	The widespread real-time and embedded systems are mostly interrupt-driven because their heavy interaction with the environment is often initiated by interrupts. With the interrupt arrival being unpredictable and the interrupt handling being preemptive, a large number of possible system behaviours are generated, which makes the correctness assurance of such systems difficult and costly. Model checking is considered to be one of the effective methods for exhausting behavioural state space for correctness. However, existing modelling approaches for interrupt-driven systems are based on either calculus or automata theory, and have a steep learning curve. To address this problem, we propose a new modelling language called interrupt sequence diagram (ISD). By extending the popular UML sequence diagram notations, the ISD supports the modelling of interrupts' essential features visually and concisely. We also propose an automata-based semantics for ISD, based on which ISD can be transformed to a subset of hybrid automata so as to leverage the abundant off-the-shelf checkers. Experiments on examples from both real-world and existing literature were conducted, and the results demonstrate our approach's usability and effectiveness.		Pan, Minxue; Chen, Shouyu; Pei, Yu; Zhang, Tian; Li, Xuandong	Proceedings of the 41st International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2019				
699		ModelGuidance	Modeling workflow using XML and Petri net	Nowadays an increasing number of workflow products and research prototypes begin to adopt XML for representing workflow models owing to its easy use and well understanding for people and machines. However, most of work-flow products and research prototypes provide the few supports for the verification of XML-based workflow model, such as free-deadlock properties, which is essential to successful application of workflow technology. We tackle this problem by mapping the XML-based workflow model into Petri-net, a kind of well-known formalism for modeling, analyzing and verifying system. As a result, the XML-based workflow model can be automatically verified with the help of general Petri-net tools, such as DANAMICS. The presented approach not only enables end users to represent workflow model with XML-based modeling language, but also the correctness of model can be ensured, thus satisfying the needs of business processes.		Yang, D.; Wen, Q.; Zhang, S.	Journal of Systems Engineering and Electronics					Excluded	Excluded	new_screen			2		2004				
700		ModelGuidance	On the benefits of file-level modularity for EMF models	Model-driven development (MDD) tools based on the Eclipse Modeling Framework (EMF) typically store all elements in a model in a single file which arguably is one of the main reasons why these tools do not scale well and cannot take advantage of existing code versioning systems and other related facilities such as Git and Make. In this work, we describe an approach for storing models in multiple files. We argue that EMF-based MDD tools can benefit significantly from this file-level modularity not only by improving the performance and scalability of basic model operations, but also by simplifying many model management activities through the use of existing code versioning systems and build automation tools. We introduce a domain-specific language that allows defining, at the metamodel level: (1) the mapping between models’ elements and the file structure for model storage and (2) the dependencies between model elements that affect the code generation and compilation (if the integration with code-based tools is required). Our suite then generates an API and scripts to provide support for file-level modularity and facilitate using code-based versioning and build tools. We have used our DSL in the context of Papyrus-RT, an MDD tool for real-time and embedded software, and show how file-level modularity can (1) substantially improve performance and scalability of load and save operations, (2) enable collaborative model development, and (3) facilitate MDD-specific activities such as model comparison and incremental code generation. Our implementation and the models used for evaluation are publicly available. © 2020, Springer-Verlag GmbH Germany, part of Springer Nature.		Jahed, K.; Bagherzadeh, M.; Dingel, J.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2021				
701		ModelGuidance	Modeling deployment and configuration of CORBA systems with UML	An area of CORBA-based distributed systems which has been difficult to design and document is that of deployment of server components and configuration information. This poster shows by way of an example taken from a health-care system how UML Deployment Diagrams can be used to model configuration in a system based on Iona Technologies' Orbix. Using the UML models we compare several different centralized and distributed approaches. We conclude by examining how extensions made to UML in recent revisions enhance the utility of our approach.		Sloane, Alan D.	Proceedings - International Conference on Software Engineering					Excluded	Excluded	new_screen			2		2000				
702		ModelGuidance	A method of refinement in UML-B	UML-B is a ‘UML-like’ graphical front-end for Event-B that provides support for object-oriented and state machine modelling concepts, which are not available in Event-B. In particular, UML-B includes class diagram and state machine diagram editors with automatic generation of corresponding Event-B. In Event-B, refinement is used to relate system models at different abstraction levels. The same refinement concepts are also applicable in UML-B but require special consideration due to the higher-level modelling concepts. In previous work, we described a case study to introduce support for refinement in UML-B. We now provide a more complete presentation of the technique of refinement in UML-B including a formalisation of the refinement rules and a definition of the extensions to the abstract syntax of UML-B notation. The provision of gluing invariants to discharge the proof obligations associated with a refinement is a significant step in providing verifiable models. We discuss and compare two approaches for constructing gluing invariants in the context of UML-B refinement. © 2013, Springer-Verlag Berlin Heidelberg.		Said, M.Y.; Butler, M.; Snook, C.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2015				
703		ModelGuidance	Modeling an educational multi-agent system in MaSE	The growing complexity of modern systems is demanding more and more time from software designers and developers. The challenge of constructing complex systems is complicated by the geographic distribution of the systems. An agent oriented paradigm reinforces the software flexibility and the agent's social possibilities, taking space as a solution in software engineering. The idea of independent and autonomous entities capable of relating in the search of the system goals originated the multi-agent systems, where at least two agents are capable of interaction. Such systems possess great applicability in different knowledge areas, as for example, in Education. This work defines an Education Multi-Agent System, which is a learning education environment with multi-agents. The system aims at helping the teaching process on a specific topic. The system agents were modeled using the MaSE (Multi-Agent System Engineering) method. © 2009 Springer-Verlag.		Gago, I.S.B.; Werneck, V.M.B.; Costa, R.M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2009				
704		ModelGuidance	Evidence based and conceptual model driven approach for agent-based policy modelling	Agent-based policy modelling is an application of agent-based social simulation. In this contribution it is applied to strategic policy making in the public sector. Open government principles relevant in this domain demand solutions that trace the origins of modelling decisions from narrative texts (background documents and stakeholder scenarios) through the whole policy modelling process up to the simulation results. With the help of such traces, decisions made on the basis of such simulation results are more transparent and comprehensible. This paper presents a conceptual model-driven approach developed and implemented in the OCOPOMO project. The approach ensures traceability by integrating technologies for agent-based social simulation, semantic web and model-driven development. Narrative texts are transferred into Consistent Conceptual Description (CCD) models. Those CCD models are transferred semi-automatically into formal policy models implemented in the DRAMS (Declarative Rule-based Agent Modelling System) language. These formal policy models are further elaborated (i.e. the policy modeller has still full flexibility in programming the model), and runnable simulation models are programmed. From the simulation logs, model-based scenarios are generated to interpret and support a better understanding of simulation results. The model-based scenarios are textual narratives with charts summarising the output produced by the simulation runs. Thereby passages in these texts are linked with documents containing original narrative scenarios. These traces are realised via the CCD models. A well-elaborated policy modelling process and a software toolbox support the approach. A pilot case exemplifies the application of the process and the toolbox. Evaluation results from the OCOPOMO project show benefits as well as limitations of the approach. We also reflect how the process and toolbox can be transferred into other application domains. © 2015 JASSS.		Scherer, S.; Wimmer, M.; Lotzmann, U.; Moss, S.; Pinotti, D.	JASSS					Excluded	Excluded	new_screen			2		2015				
705		ModelGuidance	Incremental construction of dynamic models for object-oriented software systems	In the Unified Modeling Language (UML),1-3 sequence and statechart diagrams are used for behavioral modeling of OO software systems. This article discusses an iterative approach for raising the level of automation in constructing statechart diagrams. Sequence diagrams can be created by animating the interaction of objects through a set of statechart diagrams, and statechart diagrams can be synthesized automatically using sequence diagrams. By combining these existing techniques and using them iteratively, a powerful modeling tool can be achieved. These techniques are implemented in a tool called SCenario EDitor (SCED).		Systä, T.	JOOP - Journal of Object-Oriented Programming					Excluded	Excluded	new_screen			2		2000				
706		ModelGuidance	Modeling Human Behavior for Software Engineering Simulation Games	Simulation games are a well-known concept for teaching in a practical way. Especially for project management training, simulation games are helpful. Students can try out different management strategies and gain experience without endangering real projects. To provide a good learning environment, it is important to simulate the employees managed by the player as realistically as possible. However, existing approaches only use simple models to simulate human behavior, missing psychological aspects like motivation and interpersonal interaction, and therefore are not detailed enough for leadership and project management training. We present a new decision-making model based on findings of psychology, which can be used for simulating a more realistic human behavior. We use heuristics for calculating the motivational force of all potential actions an employee has, in order to decide which he will choose. This calculation is not only based on the project's state and schedule, but also on emotional factors like the preferences and aversions of the employee. Within our approach, we implemented a decision-making model, which is not limited to our game concept and can also be adapted for other simulation games.		Nassal, Alexander; Tichy, Matthias	Proceedings of the 5th International Workshop on Games and Software Engineering					ConflictExcluded	Excluded	new_screen			2		2016				
707		ModelGuidance	Architectural thinking and modeling with the architects' workbench	Collecting and organizing all of the architectural information for a system is a challenge faced by information technology (IT) architects. Transforming that information into models of a viable architecture and keeping associated work products consistent and up to date is an even greater challenge. Despite this, model-centric architectural methods are not as widely adopted or as closely followed as they could be, partly due to a lack of appropriate tools. The Architects' Workbench (AWB) is a prototype tool that addresses these problems and supports the creative process of architectural thinking and modeling. This paper presents key AWB innovations and discusses how their design was motivated by insights into architectural work and feedback from IT architects. We describe the design of AWB itself as a metamodel-driven and method-based tool, and we report on experience from the use of AWB in production environments. © 2006 IBM.		Abrams, S.; Bloom, B.; Keyser, P.; Kimelman, D.; Nelson, E.; Neuberger, W.; Roth, T.; Simmonds, I.; Tang, S.; Vlissides, J.	IBM Systems Journal					Excluded	Excluded	new_screen			2		2006				
708		ModelGuidance	Improving Model-Based Testing in Automotive Software Engineering	Testing is crucial to successfully engineering reliable automotive software. The manual derivation of test cases from ambiguous textual requirements is costly and error-prone. Model-based development can reduce the test case derivation effort by capturing requirements in structured models from which test cases can be generated with reduced effort. To facilitate the automated test case derivation at BMW, we conducted an anonymous survey among its testing practitioners and conceived a model-based improvement of the testing activities. The new model-based test case derivation extends BMW's SMArDT method with automated generation of tests, which addresses many of the practitioners' challenges uncovered through our study. This ultimately can facilitate quality assurance for automotive software.		Kriebel, Stefan; Markthaler, Matthias; Salman, Karin Samira; Greifenberg, Timo; Hillemacher, Steffen; Rumpe, Bernhard; Schulze, Christoph; Wortmann, Andreas; Orth, Philipp; Richenhagen, Johannes	Proceedings of the 40th International Conference on Software Engineering: Software Engineering in Practice					Excluded	Excluded	new_screen			2		2018				
709		ModelGuidance	Automated software architecture security risk analysis using formalized signatures	Reviewing software system architecture to pinpoint potential security flaws before proceeding with system development is a critical milestone in secure software development lifecycles. This includes identifying possible attacks or threat scenarios that target the system and may result in breaching of system security. Additionally we may also assess the strength of the system and its security architecture using well-known security metrics such as system attack surface, Compartmentalization, least-privilege, etc. However, existing efforts are limited to specific, predefined security properties or scenarios that are checked either manually or using limited toolsets. We introduce a new approach to support architecture security analysis using security scenarios and metrics. Our approach is based on formalizing attack scenarios and security metrics signature specification using the Object Constraint Language (OCL). Using formal signatures we analyse a target system to locate signature matches (for attack scenarios), or to take measurements (for security metrics). New scenarios and metrics can be incorporated and calculated provided that a formal signature can be specified. Our approach supports defining security metrics and scenarios at architecture, design, and code levels. We have developed a prototype software system architecture security analysis tool. To the best of our knowledge this is the first extensible architecture security risk analysis tool that supports both metric-based and scenario-based architecture security analysis. We have validated our approach by using it to capture and evaluate signatures from the NIST security principals and attack scenarios defined in the CAPEC database.		M. Almorsy; J. Grundy; A. S. Ibrahim	2013 35th International Conference on Software Engineering (ICSE)					Excluded	Excluded	new_screen			2		2013				
710		ModelGuidance	Engineering abstractions in model checking and testing	Abstractions are used in model checking to tackle problems like state space explosion or modeling of IO. The application of these abstractions in real software development processes, however, lacks engineering support. This is one reason why model checking is not widely used in practice yet and testing is still state of the art in falsification. We show how user-defined abstractions can be integrated into a Java PathFinder setting with tools like AspectJ or Javassist and discuss implications of remaining weaknesses of these tools. We believe that a principled engineering approach to designing and implementing abstractions will improve the applicability of model checking in practice. © 2009 IEEE.		Achenbach, M.; Ostermann, K.	9th IEEE International Working Conference on Source Code Analysis and Manipulation, SCAM 2009					Excluded	Excluded	new_screen			2		2009				
711		ModelGuidance	Analyzing mode confusion via model checking	Mode confusion is a serious problem in aviation safety. Today’s complex avionics systems make it dicult for pilots to maintain awareness of the actual states, or modes, of the flight deck automation. NASA explores how formal methods, especially theorem proving, can be used to discover mode confusion. The present paper investigates whether state-exploration techniques, e.g., model checking, are better able to achieve this task than theorem proving and also to compare the verication tools MurΦ, SMV, and Spin for the specic application. While all tools can handle the task well, their strengths are complementary. © Springer-Verlag Berlin Heidelberg 1999.		Lüttgen, G.; Carreño, V.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		1999				
712		ModelGuidance	Automatized integration of a contextual model into a process with data variability	Existent process models can hardly cope with the emerging issue of modelling exponential variable data volumes in systems’ workflow, from specifications to operation. Given the strong relation between data context and data variability, this paper considers the automated integration of contextual models for processes with data variability. The proposed approach extends methodologically a platform independent model process, using a contextual data model, to obtain automatically the corresponding platform specific model. Contextual data are thus integrated to a process as a model, within a process. Two particular cases of contextual data models are studied in detail: substitution, when the contextual data model defines generated code, and enhancement, when learned data descriptions constitute the contextual data model. The feasibility and value of integrating a contextual model into a process to handle data variability are shown in detail describing these two use cases. Contextual model integration by substitution to include automatically variable ready to use application services to generate code, and contextual model integration by enhancement applied to supervised image classification based on variable descriptors. Results show that relating data variability and its context by means of automated integration of a designed system component model, simplifies variable data processing of system process models. © 2018 Elsevier Ltd		Simonin, J.; Puentes, J.	Computer Languages, Systems and Structures					Excluded	Excluded	new_screen			2		2018				
713		ModelGuidance	Near real-time collaborative modeling for view-based Web information systems engineering	Conceptual modeling is a creative, social process driven by the views of stakeholders. In modern, agile development – especially for continuously evolving Web applications – contributions from a wide variety of geographically distributed stakeholders, their involvement in negotiation and impact analysis from different perspectives and the rapid prototype generation from specifications gain much importance. Moreover, people have come to expect easy near real-time system support with few restrictions. While conceptual modeling or CSCW environments exist for each of these individual aspects, their interplay has barely been studied. This paper presents a collaborative conceptual modeling approach called SyncMeta that aims to close this gap by supporting view-based modeling in the Web browser in a near real-time shared editing environment1. In addition to domain-specific graphical modeling languages, viewpoints can be collaboratively defined on the meta-modeling layer and instantiated as views within a model editor instance. Besides this formal structure, we also discuss the choice of algorithms for locking-free shared model editing and of highly scalable team size. In addition to this kind of technical evaluation, the paper also presents several medium-scale user studies that have accompanied the iterative SyncMeta development. These studies investigated both the requirements (quality advantages and user acceptance of the view-based approach, near real-time support) and important design options such as centralized vs. peer-to-peer viewpoint resolution. A fully functional SyncMeta software framework which incorporates most of these results, is available in the GitHub open source repository. We expect this line of work to pave the way for methodologies and tools for socially engineered Web information systems. © 2017 Elsevier Ltd		Nicolaescu, P.; Rosenstengel, M.; Derntl, M.; Klamma, R.; Jarke, M.	Information Systems					Excluded	Excluded	new_screen			2		2018				
714		ModelGuidance	How can diagrammatic conceptual modelling support knowledge management?	"Traditionally, venues that are publishing Knowledge Management research have been separating concerns between two viewpoints that rarely converge into holistic approaches: one is the tradition of Artificial Intelligence research, where ""Knowledge Management"" is often employed as an umbrella term in relation to a variety of semantic technologies, knowledge representation and knowledge discovery techniques; the other viewpoint is a specialisation of ""intangible asset management"", dealing with the business value and the pragmatics of organisational knowledge. Knowledge Management Systems are a catalyst for bridging such complementary perspectives and Design Science artefacts must be employed to facilitate alignments between these viewpoints, specifically between human-oriented and machine-oriented knowledge representations. Motivated by this desideratum and driven by project-based experience, the paper at hand advocates a key role of Diagrammatic Conceptual Modelling methods in enriching the seminal SECI Knowledge Conversion spiral, to the aim of opening it towards Knowledge Management Systems that could not have been envisioned at the time of Nonaka's original SECI proposal, but can now benefit from state-of-the-art semantics-driven practices. By hybridising the SECI model with a machine-oriented Knowledge Distilling cycle, an extended SECI spiral variant is proposed and analysed in the paper, as a reflection on project-based deployments and experience. © 2017 Proceedings of the 25th European Conference on Information Systems, ECIS 2017. All rights reserved."		Karagiannis, D.; Buchmann, R.; Walch, M.	Proceedings of the 25th European Conference on Information Systems, ECIS 2017					Excluded	Excluded	new_screen			2		2017				
715		ModelGuidance	Checking Architectural and Implementation Constraints for Domain-Specific Component Frameworks Using Models	Software components are used in various application domains, and many component models and frameworks have been proposed to fulfill domain-specific requirements. The ad-hoc development of these component frameworks hampers the reuse of tools and abstractions across different frameworks. We believe that in order to promote the reuse of components within various domain contexts an homogeneous design approach is needed. A key requirement of such an approach is the definition and validation of reusable domain-specific constraints. In this paper we propose an extension to the Hulotte component framework that allows the definition and checking of domain-specific concerns. From the components' architecture to their implementations, concerns are defined and checked in an homogeneous manner. Our approach is illustrated and evaluated through the design of an example component-based application for the multitasking and distributed domains.		C. Noguera; F. Loiret	2009 35th Euromicro Conference on Software Engineering and Advanced Applications					Excluded	Excluded	new_screen			2		2009				
716		ModelGuidance	An advanced exchange infomation model based on formal concept analysis oriented inteligent computing	The concept lattice can be changed based on sub-lattice was proposed in this paper, and the new concept lattice was composed of a series of sub-lattice which was isomorphic to the original related sub-lattice, the isomorphic relation and the method to obtain the new concept lattice from the original concept lattice by the new context and the arrow relation was proposed and proved. At last, we analysis that concept lattice was adapted to be exchange information model because of a series of inner, advanced property consisted with distributed, parallel algorithm. © 2012 Springer Science+Business Media Dordrecht.		Liu, Z.	Advances in Intelligent and Soft Computing					Excluded	Excluded	new_screen			2		2012				
717		ModelGuidance	Towards model-driven virtual patching for web applications	The use of virtual patching tools to prevent attackers exploiting vulnerabilities of a web application is a widely adopted defensive approach. The constant evolution of applications, and thereby of attack techniques, requires a big maintenance and tuning effort to ensure that the remediation patches are working correctly. We put forward in this paper a tool supported process here security requirements expressed in a high level language over a model of the vulnerable application can be translated into rules enforceable by virtual patching tools. We present and discuss the results of applying this approach for securing WAVSEP, a vulnerable web application designed to help assessing the features, quality and accuracy of web application vulnerability scanners. © 2016 IEEE.		Betarte, G.; De La Fuente, R.; Martinez, R.; Pirez, J.; Zipitria, F.	Proceedings - 7th Latin-American Symposium on Dependable Computing, LADC 2016					Excluded	Excluded	new_screen			2		2016				
718		ModelGuidance	ParDSL: a domain-specific language framework for supporting deployment of parallel algorithms	An important challenge in parallel computing is the mapping of parallel algorithms to parallel computing platforms. This requires several activities such as the analysis of the parallel algorithm, the definition of the logical configuration of the platform and the implementation and deployment of the algorithm to the computing platform. However, in current parallel computing approaches very often only conceptual and idiosyncratic models are used which fall short in supporting the communication and analysis of the design decisions. In this article, we present ParDSL, a domain-specific language framework for providing explicit models to support the activities for mapping parallel algorithms to parallel computing platforms. The language framework includes four coherent set of domain-specific languages each of which focuses on an activity of the mapping process. We use the domain-specific languages for modeling the design as well as for generating the required platform-specific models and the code of the selected parallel algorithm. In addition to the languages, a library is defined to support systematic reuse. We discuss the overall architecture of the language framework, the separate DSLs, the corresponding model transformations and the toolset. The framework is illustrated for four different parallel computing algorithms. © 2018, The Author(s).		Tekinerdogan, B.; Arkin, E.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2019				
719		ModelGuidance	Multi-view modeling to support embedded systems engineering in SysML	Embedded systems engineering problems often involve many domains, each with their own experts and tools. To help these experts with analysis and decision making in their domain, it is desirable to present them with a view of the system that is tailored to their particular task. In this paper, a model integration framework is demonstrated to address issues associated with multi-view modeling. The Systems Modeling Language (OMG SysMLTM) is used as a general language to represent a common model for the system as well as the dependencies between the different domain-specific tools and languages. To maintain consistency between these domain-specific views, model transformations are defined that map the interdependent constructs to and from a common SysML model. The approach is illustrated by means of a mechatronic design problem involving views in multiple domain-specific tools, namely EPLAN Fluid TM (to create production ready layouts) and Modelica® (for dynamic system analysis). © 2010 Springer-Verlag Berlin Heidelberg.		Shah, A.A.; Kerzhner, A.A.; Schaefer, D.; Paredis, C.J.J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2010				
720		ModelGuidance	Introducing a process framework for implementing models of large-scale real-world systems in software	The analysis and modeling of difficult, complex systems of the real world is nowadays feasible because of major advances in the computer science field and in mathematical models and theories that provide a reliable study framework of nonlinear, nondeterministic behavior in nature and society. The development of software products for the study of this behavior is growing fast, aiming at completing the required scientific framework and at providing a computationally powerful environment. A software process for modeling such large-scale, complex systems is proposed and analyzed in the present work, and a consistent methodology is described through a series of steps for handling the peculiarities and difficulties observed in these systems. The proposed framework is demonstrated through modeling and software implementation of a system that serves as a predictor of the Greek currency market. The methodology is quite simple and straightforward, while its use can be easily extended to a wide variety of complex systems analysis and modeling. Copyright © 2004 John Wiley & Sons, Ltd.		Andreou, A.S.	Software Process Improvement and Practice					Excluded	Excluded	new_screen			2		2004				
721		ModelGuidance	Model-Driven Development of Condition Monitoring Software	High availability of automation systems is one of the main goals for the companies from all industrial branches. To achieve and maintain this high availability, the condition monitoring of the automation systems is an essential building block. However, as automation systems become increasingly equipped with numerous mechanical, electrical, and software components, creating a condition monitoring solution is becoming more and more challenging and requires knowledge from multiple engineering disciplines. Today, creating a condition monitoring solution is mostly based on the experience and preferences of the developers without a systematic and interdisciplinary method.Today, methods and tools supporting an interdisciplinary development exist. However, they do not fully consider condition monitoring relevant information. In addition, tools that increase software productivity and ease the adjustment of condition monitoring software are lacking. The main goal of this paper is to narrow the condition monitoring expertise gap by proposing convenient, systematic, and automated techniques to support the development of condition monitoring solutions from their design to their implementation.To achieve this goal, we propose an extension of the CONSENS systems engineering method to face issues caused in the design phase. By adopting a Model-Driven Development (MDD) approach, we propose a Domain-Specific Language (DSL) for condition monitoring that promotes increased understandability, and automation during the software implementation phase.		Pasic, Faruk	Proceedings of the 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					Excluded	Excluded	new_screen			2		2018				
722		ModelGuidance	Model-Based Design of Computer-Controlled Game Character Behavior	Recently, the complexity of modern, real-time computer games has increased drastically. The need for sophisticated game AI, in particular for Non-Player Characters, grows with the demand for realistic games. Writing consistent, re-useable and efficient AI code has become hard. We demonstrate how modeling game AI at an appropriate abstraction level using an appropriate modeling language has many advantages. A variant of Rhapsody Statecharts is proposed as an appropriate formalism. The Tank Wars game by Electronic Arts (EA) is used to demonstrate our concrete approach. We show how the use of the Statecharts formalism leads quite naturally to layered modeling of game AI and allows modelers to abstract away from choices between, for example, time-slicing and discrete-event time management. Finally, our custom tools are used to synthesize efficient C++ code to insert into the Tank Wars main game loop.		Kienzle, Jörg; Denault, Alexandre; Vangheluwe, Hans	Proceedings of the 10th International Conference on Model Driven Engineering Languages and Systems					Excluded	Excluded	new_screen			2		2007				
723		ModelGuidance	A generic middleware for automated source code-level coupling of embedded software-subsystems developed using heterogeneous modeling domains	The growing variety and complexity of embedded software development necessitates the usage of structured embedded software engineering and automation approaches such as the model-driven methodology. Whereas there are several modeling domains and tools to support embedded software development, coupling of embedded software subsystems developed using heterogeneous modeling domains is still an emerging field. This paper outlines a novel approach towards the development of a generic middleware aimed at automated source codelevel coupling of embedded software-subsystems developed using heterogeneous modeling domains (e.g. UML, Matlab/Simulink). The proposed approach, initial results and future directions are outlined.		P. Iyenghar; M. Spieker; J. Wuebbelmann; C. Westerkamp	Proceedings of 2012 IEEE 17th International Conference on Emerging Technologies & Factory Automation (ETFA 2012)					Excluded	Excluded	new_screen			2		2012				
724		ModelGuidance	Model based architecting and construction of embedded systems (ACES-MB 2011)	The fourth ACES-MB workshop brought together researchers and practitioners interested in model-based software engineering for real-time embedded systems, with a particular focus on the use of models for architecture description and domain-specific design, and for capturing non-functional constraints. Six presenters proposed contributions on a systematic transition from systems modeling using SysML to software modeling using UML, verification of initial architecture models against requirements using consistency checking techniques, techniques to check the validity of refinement relation between abstraction levels, constructing rapid prototypes to assess the behavioral design characteristics, new abstraction layers to describe operating system and mixed-signal issues, and a model-driven approach for parallelizing software programs. In addition, a lively group discussion tackled these issues in further detail. This report presents an overview of the presentations and fruitful discussions that took place during the ACES-MB 2011 workshop. © 2012 Springer-Verlag Berlin Heidelberg.		Van Baelen, S.; Gérard, S.; Ober, I.; Weigert, T.; Espinoza, H.; Ober, I.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2012				
725		ModelGuidance	Modelling and search: Efficient, practical, and innovative approaches to software engineering	An overview of the invited tutorial 'Modelling and Search: Efficient, Practical, and Innovative Approaches to Software Engineering', presented at the First International Workshop on Combining Modelling and Search-Based Software Engineering (CMSBSE 2013). © 2013 IEEE.		Poulding, S.	2013 1st International Workshop on Combining Modelling and Search-Based Software Engineering, CMSBSE 2013 - Proceedings					Excluded	Excluded	new_screen			2		2013				
726		ModelGuidance	Towards an automatic approach for restricting UML/OCL invariability clauses (Work-in-Progress Report)	The complexity of modern systems (in both, the software and hardware domain) raises the need for abstract descriptions in early stages of the design flow. Such abstract descriptions are provided in modeling languages such as the UML and are often additionally enriched by declarative languages like OCL. This allows for a profound but comprehensive description of the structure and the behavior of the system to be realized. However, declarative descriptions often cause ambiguities about which model properties are supposed to be changed when executing an operation. Invariability clauses are a proper description mean to address this issue. Unfortunately, even if some approaches offer an automatic generation, they still are not sufficiently restricting the variability of model properties regarding a proper interpretation. In this work-in-progress report, we propose an idea for an automatic generation and evaluation of the respective invariability clauses by using interpretation semantics, i. e., restricting changes in model properties concerning the given OCL expressions.		Przigoda, N.; Peters, J.; Soeken, M.; Wille, R.; Drechsler, R.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2015				
727		ModelGuidance	LUV is Not the Answer: Continuous Delivery of a Model Driven Development Platform	The OutSystems Platform is a visual model-driven development and delivery platform that allows developers to create enterprise-grade cross platform web and mobile applications.The platform consists of several inter-dependent components, most notably Service Studio, the Platform Server, and LifeTime. Service Studio is an integrated development environment used to create applications that are then compiled by the Platform Server. LifeTime is used to stage applications between different environments (e.g., development, testing, production).Our meta-model is versioned using a version number that we call Last Upgrade Version (LUV). Service Studio, the Platform Server, and the models they create/process are associated with a particular LUV. As a general rule, a platform component is only able to process models with the same LUV as the component itself.This approach is not very flexible: a change to the meta-model requires releasing a new set of platform components that our customers then need to install. Although there's low resistance to installing new versions of Service Studio, the same is not true for the Platform Server. Thus, for all practical purposes LUV changes are tied to releases of major versions of the OutSystems Platform.In this paper we share the techniques that allowed us to transition to a Continuous Delivery process in which our meta-model can evolve freely with no impact on our installed base.		Lourenço, Hugo; Tavares, Joana; Eugénio, Rui; Lourenço, Miguel; Simões, Tiago	Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings					Included	Excluded	new_screen			2		2020				
728		ModelGuidance	Model driven development with mechatronic UML	We address these challenges by the model-driven mechatronic UML development approach which combines domain specific modeling and refinement techniques with verification based on compositional model checking. The approach suggests modeling the software by using a refined UML 2.0 component model including the detailed definition of ports, connectors, and patterns. We further refine the component model to define a proper integration between discrete and continuous control such that the reconfiguration of hierarchical component systems can be described in a modular way. Compositional model checking is based on a domain specific decomposition of the system specification into individually checkable components based on a common pre-defined architectural model. As a basis for formal verification, a formal semantic definition of the concepts taken from UML 2.0 is given. For the scope of this presentation, this is particularly done for our notion of so-called real-time statecharts. Besides supporting compositional verification, the approach supports checking consistency between different parts of a systems specification by a syntax check. This check is based on giving a formal definition of consistency.		W. Schafer	2008 IEEE Symposium on Visual Languages and Human-Centric Computing					Included	Excluded	new_screen			2		2008				
729		ModelGuidance	RE4CPS: Requirements engineering for cyber-physical systems	Cyber-Physical Systems (CPSs) connect the cyber world with the physical world through a network of interrelated elements, such as sensors and actuators, robots, and other computing devices. There are increasing number of beneficial applications in dependable sectors such as aviation, transportation, aerospace, healthcare, etc.. The inherent characteristics of CPSs pose a number of challenges to requirements engineering. Unlike normal information systems, CPSs need to continuously detect and adapt to the environment changes. The interactive environment becomes the first-class citizen because the features and the changing patterns in environment are must-to-be considered. Moreover, in such systems, many non-functional requirements are environment related, like timing, safety, security, and privacy requirements. This tutorial will introduce an environment modelling based approach to engineering the requirements of CPSs. Extending the Problem Frames representations, this approach structures the model of the environmental elements and provides analysis methods for deriving and specifying requirements. We deliver this tutorial with a few supporting tools that assist the modelling and verification of the system specification, demonstrated with working examples in sufficient details. After the tutorial, participants will be able to work on the environment modelling requirements engineering for their own projects, with some hands-on experience and a good knowledge of some tool support. © 2019 IEEE.		Jin, Z.; Chen, X.; Li, Z.; Yu, Y.	Proceedings of the IEEE International Conference on Requirements Engineering					Excluded	Excluded	new_screen			2		2019				
730		ModelGuidance	Domain based identification and modelling of business component applications	This paper presents a process for the design of domain specific business component applications to enforce the use of component based software technologies. Starting from the notion that the direct mapping of business processes to business components often leads to inadequate results, a methodology for identifying and refining business components based on the functional decomposition of an application domain will be presented. The usability of the resulting process will be shown with the example of a concept for strategic supply chain development, which extends the traditional frame of reference in strategic sourcing from a supplier-centric to a supply-chain-scope including the dynamic modelling of strategic supply-chains. © Springer-Verlag Berlin Heidelberg 2003.		Albani, A.; Keiblinger, A.; Turowski, K.; Winnewisser, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2003				
731		ModelGuidance	A situation calculus-based semantic framework for UML	A recent trend in the study of UML formal semantics is to integrate semantics of various UML diagrams into a single framework. The aim is to get a unified basis for main research topics like validation, verification and syntax checking. In this paper, we propose an approach based on the Situation Calculus (SC) which is a sophisticated action theory and is capable of modeling general systems. UML models are treated as a tailored SC system, containing eternals, fluents and actions that formalize the frequently used concepts in the UML metamodel. Class diagrams and object diagrams are modeled by eternals for consistency checking. State machine diagrams and sequence diagrams are modeled by fluents and actions, with corresponding precondition axioms and successor state axioms in SC. We use Golog, an executable high-level programming language based on the SC, to analyze and test UML diagrams. Based on the methods proposed in this paper, UML diagrams can be formally analyzed and simulated in the Golog interpreter, which can be useful in discovering system deficits at the design level. © 2012 IEEE.		Dou, L.; Liu, Q.; Yang, Z.; Xie, J.	International Conference on Communications and Information Technology - Proceedings					Excluded	Excluded	new_screen			2		2012				
732		ModelGuidance	Self-adaptive model based on goal-oriented requirements engineering for handling service variability	Service system is currently facing environmental complexity problems, such as the need of a distributed, heterogeneous, decentralized, and interdependent system which operates dynamically and unpredictably. This condition requires the service system to have an ability to adapt in order to realize sustainable functions. The success of service adaptation is determined by its ability to handle variability at runtime. The purpose of this research is to realize service flexibility through variability modeling, which is an extension of previous work to enrich the adaptability view. The methodology was developed through the monitor-analyse-plan-execute-knowledge control loops approach integrated into the adaptive service (service level) element within the adaptive enterprise service system metamodel based on goal-oriented requirements engineering. Service adaptation scenario was prepared through proactive and reactive adaptation mechanisms. For evaluation, the model was applied to the case of a configuration management system. The experimental results showed that the model is able to adapt to runtime variability and accomodates the growth of the service component items shown by the description of the system scalability. The proposed model has a better alternative design in analyzing variability with a total response that can be applicable in normal operations and overload. It also meets the expected level (level-5: adapting) of the adaptive capability maturity model as a standard for assessment of a service system adaptation. © 2020 Universiti Utara Malaysia Press.		Aradea, A.; Supriana, I.; Surendro, K.	Journal of Information and Communication Technology					Excluded	Excluded	new_screen			2		2020				
733		ModelGuidance	Transformation and composition of software design models for Model Driven Development	Software models play a significant role with the growth of software system development based on Model Driven Development (MDD) approach. Model transformations and compositions are the heart of MDD and allow the development of complex systems and their automated derivation. Moreover, software development of large and complex systems uses a collection of models, where model composition and decomposition are required. Various research studies have been done on specifying and executing MDD processes; however only a few of those have considered the validity of such transformations, thus safe composition and decomposition of models. This paper presents a general approach for model composition for the transformation from UML sequence diagrams to Coloured Petri Nets and validates the correctness of model composition using a mathematical proof. These transformations are based on formal rules, which have already been proven to be strongly consistent.		D. Meedeniya; I. Perera; J. Bowles	2015 IEEE 10th International Conference on Industrial and Information Systems (ICIIS)					Excluded	Excluded	new_screen			2		2015				
734		ModelGuidance	Recovering sequence diagrams from object-oriented code: An ADM approach	Software modernization is a current research area in the software industry intended to transform an existing software system to a new one satisfying new demands. The initiative Architecture-Driven Modernization (ADM) helps software developers in tackling reverse engineering, software evolution and, software modernization in general. To support modernization problems, the ADM Task Force has defined a set of metamodels such as KDM (Knowledge Discovery Metamodel), being the Eclipse-MDT MoDisco project the official support for software modernization. We propose the application of ADM principles to provide relevant model-based views on legacy systems. We describe a framework to reverse engineering models from object-oriented code. In this context, we show how to recover UML sequence diagrams from Java code. We validate our approach by using ADM standards and MoDisco platform. Our research can be considered a contribution to the MoDisco community; MoDisco does not support reverse engineering of sequence diagrams and, on the other hand, the MoDisco KDM Discover was used and enriched to obtain the required information for recovering interaction diagrams.		Martinez, L.; Pereira, C.; Favre, L.	ENASE 2014 - Proceedings of the 9th International Conference on Evaluation of Novel Approaches to Software Engineering					Excluded	Excluded	new_screen			2		2014				
735		ModelGuidance	Applying model driven techniques to mobile testing	Mobile Embedded Testing is the most important factor in its software development. Increasing complexity of the embedded system makes difficult to test and evaluate the quality properly. As a result, automated testing methodology is becoming. Because of the characteristics of embedded software, automated testing has difficulty performing all relevant tests and evaluation of the areas of concern. Model-Driven Testing (MDT) techniques artifacts software engineering bases onmodel transformation principle. This implies increasing research on automation of the testing processes. In this paper, we present an approach to derive tests from the model of embedded system. The analysis of methodologies used for embedded as well as for standard system development demands creation of a bridge between them. We also will discuss the reliable testing processes. In particular, test development for each phase of system engineering is proposed. Input signals as continuous, discrete and real time constraints are the factors indicating object-oriented or function-oriented approach. Finally, Model Driven Testing ideas are mentioned so as to elaborate the full overview on test process automation for embedded systems.		Byun, S.-Y.	International Journal of Software Engineering and its Applications					Excluded	Excluded	new_screen			2		2013				
736		ModelGuidance	World Model for Testing Autonomous Systems Using Petri Nets	This paper describes a model-based test generation approach for testing autonomous systems interacting with their environment (i.e., world). Unlike other approaches that assume a static world with attributes and values, we present and test a dynamic world. We use Petri Nets to present a world model that describes behaviors of world entities (i.e., actors). Abstract World Behavioral Test Cases (AWBTCs) are then generated by covering the world model using graph coverage criteria. We also generate test-data by input-space partitioning to transform the generated AWBTCs into executable test cases. We apply the World Model-based Test Generation (WMBTG) technique to a case study in the Human-Robot Interaction (HRI) domain. Efficiency of coverage criteria is discussed. © 2016 IEEE.		Andrews, A.; Abdelgawad, M.; Gario, A.	Proceedings of IEEE International Symposium on High Assurance Systems Engineering					Excluded	Excluded	new_screen			2		2016				
737		ModelGuidance	Executing model-based software development for embedded I4.0 devices properly	"Technical interoperability in ""Industrie 4.0"" scenarios is currently being achieved by standards such as OPC UA. Such standards allow operators to use a common communication interface for heterogeneous production devices. However, production flexibility (e.g. self-configuration or dynamic self-adaptation) can only be achieved if system structure and engineering processes change. At the moment, traditional engineering processes for embedded systems generate communication interfaces from software. This stands in stark contrast to component-based software engineering approaches. In this paper, we introduce a tool-based software engineering approach that puts models back at the core of embedded system development. This approach enables flexible production scenarios by bringing together process-oriented software development and operator-oriented interface construction. © 2018 CEUR-WS. All rights reserved."		Burzlaff, F.; Bartelt, C.; Jacobs, S.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2018				
738		ModelGuidance	Modeling mobile IP in mobile UNITY	With recent advances in wireless communication technology, mobile computing is an increasingly important area of research. A mobile system is one where independently executing components may migrate through some space during the course of the computation, and where the pattern of connectivity among the components changes as they move in and out of proximity. Mobile UNITY is a notation and proof logic for specifying and reasoning about mobile systems. In this article it is argued that Mobile UNITY contributes to the modular development of system specifications because of the declarative fashion in which coordination among components is specified. The packet-forwarding mechanism at the core of the Mobile IP protocol for routing to mobile hosts is taken as an example. A Mobile UNITY model of packet forwarding and the mobile system in which it must operate is developed. Proofs of correctness properties, including important real-time properties, are outlined, and the role of formal verification in the development of protocols such as Mobile IP is discussed.		McCann, PJ; Roman, GC	ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY					Excluded	Excluded	new_screen			2		1999				
739		ModelGuidance	RoboChart: modelling and verification of the functional behaviour of robotic applications	Robots are becoming ubiquitous: from vacuum cleaners to driverless cars, there is a wide variety of applications, many with potential safety hazards. The work presented in this paper proposes a set of constructs suitable for both modelling robotic applications and supporting verification via model checking and theorem proving. Our goal is to support roboticists in writing models and applying modern verification techniques using a language familiar to them. To that end, we present RoboChart, a domain-specific modelling language based on UML, but with a restricted set of constructs to enable a simplified semantics and automated reasoning. We present the RoboChart metamodel, its well-formedness rules, and its process-algebraic semantics. We discuss verification based on these foundations using an implementation of RoboChart and its semantics as a set of Eclipse plug-ins called RoboTool. © 2019, The Author(s).		Miyazawa, A.; Ribeiro, P.; Li, W.; Cavalcanti, A.; Timmis, J.; Woodcock, J.	Software and Systems Modeling					Excluded	Excluded	new_screen			2		2019				
740		ModelGuidance	ReuseMe - Towards aspect-driven reuse in modelling method development	Today, the construction of individual modelling methods is a commonly accepted practice in different application domains. Method engineers are, however, faced with complexity and high effort involved, especially during modelling language development, considered as one major task when developing methods. To alleviate this, one obvious step is to promote reuse, thereby increasing productivity and quality similar to what can be expected from reuse in software and information systems engineering. Although considerable progress in language modularization and composition is observable, the reuse principle is still rarely adopted in practice. Therefore, in this work, a research roadmap for ReuseMe (Reuse Methods), a novel aspect-oriented reuse approach is proposed. By involving artefacts generated during a method's conceptualization down to its implementation and putting forth fundamental ingredients for a comprehensive method reuse process on top of an Open Model Repository, method reuse becomes leveraged. This paves the way for establishing a library, populated with potential reusable aspects that modularize method artefacts based on separating language concerns. © 2011 Springer-Verlag Berlin Heidelberg.		Bergmayr, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Included	Excluded	new_screen			2		2011				
741		ModelGuidance	Modeling variability in the video domain: language and experience report	In an industrial project, we addressed the challenge of developing a software-based video generator such that consumers and providers of video processing algorithms can benchmark them on a wide range of video variants. This article aims to report on our positive experience in modeling, controlling, and implementing software variability in the video domain. We describe how we have designed and developed a variability modeling language, called VM, resulting from the close collaboration with industrial partners during 2 years. We expose the specific requirements and advanced variability constructs; we developed and used to characterize and derive variations of video sequences. The results of our experiments and industrial experience show that our solution is effective to model complex variability information and supports the synthesis of hundreds of realistic video variants. From the software language perspective, we learned that basic variability mechanisms are useful but not enough; attributes and multi-features are of prior importance; meta-information and specific constructs are relevant for scalable and purposeful reasoning over variability models. From the video domain and software perspective, we report on the practical benefits of a variability approach. With more automation and control, practitioners can now envision benchmarking video algorithms over large, diverse, controlled, yet realistic datasets (videos that mimic real recorded videos)—something impossible at the beginning of the project. © 2018, Springer Science+Business Media, LLC, part of Springer Nature.		Alférez, M.; Acher, M.; Galindo, J.A.; Baudry, B.; Benavides, D.	Software Quality Journal					Excluded	Excluded	new_screen			2		2019				
742		ModelGuidance	Towards a framework for the verification of UML models of services	We make a connection between different layers of abstraction of the engineering process of Service-Oriented Architectures (SOAs) by presenting an encoding of UML4SOA, a UML profile for modeling SOAs, in COWS, a process calculus for specifying service-oriented systems. The encoding provides a rigorous semantics for UML4SOA and paves the way for the verification of UML4SOA models by exploiting the reasoning mechanisms and analysis techniques that are available for COWS.		Banti, F.; Pugliese, R.; Tiezzi, F.	Preliminary Proceedings - Automated Specification and Verification of Web Systems, WWV 2009: 5th International Workshop					Excluded	Excluded	new_screen			2		2009				
743		ModelGuidance	Model-based functional safety for the embedded software of automobile power window system	Model-Based Development is a design methodology used for automotive embedded software, where the engineering process involving OEM and suppliers can bring benefits providing an efficient exchange of information, workflow and tool chain adequately and standardized. Despite, with the growing demand for new functions for next generation of vehicles, we encounter with a complex system that yet require the use a functional safety standard as defined by the ISO 26262. This way, we present the design of a model-based functional safety system accomplished for a software function at automobile of type power window system which will be hosted on electronic control unit. The function was developed and tested at the model-in-the-loop phase as part of model-based design methodology, of the supplier side, only with the purpose demonstrate that in this preliminary phase of design is very important adopt this approach to define the controller strategy and find possible bugs sooner being able generate a software to be embedded in a target system. The proposed approach considers that the software tool for verification and validation of the function is used with a set of test case which validates the preliminary requirements.		F. Franco; M. Mauro; S. Stevan; A. B. Lugli; W. Torres	2014 11th IEEE/IAS International Conference on Industry Applications					Excluded	Excluded	new_screen			2		2014				
744		ModelGuidance	Modeling, auto-generation and adaptation of multi-agent systems	We propose a lightweight approach that provides mechanisms for dynamic agent behavior at run-time. Agent collaborations are modeled in UML diagrams and agent behaviors are encoded in XML-based business rules. The combination of these captures the behavioral requirements and governs interagent and intra-agent behaviors. A CASE tool has been developed to enable the dynamic specification of agent behaviors and the generation of the agent systems. Agents get the appropriate rules in XML format and then translate and execute them at run-time. These rules are externalized and so maintenance effort is reduced, since there is no need to recode and regenerate the agent system. Rather, the system model is easily configured by users and agents will always get up-to-date rules to execute at run-time. The approach is illustrated with the aid of an e-business example and its efficacy discussed.		Xiao, L.; Greer, D.	CEUR Workshop Proceedings					Excluded	Excluded	new_screen			2		2005				
745		ModelGuidance	Using state diagrams to describe concurrent behaviour	The state diagram notation, a derivative of Harel's State-Charts, is an important component of the Unified Modeling Language (UML). It is the primary means of describing object behaviour: by associating a state diagram with a particular class, a designer may specify how objects of that class should perform sequences of actions in response to incoming events. This paper explains that, under the default interpretation, state diagrams are adequate only for designs in which: each object may admit at most one thread of execution; different threads of execution could never interfere; and it is impossible for an object to invoke an operation upon itself. The paper argues that these limitations are unsatisfactory. An alternative interpretation is then presented, in which separate diagrams are used to describe the object state and the transient, operation state. The resulting separation of concerns - between control flow and state abstraction - produces a simpler, more scalable approach to specification, and one that is adequate for the precise description of concurrent behaviour. © Springer-Verlag 2003.		Davies, J.; Crichton, C.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2003				
746		ModelGuidance	An OCL-based technique for specifying and verifying refinement-oriented transformations in MDE	Despite the fact that the refinement technique is one of the cornerstones of a formal approach to software engineering, the concept of refinement in model driven engineering is loosely defined and open to misinterpretations. In this article we present a rigorous technique for specifying and verifying frequently occurring forms of refinement that take place in software modeling. Such strategy uses the formal language Object-Z as a background foundation, whereas designers only have to deal with the broadly accepted UML and OCL languages, thus propitiating the inclusion of verification in ordinary software engineering activities, increasing in this way the level of confidence on the correctness of the final product. Finally, an automatic tool is provided to support such model refinement activities; this tool adopts the micromodels strategy to reduce the search scope, making the verification process feasible.		Pons, Claudia; Garcia, Diego	MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, PROCEEDINGS					Excluded	Excluded	new_screen			2		2006				
747		ModelGuidance	Alleviating complexity of modeling in system engineering tools	We present a strategy for balancing various aspects of modeling in order to control and manage complexity in model-based system engineering. Modern systems engineering methods need to support development and maintenance of increasingly complex systems. The system's complexity affects the engineering process as well as the tools that are used to support them. Consequently, system engineers who handle these processes face the dual challenge of coping with the complexity of the development and maintenance process and tools, in addition to the complexity of the system itself. Since the inherent system complexity cannot be reduced, the system engineering methods and tools should perferably include a capability to manage and control complexity. How can this be done? In our study we analyzed and characterized the difficulties that system engineers encounter when engaging in model-driven development of a large intricate avionic system. We propose a set of measures of model complexity from the modeler's perspective - by applying general system complexity measures to the modeling environment and artifacts. Finally, a number of product- and system-independent methods were developed for alleviating complexity-related difficulties in a modeling environment. Our study shows that incorporating such techniques into the modeling process resulted in improved understanding of models, shorter modeling times and adequate consistency throughout the model's various levels of abstractions. We thus conclude that the addition of such mechanisms by vendors of system modeling environments may help improve the efficiency and effectiveness of the system modeling procedure. © 2007 IEEE.		Soffer, A.; Cohen, S.	2007 International Conference on Systems Engineering and Modeling, ICSEM '07					Excluded	Excluded	new_screen			2		2007				
748		ModelGuidance	GOREWEB framework for Goal Oriented Requirements Engineering of Web Applications	In this paper, we propose a framework for modeling goal driven requirements of web applications. Web engineers mostly focus on design aspects only overlooking the real goals and expectations of the user. Goal oriented Requirement Engineering is a popular approach for Information system development but has not been explored much for Web applications. However, in today's times Web is dominating in every business making it imperative that its requirements are analyzed carefully and in profundity. Goal driven requirements analysis helps in capturing stakeholders' goals very finely, by choosing between alternatives and resolving conflicts. Detailed classification of both functional and non-functional requirements specific to web applications is discussed in the presented work. A framework, GOREWEB (Goal oriented Requirements Engineering for Web Applications) is proposed for analyzing goals and translating them into functional and non-functional web requirements. © 2011 Springer-Verlag.		Chawla, S.; Srivastava, S.; Bedi, P.	Communications in Computer and Information Science					Included	Excluded	new_screen			2		2011				
749		ModelGuidance	Enterprise model verification and validation: An approach	This article presents a verification and validation approach which is used here in order to complete the classical tool box the industrial user may utilize in enterprise modeling and integration domain. This approach, which has been defined independently from any application domain is based on several formal concepts and tools presented in this paper. These concepts are property concepts, property reference matrix, properties graphs, enterprise modeling domain ontology, conceptual graphs and formal reasoning mechanisms. © 2003 Elsevier Ltd. All rights reserved.		Chapurlat, V.; Kamsu-Foguem, B.; Prunet, F.	Annual Reviews in Control					Excluded	Excluded	new_screen			2		2003				
750		ModelGuidance	Reconstructing a formal security model	Role-based access control (RBAC) is a flexible approach to access control, which has generated great interest in the security community. The principal motivation behind RBAC is to simplify the complexity of administrative tasks. Several formal models of RBAC have been introduced. However, there are a few works specifying RBAC in a way which system developers or software engineers can easily understand and adopt to develop role-based systems. And there still exists a demand to have a practical representation of well-known access control models for system developers who work on secure system development. In this paper we represent a well-known RBAC model with software engineering tools such as Unified Modeling Language (UML) and Object Constraints Language (OCL) to reduce a gap between security models and system developments. The UML is a general-purpose visual modeling language in which we can specify, visualize, and document the components of a software system. And OCL is part of the UML and has been used for object-oriented analysis and design as a de facto constraints specification language in software engineering arena. Our representation is based on a standard model for RBAC proposed by the National Institute of Standards and Technology. We specify this RBAC model with UML including three views: static view, functional view, and dynamic view. We also describe how OCL can specify RBAC constraints that is one of important aspects to constrain what components in RBAC are allowed to do. In addition, we briefly discuss future directions of this work. (C) 2002 Elsevier Science B.V All rights reserved.		Ahn, GJ; Hong, SP; Shin, ME	INFORMATION AND SOFTWARE TECHNOLOGY					Excluded	Excluded	new_screen			2		2002				
751		ModelGuidance	Adding value to automotive models	We report on how implementing a Model Based Automotive SW Engineering Process in an industrial setting can ensure the correctness of automotive applications when a process based on formal models is used. We show how formal methods, in particular model checking, can be used to ensure consistency of the models and can prove that the models satisfy selected functional and safety requirements. The technique can also be used to automatically generate test vectors from the model. Hence we show how in many ways formal verification techniques can add value to the models used for different purposes in developing automotive applications. © Springer-Verlag Berlin Heidelberg 2006.		Böde, E.; Damm, W.; Høyem, J.; Josko, B.; Niehaus, J.; Segelken, M.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2006				
752		ModelGuidance	FueL: Representing function structure and function dependencies with a UML profile for function modeling	Modeling functions is a key aspect of artifact design, including software engineering and business systems modeling, but it is likewise of fundamental importance in natural systems modeling, for example in modeling biological organisms. The Unified Modeling Language (UML), which originated from object-oriented software engineering, is nowadays a de facto standard for conceptual modeling and its current applications go far beyond software engineering. The paper investigates first to what extent UML is suited for modeling functions. We survey various approaches to function modeling with UML and identify their limitations. Based on the conducted analysis, we introduce a UML profile for function modeling, called the Function Modeling Language (FueL). FueL enables the modeling of the structure of functions, of relations between functions, such as function decomposition, as well as of function ascription, i.e., of relations linking functions with other types of entities. The main application field that we considered while developing FueL is bioinformatics. Nonetheless, the presented profile is domain-independent and is capable of modeling cross-domain systems. The profile has been tested on fragments of the Molecular Function Ontology, a sub-ontology of the Gene Ontology. In this connection the paper further demonstrates that the applications of FueL transcend the construction of new models, by showing how the profile aids restructuring and refactoring existing models.		Burek, Patryk; Loebe, Frank; Herre, Heinrich	APPLIED ONTOLOGY					Included	Excluded	new_screen			2		2016				
753		ModelGuidance	A service-oriented methodology supporting automatic synthesis and verification of component behavior model	It is very difficult to construct correct component behavior models for distributed, reactive system. The concept of service makes us revisit the method of how to construct component behavior models. On the contrary, current descriptions of service are mainly based on syntax. Because service lacks of a systematic semantic description, it is hard to develop service with high quality and reliability. In this paper we combine the ideas of service and component; propose a new methodology supporting automatic synthesis and verification of component behavior model. This method uses traditional scenario-based synthesis technique to synthesize each role behavior model of service, and verifies desired properties of role by model checking, then synthesizes component behavior model by composing all roles participated in different services, and verifies liveness properties of component by compositional reasoning thus avoids searching the whole state space of component.		P. Zhang; Y. Zhou; B. Li	Eighth ACIS International Conference on Software Engineering, Artificial Intelligence, Networking, and Parallel/Distributed Computing (SNPD 2007)					Excluded	Excluded	new_screen			2		2007				
754		ModelGuidance	Modular verification of software components in C	We present a new methodology for automatic verification of C programs against finite state machine specifications. Our approach is compositional, naturally enabling us to decompose the verification of large software systems into subproblems of manageable complexity. The decomposition reflects the modularity in the software design. We use weak simulation as the notion of conformance between the program and its specification. Following the CounterExample Guided Abstraction Refinement (CEGAR) paradigm, our tool MAGIC first extracts a finite model from C source code using predicate abstraction and theorem proving. Subsequently, weak simulation is checked via a reduction to Boolean satisfiability. MAGIC has been interfaced with several publicly available theorem provers and SAT solvers. We report experimental results with procedures from the Linux kernel, the OpenSSL toolkit, and several industrial strength benchmarks.		Chaki, S; Clarke, EM; Groce, A; Jha, S; Veith, H	IEEE TRANSACTIONS ON SOFTWARE ENGINEERING					Excluded	Excluded	new_screen			2		2004				
755		ModelGuidance	Formal modeling and verification of cloud-based web service composition	Web service composition is a key technology to resolve cross-organizational business process integration, and it faces many constraints and requirements as unexpected bugs can cause shutdown of the software. A high degree of reliability is expected from such systems, and formal modeling of web service composition is an active area of research. In this work, we propose a new approach for the formal modeling of diverse web service composition. Our approach verifies the terminate property on all possible runs of the system to ensure deadlock-free workings. For a verification of the properties of interest, we use the NuSMV model checker and specify the properties in CTL*. The approach can be used to verify the soundness property of diverse web service composition to ensure live and deadlock-free web services. © 2019 John Wiley & Sons, Ltd.		Raza Kazmi, S.A.; Qasim, A.; Khalid, A.; Assad, R.; Shahbaz, M.	Concurrency and Computation: Practice and Experience					Excluded	Excluded	new_screen			2		2020				
756		ModelGuidance	A data-driven approach to user-experience-focused model-based roadmapping for new product planning	User experience (UX) focused business needs to survive and plan its new product development (NPD) activities in a highly turbulent environment. The latter is a function of volatile UX and technology trends, competition, unpredictable events, and user needs uncertainty. To address this problem, the concept of design roadmapping has been proposed in the literature. It was argued that tools built on the idea of design roadmapping have to be very flexible and data-driven (i.e., be able to receive feedback from users in an iterative manner). At the same time, a model-based approach to roadmapping has emerged, promising to achieve such flexibility. In this work, we propose to incorporate design roadmapping to model-based roadmapping and integrate it with various user testing approaches into a single tool to support a flexible data-driven NPD planning process. © ICED 2021.All right reserved.		Iuskevich, I.; Hein, A.-M.; Amokrane-Ferka, K.; Doufene, A.; Jankovic, M.	Proceedings of the Design Society					Excluded	Excluded	new_screen			2		2021				
757		ModelGuidance	A Complexity-less Approach for Automated Development of Data-intensive Web Applications	This paper illustrates an approach, denoted as MDA-VIEW, for the automated generation of Web-based applications in the data management domain. The run-time application generated by use of the MDA-VIEW approach is ready to be deployed into a multi-tenant cloud environment. The approach takes into account both the fact that create, read, update and delete (CRUD) operations contribute to a large part of software development in data-intensive applications and the fact that modern databases can be used for storing additional information like data model documentation and integrity checks. By using the proposed approach, CRUD operations, integrity checks and user documentation can be auto-generated from the physical data model specified in standard UML by use of a conventional CASE tool. We define MDA-VIEW as a complexity-less approach, meaning that developers can easily create very complex applications by auto-generating them from data model definitions. The paper also describes a proof of concept by illustrating both the approach implementation and an example application to the generation of a data-intensive business software.		T. Panetti; A. D'Ambrogio	2018 International Symposium on Networks, Computers and Communications (ISNCC)					Excluded	Excluded	new_screen			2		2018				
758		ModelGuidance	The versatile synchronous observer	"A synchronous observer is an adjunct to a system model that monitors its state variables and raises a signal flag when some condition is satisfied. Synchronous observers provide an alternative to temporal logic as a means to specify safety properties but have the advantage that they are expressed in the same notation as the system model-and thereby lower the mental hurdle to effective use of model checking and other techniques for automated analysis of system models. Model checkers that do use temporal logic can nonetheless employ synchronous observers by checking for properties such as ""never(flag raised)."" The use of synchronous observers to specify properties is well-known; rather less well-known is that they can be used to specify assumptions and axioms, to constrain models, and to specify test cases. The idea underlying these applications is that the basic model generates more behaviors than are desired, the synchronous observer recognizes those that are interesting, and the model checker is constrained to just the interesting cases. The efficiency in this approach is that it is usually much easier to write recognizers than generators. The paper describes and illustrates several applications of synchronous observers. © 2014 Springer-Verlag Berlin Heidelberg."		Rushby, J.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2014				
759		ModelGuidance	Designing environmental software applications based upon an open sensor service architecture	One of the key issues for the analysis and the management of the environmental status is the integration of information from various sources, being in situ, airborne or space borne sensors or environmental databases. The European Integrated Project SANY has published a specification of the Sensor Service Architecture (SensorSA) enabling large-scale environmental information systems. The SensorSA belongs to the family of service-oriented architectures but has a particular focus on the access, the management, the processing of information and event notifications provided by sensors and sensor networks. It contains sensor-specific services, primarily based upon standards of the Sensor Web Enablement initiative of the Open Geospatial Consortium abstracting from the peculiarities of sensors and underlying sensor network technologies. The SensorSA follows a multi-style architectural approach: In addition to remote invocations, it also supports an event-driven and a resource-oriented architectural style. This paper presents the basic architectural concepts, supported sensor network topologies, generic use cases, sensor service types and information models. It concludes with a description of the SERVUS design methodology. The SERVUS design methodology is tailored to the design of geospatial service-oriented architectures and environmental information systems and leverages the idea of a uniform modeling of use cases and capabilities of SensorSA implementations as resources. © 2010 Elsevier Ltd.		Usländer, T.; Jacques, P.; Simonis, I.; Watson, K.	Environmental Modelling and Software					Excluded	Excluded	new_screen			2		2010				
760		ModelGuidance	"How to identify the relevant elements of ""context"" in context-aware information systems?"	Context-awareness is a feature of more and more applications, which adds further requirements to be taken into account in the implementation process. Though accepted approaches for software development exist, no accepted way for the inclusion of context has been established yet. An essential part of developing context based systems is to analyze and conceptualize the elements of the specific context required for the application under development, including their dependencies and mechanism of use. This activity of context modeling forms an important part of the system's specification, since it identifies relevant aspects of the application environment in a representation adequate for the modeling purpose. Within this paper we aim at closing this gap by introducing an approach for context modeling for the utilization in context-aware applications, providing a structure guiding through the process and illustrating it by examples as a reference for further projects. © Springer International Publishing Switzerland 2014.		Sandkuhl, K.; Borchardt, U.	Lecture Notes in Business Information Processing					Excluded	Excluded	new_screen			2		2014				
761		ModelGuidance	Making meaningful models for mere mortals	Recent advances in automated model checking have demonstrated the power and utility, of behaviour modelling and analysis. However, most attempts to convince practising software engineers to use formal models as part of their software development process have proven unsuccessful. The notations are often too difficult to learn and use, do not provide adequate tool support, do not integrate well into the software development process or are too difficult for users to interpret. In short, many of the modelling approaches can only be used effectively by the gods who created them! Our aim is to make formal behaviour models and the benefits of analysis accessible to mere software engineering mortals.		J. Kramer	Proceedings Second International Conference on Application of Concurrency to System Design					Excluded	Excluded	new_screen			2		2001				
762		ModelGuidance	Industrial-strength model-based testing of safety-critical systems	In this article we present an industrial-strength approach to automated model-based testing. This approach is applied by Verified Systems International GmbH in safety-critical verification and validation projects in the avionic, railway, and automotive domains. The SysML modelling formalism is used for creating test models. Associating SysML with a formal behavioural semantics allows for full automation of the whole work flow, as soon as the model including SysML requirements tracing information has been elaborated. The presentation highlights how certain aspects of formal methods are key enablers for achieving the degree of automation that is needed for effectively testing today’s safety critical systems with acceptable effort and the degree of comprehensiveness required by the applicable standards. It is also explained which requirements from the industry and from certification authorities have to be considered when designing test automation tools fit for integration into the verification and validation work flow set up for complex system developments. From the collection of scientific challenges the following questions are addressed. (1) What is the formal equivalent to traceable requirements and associated test cases? (2) How can requirements based, property-based, and model-based testing be effectively automated? (3) Which test strategies provide guaranteed test strength, independent on the syntactic representation of the model?. © Springer International Publishing AG 2016.		Peleska, J.; Huang, W.-L.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2016				
763		ModelGuidance	On the Quest for Flexible Modelling	Modelling is a fundamental activity in Software Engineering, and central to model-based engineering approaches. It is used for different purposes, and so its nature can range from informal (e.g., as a casual mechanism for problem discussion and understanding) to fully formal (e.g., to enable the automated processing of models by model transformations). However, existing modelling tools only serve one of these two extreme purposes: either to create informal drawings or diagrams, or to build models fully conformant to their modelling language. This lack of reconciliation is hampering the adoption of model-based techniques in practice, as they are deemed too imprecise in the former case, and too rigid in the latter.In this new ideas paper, we claim that modelling tools need further flexibility covering different stages, purposes and approaches to modelling. We detail requirements for such a new generation of modelling tools, describe our first steps towards their realization in the Kite metamodelling tool, and showcase application scenarios.		Guerra, Esther; de Lara, Juan	Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems					Excluded	Excluded	new_screen			2		2018				
764		ModelGuidance	An adaptive I-Parking application: An ontology-based approach	Complex adaptive systems are in the heart of smart city operations. Developing such systems is very challenging. Current user-driven techniques for modeling the system domain are not sufficient for supporting the development of such systems. Additionally, in the majority of cases, existing work focused on user interface adaptation without considering content personalization. In this paper, we propose the use of ontologies for dealing with the adaptation issue, while taking into consideration both content and container of the interface. To this end, we extend the model that was proposed in our previous work, and that focused only on modeling the 'Environment' dimension, by adding three other dimensions, namely, 'Devices', 'Users', and 'Services' (EDUS). We validate our proposal on an I-Parking smart phone application that offers personalized and context-aware information to the users. © 2016 IEEE.		Ghannem, A.; Hamdi, M.S.; Soui, M.; Ammar, H.	FTC 2016 - Proceedings of Future Technologies Conference					Excluded	Excluded	new_screen			2		2017				
765		ModelGuidance	Concurrent modeling in early phases of the software development life cycle	Software engineering deals with the development of complex software systems which is an inherently team-based task. Therefore, version control support is needed to coordinate the teamwork and to manage parallel modifications. If conflicting modifications occur, in standard approaches the developer who detected the conflict is responsible for the conflict resolution alone and has to resolve the conflict immediately. Especially in early project phases, when software models are typically employed for brainstorming, analysis, and design purposes, such an approach bears the danger of losing important viewpoints of different stakeholders and domain engineers, resulting in a lower quality of the overall system specification. In this paper, we propose conflict-tolerant model versioning to overcome this problem. Conflicts are marked during the merge phase and are tolerated temporarily in order to resolve them later in a collaborative setting. We illustrate the proposed approach for the standardized modeling language UML and discuss how it can be integrated in current modeling tools and version control systems. © 2010 Springer-Verlag Berlin Heidelberg.		Brosch, P.; Langer, P.; Seidl, M.; Wieland, K.; Wimmer, M.; Kappel, G.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2010				
766		ModelGuidance	On the Need for Artifact Models in Model-Driven Systems Engineering Projects	Model-driven development has shown to facilitate systems engineering. It employs automated transformation of heterogeneous models into source code artifacts for software products, their testing, and deployment. To this effect, model-driven processes comprise several activities, including parsing, model checking, generating, compiling, testing, and packaging. During this, a multitude of artifacts of different kinds are involved that are related to each other in various ways. The complexity and number of these relations aggravates development, maintenance, and evolution of model-driven systems engineering (MDSE). For future MDSE challenges, such as the development of collaborative cyber-physical systems for automated driving or Industry 4.0, the understanding of these relations must scale with the participating domains, stakeholders, and modeling techniques. We motivate the need for understanding these relations between artifacts of MDSE processes, sketch a vision of formalizing these using artifact models, and present challenges towards it. © Springer International Publishing AG 2018.		Butting, A.; Greifenberg, T.; Rumpe, B.; Wortmann, A.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)					Excluded	Excluded	new_screen			2		2018				
767		ModelGuidance	A unified approach for verification and validation of systems and software engineering models	We present in this paper a unified paradigm for the verification and validation of software and systems engineering design models expressed in UML 2.0 or SysML. This paradigm relies on an established synergy between three salient approaches, which are model-checking, program analysis, and software engineering techniques. To illustrate the accomplishment of our results, we have designed and implemented an integrated and automated computer-aided assessment tool. We provide three case studies for sequence, state machine, and class and package diagrams to demonstrate the benefits of our methodology. © 2006 IEEE.		Alawneh, L.; Debbabi, M.; Hassaïne, F.; Jarraya, Y.; Soeanu, A.	Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems					Excluded	Excluded	new_screen			2		2006				
